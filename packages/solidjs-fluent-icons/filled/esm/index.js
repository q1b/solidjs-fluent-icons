import { spread, effect, style, template } from "solid-js/web"
import { splitProps } from "solid-js"

const _tmpl$$vU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6a2 2 0 100-4 2 2 0 000 4zM5.47 4.15c-.88-.4-1.92 0-2.32.88-.4.88 0 1.92.88 2.31L6.7 8.53c.18.08.3.26.3.46v1.86a.5.5 0 01-.04.19l-1.84 4.55a1.75 1.75 0 003.25 1.32l.08-.22A5.48 5.48 0 0113 9.02V9c0-.2.12-.38.3-.46l2.67-1.19c.88-.4 1.28-1.43.88-2.31a1.76 1.76 0 00-2.32-.88l-1.28.57c-.24.1-.42.3-.52.52a3 3 0 01-5.46 0c-.1-.21-.28-.41-.52-.52l-1.28-.57zM18 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function AccessibilityCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6a2 2 0 100-4 2 2 0 000 4zM5.47 4.15c-.88-.4-1.92 0-2.32.88-.4.88 0 1.92.88 2.31L6.7 8.53c.18.08.3.26.3.46v1.86a.5.5 0 01-.04.19l-1.84 4.55a1.75 1.75 0 003.25 1.32l1.4-3.46c.08-.21.38-.21.46 0l1.4 3.46a1.75 1.75 0 003.24-1.32l-1.83-4.54a.5.5 0 01-.04-.19V9c0-.2.12-.38.3-.46l2.67-1.19c.88-.4 1.28-1.43.88-2.31a1.76 1.76 0 00-2.32-.88l-1.28.57c-.24.1-.42.3-.52.52a3 3 0 01-5.46 0c-.1-.21-.28-.41-.52-.52l-1.28-.57z"></path></svg>`,
	4,
)

function AccessibilityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zM6.99 8.6A.5.5 0 016 8.4c.02-.07.03-.14.07-.24a2 2 0 01.25-.46c.26-.35.71-.7 1.42-.7A1.7 1.7 0 019.5 8.75c0 .35-.07.65-.2.9a1.8 1.8 0 01-.51.6c-.16.11-.33.22-.48.3l-.06.04c-.17.1-.3.19-.42.29-.4.34-.66.7-.77 1.12H9a.5.5 0 010 1H6.5a.5.5 0 01-.5-.5c0-1.01.47-1.77 1.17-2.38.2-.16.4-.29.57-.4l.06-.03.38-.24a.8.8 0 00.23-.26c.05-.1.09-.23.09-.44a.8.8 0 00-.19-.53.7.7 0 00-.56-.22.7.7 0 00-.61.3 1 1 0 00-.15.3zM11 7c.28 0 .5.22.5.5V10H13V7.5a.5.5 0 011 0v5a.5.5 0 01-1 0V11h-2a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function AccessTimeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zM6 10c0 .28.22.5.5.5h3v3a.5.5 0 001 0v-3h3a.5.5 0 000-1h-3v-3a.5.5 0 00-1 0v3h-3a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function AddCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2.75a.75.75 0 00-1.5 0V9H2.75a.75.75 0 000 1.5H9v6.25a.75.75 0 001.5 0V10.5h6.25a.75.75 0 000-1.5H10.5V2.75z"></path></svg>`,
	4,
)

function AddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm5.5 3.5v3h3a.5.5 0 010 1h-3v3a.5.5 0 01-1 0v-3h-3a.5.5 0 010-1h3v-3a.5.5 0 011 0z"></path></svg>`,
	4,
)

function AddSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 5.27c.6.34 1 .99 1 1.73v6a4 4 0 01-4 4H7a2 2 0 01-1.73-1H13a3 3 0 003-3V5.27zM15 5a2 2 0 00-2-2H5a2 2 0 00-2 2v8c0 1.1.9 2 2 2h8a2 2 0 002-2V5zm-3 4a.5.5 0 01-.5.5h-2v2a.5.5 0 01-1 0v-2h-2a.5.5 0 110-1h2v-2a.5.5 0 111 0v2h2c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function AddSquareMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 12a.5.5 0 100 1h3a.5.5 0 000-1h-3zM10 18a8 8 0 100-16 8 8 0 000 16zm0-1a6.97 6.97 0 01-4.58-1.7l9.87-9.88A7 7 0 0110 17zM5.5 7c0-.28.22-.5.5-.5h1v-1a.5.5 0 011 0v1h1a.5.5 0 110 1H8v1a.5.5 0 01-1 0v-1H6a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function AddSubtractCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2c.6 0 1.16.36 1.4.92l2.37 5.4 3.23-.2a1.88 1.88 0 012 1.76V10c0 1.04-.84 1.88-1.88 1.88H16l-3.23-.2-2.37 5.4c-.24.56-.8.92-1.4.92a.88.88 0 01-.88-.88v-.06l.7-5.63-2.46-.16-1.14 2.28a.8.8 0 01-.72.45.5.5 0 01-.5-.5v-2.38l-1.06-.06a1 1 0 01-.94-1v-.12a1 1 0 01.94-1L4 8.88V6.5c0-.28.22-.5.5-.5.3 0 .59.17.72.45l1.14 2.28 2.46-.16L8.12 3A.88.88 0 019 2z"></path></svg>`,
	4,
)

function AirplaneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.3 5.49l.38-.33A4.9 4.9 0 0114.5 4c.2 0 .38.02.55.06 1.24.24 2.15 1.22 2.67 1.93.6.8.1 1.82-.74 2.09L12.8 9.43l-3.1 4c-.97 1.26-2.97.35-2.65-1.2l.29-1.47-3.02 1.04A1.75 1.75 0 012 10.15V7.16c0-.08 0-.15.02-.22.16-.9 1.28-1.21 1.9-.62.1.1.18.2.25.34l.59 1.23 5.8-1.94c.26-.08.5-.25.74-.46zM5.38 6.62l3.73-1.24-1.6-1.1a1.6 1.6 0 00-2.17 2.3l.04.04zM2.75 16.5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function AirplaneTakeOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v3.26A5.49 5.49 0 014 8.2V4zm12 12h-5.6a5.48 5.48 0 000-5h3.1c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-4C8.67 7 8 7.67 8 8.5v.1a5.48 5.48 0 00-3-.58V4h11a2 2 0 012 2v8a2 2 0 01-2 2zm-2.5-6H9.74A5.53 5.53 0 009 9.26V8.5c0-.28.22-.5.5-.5h4c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5zM10 13.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V13H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V14h1.5a.5.5 0 000-1H6v-1.5z"></path></svg>`,
	4,
)

function AlbumAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6c0-1.1.9-2 2-2v12a2 2 0 01-2-2V6zm7 2.5c0-.28.22-.5.5-.5h4c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-4a.5.5 0 01-.5-.5v-1zM5 16V4h11a2 2 0 012 2v8a2 2 0 01-2 2H5zm4.5-9C8.67 7 8 7.67 8 8.5v1c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-4z"></path></svg>`,
	4,
)

function AlbumIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.45 16a2.5 2.5 0 01-4.9 0h4.9zM10 2c1.09 0 2.11.28 3 .77a3 3 0 003 5.06v3.58l.95 2.59.03.08.01.09v.08c0 .32-.19.6-.51.71l-.12.03-.11.01H3.75a.75.75 0 01-.74-.76v-.12l.04-.12L4 11.4V7.57A5.9 5.9 0 0110 2zm5 5a2 2 0 100-4 2 2 0 000 4z"></path></svg>`,
	4,
)

function AlertBadgeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.45 16a2.5 2.5 0 01-4.9 0h4.9zM10 2a5.92 5.92 0 015.98 5.36l.02.22V11.4l.95 2.6.03.08.01.09v.08c0 .32-.19.6-.51.71l-.12.03-.11.01H3.75a.75.75 0 01-.74-.76v-.12l.04-.12L4 11.4V7.57A5.9 5.9 0 0110 2z"></path></svg>`,
	4,
)

function AlertIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 7.57c.04-.82.24-1.59.58-2.28L2.15 2.85a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7L14.3 15H3.75a.75.75 0 01-.74-.76v-.12l.04-.12L4 11.4V7.57zm13 6.68c0 .18-.06.34-.16.46L5.79 3.66A6.1 6.1 0 019.99 2a5.92 5.92 0 016 5.36v.22l.01.22v3.6l.95 2.6.03.08.01.09v.08zM12.45 16a2.5 2.5 0 01-4.9 0h4.9z"></path></svg>`,
	4,
)

function AlertOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1.8 2.1a.5.5 0 10-.6.8l2 1.5a.5.5 0 10.6-.8l-2-1.5zM1 7a.5.5 0 000 1h1.5a.5.5 0 000-1H1zm11.45 9a2.5 2.5 0 01-4.9 0h4.9zM10 2a5.92 5.92 0 015.98 5.35l.02.23V11.4l.95 2.6.03.08.01.09v.08c0 .32-.19.6-.51.71l-.12.03-.11.01H3.75a.75.75 0 01-.74-.76v-.12l.04-.13.95-2.58V7.57A5.9 5.9 0 0110 2zm8.9.2a.5.5 0 00-.7-.1l-2 1.5a.5.5 0 00.6.8l2-1.5a.5.5 0 00.1-.7zm.6 5.3A.5.5 0 0019 7h-1.5a.5.5 0 000 1H19a.5.5 0 00.5-.5z"></path></svg>`,
	4,
)

function AlertOnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.89 0 1.74.19 2.5.52A1.5 1.5 0 0014 4h.63l-1.3 1.83A1.47 1.47 0 0012 5H9.45l-.18.02h-.04a1.5 1.5 0 00-.33 2.86l-.58.69-.1.13-.01.04A1.5 1.5 0 009.5 11h2.54l.18-.02h.05a1.5 1.5 0 001.09-2.12c.19.09.4.14.64.14h2v2.4l.95 2.6.03.08.01.09v.08c0 .32-.19.6-.51.71l-.12.03-.11.01H3.75a.75.75 0 01-.74-.76v-.12l.04-.12L4 11.4V7.57A5.9 5.9 0 0110 2zm2.45 14a2.5 2.5 0 01-4.9 0h4.9zM14 2h3.5c.37 0 .6.4.45.71l-.04.08L14.96 7h2.54a.5.5 0 01.09 1h-3.6a.5.5 0 01-.44-.71l.04-.08L16.54 3H14a.5.5 0 01-.1-1h.1zM9.5 6H12c.4 0 .62.43.43.75l-.05.07L10.57 9H12a.5.5 0 01.09 1h-2.6a.5.5 0 01-.42-.75l.04-.07L10.93 7H9.5a.5.5 0 01-.1-1h.1z"></path></svg>`,
	4,
)

function AlertSnoozeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.47 12.25a5.16 5.16 0 019.42-4.2l1.22 2.75 1.67 1.62c.38.37.27 1-.22 1.22l-9.73 4.33a.75.75 0 01-1.05-.65L3.68 15l-1.21-2.75zm6.36 5.09a1.49 1.49 0 002.68-1.2l-2.68 1.2zm3.26-12.61a.5.5 0 01.69-.14 6.17 6.17 0 012.91 4.91.5.5 0 11-1 0c0-.13 0-.26-.02-.39a5.17 5.17 0 00-2.45-3.69.5.5 0 01-.13-.7zm.49-2.49a.5.5 0 01.68-.16c2.46 1.5 4.58 3.8 4.74 7.9a.5.5 0 01-1 .04c-.14-3.68-2-5.7-4.26-7.09a.5.5 0 01-.16-.69z"></path></svg>`,
	4,
)

function AlertUrgentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 17a.5.5 0 010-1h15a.5.5 0 010 1h-15zM4 13c0 1.1.9 2 2 2h1a2 2 0 002-2V5a2 2 0 00-2-2H6a2 2 0 00-2 2v8zm7 0c0 1.1.9 2 2 2h1a2 2 0 002-2V8a2 2 0 00-2-2h-1a2 2 0 00-2 2v5z"></path></svg>`,
	4,
)

function AlignBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 9.5a.5.5 0 01-.5.5H16v2a2 2 0 01-2 2h-1a2 2 0 01-2-2v-2H9v4a2 2 0 01-2 2H6a2 2 0 01-2-2v-4H2.5a.5.5 0 010-1H4V5c0-1.1.9-2 2-2h1a2 2 0 012 2v4h2V7c0-1.1.9-2 2-2h1a2 2 0 012 2v2h1.5c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function AlignCenterHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 18a.5.5 0 01-.5-.5V16H8a2 2 0 01-2-2v-1c0-1.1.9-2 2-2h2V9H6a2 2 0 01-2-2V6c0-1.1.9-2 2-2h4V2.5a.5.5 0 011 0V4h4a2 2 0 012 2v1a2 2 0 01-2 2h-4v2h2a2 2 0 012 2v1a2 2 0 01-2 2h-2v1.5a.5.5 0 01-.5.5z"></path></svg>`,
	4,
)

function AlignCenterVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 17.5a.5.5 0 001 0v-15a.5.5 0 00-1 0v15z"></path><path d="M10 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h2a2 2 0 002-2V6a2 2 0 00-2-2h-2z"></path></svg>`,
	6,
)

function AlignEndHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 10c0-1.1.9-2 2-2h8a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2z"></path><path d="M2 16.5c0-.28.22-.5.5-.5h15a.5.5 0 010 1h-15a.5.5 0 01-.5-.5z"></path></svg>`,
	6,
)

function AlignEndVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2a.5.5 0 00-.5.5v15a.5.5 0 001 0v-15a.5.5 0 00-.5-.5zM7 11a2 2 0 00-2 2v1c0 1.1.9 2 2 2h5a2 2 0 002-2v-1a2 2 0 00-2-2H7zM5 6c0-1.1.9-2 2-2h8a2 2 0 012 2v1a2 2 0 01-2 2H7a2 2 0 01-2-2V6z"></path></svg>`,
	4,
)

function AlignLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.5 2c.28 0 .5.22.5.5v15a.5.5 0 01-1 0v-15c0-.28.22-.5.5-.5zM13 11a2 2 0 012 2v1a2 2 0 01-2 2H8a2 2 0 01-2-2v-1c0-1.1.9-2 2-2h5zm2-5a2 2 0 00-2-2H5a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2V6z"></path></svg>`,
	4,
)

function AlignRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 16c.83 0 1.5-.67 1.5-1.5v-9C9 4.67 8.33 4 7.5 4h-2C4.67 4 4 4.67 4 5.5v9c0 .83.67 1.5 1.5 1.5h2z"></path><path d="M14.5 16c.83 0 1.5-.67 1.5-1.5v-9c0-.83-.67-1.5-1.5-1.5h-2c-.83 0-1.5.67-1.5 1.5v9c0 .83.67 1.5 1.5 1.5h2z"></path></svg>`,
	6,
)

function AlignSpaceAroundHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2V6a2 2 0 00-2-2H6z"></path><path d="M6 11a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2v-1a2 2 0 00-2-2H6z"></path></svg>`,
	6,
)

function AlignSpaceAroundVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h1a2 2 0 002-2V6a2 2 0 00-2-2H3z"></path><path d="M16 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h1a2 2 0 002-2V6a2 2 0 00-2-2h-1z"></path></svg>`,
	6,
)

function AlignSpaceBetweenHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 1a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2V3a2 2 0 00-2-2H6z"></path><path d="M6 14a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2v-1a2 2 0 00-2-2H6z"></path></svg>`,
	6,
)

function AlignSpaceBetweenVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 16a2 2 0 002-2V6a2 2 0 00-2-2H3a2 2 0 00-2 2v8c0 1.1.9 2 2 2h1z"></path><path d="M10 16a2 2 0 002-2V6a2 2 0 00-2-2H9a2 2 0 00-2 2v8c0 1.1.9 2 2 2h1z"></path><path d="M16 16a2 2 0 002-2V6a2 2 0 00-2-2h-1a2 2 0 00-2 2v8c0 1.1.9 2 2 2h1z"></path></svg>`,
	8,
)

function AlignSpaceEvenlyHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 1a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2V3a2 2 0 00-2-2H6z"></path><path d="M6 13a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2v-1a2 2 0 00-2-2H6z"></path><path d="M6 7a2 2 0 00-2 2v1c0 1.1.9 2 2 2h8a2 2 0 002-2V9a2 2 0 00-2-2H6z"></path></svg>`,
	8,
)

function AlignSpaceEvenlyVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 1a2 2 0 00-2 2v4.5c0 1.1.9 2 2 2h8a2 2 0 002-2V3a2 2 0 00-2-2H6z"></path><path d="M6 10.5a2 2 0 00-2 2V17c0 1.1.9 2 2 2h8a2 2 0 002-2v-4.5a2 2 0 00-2-2H6z"></path></svg>`,
	6,
)

function AlignSpaceFitVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 17.5a.5.5 0 001 0v-15a.5.5 0 00-1 0v15z"></path><path d="M8 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h2a2 2 0 002-2V6a2 2 0 00-2-2H8z"></path></svg>`,
	6,
)

function AlignStartHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 3a.5.5 0 000 1h15a.5.5 0 000-1h-15z"></path><path d="M6 6a2 2 0 00-2 2v2c0 1.1.9 2 2 2h8a2 2 0 002-2V8a2 2 0 00-2-2H6z"></path></svg>`,
	6,
)

function AlignStartVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 17.5a.5.5 0 001 0v-15a.5.5 0 00-1 0v15z"></path><path d="M16 17.5a.5.5 0 001 0v-15a.5.5 0 00-1 0v15z"></path><path d="M13 16a2 2 0 002-2v-1a2 2 0 00-2-2H7a2 2 0 00-2 2v1c0 1.1.9 2 2 2h6z"></path><path d="M15 7a2 2 0 01-2 2H7a2 2 0 01-2-2V6c0-1.1.9-2 2-2h6a2 2 0 012 2v1z"></path></svg>`,
	10,
)

function AlignStretchHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 3a.5.5 0 000 1h15a.5.5 0 000-1h-15z"></path><path d="M2.5 16a.5.5 0 000 1h15a.5.5 0 000-1h-15z"></path><path d="M4 13c0 1.1.9 2 2 2h1a2 2 0 002-2V7a2 2 0 00-2-2H6a2 2 0 00-2 2v6z"></path><path d="M13 15a2 2 0 01-2-2V7c0-1.1.9-2 2-2h1a2 2 0 012 2v6a2 2 0 01-2 2h-1z"></path></svg>`,
	10,
)

function AlignStretchVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3.5c0-.28.22-.5.5-.5h15a.5.5 0 010 1h-15a.5.5 0 01-.5-.5zM11 7c0-1.1.9-2 2-2h1a2 2 0 012 2v5a2 2 0 01-2 2h-1a2 2 0 01-2-2V7zM6 5a2 2 0 00-2 2v8c0 1.1.9 2 2 2h1a2 2 0 002-2V7a2 2 0 00-2-2H6z"></path></svg>`,
	4,
)

function AlignTopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.97 18H13v-1.5a2.5 2.5 0 00-2.5-2.5h-1a.5.5 0 010-1h1a3.5 3.5 0 013.5 3.5V18h.25c.47 0 .9-.2 1.21-.5h.04v-.04c.29-.3.47-.72.47-1.18v-7.6a2.12 2.12 0 001.7-3.24l-.5-.81c-.38-.63-1.06-1-1.8-1h-1.43v-.64a.99.99 0 00-.99-.99 2.45 2.45 0 00-2.44 2.45V7.9a4.28 4.28 0 00-2.95 1.58 6.69 6.69 0 00-1.04 1.8c-.23.46-.39.96-.47 1.49l-.01.06A17.04 17.04 0 005.63 17h-.66a1.97 1.97 0 01-1.44-3.32l.92-.98a3.59 3.59 0 00-.09-4.99l-.9-.9a.5.5 0 10-.7.7l.9.9a2.59 2.59 0 01.06 3.6l-.92 1A2.97 2.97 0 004.97 18z"></path></svg>`,
	4,
)

function AnimalCatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 2c-.33 0-.81.1-1.23.4-.44.31-.77.84-.77 1.6v1.25c0 .13.04.34.16.5.09.12.25.25.59.25.34 0 .5-.13.6-.26a.9.9 0 00.15-.49.5.5 0 111 0c0 .3-.08.71-.35 1.08-.28.39-.74.67-1.4.67-.32 0-.6-.06-.82-.18a6.5 6.5 0 01-1.78 3.83 7.47 7.47 0 00-1.89 3.48A9.33 9.33 0 006 15.95v.08a1.34 1.34 0 01-.13.5.82.82 0 01-.28.32c-.12.08-.3.15-.59.15a2 2 0 01-1.2-3.6.5.5 0 10-.6-.8A3 3 0 005 18h8v-.5c0-.4-.19-1.05-.73-1.33-.19-.1-.44-.17-.77-.17h-1a.5.5 0 010-1h1c.18 0 .34.01.5.04V12.5a.5.5 0 011 0v2.95c.79.57 1 1.52 1 2.05v.5h2.5a.5.5 0 00.5-.5c0-.87-.3-1.52-.8-1.95-.36-.29-.78-.45-1.2-.51V7h.5c.83 0 1.5-.67 1.5-1.5V4.28a1 1 0 00-.49-.85l-1.78-1.07A2.5 2.5 0 0013.45 2H12z"></path></svg>`,
	4,
)

function AnimalDogIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.68 4.38l4.23 4.23a2.78 2.78 0 01-2.6 4.67v.16c0 .86-.7 1.56-1.57 1.56H11v-1.25c0-.54-.28-.98-.67-1.28-.38-.3-.9-.47-1.43-.47H7.5a.5.5 0 100 1h1.4c.33 0 .62.1.82.26.2.15.28.33.28.49V15H5.56C4.7 15 4 14.3 4 13.44V11.4v-.18A2.12 2.12 0 116.05 8.3C6.5 8.11 7 8 7.52 8h3.28c.47 0 .92.1 1.33.26l.08-.13c.11-.19.23-.4.38-.55l-1.55-1.56a1.16 1.16 0 111.64-1.64z"></path></svg>`,
	4,
)

function AnimalRabbitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L7.3 8.01c-.44.02-.86.13-1.25.3A2.12 2.12 0 104 11.22v2.21C4 14.3 4.7 15 5.56 15H10v-1.25c0-.16-.08-.34-.28-.49-.2-.15-.49-.26-.82-.26H7.5a.5.5 0 010-1h1.4c.54 0 1.05.17 1.43.47.39.3.67.74.67 1.28V15h1.74c.43 0 .82-.18 1.1-.45l3.3 3.3a.5.5 0 00.71-.7l-15-15zm14.06 10.39c-.42.42-.94.67-1.48.77l-5.3-5.3h.67c.47 0 .92.09 1.33.25l.08-.13c.11-.19.23-.4.38-.55l-1.55-1.56a1.16 1.16 0 111.64-1.64l4.23 4.23a2.78 2.78 0 010 3.93z"></path></svg>`,
	4,
)

function AnimalRabbitOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 4c-1.47 0-2.5.55-3.21 1.38a7.5 7.5 0 00-1.36 2.77L4.27 9H2.5a.5.5 0 00-.5.5c0 1.08.5 2.1 1.3 2.63l-.44 1.07a1.31 1.31 0 001.2 1.81h1.47c.5 0 .97-.3 1.19-.75l.47-1c1.31.18 2.64.18 3.95 0l.48 1c.21.46.67.75 1.18.75h1.45a1.31 1.31 0 001.21-1.8l-.5-1.21h1.7c.68 0 1.34-.52 1.34-1.26V10c0-1.14-.99-2-2.12-2H13.8a6.9 6.9 0 00-1.4-2.63A4.28 4.28 0 009.1 4zm5.57 7l-.57-2h1.78c.66 0 1.12.49 1.12 1v.74c0 .09-.11.26-.33.26h-2zm-2.5 2.08c.65-.14 1.3-.32 1.93-.55l.44 1.05a.31.31 0 01-.3.43H12.8a.31.31 0 01-.28-.18l-.35-.75zm-7.95-.55c.64.23 1.29.41 1.95.55l-.36.75a.31.31 0 01-.28.18H4.07a.3.3 0 01-.29-.43l.44-1.05zM3.97 10l-.34 1.12c-.27-.26-.5-.65-.58-1.12h.92z"></path></svg>`,
	4,
)

function AnimalTurtleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ve = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H6a1 1 0 01-1-1V6zm0 6a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H6a1 1 0 01-1-1v-2zm6-6a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1V6zm0 6a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2zM2 5a3 3 0 013-3h10a3 3 0 013 3v10a3 3 0 01-3 3H5a3 3 0 01-3-3V5zm3-2a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5z"></path></svg>`,
	4,
)

function AppFolderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ve.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3h-9zM4 7h12v7.5c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 14.5V7zm2 1a1 1 0 00-1 1v5a1 1 0 001 1h2a1 1 0 001-1V9a1 1 0 00-1-1H6zm0 1h2v5H6V9zm4.5 1a.5.5 0 000 1h3a.5.5 0 000-1h-3zM10 8.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function AppGenericIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zM2 6c0-1.1.9-2 2-2v12a2 2 0 01-2-2V6zm14 10V4a2 2 0 012 2v8a2 2 0 01-2 2z"></path></svg>`,
	4,
)

function AppRecentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$vb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.78.72a.75.75 0 00-1.06 1.06L9.94 3H9.5a7.5 7.5 0 107.5 7.5.75.75 0 00-1.5 0 6 6 0 11-6.06-6l-.72.72a.75.75 0 001.06 1.06l2.25-2.25c.3-.3.3-.77 0-1.06L9.78.72zm3.74 6.24c.3.29.3.76.02 1.06l-3.85 4a.75.75 0 01-1.08 0l-1.65-1.71a.75.75 0 111.08-1.04l1.11 1.15 3.31-3.44c.29-.3.76-.3 1.06-.02z"></path></svg>`,
	4,
)

function ApprovalsAppIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$vb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$va = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 2.5c.41 0 .75.34.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5c0-.41.34-.75.75-.75zM4.75 3C3.78 3 3 3.78 3 4.75v10.5c0 .97.78 1.75 1.75 1.75h10.5c.97 0 1.75-.78 1.75-1.75v-4.5C17 9.78 16.22 9 15.25 9h-4a.25.25 0 01-.25-.25v-4C11 3.78 10.22 3 9.25 3h-4.5zM4.5 4.75c0-.14.11-.25.25-.25h4.5c.14 0 .25.11.25.25v4c0 .08 0 .17.02.25H4.5V4.75zm5 5.75v5H4.75a.25.25 0 01-.25-.25V10.5h5zm1.5 5v-5.02l.25.02h4c.14 0 .25.11.25.25v4.5c0 .14-.11.25-.25.25H11z"></path></svg>`,
	4,
)

function AppsAddInIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$va.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 17A1.5 1.5 0 013 15.65V4.5c0-.78.6-1.42 1.36-1.5H9c.78 0 1.42.6 1.5 1.36v.4l2.19-2.27a1.5 1.5 0 012-.14l.12.1 2.76 2.72c.55.55.6 1.42.11 2.02l-.1.11-2.31 2.2h.23c.78 0 1.42.6 1.5 1.36v4.64c0 .78-.6 1.42-1.36 1.5H4.5zm5-6.5H4v5c0 .22.14.4.33.47l.08.02.09.01h5v-5.5zm6 0h-5V16h5a.5.5 0 00.5-.4V11a.5.5 0 00-.41-.5h-.09zm-5-2.79V9.5h1.79L10.5 7.71zM9 4.01H4.5a.5.5 0 00-.5.4v5.1h5.5v-5a.5.5 0 00-.33-.48l-.08-.02H9z"></path></svg>`,
	4,
)

function AppsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v2C2 8.33 2.67 9 3.5 9h2C6.33 9 7 8.33 7 7.5v-2C7 4.67 6.33 4 5.5 4h-2zm6 1a.5.5 0 000 1h8a.5.5 0 000-1h-8zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6zm-6 4c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5h-2zm6 1a.5.5 0 000 1h8a.5.5 0 000-1h-8zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6z"></path></svg>`,
	4,
)

function AppsListDetailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 4.5c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9a.5.5 0 01-.5-.5zm0 6c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9a.5.5 0 01-.5-.5zm0 6c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9a.5.5 0 01-.5-.5zm-6-1c0-.83.67-1.5 1.5-1.5h1c.83 0 1.5.67 1.5 1.5v1c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 012 16.5v-1zm0-6C2 8.67 2.67 8 3.5 8h1C5.33 8 6 8.67 6 9.5v1c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 012 10.5v-1zm0-6C2 2.67 2.67 2 3.5 2h1C5.33 2 6 2.67 6 3.5v1C6 5.33 5.33 6 4.5 6h-1A1.5 1.5 0 012 4.5v-1z"></path></svg>`,
	4,
)

function AppsListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.75 3C19.55 3 21 4.46 21 6.25v11.5c0 1.8-1.46 3.25-3.25 3.25H6.25A3.25 3.25 0 013 17.75V6.25C3 4.45 4.46 3 6.25 3h11.5zM9.37 15.25H7.63l-.07.12-.04.1a.75.75 0 001.28.74l.06-.08.5-.88zm3.92-5.23l-.87 1.5 2.66 4.6.06.09a.75.75 0 001.28-.74l-.04-.1-.5-.87h.97c.34-.05.6-.31.64-.64l.01-.1v-.1a.75.75 0 00-.65-.65h-1.84l-1.72-2.99zm-.03-2.92a.75.75 0 00-.97.19l-.05.08-.24.41-.24-.4-.05-.09a.75.75 0 00-.87-.24l-.1.05-.09.06a.75.75 0 00-.23.86l.04.1.67 1.15L8.95 13h-1.7l-.1.01a.75.75 0 000 1.49h6.13L12.4 13h-1.73l2.85-4.87.05-.1a.75.75 0 00-.32-.93z"></path></svg>`,
	4,
)

function AppStoreIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 3a3 3 0 00-3 3v6a3 3 0 003 3h6a3 3 0 003-3V6a3 3 0 00-3-3H7zM4.5 17a.5.5 0 000 1h11a.5.5 0 000-1h-11z"></path></svg>`,
	4,
)

function AppTitleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.25C2 3.56 2.56 3 3.25 3h13.5c.69 0 1.25.56 1.25 1.25v1.5C18 6.44 17.44 7 16.75 7H3.25C2.56 7 2 6.44 2 5.75v-1.5zM3 8h14v1.6a5.48 5.48 0 00-5.66.4H8.5a.5.5 0 000 1h1.76a5.48 5.48 0 00-.66 6H6a3 3 0 01-3-3V8zm11.5 11a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function ArchiveArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.25C2 3.56 2.56 3 3.25 3h13.5c.69 0 1.25.56 1.25 1.25v1.5C18 6.44 17.44 7 16.75 7H3.25C2.56 7 2 6.44 2 5.75v-1.5zM3 8h14v6a3 3 0 01-3 3H6a3 3 0 01-3-3V8zm5.5 2a.5.5 0 000 1h3a.5.5 0 000-1h-3z"></path></svg>`,
	4,
)

function ArchiveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2C2.67 2 2 2.67 2 3.5v1C2 5.33 2.67 6 3.5 6h11c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-11zM15 7H3v5.5A3.5 3.5 0 006.5 16h5a3.5 3.5 0 003.5-3.5V7zM7 8.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM8.5 18c-.95 0-1.82-.38-2.45-1h6.45a3.5 3.5 0 003.5-3.5V7.09c.58.2 1 .76 1 1.41v5a4.5 4.5 0 01-4.5 4.5h-4z"></path></svg>`,
	4,
)

function ArchiveMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.25C2 3.56 2.56 3 3.25 3h13.5c.69 0 1.25.56 1.25 1.25v1.5C18 6.44 17.44 7 16.75 7H3.25C2.56 7 2 6.44 2 5.75v-1.5zM3 8h14v1.6a5.48 5.48 0 00-5.66.4H8.5a.5.5 0 000 1h1.76a5.48 5.48 0 00-.66 6H6a3 3 0 01-3-3V8zm9.07 3.44a2 2 0 01-1.43 2.48l-.46.12a4.7 4.7 0 000 1.02l.35.08A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.29.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function ArchiveSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.35 3.65c.2.2.2.5 0 .7L4.71 5H7.5a.5.5 0 010 1H4.7l.65.65a.5.5 0 11-.7.7l-1.5-1.5a.5.5 0 010-.7l1.5-1.5c.2-.2.5-.2.7 0zM5.5 9A2.5 2.5 0 003 11.5v3A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-3A2.5 2.5 0 0014.5 9h-9zm.5 3.5h8a.5.5 0 010 1H6a.5.5 0 010-1zm8.65-8.15a.5.5 0 01.7-.7l1.5 1.5c.2.2.2.5 0 .7l-1.5 1.5a.5.5 0 01-.7-.7l.64-.65H12.5a.5.5 0 010-1h2.8l-.65-.65z"></path></svg>`,
	4,
)

function ArrowAutofitContentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.71 14.77l-.7.73V2.75a.75.75 0 10-1.5 0v12.76l-.72-.74a.75.75 0 00-1.08 1.04l1.82 1.88a1 1 0 001.44 0l1.82-1.88a.75.75 0 00-1.08-1.04zM5 17a2 2 0 01-2-2V5c0-1.1.9-2 2-2h6.25a.75.75 0 010 1.5H5a.5.5 0 00-.5.5v10c0 .28.22.5.5.5h4.25a.75.75 0 010 1.5H5z"></path></svg>`,
	4,
)

function ArrowAutofitDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.71 5.23l-1.46-1.51-1.46 1.51a.75.75 0 01-1.08-1.04l1.82-1.88a1 1 0 011.44 0l1.82 1.88a.75.75 0 01-1.08 1.04zm0 9.54l-1.46 1.51-1.46-1.51a.75.75 0 00-1.08 1.04l1.82 1.88a1 1 0 001.44 0l1.82-1.88a.75.75 0 00-1.08-1.04zM14.25 12c.42 0 .75.34.75.75v.5a.75.75 0 11-1.5 0v-.5c0-.41.34-.75.75-.75zm.75-1.75a.75.75 0 11-1.5 0v-.5a.75.75 0 011.5 0v.5zM14.25 8c.42 0 .75-.34.75-.75v-.5a.75.75 0 10-1.5 0v.5c0 .41.34.75.75.75zM5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h4.25a.75.75 0 000-1.5H5a.5.5 0 01-.5-.5V5c0-.28.22-.5.5-.5h4.25a.75.75 0 000-1.5H5z"></path></svg>`,
	4,
)

function ArrowAutofitHeightDottedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 4.5l.71.73A.75.75 0 0016.8 4.2l-1.82-1.88a1 1 0 00-1.44 0l-1.82 1.88a.75.75 0 001.08 1.04l.71-.74v2.76a.75.75 0 001.5 0V4.5zM3 5c0-1.1.9-2 2-2h4.25a.75.75 0 010 1.5H5a.5.5 0 00-.5.5v10c0 .28.22.5.5.5h4.25a.75.75 0 010 1.5H5a2 2 0 01-2-2V5zm12.71 9.77l-.7.73v-2.75a.75.75 0 10-1.5 0v2.76l-.72-.74a.75.75 0 00-1.08 1.04l1.82 1.88a1 1 0 001.44 0l1.82-1.88a.75.75 0 00-1.08-1.04z"></path></svg>`,
	4,
)

function ArrowAutofitHeightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.71 5.23l-.7-.73v12.75a.75.75 0 11-1.5 0V4.49l-.72.74a.75.75 0 01-1.08-1.04l1.82-1.88a1 1 0 011.44 0l1.82 1.88a.75.75 0 01-1.08 1.04zM5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h6.25a.75.75 0 000-1.5H5a.5.5 0 01-.5-.5V5c0-.28.22-.5.5-.5h4.25a.75.75 0 000-1.5H5z"></path></svg>`,
	4,
)

function ArrowAutofitUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.77 15.71l1.51-1.46-1.51-1.46a.75.75 0 111.04-1.08l1.89 1.82a1 1 0 010 1.44l-1.89 1.82a.75.75 0 01-1.04-1.08zm-9.54 0l-1.5-1.46 1.5-1.46a.75.75 0 00-1.04-1.08l-1.88 1.82a1 1 0 000 1.44l1.88 1.82a.75.75 0 001.04-1.08zM8 14.25c0 .42-.33.75-.75.75h-.5a.75.75 0 110-1.5h.5c.42 0 .75.34.75.75zm1.75.75a.75.75 0 110-1.5h.5a.75.75 0 010 1.5h-.5zm2.25-.75c0 .42.34.75.75.75h.5a.75.75 0 100-1.5h-.5a.75.75 0 00-.75.75zM17 5a2 2 0 00-2-2H5a2 2 0 00-2 2v4.25a.75.75 0 001.5 0V5c0-.28.22-.5.5-.5h10c.28 0 .5.22.5.5v4.25a.75.75 0 101.5 0V5z"></path></svg>`,
	4,
)

function ArrowAutofitWidthDottedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 15l-.73.71a.75.75 0 101.04 1.08l1.89-1.82a1 1 0 000-1.44l-1.89-1.82a.75.75 0 00-1.04 1.08l.74.71h-2.76a.75.75 0 000 1.5h2.75zM15 3a2 2 0 012 2v4.25a.75.75 0 01-1.5 0V5a.5.5 0 00-.5-.5H5a.5.5 0 00-.5.5v4.25a.75.75 0 01-1.5 0V5c0-1.1.9-2 2-2h10zM5.23 15.71l-.73-.7h2.75a.75.75 0 100-1.5H4.5l.73-.72a.75.75 0 00-1.04-1.08l-1.88 1.82a1 1 0 000 1.44l1.88 1.82a.75.75 0 001.04-1.08z"></path></svg>`,
	4,
)

function ArrowAutofitWidthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 1.75a.75.75 0 00-1.5 0v.5C3.5 3.22 4.28 4 5.25 4h9C15.22 4 16 3.22 16 2.25v-.5a.75.75 0 00-1.5 0v.5c0 .14-.11.25-.25.25h-9A.25.25 0 015 2.25v-.5zM9.75 5c.41 0 .75.34.75.75v6.69l2.97-2.97a.75.75 0 111.06 1.06l-4.25 4.25c-.3.3-.77.3-1.06 0l-4.25-4.25a.75.75 0 111.06-1.06L9 12.44V5.75c0-.41.34-.75.75-.75zM3.5 17.75c0-.97.78-1.75 1.75-1.75h9c.97 0 1.75.78 1.75 1.75v.5a.75.75 0 01-1.5 0v-.5a.25.25 0 00-.25-.25h-9a.25.25 0 00-.25.25v.5a.75.75 0 01-1.5 0v-.5z"></path></svg>`,
	4,
)

function ArrowBetweenDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 18.25a.75.75 0 01-1.5 0v-.5c0-.97.78-1.75 1.75-1.75h9c.97 0 1.75.78 1.75 1.75v.5a.75.75 0 01-1.5 0v-.5a.25.25 0 00-.25-.25h-9a.25.25 0 00-.25.25v.5zM9.75 15c.41 0 .75-.34.75-.75V7.56l2.97 2.97a.75.75 0 101.06-1.06l-4.25-4.25a.75.75 0 00-1.06 0L4.97 9.47a.75.75 0 101.06 1.06L9 7.56v6.69c0 .41.34.75.75.75zM3.5 2.25C3.5 3.22 4.28 4 5.25 4h9C15.22 4 16 3.22 16 2.25v-.5a.75.75 0 00-1.5 0v.5c0 .14-.11.25-.25.25h-9A.25.25 0 015 2.25v-.5a.75.75 0 00-1.5 0v.5z"></path></svg>`,
	4,
)

function ArrowBetweenUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.78 7.78a.75.75 0 01-1.06-1.06l3.5-3.5c.3-.3.77-.3 1.06 0l3.5 3.5a.75.75 0 01-1.06 1.06L10.5 5.56v8.88l2.22-2.22a.75.75 0 111.06 1.06l-3.5 3.5c-.3.3-.77.3-1.06 0l-3.5-3.5a.75.75 0 111.06-1.06L9 14.44V5.56L6.78 7.78z"></path></svg>`,
	4,
)

function ArrowBidirectionalUpDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 6a.75.75 0 00-.75.75v6.5a.75.75 0 001.5 0V8.56l6.47 6.47c.3.3.77.3 1.06 0l6.75-6.75a.75.75 0 00-1.06-1.06l-6.22 6.22L4.56 7.5h4.69a.75.75 0 000-1.5h-6.5z"></path></svg>`,
	4,
)

function ArrowBounceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.35 13.85L9 12.21a.5.5 0 10-.7-.71l-.8.8V6.5a.5.5 0 00-1 0v5.8l-.8-.8a.5.5 0 10-.7.7l1.65 1.65c.2.2.5.2.7 0zM18 10a8 8 0 11-16 0 8 8 0 0116 0zm-4.65 3.85L15 12.21a.5.5 0 10-.7-.71l-.8.8V6.5a.5.5 0 00-1 0v5.8l-.8-.8a.5.5 0 10-.7.7l1.65 1.65c.2.2.5.2.7 0z"></path></svg>`,
	4,
)

function ArrowCircleDownDoubleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-4.65.85a.5.5 0 00-.7-.7l-2.15 2.14V6.5a.5.5 0 00-1 0v5.8l-2.15-2.15a.5.5 0 00-.7.7l3 3c.2.2.5.2.7 0l3-3z"></path></svg>`,
	4,
)

function ArrowCircleDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16zm2.85 10.86a.5.5 0 01-.35.14h-5a.5.5 0 010-1h3.8L7.14 7.85a.5.5 0 11.7-.7L12 11.29V7.5a.5.5 0 011 0v5a.5.5 0 01-.14.35z"></path></svg>`,
	4,
)

function ArrowCircleDownRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-9.2 2.41a.5.5 0 10-.71-.7l-.59.58V9h5v3.3l-.59-.6a.5.5 0 00-.7.71l1.44 1.44c.2.2.5.2.7 0l1.44-1.44a.5.5 0 00-.7-.7l-.59.58V8.5A.5.5 0 0013 8h-2.5V5.5a.5.5 0 00-1 0V8H7a.5.5 0 00-.5.5v3.8l-.59-.6a.5.5 0 00-.7.71l1.44 1.44c.2.2.5.2.7 0l1.44-1.44z"></path></svg>`,
	4,
)

function ArrowCircleDownSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zm-1-5.8l-1.65 1.65a.5.5 0 01-.7 0L5 12.21a.5.5 0 11.7-.71l.8.8V6.5a.5.5 0 011 0v5.8l.8-.8a.5.5 0 11.7.7zm6-4.4a.5.5 0 01-.7.7l-.8-.8v5.8a.5.5 0 01-1 0V7.7l-.8.8a.5.5 0 11-.7-.7l1.65-1.65c.2-.2.5-.2.7 0L15 7.79z"></path></svg>`,
	4,
)

function ArrowCircleDownUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 110-16 8 8 0 010 16zm-.85-4.65a.5.5 0 00.7-.7L7.71 10.5h5.79a.5.5 0 000-1H7.7l2.15-2.15a.5.5 0 00-.7-.7l-3 3a.5.5 0 000 .7l3 3z"></path></svg>`,
	4,
)

function ArrowCircleLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zm.85-4.65a.5.5 0 01-.7-.7l2.14-2.15H6.5a.5.5 0 010-1h5.8l-2.15-2.15a.5.5 0 01.7-.7l3 3c.2.2.2.5 0 .7l-3 3z"></path></svg>`,
	4,
)

function ArrowCircleRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm4.65-.85a.5.5 0 10.7.7L9.5 7.71v5.79a.5.5 0 001 0V7.7l2.15 2.15a.5.5 0 00.7-.7l-3-3a.5.5 0 00-.7 0l-3 3z"></path></svg>`,
	4,
)

function ArrowCircleUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zM7.15 7.14A.5.5 0 017.5 7h5a.5.5 0 010 1H8.7l4.15 4.15a.5.5 0 01-.7.7L8 8.71v3.79a.5.5 0 01-1 0v-5a.5.5 0 01.14-.35z"></path></svg>`,
	4,
)

function ArrowCircleUpLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.44 2.15a8.03 8.03 0 013.12 0 .75.75 0 01-.3 1.47 6.54 6.54 0 00-2.53 0 .75.75 0 01-.29-1.47zm4.96 1.4a.75.75 0 011.05-.2c.57.38 1.1.84 1.55 1.36V2.75a.75.75 0 011.5 0v4c0 .41-.34.75-.75.75h-4a.75.75 0 010-1.5h2.37a6.54 6.54 0 00-1.5-1.4.75.75 0 01-.21-1.05zM6.4 4.6a.75.75 0 00-.84-1.24 8.04 8.04 0 00-2.2 2.2.75.75 0 001.24.84 6.54 6.54 0 011.8-1.8zM3.03 7.85c.41.08.67.47.6.88a6.54 6.54 0 000 2.54.75.75 0 01-1.48.29 8.04 8.04 0 010-3.12c.08-.4.48-.67.88-.6zM18 10v-.25a.75.75 0 00-1.5 0V10c0 .44-.04.86-.12 1.27a.75.75 0 101.47.29c.1-.5.15-1.03.15-1.56zM3.55 13.4a.75.75 0 011.04.21c.48.71 1.09 1.32 1.8 1.8a.75.75 0 01-.84 1.24 8.04 8.04 0 01-2.2-2.2.75.75 0 01.2-1.04zm13.1 1.05a.75.75 0 00-1.24-.84 6.54 6.54 0 01-1.8 1.8.75.75 0 00.84 1.24 8.04 8.04 0 002.2-2.2zm-8.8 2.52c.08-.41.47-.67.88-.6a6.54 6.54 0 002.54 0 .75.75 0 11.29 1.48 8.03 8.03 0 01-3.12 0 .75.75 0 01-.6-.88z"></path></svg>`,
	4,
)

function ArrowClockwiseDashesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.63 2.03A8 8 0 1018 9.73a.75.75 0 10-1.5.05c0 .25 0 .5-.02.73a6.5 6.5 0 11-1.56-4.75l.2.24h-2.37l-.1.01a.75.75 0 000 1.49H16.85c.33-.05.6-.31.64-.64V2.66a.75.75 0 00-.64-.65h-.2c-.34.05-.6.3-.65.64v2.06a7.98 7.98 0 00-5.37-2.68z"></path></svg>`,
	4,
)

function ArrowClockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm3.22 2.22c.3-.3.77-.3 1.06 0l2.75 2.75a.75.75 0 11-1.06 1.06L6.5 9.31v6.44a.75.75 0 01-1.5 0V9.31l-1.47 1.47a.75.75 0 11-1.06-1.06l2.75-2.75zm4.28.78c0-.41.34-.75.75-.75h7a.75.75 0 010 1.5h-7a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function ArrowCollapseAllIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.56 2.15a8.04 8.04 0 00-3.12 0 .75.75 0 00.3 1.47 6.54 6.54 0 012.53 0 .75.75 0 00.29-1.47zM6.6 3.55a.75.75 0 00-1.05-.2c-.57.38-1.1.84-1.55 1.36V2.75a.75.75 0 00-1.5 0v4c0 .41.34.75.75.75h4a.75.75 0 000-1.5H4.88c.42-.54.93-1.02 1.5-1.4.35-.24.45-.7.22-1.05zM13.6 4.6a.75.75 0 01.84-1.24 8.04 8.04 0 012.2 2.2.75.75 0 01-1.24.84 6.54 6.54 0 00-1.8-1.8zm3.36 3.26a.75.75 0 00-.6.88 6.54 6.54 0 010 2.54.75.75 0 101.48.29 8.03 8.03 0 000-3.12.75.75 0 00-.88-.6zM2 10v-.25a.75.75 0 011.5 0V10c0 .44.04.86.12 1.27a.75.75 0 01-1.47.29C2.05 11.06 2 10.53 2 10zm14.45 3.4a.75.75 0 00-1.04.21 6.54 6.54 0 01-1.8 1.8.75.75 0 00.84 1.24 8.04 8.04 0 002.2-2.2.75.75 0 00-.2-1.04zm-13.1 1.05a.75.75 0 011.24-.84c.48.71 1.09 1.32 1.8 1.8a.75.75 0 01-.84 1.24 8.04 8.04 0 01-2.2-2.2zm8.8 2.52a.75.75 0 00-.88-.6 6.54 6.54 0 01-2.54 0 .75.75 0 10-.29 1.48 8.03 8.03 0 003.12 0c.4-.08.67-.48.6-.88z"></path></svg>`,
	4,
)

function ArrowCounterclockwiseDashesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.37 2.03A8 8 0 112 9.73a.75.75 0 011.5.05 6.5 6.5 0 101.57-4.03l-.2.25h2.38l.1.01a.75.75 0 010 1.49H3.15a.75.75 0 01-.64-.64V2.66c.04-.34.3-.6.64-.65h.2c.34.05.6.3.65.64v2.06a7.98 7.98 0 015.37-2.68z"></path></svg>`,
	4,
)

function ArrowCounterclockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.39 3.14a.75.75 0 10-.78-1.28 7.2 7.2 0 00-2.98 3.13A11.6 11.6 0 008.75 10v5.44l-2.72-2.72a.75.75 0 10-1.06 1.06l4 4c.3.3.77.3 1.06 0l4-4a.75.75 0 00-1.06-1.06l-2.72 2.72V10c0-1.95.25-3.32.74-4.37a5.71 5.71 0 012.4-2.49z"></path></svg>`,
	4,
)

function ArrowCurveDownLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.61 3.14a.75.75 0 11.78-1.28 7.2 7.2 0 012.98 3.13c.63 1.33.88 2.96.88 5.01v5.44l2.72-2.72a.75.75 0 111.06 1.06l-4 4c-.3.3-.77.3-1.06 0l-4-4a.75.75 0 011.06-1.06l2.72 2.72V10c0-1.95-.25-3.32-.74-4.37a5.71 5.71 0 00-2.4-2.49z"></path></svg>`,
	4,
)

function ArrowCurveDownRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.03 7.03a.75.75 0 01-1.06-1.06l4-4c.3-.3.77-.3 1.06 0l4 4a.75.75 0 01-1.06 1.06l-2.72-2.72v5.44c0 1.95.25 3.32.74 4.37a5.71 5.71 0 002.4 2.49.75.75 0 11-.78 1.28 7.2 7.2 0 01-2.98-3.13 11.6 11.6 0 01-.88-5.01V4.31L6.03 7.03z"></path></svg>`,
	4,
)

function ArrowCurveUpLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.97 7.03a.75.75 0 101.06-1.06l-4-4a.75.75 0 00-1.06 0l-4 4a.75.75 0 001.06 1.06l2.72-2.72v5.44c0 1.95-.25 3.32-.74 4.37a5.71 5.71 0 01-2.4 2.49.75.75 0 10.78 1.28 7.2 7.2 0 002.98-3.13c.63-1.33.88-2.96.88-5.01V4.31l2.72 2.72z"></path></svg>`,
	4,
)

function ArrowCurveUpRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.8 11.27a.75.75 0 00-1.1-1.04l-4.95 5.24V2.75a.75.75 0 00-1.5 0v12.73l-4.96-5.25a.75.75 0 00-1.09 1.04l6.07 6.41a1 1 0 001.45 0l6.07-6.41z"></path></svg>`,
	4,
)

function ArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 16.25c0 .41-.34.75-.75.75h-7.5a.75.75 0 01-.75-.75v-7.5a.75.75 0 111.5 0v5.69L15.72 3.22a.75.75 0 111.06 1.06L5.56 15.5h5.7c.4 0 .74.34.74.75z"></path></svg>`,
	4,
)

function ArrowDownLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ux = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.24 16.5a.75.75 0 01.1 1.5H4.76a.75.75 0 01-.1-1.5h10.6zM10 2c.38 0 .7.28.75.65V12.95l2.97-2.98c.27-.26.68-.29.98-.07l.08.07c.27.27.3.68.07.98l-.07.08-4.24 4.25-.07.07-.1.05-.03.03-.1.03-.11.03-.07.01H10l-.15-.01-.08-.03a.73.73 0 01-.26-.14l-4.29-4.29A.75.75 0 016.2 9.9l.08.07 2.97 2.97V2.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function ArrowDownloadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ux.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.2 4.6c-.6-.8-1.8-.8-2.4 0l-4.5 6A1.5 1.5 0 005.5 13h9a1.5 1.5 0 001.2-2.4l-4.5-6zM4 15a.5.5 0 000 1h12a.5.5 0 000-1H4z"></path></svg>`,
	4,
)

function ArrowEjectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.75 17.5a.75.75 0 010-1.5H14a2 2 0 002-2V6a2 2 0 00-2-2H7.75a.75.75 0 010-1.5H14A3.5 3.5 0 0117.5 6v8a3.5 3.5 0 01-3.5 3.5H7.75zm0-11.3a.75.75 0 011.05.04l3 3.25c.27.29.27.73 0 1.02l-3 3.25a.75.75 0 11-1.1-1.02l1.84-1.99H1.75a.75.75 0 010-1.5h7.79l-1.84-2a.75.75 0 01.04-1.05z"></path></svg>`,
	4,
)

function ArrowEnterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.64 12.5l2.87 2.7a.75.75 0 01-1.02 1.1l-4.25-4a.75.75 0 010-1.1l4.25-4A.75.75 0 117.5 8.3L4.64 11h10.11c.97 0 1.75-.78 1.75-1.75v-4.5a.75.75 0 011.5 0v4.5c0 1.8-1.46 3.25-3.25 3.25H4.65z"></path></svg>`,
	4,
)

function ArrowEnterLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ut = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.8 2.24a.75.75 0 00-1.1 0l-4 4.25A.75.75 0 104.8 7.5l2.7-2.87v10.11c0 1.8 1.46 3.25 3.25 3.25h4.5a.75.75 0 000-1.5h-4.5c-.97 0-1.75-.78-1.75-1.75V4.65l2.7 2.86a.75.75 0 101.1-1.02l-4-4.25z"></path></svg>`,
	4,
)

function ArrowEnterUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ut.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$us = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.75 17.5a.75.75 0 000-1.5H6.5a2 2 0 01-2-2V6c0-1.1.9-2 2-2h6.25a.75.75 0 000-1.5H6.5A3.5 3.5 0 003 6v8a3.5 3.5 0 003.5 3.5h6.25zm1-11.3a.75.75 0 011.05.04l3 3.25c.27.29.27.73 0 1.02l-3 3.25a.75.75 0 11-1.1-1.02l1.84-1.99H7.75a.75.75 0 010-1.5h7.79l-1.84-2a.75.75 0 01.04-1.05z"></path></svg>`,
	4,
)

function ArrowExitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$us.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ur = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0V5.56l2.22 2.22a.75.75 0 001.06-1.06L5.56 4.5h1.69a.75.75 0 000-1.5h-3.5zm0 14a.75.75 0 01-.75-.75v-3.5a.75.75 0 011.5 0v1.69l2.22-2.22a.75.75 0 011.06 1.06L5.56 15.5h1.69a.75.75 0 010 1.5h-3.5zM17 3.75a.75.75 0 00-.75-.75h-3.5a.75.75 0 000 1.5h1.69l-2.22 2.22a.75.75 0 001.06 1.06l2.22-2.22v1.69a.75.75 0 001.5 0v-3.5zM16.25 17c.41 0 .75-.34.75-.75v-3.5a.75.75 0 00-1.5 0v1.69l-2.22-2.22a.75.75 0 10-1.06 1.06l2.22 2.22h-1.69a.75.75 0 000 1.5h3.5z"></path></svg>`,
	4,
)

function ArrowExpandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ur.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.75c.41 0 .75.34.75.75v11a.75.75 0 01-1.5 0v-11c0-.41.34-.75.75-.75zM5 10c0-.41.34-.75.75-.75h10.19l-2.72-2.72a.75.75 0 011.06-1.06l4 4a.77.77 0 01.15.22.75.75 0 01-.15.84l-4 4a.75.75 0 11-1.06-1.06l2.72-2.72H5.75A.75.75 0 015 10z"></path></svg>`,
	4,
)

function ArrowExportLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$up = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.25 3.75a.75.75 0 00-.75.75v11a.75.75 0 001.5 0v-11a.75.75 0 00-.75-.75zM15 10a.75.75 0 00-.75-.75H4.06l2.72-2.72a.75.75 0 00-1.06-1.06l-4 4a.76.76 0 00-.22.53.75.75 0 00.22.53l4 4a.75.75 0 101.06-1.06l-2.72-2.72h10.19c.41 0 .75-.34.75-.75z"></path></svg>`,
	4,
)

function ArrowExportRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$up.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.53 1.72a.75.75 0 00-1.06 0l-4 4a.75.75 0 001.06 1.06l2.72-2.72v10.19a.75.75 0 001.5 0V4.06l2.72 2.72a.75.75 0 101.06-1.06l-4-4zM4.5 16.5a.75.75 0 000 1.5h11a.75.75 0 000-1.5h-11z"></path></svg>`,
	4,
)

function ArrowExportUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$un = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.8 6.72c.28.3.28.77-.01 1.06L4.57 9h3.68a.75.75 0 010 1.5H4.56l1.22 1.22a.75.75 0 11-1.06 1.06l-2.5-2.5a.75.75 0 010-1.06l2.51-2.5c.3-.3.77-.3 1.06 0zm8.42 0c.3-.3.77-.3 1.06 0l2.5 2.5c.3.3.3.77 0 1.06l-2.5 2.5a.75.75 0 11-1.06-1.06l1.22-1.22h-3.69a.75.75 0 010-1.5h3.69l-1.22-1.22a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function ArrowFitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$un.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$um = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.21 7.78a.75.75 0 111.06-1.06l2.5 2.5a.75.75 0 01.01 1.06l-2.5 2.5a.75.75 0 01-1.06-1.06l1.22-1.22H2.75a.75.75 0 010-1.5h3.68L5.21 7.78zm9.58 0a.75.75 0 00-1.06-1.06l-2.5 2.5a.75.75 0 00-.01 1.06l2.5 2.5a.75.75 0 101.06-1.06l-1.22-1.22h3.69a.75.75 0 000-1.5h-3.68l1.22-1.22z"></path></svg>`,
	4,
)

function ArrowFitInIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$um.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ul = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.69 7l-2.26-2.26a.75.75 0 01.98-1.13l.08.07 3.54 3.54.07.08.04.06.05.1.03.08.02.07v.06l.01.1v.06l-.02.09-.03.1-.05.1-.03.05a.75.75 0 01-.09.11l-3.54 3.54a.75.75 0 01-1.13-.98l.07-.08L15.7 8.5H12c-3.65 0-6.13-2.08-6.25-5.04v-.21a.75.75 0 011.5 0c0 2.13 1.7 3.66 4.5 3.75h3.94zM11 13.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-5.12-3a.5.5 0 00-.47.33l-.88 2.5A.5.5 0 005 14h.78l-.51 1.87a.5.5 0 00.9.4l2.25-3.5A.5.5 0 008 12h-.75l.28-.84a.5.5 0 00-.47-.66H5.88z"></path></svg>`,
	4,
)

function ArrowForwardDownLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ul.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.43 4.75L15.7 7h-3.95c-2.8-.1-4.49-1.62-4.49-3.75a.75.75 0 00-1.5 0v.21C5.87 6.42 8.35 8.5 12 8.5h3.69l-2.26 2.26-.07.08a.75.75 0 001.13.98l3.54-3.54a.75.75 0 00.09-.1l.03-.06.05-.1.03-.1.02-.1V7.68l-.01-.06-.02-.07-.03-.09-.05-.1-.04-.05-.07-.08-3.54-3.54-.08-.07a.75.75 0 00-.98 1.14zM7.5 11a2 2 0 11-4 0 2 2 0 014 0zM9 15.5C9 16.75 8 18 5.5 18S2 16.75 2 15.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function ArrowForwardDownPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.69 9.5l-2.96 2.96a.75.75 0 00.97 1.14l.09-.08 4.24-4.24a.75.75 0 00.07-.98l-.07-.08-4.24-4.24a.75.75 0 00-1.14.97l.08.09L15.69 8H10a7.75 7.75 0 00-7.75 7.5v.25a.75.75 0 001.5 0A6.25 6.25 0 019.77 9.5H15.7z"></path></svg>`,
	4,
)

function ArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ui = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.75c0-.41.34-.75.75-.75h4.5c1.59 0 2.7.62 3.53 1.59C15.6 6.54 16 7.79 16 9c0 1.22-.3 2.46-1.12 3.41A4.62 4.62 0 0111.25 14H6.56l2.22 2.22a.75.75 0 11-1.06 1.06l-3.5-3.5a.75.75 0 01.02-1.08l3.5-3.25a.75.75 0 011.02 1.1l-2.1 1.95h4.59c1.16 0 1.86-.44 2.4-1.07.55-.64.85-1.52.85-2.43 0-.9-.3-1.79-.85-2.43a2.92 2.92 0 00-2.4-1.07h-4.5A.75.75 0 016 4.75z"></path></svg>`,
	4,
)

function ArrowHookDownLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ui.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 14c.06 0-.06 0 0 0h4.65l-2.27 2.27a.75.75 0 101.06 1.06l3.35-3.35a.75.75 0 00.21-.64.75.75 0 00-.21-.45l-3.25-3.24a.75.75 0 10-1.06 1.06l1.8 1.79H9a3.5 3.5 0 110-7h4.25a.75.75 0 000-1.5H9a5 5 0 000 10z"></path></svg>`,
	4,
)

function ArrowHookDownRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ug = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 15.25c0 .41.34.75.75.75h4.5a4.4 4.4 0 003.53-1.59A5.24 5.24 0 0016 11c0-1.22-.3-2.46-1.12-3.41A4.62 4.62 0 0011.25 6H6.56l2.22-2.22a.75.75 0 00-1.06-1.06l-3.5 3.5a.75.75 0 00.02 1.08l3.5 3.25a.75.75 0 001.02-1.1L6.66 7.5h4.59c1.16 0 1.86.44 2.4 1.07.55.64.85 1.52.85 2.43 0 .9-.3 1.79-.85 2.43a2.92 2.92 0 01-2.4 1.07h-4.5a.75.75 0 00-.75.75z"></path></svg>`,
	4,
)

function ArrowHookUpLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ug.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 6c.06 0-.06 0 0 0h4.65l-2.27-2.27a.75.75 0 111.06-1.06l3.35 3.35c.17.18.24.42.21.64a.75.75 0 01-.21.45l-3.25 3.24a.75.75 0 11-1.06-1.06l1.8-1.79H9a3.5 3.5 0 100 7h4.25a.75.75 0 010 1.5H9A5 5 0 019 6z"></path></svg>`,
	4,
)

function ArrowHookUpRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ue = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.25 3.75c.41 0 .75.34.75.75v11a.75.75 0 01-1.5 0v-11c0-.41.34-.75.75-.75zM2 10c0-.41.34-.75.75-.75h10.19l-2.72-2.72a.75.75 0 111.06-1.06l4 4a.77.77 0 01.15.22.75.75 0 01-.15.84l-4 4a.75.75 0 11-1.06-1.06l2.72-2.72H2.75A.75.75 0 012 10z"></path></svg>`,
	4,
)

function ArrowImportIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ue.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ud = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2c.28 0 .5.22.5.5C5 6.12 7.88 9 11.5 9h.8l-1.15-1.15a.5.5 0 01.7-.7l2 2c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7-.7L12.29 10h-.79A6.46 6.46 0 005 16.5a.5.5 0 01-1 0 7.45 7.45 0 014.78-7A7.45 7.45 0 014 2.5c0-.28.22-.5.5-.5zm5.53 9.2A5.43 5.43 0 007 13.3v.7c0 1.1.9 2 2 2h6a2 2 0 002-2V5a2 2 0 00-2-2H9a2 2 0 00-2 2v.7a5.43 5.43 0 003.03 2.1 1.5 1.5 0 012.53-1.36l2 2a1.5 1.5 0 010 2.12l-2 2a1.5 1.5 0 01-2.53-1.37z"></path></svg>`,
	4,
)

function ArrowJoinIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ud.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$uc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.73 16.8a.75.75 0 001.03-1.1l-5.24-4.95h12.73a.75.75 0 000-1.5H4.52l5.24-4.96A.75.75 0 108.73 3.2L2.31 9.27a1 1 0 000 1.46l6.42 6.07z"></path></svg>`,
	4,
)

function ArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$uc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ub = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 3a1 1 0 011 1v5.25a.75.75 0 01-1.5 0v-3.7L5.56 15.5h3.69a.75.75 0 010 1.5H4a1 1 0 01-1-1v-5.25a.75.75 0 011.5 0v3.69l9.94-9.94h-3.69a.75.75 0 010-1.5H16z"></path></svg>`,
	4,
)

function ArrowMaximizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ub.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ua = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.58 1.33a.6.6 0 01.84 0l2.13 2.13a.6.6 0 01-.85.84l-1.1-1.1v4.3a.6.6 0 11-1.2 0V3.2L8.3 4.3a.6.6 0 01-.85-.84l2.13-2.13zM3.9 10c0-.33.27-.6.6-.6h11a.6.6 0 110 1.2h-11a.6.6 0 01-.6-.6zm6.7 6.8v-4.3a.6.6 0 00-1.2 0v4.3l-1.1-1.1a.6.6 0 00-.85.85l2.13 2.12a.6.6 0 00.84 0l2.13-2.12a.6.6 0 10-.85-.85l-1.1 1.1z"></path></svg>`,
	4,
)

function ArrowMaximizeVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ua.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 11h4.5c.38 0 .7.28.74.65l.01.1v4.5a.75.75 0 01-1.5.1v-2.79l-4.47 4.47a.75.75 0 01-1.13-.98l.07-.08 4.47-4.47H3.75a.75.75 0 01-.74-.65l-.01-.1c0-.38.28-.7.65-.74l.1-.01h4.5-4.5zm14.28-9.03c.27.27.3.68.07.98l-.07.08L13.06 8h3.19c.38 0 .7.28.74.65l.01.1c0 .38-.28.7-.65.74l-.1.01h-5a.75.75 0 01-.74-.65l-.01-.1v-5a.75.75 0 011.5-.1v3.29l4.97-4.97c.3-.3.77-.3 1.06 0z"></path></svg>`,
	4,
)

function ArrowMinimizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.75 1.5c.41 0 .75.34.75.75v2.69l.72-.72a.75.75 0 111.06 1.06l-2 2c-.3.3-.77.3-1.06 0l-2-2a.75.75 0 011.06-1.06l.72.72V2.25c0-.41.34-.75.75-.75zM3.5 9.75c0-.41.34-.75.75-.75h11a.75.75 0 010 1.5h-11a.75.75 0 01-.75-.75zm8.78 4.47l-2-2a.75.75 0 00-1.06 0l-2 2a.75.75 0 101.06 1.06l.72-.72v2.69a.75.75 0 001.5 0v-2.69l.72.72a.75.75 0 101.06-1.06z"></path></svg>`,
	4,
)

function ArrowMinimizeVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.53 2.22a.75.75 0 00-1.06 0L7.22 4.47a.75.75 0 001.06 1.06l.97-.97v2.69a.75.75 0 001.5 0V4.56l.97.97a.75.75 0 101.06-1.06l-2.25-2.25zM2.22 9.47c-.3.3-.3.77 0 1.06l2.25 2.25a.75.75 0 001.06-1.06l-.97-.97h2.69a.75.75 0 000-1.5H4.56l.97-.97a.75.75 0 00-1.06-1.06L2.22 9.47zm8.31 8.31l2.25-2.25a.75.75 0 10-1.06-1.06l-.97.97v-2.69a.75.75 0 00-1.5 0v2.69l-.97-.97a.75.75 0 00-1.06 1.06l2.25 2.25c.3.3.77.3 1.06 0zm5-10.56l2.25 2.25c.3.3.3.77 0 1.06l-2.25 2.25a.75.75 0 11-1.06-1.06l.97-.97h-2.69a.75.75 0 010-1.5h2.69l-.97-.97a.75.75 0 011.06-1.06z"></path></svg>`,
	4,
)

function ArrowMoveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.03 3.72c.3.3.3.77 0 1.06l-2.5 2.5c-.3.3-.77.3-1.06 0l-2.5-2.5a.75.75 0 011.06-1.06l1.22 1.22V1.75a.75.75 0 011.5 0v3.19l1.22-1.22c.3-.3.77-.3 1.06 0zM3.72 6.97c.3-.3.77-.3 1.06 0l2.5 2.5c.3.3.3.77 0 1.06l-2.5 2.5a.75.75 0 01-1.06-1.06l1.22-1.22H1.75a.75.75 0 010-1.5h3.19L3.72 8.03a.75.75 0 010-1.06zm11.5 0a.75.75 0 111.06 1.06l-1.22 1.22h3.19a.75.75 0 010 1.5h-3.19l1.22 1.22a.75.75 0 11-1.06 1.06l-2.5-2.5a.75.75 0 010-1.06l2.5-2.5zm-2.19 9.31c.3-.3.3-.77 0-1.06l-2.5-2.5a.75.75 0 00-1.06 0l-2.5 2.5a.75.75 0 101.06 1.06l1.22-1.22v3.19a.75.75 0 001.5 0v-3.19l1.22 1.22c.3.3.77.3 1.06 0z"></path></svg>`,
	4,
)

function ArrowMoveInwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.75 4.75c.38 0 .7.28.74.65l.01.1v9a.75.75 0 01-1.5.1V5.5c0-.41.34-.75.75-.75zm-8.28.22a.75.75 0 01.98-.07l.08.07 4.5 4.5c.27.27.3.68.07.98l-.07.08-4.5 4.5a.75.75 0 01-1.13-.98l.07-.08L9.44 10 5.47 6.03a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function ArrowNextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.33 2c.96-.1 1.77.71 1.66 1.67l-1.08 9.7a1.5 1.5 0 01-2.55.9L13.3 13.2l-4.36 4.36a1.5 1.5 0 01-2.12 0l-4.37-4.37a1.5 1.5 0 010-2.12L6.8 6.7 5.74 5.64a1.5 1.5 0 01.89-2.55L16.33 2z"></path></svg>`,
	4,
)

function ArrowOutlineUpRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.25 2c.41 0 .75.34.75.75v2.5A2.75 2.75 0 0115.25 8h-3.8l1.36 1.5a.75.75 0 01-1.12 1L9.2 7.75a.75.75 0 010-1L11.7 4a.75.75 0 011.12 1l-1.36 1.5h3.8c.69 0 1.25-.56 1.25-1.25v-2.5c0-.41.34-.75.75-.75zM8.3 9.5a.75.75 0 10-1.1 1L8.55 12h-5.8a.75.75 0 000 1.5h5.8L7.2 15a.75.75 0 001.1 1l2.5-2.75a.75.75 0 000-1L8.3 9.5z"></path></svg>`,
	4,
)

function ArrowParagraphIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.75c-.38 0-.7.28-.74.65l-.01.1v9a.75.75 0 001.5.1V5.5A.75.75 0 006 4.75zm8.28.22a.75.75 0 00-.98-.07l-.08.07-4.5 4.5a.75.75 0 00-.07.98l.07.08 4.5 4.5a.75.75 0 001.13-.98l-.07-.08L10.31 10l3.97-3.97c.3-.3.3-.77 0-1.06z"></path></svg>`,
	4,
)

function ArrowPreviousIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.14 6.5h-2.39a.75.75 0 100 1.5h4.4c.47 0 .85-.38.85-.85v-4.4a.75.75 0 00-1.5 0V5.7l-3.06-2.66a5.25 5.25 0 00-6.88 7.92l8.17 7.1a.75.75 0 10.98-1.13l-8.17-7.1a3.75 3.75 0 114.92-5.66l2.68 2.33z"></path></svg>`,
	4,
)

function ArrowRedoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.75 6.01c.18 0 .34.06.47.17a5 5 0 01-3 8.82H8.56l1.22 1.22c.27.27.3.68.07.98l-.07.08a.75.75 0 01-.98.07l-.08-.07-2.5-2.5a.75.75 0 01-.07-.98l.07-.08 2.5-2.5a.75.75 0 011.13.98l-.07.08-1.22 1.22H13a3.5 3.5 0 003.5-3.3V10a3.5 3.5 0 00-1.26-2.69.75.75 0 01.5-1.3zm-5.53-3.29a.75.75 0 01.98-.07l.08.07 2.5 2.5.07.08c.2.26.2.62.01.89l-.08.09-2.5 2.5-.08.07c-.26.2-.62.2-.89.01l-.09-.08-.07-.08a.75.75 0 01-.01-.89l.08-.09 1.22-1.22H7a3.5 3.5 0 00-3.5 3.3v.2c0 1.08.49 2.05 1.26 2.7.15.13.24.32.24.54a.75.75 0 01-1.25.56A5 5 0 016.78 5h4.66l-1.22-1.22-.07-.08a.75.75 0 01.07-.98z"></path></svg>`,
	4,
)

function ArrowRepeatAllIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.22 2.22a.75.75 0 01.98-.07l.08.07 14.5 14.5.07.08a.75.75 0 01-1.05 1.05l-.08-.07-2.86-2.85c-.18.03-.37.05-.57.06L13 15H8.56l1.22 1.22c.27.27.3.68.07.98l-.07.08a.75.75 0 01-.98.07l-.08-.07-2.5-2.5a.75.75 0 01-.07-.98l.07-.08 2.5-2.5a.75.75 0 011.13.98l-.07.08-1.22 1.22h3.88L5.69 6.75A3.5 3.5 0 003.5 9.81V10c0 1.08.49 2.05 1.26 2.7.15.13.24.32.24.54a.75.75 0 01-1.25.56 4.98 4.98 0 01.82-8.17L2.22 3.28l-.07-.08a.75.75 0 01.07-.98zm13.53 3.79c.18 0 .34.06.47.17a4.98 4.98 0 01.03 7.62l-1.06-1.07a3.5 3.5 0 00.05-5.42.75.75 0 01.5-1.3zm-5.53-3.3a.75.75 0 01.98-.06l.08.07 2.5 2.5.07.08c.2.26.2.62.01.89l-.08.09-2.5 2.5-.02.02-1.06-1.06.02-.02 1.22-1.22H8.95L7.45 5h3.99l-1.22-1.22-.07-.08a.75.75 0 01.07-.98z"></path></svg>`,
	4,
)

function ArrowRepeatAllOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.27 3.98c.27.26.3.68.08.97l-.08.09L8.31 8H10c4.2 0 7.62 3.34 7.75 7.5v.25a.75.75 0 01-1.5 0 6.25 6.25 0 00-6.02-6.25H8.3l2.96 2.96a.75.75 0 01-.97 1.14l-.09-.08-4.24-4.24a.75.75 0 01-.07-.98l.07-.08 4.24-4.24c.3-.3.77-.3 1.06 0zm-9.3 4.24l4.24-4.24a.75.75 0 011.14.98l-.08.08-3.7 3.71 3.7 3.72a.75.75 0 01-.97 1.13l-.09-.07-4.24-4.25a.75.75 0 01-.07-.97l.07-.09 4.24-4.24-4.24 4.24z"></path></svg>`,
	4,
)

function ArrowReplyAllIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.31 10.5l2.96-2.96A.75.75 0 006.3 6.4l-.09.07-4.24 4.25a.75.75 0 00-.07.97l.07.09 4.24 4.24a.75.75 0 001.14-.98l-.08-.08L4.31 12H10c4.2 0 7.62-3.34 7.75-7.5v-.25a.75.75 0 00-1.5 0 6.25 6.25 0 01-6.02 6.24H4.3l2.96-2.95-2.96 2.96z"></path></svg>`,
	4,
)

function ArrowReplyDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.31 9.5l2.96 2.96a.75.75 0 01-.97 1.14l-.09-.08-4.24-4.24a.75.75 0 01-.07-.98l.07-.08 4.24-4.24a.75.75 0 011.14.97l-.08.09L4.31 8H10c4.2 0 7.62 3.34 7.75 7.5v.25a.75.75 0 01-1.5 0 6.25 6.25 0 00-6.02-6.25H4.3l2.96 2.96L4.31 9.5z"></path></svg>`,
	4,
)

function ArrowReplyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.03 2.47c.3.3.3.77 0 1.06L4.81 4.75H11A6.25 6.25 0 114.75 11a.75.75 0 011.5 0A4.75 4.75 0 1011 6.25H4.81l1.22 1.22a.75.75 0 01-1.06 1.06l-2.5-2.5a.75.75 0 010-1.06l2.5-2.5c.3-.3.77-.3 1.06 0z"></path></svg>`,
	4,
)

function ArrowResetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.27 3.2a.75.75 0 00-1.04 1.1l5.24 4.95H2.75a.75.75 0 000 1.5h12.73l-5.25 4.96a.75.75 0 101.04 1.09l6.41-6.07a1 1 0 000-1.46l-6.41-6.06z"></path></svg>`,
	4,
)

function ArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3.5A6.5 6.5 0 003.5 10 .75.75 0 012 10a8 8 0 1112.66 6.5h1.09a.75.75 0 010 1.5h-3a.75.75 0 01-.75-.75v-3a.75.75 0 011.5 0v1.23A6.5 6.5 0 0010 3.5zm2.5 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM11 10a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function ArrowRotateClockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3.5a6.5 6.5 0 016.5 6.5.75.75 0 001.5 0 8 8 0 10-12.66 6.5H4.25a.75.75 0 000 1.5h3c.41 0 .75-.34.75-.75v-3a.75.75 0 00-1.5 0v1.23A6.5 6.5 0 0110 3.5zM7.5 10a2.5 2.5 0 105 0 2.5 2.5 0 00-5 0zM9 10a1 1 0 112 0 1 1 0 01-2 0z"></path></svg>`,
	4,
)

function ArrowRotateCounterclockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.78 2.22a.75.75 0 10-1.06 1.06L15.44 5h-4.19A2.75 2.75 0 008.5 7.75v5.5c0 .64-.48 1.17-1.1 1.24a2.75 2.75 0 100 1.5 2.75 2.75 0 002.6-2.74v-5.5c0-.69.56-1.25 1.25-1.25h4.19l-1.72 1.72a.75.75 0 001.06 1.06l3-3c.3-.3.3-.77 0-1.06l-3-3z"></path></svg>`,
	4,
)

function ArrowRoutingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.78 2.22a.75.75 0 10-1.06 1.06L15.44 5h-4.19A2.75 2.75 0 008.5 7.75v5.5c0 .64-.48 1.17-1.1 1.24a2.75 2.75 0 100 1.5 2.75 2.75 0 002.6-2.74v-5.5c0-.69.56-1.25 1.25-1.25h4.19l-1.72 1.72a.75.75 0 001.06 1.06l3-3c.3-.3.3-.77 0-1.06l-3-3zM11 12.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5v4a.5.5 0 01-.5.5h-5a.5.5 0 01-.5-.5v-4zm8 2a.5.5 0 00-1 0V17a1 1 0 01-1 1h-3.5a.5.5 0 000 1H17a2 2 0 002-2v-2.5z"></path></svg>`,
	4,
)

function ArrowRoutingRectangleMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.68 5.03c.2.08.32.26.32.47V8h6V5.5a.5.5 0 01.87-.33l4 4.5a.5.5 0 010 .66l-4 4.5a.5.5 0 01-.87-.33V12H7v2.5a.5.5 0 01-.87.33l-4-4.5a.5.5 0 010-.66l4-4.5a.5.5 0 01.55-.14z"></path></svg>`,
	4,
)

function ArrowsBidirectionalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.75 17c.23 0 .45-.1.59-.28l2.94-2.94a.75.75 0 00-1.06-1.06l-1.72 1.71V3.75a.75.75 0 00-1.5 0v10.7L7.28 12.7a.75.75 0 10-1.06 1.06l3 3.01c.15.15.34.22.53.22z"></path></svg>`,
	4,
)

function ArrowSortDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 17c.23 0 .45-.1.59-.28l2.94-2.94a.75.75 0 00-1.06-1.06L7.5 14.43V3.75a.75.75 0 00-1.5 0v10.7L4.28 12.7a.75.75 0 10-1.06 1.06l3 3.01c.15.15.34.22.53.22zm3-13a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 3a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zm0 3a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5h-1.5z"></path></svg>`,
	4,
)

function ArrowSortDownLinesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.84 16.72a.76.76 0 01-.59.28.73.73 0 01-.53-.22l-3-3a.75.75 0 011.06-1.07l1.72 1.73V3.75a.75.75 0 011.5 0v10.68l1.72-1.71a.75.75 0 111.06 1.06l-2.94 2.94zM6.34 3.28A.76.76 0 005.75 3c-.2 0-.38.07-.53.22l-3 3A.75.75 0 003.28 7.3L5 5.56v10.69a.75.75 0 001.5 0V5.57l1.72 1.71a.75.75 0 101.06-1.06L6.34 3.28z"></path></svg>`,
	4,
)

function ArrowSortIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.75 3c.23 0 .45.1.59.28l2.94 2.94a.75.75 0 01-1.06 1.06L10.5 5.57v10.68a.75.75 0 01-1.5 0V5.55L7.28 7.3a.75.75 0 11-1.06-1.06l3-3.01A.73.73 0 019.75 3z"></path></svg>`,
	4,
)

function ArrowSortUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3c.41 0 .75.34.75.75V8H13a2 2 0 012 2v4.44l1.22-1.22a.75.75 0 111.06 1.06l-2.5 2.5c-.3.3-.77.3-1.06 0l-2.5-2.5a.75.75 0 111.06-1.06l1.22 1.22V10a.5.5 0 00-.5-.5H7a.5.5 0 00-.5.5v4.44l1.22-1.22a.75.75 0 011.06 1.06l-2.5 2.5a.75.75 0 01-1.06 0l-2.5-2.5a.75.75 0 111.06-1.06L5 14.44V10c0-1.1.9-2 2-2h2.25V3.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function ArrowSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm5.5 3.5v5.8l2.65-2.65a.5.5 0 01.7.7l-3.5 3.5a.5.5 0 01-.7 0l-3.5-3.5a.5.5 0 01.7-.7l2.65 2.64V6.5a.5.5 0 011 0z"></path></svg>`,
	4,
)

function ArrowSquareDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.85 3.15c.2.2.2.5 0 .7L4.71 7H10a8 8 0 016.94 4.04.5.5 0 11-.88.5A7 7 0 0010 8H4.7l3.15 3.15a.5.5 0 01-.7.7L3.15 7.87a.5.5 0 01-.01-.72l4-4c.19-.2.5-.2.7 0zM12 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg>`,
	4,
)

function ArrowStepBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 16a2 2 0 11-4 0 2 2 0 014 0zM10 2c.28 0 .5.22.5.5v7.8l3.15-3.15a.5.5 0 01.7.7l-4 4a.5.5 0 01-.7 0l-4-4a.5.5 0 11.7-.7l3.15 3.14V2.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function ArrowStepInIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 12a2 2 0 110-4 2 2 0 010 4zm14-2a.5.5 0 01-.5.5H9.7l3.15 3.15a.5.5 0 01-.7.7l-4-4a.5.5 0 010-.7l4-4a.5.5 0 01.7.7L9.71 9.5h7.79c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function ArrowStepInLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 8a2 2 0 110 4 2 2 0 010-4zM2 10c0-.28.22-.5.5-.5h7.8L7.14 6.35a.5.5 0 11.7-.7l4 4c.2.2.2.5 0 .7l-4 4a.5.5 0 01-.7-.7l3.14-3.15H2.5A.5.5 0 012 10z"></path></svg>`,
	4,
)

function ArrowStepInRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 16a2 2 0 11-4 0 2 2 0 014 0zm-2-4a.5.5 0 00.5-.5V3.7l3.15 3.15a.5.5 0 00.7-.7l-4-4a.5.5 0 00-.7 0l-4 4a.5.5 0 10.7.7L9.5 3.71v7.79c0 .28.22.5.5.5z"></path></svg>`,
	4,
)

function ArrowStepOutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.15 3.15a.5.5 0 000 .7L15.29 7H10a8 8 0 00-6.94 4.04.5.5 0 10.88.5A7 7 0 0110 8h5.3l-3.15 3.15a.5.5 0 10.7.7l3.99-3.98a.5.5 0 00.01-.72l-4-4a.5.5 0 00-.7 0zM8 15a2 2 0 104 0 2 2 0 00-4 0z"></path></svg>`,
	4,
)

function ArrowStepOverIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.78 3.22a.75.75 0 10-1.06 1.06L13.44 6H4.75a.75.75 0 000 1.5h8.69l-1.72 1.72a.75.75 0 101.06 1.06l3-3c.3-.3.3-.77 0-1.06l-3-3zm-4.5 7.56a.75.75 0 10-1.06-1.06l-3 3a.75.75 0 000 1.06l3 3a.75.75 0 001.06-1.06L6.56 14h8.69a.75.75 0 000-1.5H6.56l1.72-1.72z"></path></svg>`,
	4,
)

function ArrowSwapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.41 3.64a.5.5 0 000-.71L9.3.8a.5.5 0 00-.7.7l1 1a7.5 7.5 0 00-4.08 13.5.5.5 0 00.6-.8A6.5 6.5 0 0111.4 3.66l.01-.02zM8.6 16.36l.01-.01c.41.09.83.14 1.27.15h-.01.07A6.5 6.5 0 0013.9 4.8a.5.5 0 11.6-.8 7.5 7.5 0 01-4.07 13.5l1 .98a.5.5 0 11-.71.71l-2.12-2.12a.5.5 0 010-.7zM15 10a5 5 0 11-10 0 5 5 0 0110 0zm-2.65-1.85a.5.5 0 00-.7 0L9 10.79 7.85 9.65a.5.5 0 10-.7.7l1.5 1.5c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function ArrowSyncCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 110-16 8 8 0 010 16zm3.5-8a.5.5 0 00.5-.5v-2a.5.5 0 00-1 0v.7a3.5 3.5 0 00-5.6-.53.5.5 0 10.74.66 2.5 2.5 0 014.15.67h-.79a.5.5 0 100 1h2zm-7.5.5v2a.5.5 0 001 0v-.7a3.5 3.5 0 005.6.53.5.5 0 00-.74-.66A2.5 2.5 0 017.71 11h.79a.5.5 0 000-1h-2a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function ArrowSyncCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.41 3.64a.5.5 0 000-.71L9.3.8a.5.5 0 00-.7.7l1 1a7.5 7.5 0 00-4.08 13.5.5.5 0 00.6-.8 6.5 6.5 0 015.28-11.55l.02-.02zM8.6 16.36l.02-.02a6.48 6.48 0 005.99-1.74 6.5 6.5 0 00-.7-9.8.5.5 0 11.6-.8 7.5 7.5 0 01-4.07 13.5l.98.98a.5.5 0 11-.7.71l-2.12-2.12a.5.5 0 010-.7zM15 10a5 5 0 11-10 0 5 5 0 0110 0zm-3.15-1.15a.5.5 0 00-.7-.7L10 9.29 8.85 8.15a.5.5 0 00-.7.7L9.29 10l-1.14 1.15a.5.5 0 10.7.7L10 10.71l1.15 1.14a.5.5 0 00.7-.7L10.71 10l1.14-1.15z"></path></svg>`,
	4,
)

function ArrowSyncDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.89 3.75a6.25 6.25 0 00-3.63 11.26.75.75 0 01-.9 1.2 7.75 7.75 0 014-13.93l-.6-.59A.75.75 0 019.82.63l2.12 2.12c.3.3.3.77 0 1.06L9.82 5.93a.75.75 0 01-1.06-1.06L9.9 3.75zm.22 12.5a6.25 6.25 0 003.63-11.26.75.75 0 01.9-1.2 7.75 7.75 0 01-4 13.93l.6.59a.75.75 0 11-1.06 1.06l-2.12-2.12a.75.75 0 010-1.06l2.12-2.13a.75.75 0 111.06 1.07l-1.13 1.12z"></path></svg>`,
	4,
)

function ArrowSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.89 3.75a6.24 6.24 0 00-3.12.9L5.68 3.56a7.73 7.73 0 013.67-1.28l-.59-.59A.75.75 0 019.82.63l2.12 2.12c.3.3.3.77 0 1.06L9.82 5.93a.75.75 0 01-1.06-1.06L9.9 3.75zM4.18 4.88a7.75 7.75 0 001.18 11.33.75.75 0 10.9-1.2 6.25 6.25 0 01-1.02-9.06l8.81 8.8a6.23 6.23 0 01-3.94 1.5l1.13-1.12a.75.75 0 00-1.06-1.07L8.06 16.2c-.3.29-.3.76 0 1.06l2.12 2.12a.75.75 0 101.06-1.06l-.59-.59a7.72 7.72 0 004.47-1.9l2.03 2.03a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7l2.03 2.03zm11.17 8.35l1.09 1.09a7.75 7.75 0 00-1.8-10.53.75.75 0 00-.9 1.2 6.25 6.25 0 011.6 8.24z"></path></svg>`,
	4,
)

function ArrowSyncOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ty = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.75 3a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-2.8l-4.5 4.1a.75.75 0 01-1.03-.02L9 8.06l-4.72 4.72a.75.75 0 01-1.06-1.06l5.25-5.25a.75.75 0 011.06 0l1.5 1.5 3.79-3.47h-2.57a.75.75 0 110-1.5h4.5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-1.62-1.83a.5.5 0 00-.7-.05l-3.15 2.7-1.18-1.17a.5.5 0 00-.7.7l1.5 1.5c.18.19.48.2.68.03l3.5-3a.5.5 0 00.05-.7z"></path></svg>`,
	4,
)

function ArrowTrendingCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ty.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.94 14.54a.75.75 0 01-.7.46h-5.49a.75.75 0 010-1.5h3.69L10.5 8.56l-1.97 1.97c-.3.3-.77.3-1.06 0L2.22 5.28a.75.75 0 011.06-1.06L8 8.94l1.97-1.97c.3-.3.77-.3 1.06 0l5.47 5.47V8.75a.75.75 0 011.5 0v5.5c0 .1-.02.2-.06.29z"></path></svg>`,
	4,
)

function ArrowTrendingDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.94 5.46a.75.75 0 00-.7-.46h-5.49a.75.75 0 000 1.5h3.69l-4.94 4.94-1.97-1.97a.75.75 0 00-1.06 0l-5.25 5.25a.75.75 0 101.06 1.06L8 11.06l1.97 1.97c.3.3.77.3 1.06 0l5.47-5.47v3.69a.75.75 0 001.5 0v-5.5c0-.1-.02-.2-.06-.29z"></path></svg>`,
	4,
)

function ArrowTrendingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 2.75c0-.41.34-.75.75-.75h2.5c.41 0 .75.34.75.75v2.5a.75.75 0 01-1.5 0v-.69l-4.47 4.47c-.3.3-.77.3-1.06 0L8.5 6.56l-4.22 4.22a.75.75 0 11-1.06-1.06l4.75-4.75c.3-.3.77-.3 1.06 0l2.47 2.47 3.94-3.94h-.69a.75.75 0 01-.75-.75zM3.75 14c.41 0 .75.34.75.75v2.5a.75.75 0 01-1.5 0v-2.5c0-.41.34-.75.75-.75zm4.75-2.25a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zM11.75 13c.41 0 .75.34.75.75v3.5a.75.75 0 01-1.5 0v-3.5c0-.41.34-.75.75-.75zm4.75-3.25a.75.75 0 00-1.5 0v7.5a.75.75 0 001.5 0v-7.5z"></path></svg>`,
	4,
)

function ArrowTrendingLinesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.75 3a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V5.56l-4.22 4.22c-.3.3-.77.3-1.06 0L9 8.06l-4.72 4.72a.75.75 0 01-1.06-1.06l5.25-5.25c.3-.3.77-.3 1.06 0l1.72 1.72 3.69-3.69h-2.69a.75.75 0 010-1.5h4.5zm-4.68 8.44a2 2 0 01-1.44 2.48l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function ArrowTrendingSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.75 3a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V5.56l-4.22 4.22c-.3.3-.77.3-1.06 0L9 8.06l-4.72 4.72a.75.75 0 01-1.06-1.06l5.25-5.25c.3-.3.77-.3 1.06 0l1.72 1.72 3.69-3.69h-2.69a.75.75 0 010-1.5h4.5zM10 13c0-1.1.9-2 2-2h5a2 2 0 012 2v4a2 2 0 01-2 2h-5a2 2 0 01-2-2v-4zm6.5 3h-4a.5.5 0 100 1h4a.5.5 0 100-1zm-4-3a.5.5 0 100 1h4a.5.5 0 100-1h-4z"></path></svg>`,
	4,
)

function ArrowTrendingTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ts = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.75 3a.75.75 0 01.75.75v4.5c0 .26-.14.5-.34.63a1.38 1.38 0 00-1.15-.9H16V5.56l-4.22 4.22c-.3.3-.77.3-1.06 0L9 8.06l-4.72 4.72a.75.75 0 01-1.06-1.06l5.25-5.25c.3-.3.77-.3 1.06 0l1.72 1.72 3.69-3.69h-2.69a.75.75 0 010-1.5h4.5zm-.65 6.71c.26-.26.16-.7-.2-.74a3.5 3.5 0 00-3.71 4.66l-2.72 2.7a1.5 1.5 0 002.13 2.13l2.7-2.71a3.5 3.5 0 004.66-3.7c-.04-.37-.48-.48-.74-.22l-.97.97a1.5 1.5 0 11-2.12-2.12l.97-.97z"></path></svg>`,
	4,
)

function ArrowTrendingWrenchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ts.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.78 2.22a.75.75 0 10-1.06 1.06L15.44 6H9a3 3 0 00-3 3v6.44l-2.72-2.72a.75.75 0 00-1.06 1.06l4 4c.3.3.77.3 1.06 0l4-4a.75.75 0 10-1.06-1.06L7.5 15.44V9c0-.83.67-1.5 1.5-1.5h6.44l-2.72 2.72a.75.75 0 101.06 1.06l4-4c.3-.3.3-.77 0-1.06l-4-4z"></path></svg>`,
	4,
)

function ArrowTurnBidirectionalDownRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.72 3.22c.3-.3.77-.3 1.06 0l4 4c.3.3.3.77 0 1.06l-4 4a.75.75 0 11-1.06-1.06l2.72-2.72H7c-.83 0-1.5.67-1.5 1.5v6.25a.75.75 0 01-1.5 0V10a3 3 0 013-3h6.44l-2.72-2.72a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function ArrowTurnRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.86 6.5h2.39a.75.75 0 010 1.5h-4.4A.85.85 0 014 7.15v-4.4a.75.75 0 011.5 0V5.7l3.06-2.66a5.25 5.25 0 016.89 7.92l-8.17 7.1a.75.75 0 11-.99-1.13l8.17-7.1a3.75 3.75 0 10-4.92-5.66L6.86 6.5z"></path></svg>`,
	4,
)

function ArrowUndoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$to = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.2 8.73a.75.75 0 001.1 1.04l4.95-5.24v12.72a.75.75 0 001.5 0V4.52l4.95 5.25a.75.75 0 001.1-1.04l-6.08-6.41a1 1 0 00-1.45 0L3.2 8.73z"></path></svg>`,
	4,
)

function ArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$to.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3.75a.75.75 0 00-.75-.75h-7.5a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0V5.56l11.22 11.22a.75.75 0 001.06-1.06L5.56 4.5h5.69c.41 0 .75-.34.75-.75z"></path></svg>`,
	4,
)

function ArrowUpLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2a.75.75 0 000 1.5H15A.75.75 0 0015 2H4.5zm6 15.35a.75.75 0 01-1.5-.1V7.05l-2.97 2.98-.08.07a.75.75 0 01-.98-1.14l4.29-4.28a.73.73 0 01.26-.15l.08-.02.15-.02h.06l.07.01.12.03.09.04.04.02.09.06.07.06 4.24 4.26.07.08c.22.3.2.71-.07.98l-.08.07c-.3.22-.72.2-.98-.07L10.5 7.05V17.35z"></path></svg>`,
	4,
)

function ArrowUploadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 3.75c0-.41.34-.75.75-.75h7.5c.41 0 .75.34.75.75v7.5a.75.75 0 11-1.5 0V5.56L4.28 16.78a.75.75 0 01-1.06-1.06L14.44 4.5h-5.7A.75.75 0 018 3.75z"></path></svg>`,
	4,
)

function ArrowUpRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.75 3.5a3.25 3.25 0 010 6.5h-7.5a1.75 1.75 0 100 3.5h9.19l-.22-.22a.75.75 0 111.06-1.06l1.5 1.5c.3.3.3.77 0 1.06l-1.5 1.5a.75.75 0 11-1.06-1.06l.22-.22H6.25a3.25 3.25 0 010-6.5h7.5a1.75 1.75 0 100-3.5h-10a.75.75 0 010-1.5h10z"></path></svg>`,
	4,
)

function ArrowWrapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l.98.98A.75.75 0 003.75 5h.54l3.5 3.5H6.25a3.25 3.25 0 100 6.5h8.04l.71.7a.75.75 0 00.8.8l1.35 1.35a.5.5 0 00.7-.7l-15-15zM12.8 13.5H6.25a1.75 1.75 0 110-3.5h3.04l3.5 3.5z"></path><path d="M13.75 8.5h-3.13l1.5 1.5h1.63a3.25 3.25 0 000-6.5H5.62L7.12 5h6.63a1.75 1.75 0 110 3.5z"></path><path d="M17.34 15.22l-2.33-2.33a.75.75 0 011.27-.67l1.5 1.5c.3.3.3.77 0 1.06l-.44.44z"></path></svg>`,
	8,
)

function ArrowWrapOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ti = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.28 10.6l5.3-5.3A2.75 2.75 0 0114.65 9c.56.02 1.1.12 1.6.29a4.25 4.25 0 00-6.73-5.05l-5.3 5.3a.75.75 0 001.06 1.07zm2.83 4.96l.9-.9c.01.63.13 1.22.34 1.78l-.18.18a2.75 2.75 0 01-3.89-3.89l5.66-5.66A.75.75 0 1112 8.13L6.34 13.8a1.25 1.25 0 001.77 1.77zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function AttachArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ti.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$th = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.28 10.6l5.3-5.3a2.75 2.75 0 113.9 3.9L8.1 15.55a1.25 1.25 0 11-1.77-1.77L12 8.13a.75.75 0 00-1.06-1.06l-5.66 5.66a2.75 2.75 0 003.89 3.89l6.36-6.36a4.25 4.25 0 00-6-6.02l-5.31 5.3a.75.75 0 001.06 1.07z"></path></svg>`,
	4,
)

function AttachIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$th.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 3.5c-1.24 0-2.25 1-2.25 2.25v7.5a.75.75 0 01-1.5 0v-7.5a3.75 3.75 0 017.5-.25v10.25a2.25 2.25 0 01-4.5 0V5.77a.75.75 0 011.5 0v9.98a.75.75 0 001.5 0v-10C9 4.51 8 3.5 6.75 3.5zM12 8.25c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm.75-3.75a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM12 11.25c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5h2a.75.75 0 000-1.5h-2z"></path></svg>`,
	4,
)

function AttachTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.17 14.75L8.03 4.16a2.25 2.25 0 013.94 0L14.1 8h3.15a.75.75 0 010 1.5h-2.26a4.25 4.25 0 11-2.89-1.49l.15-.01h.03l-1.84-3.25a.5.5 0 00-.87 0L3.47 15.5l-.06.12a.75.75 0 11-1.31-.73l.07-.13zM9 12.25a2.75 2.75 0 105.5 0 2.75 2.75 0 00-5.5 0z"></path></svg>`,
	4,
)

function AutocorrectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$te = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.25 2a.75.75 0 000 1.5h11a.75.75 0 000-1.5h-11zm0 14.5a.75.75 0 000 1.5h11a.75.75 0 000-1.5h-11zm6.03-1.72l2-2a.75.75 0 10-1.06-1.06l-.72.72V7.56l.72.72a.75.75 0 101.06-1.06l-2-2a.75.75 0 00-1.06 0l-2 2a.75.75 0 001.06 1.06L9 7.56v4.88l-.72-.72a.75.75 0 00-1.06 1.06l2 2c.3.3.77.3 1.06 0z"></path></svg>`,
	4,
)

function AutoFitHeightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$te.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$td = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.25a.75.75 0 00-1.5 0v11a.75.75 0 001.5 0v-11zm-14.5 0a.75.75 0 00-1.5 0v11a.75.75 0 001.5 0v-11zm1.72 6.03l2 2a.75.75 0 001.06-1.06l-.72-.72h4.88l-.72.72a.75.75 0 101.06 1.06l2-2c.3-.3.3-.77 0-1.06l-2-2a.75.75 0 10-1.06 1.06l.72.72H7.56l.72-.72a.75.75 0 00-1.06-1.06l-2 2c-.3.3-.3.77 0 1.06z"></path></svg>`,
	4,
)

function AutoFitWidthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$td.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.81 3.7a.75.75 0 01.69-.45h11a.75.75 0 010 1.5H6.26l4.15 4.3c.26.28.28.72.03 1l-4.34 5.2h9.4a.75.75 0 010 1.5h-11a.75.75 0 01-.58-1.23l4.94-5.9-4.9-5.1a.75.75 0 01-.15-.81z"></path></svg>`,
	4,
)

function AutosumIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$tb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 4.5a2.5 2.5 0 015 0v.04a6 6 0 013.45 4.65 5.5 5.5 0 00-3.07.05c.08-.16.12-.35.12-.54 0-.94-.76-1.7-1.7-1.7H8.7C7.76 7 7 7.76 7 8.7c0 .72.58 1.3 1.3 1.3h3.04a5.53 5.53 0 00-1.74 2H4v-2a6 6 0 013.5-5.46V4.5zm3.97-.32a1.5 1.5 0 00-2.94 0 6.01 6.01 0 012.94 0zM9 14.5c0-.52.07-1.02.2-1.5H8v1.5a.5.5 0 01-1 0V13H4v2a3 3 0 003 3h3.26A5.48 5.48 0 019 14.5zM8.7 8a.7.7 0 00-.7.7c0 .17.13.3.3.3h3.4a.3.3 0 00.3-.3.7.7 0 00-.7-.7H8.7zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function BackpackAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$tb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ta = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 8.7c0-.39.31-.7.7-.7h2.6c.39 0 .7.31.7.7a.3.3 0 01-.3.3H8.3a.3.3 0 01-.3-.3zM10 2a2.5 2.5 0 00-2.5 2.5v.04A6 6 0 004 10v2h12v-2a6 6 0 00-3.5-5.46V4.5A2.5 2.5 0 0010 2zm0 2c.5 0 1 .06 1.47.18a1.5 1.5 0 00-2.94 0C9 4.06 9.5 4 10 4zM8.7 7h2.6c.94 0 1.7.76 1.7 1.7 0 .72-.58 1.3-1.3 1.3H8.3A1.3 1.3 0 017 8.7C7 7.76 7.76 7 8.7 7zM7 14.5V13H4v2a3 3 0 003 3h6a3 3 0 003-3v-2H8v1.5a.5.5 0 01-1 0z"></path></svg>`,
	4,
)

function BackpackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ta.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.28 4a2.5 2.5 0 00-1.7.66L2.8 8.16a2.5 2.5 0 000 3.68l3.79 3.5a2.5 2.5 0 001.7.66h7.21a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 4H8.28zm.87 3.15c.2-.2.5-.2.7 0L12 9.29l2.15-2.14a.5.5 0 01.7.7L12.71 10l2.14 2.15a.5.5 0 01-.7.7L12 10.71l-2.15 2.14a.5.5 0 01-.7-.7L11.29 10 9.15 7.85a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function BackspaceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 6a2 2 0 100-4 2 2 0 000 4zm0 1a3 3 0 001-.17V15a2 2 0 01-2 2H5a2 2 0 01-2-2V5c0-1.1.9-2 2-2h8.17A3 3 0 0016 7z"></path></svg>`,
	4,
)

function BadgeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 7a5 5 0 0110 0c0 1.87-.66 3.6-1.6 4.86a5.06 5.06 0 01-2.9 2.1V14a1 1 0 001 1H14a2 2 0 012 2v.5a.5.5 0 01-1 0V17a1 1 0 00-1-1h-2.5a2 2 0 01-2-2v-.05a5.06 5.06 0 01-2.9-2.09C5.66 10.6 5 8.86 5 7zm5.57-3a.5.5 0 10-.14 1c.81.11 1.46.76 1.57 1.57a.5.5 0 001-.14A2.86 2.86 0 0010.56 4z"></path></svg>`,
	4,
)

function BalloonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.75A2.75 2.75 0 014.75 3h.75a.75.75 0 010 1.5h-.75c-.69 0-1.25.56-1.25 1.25v.75a.75.75 0 01-1.5 0v-.75zm11.75-2c0-.41.34-.75.75-.75h.75A2.75 2.75 0 0118 5.75v.75a.75.75 0 01-1.5 0v-.75c0-.69-.56-1.25-1.25-1.25h-.75a.75.75 0 01-.75-.75zm-11 9c.41 0 .75.34.75.75v.75c0 .69.56 1.25 1.25 1.25h.75a.75.75 0 010 1.5h-.75A2.75 2.75 0 012 14.25v-.75c0-.41.34-.75.75-.75zm14.5 0c.41 0 .75.34.75.75v.75A2.75 2.75 0 0115.25 17h-.75a.75.75 0 010-1.5h.75c.69 0 1.25-.56 1.25-1.25v-.75c0-.41.34-.75.75-.75zM5.5 6c.41 0 .75.34.75.75v6.5a.75.75 0 01-1.5 0v-6.5c0-.41.34-.75.75-.75zm3.75.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zM11.5 6c.41 0 .75.34.75.75v6.5a.75.75 0 01-1.5 0v-6.5c0-.41.34-.75.75-.75zm3.75.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z"></path></svg>`,
	4,
)

function BarcodeScannerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery0Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h8.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery10Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 5A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5A2.5 2.5 0 014.5 5h9zm-9 1.95a.5.5 0 00-.5.5v5a.5.5 0 101 0v-5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function Battery1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83h-.33zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h1.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h2.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery4Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h3.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery5Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h4.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery6Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h5.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery7Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h6.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery8Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.83 6.95a.84.84 0 00-.83.83v4.33c0 .46.37.84.83.84h7.33c.47 0 .84-.38.84-.84V7.78a.84.84 0 00-.84-.83H4.83zM2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5v-5z"></path></svg>`,
	4,
)

function Battery9Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.63 5h3.87A2.5 2.5 0 0116 7.37v.98h1.17a.83.83 0 01.82.73l.01.1v1.67a.83.83 0 01-.72.82H16v.84a2.5 2.5 0 01-2.35 2.5H7.12a.63.63 0 01-.62-.54v-3.84c0-.31.23-.57.54-.62H7.85c.6 0 1.09-.46 1.14-1.04l.01-.1V5.62c0-.32.24-.58.54-.62h3.96-3.88zM6.29 3.34h.09c.31 0 .57.23.62.53V5h.38c.34 0 .62.29.62.63v1.91C8 8.34 7.35 9 6.54 9h-.92v5.38c0 .31-.23.57-.54.61L5 15a.63.63 0 01-.62-.54V9h-.92C2.66 9 2 8.35 2 7.54v-1.9c0-.35.28-.63.63-.63H3V3.96c0-.31.24-.57.54-.61l.08-.01c.32 0 .58.23.62.54l.01.08v1.05h1.5V3.95c0-.32.24-.58.54-.62h.09-.09z"></path></svg>`,
	4,
)

function BatteryChargeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-2.7A5.5 5.5 0 002 9.26V7.5zm8 6a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L4.5 14.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function BatteryCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.59 5l3.91.01A2.5 2.5 0 0116 7.37v.98h1.17a.83.83 0 01.82.73l.01.1v1.67a.83.83 0 01-.72.82l-.11.01H16v.83a2.5 2.5 0 01-2.35 2.5h-.15L6 15c-.18 0-.5-.12-.5-.5s.3-.5.5-.5h.04C7.32 14 10 13.01 10 9.72c0-1.02-.45-2.68-.96-3.92a.58.58 0 01.47-.8h.08zm-2.42-.71C8.38 6.53 9 8.33 9 9.56c0 1.24-.58 2.28-1.14 2.77a.93.93 0 01-.15.1l-.1.05a.35.35 0 01-.46-.18.36.36 0 01-.02-.2l.02-.08c.47-1.19.7-2.36.68-3.5a.59.59 0 00-.59-.58.59.59 0 00-.57.56v.02c0 .29 0 .58-.04.88l-.05.37-.04.19-.05.26-.08.32-.03.12c-.13.48-.31.96-.53 1.44a5.55 5.55 0 01-3.04 2.86.58.58 0 01-.77-.32.6.6 0 01.32-.77 4.69 4.69 0 001.8-1.28c-1.29-.4-2.04-1.3-2.14-2.56-.12-1.42.41-2.39 1.76-3.47l.65-.5.29-.23a6.89 6.89 0 001.46-1.56c.23-.36.78-.37.99.02z"></path></svg>`,
	4,
)

function BatterySaverIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7.5A2.5 2.5 0 014.5 5h9A2.5 2.5 0 0116 7.5v.83h1.17a.83.83 0 01.83.84v1.67a.83.83 0 01-.83.83H16v.83a2.5 2.5 0 01-2.5 2.5h-2.26L8.29 9.1a2 2 0 00-3.58 0l-2.34 4.7A2.49 2.49 0 012 12.5v-5zm3.6 2.05l-3.5 7A1 1 0 003 18h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM7 11.5v3a.5.5 0 11-1 0v-3a.5.5 0 111 0zM6.5 17a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function BatteryWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.39 2.7a5.21 5.21 0 00-7.13 1.9l-.2.35a.5.5 0 00.19.68l3.83 2.21-2.1 3.68a5.94 5.94 0 00-5.32 2.73h.04a1.5 1.5 0 011.49 1.03c.35 1.05 1.58.98 1.9.07a1.5 1.5 0 012.83 0c.31.9 1.54.98 1.9-.07a1.5 1.5 0 011.51-1.03 6.32 6.32 0 00-3.31-2.52l1.93-3.39 3.47 2a.5.5 0 00.68-.18l.2-.34a5.21 5.21 0 00-1.91-7.12zM5.24 15.6a.5.5 0 00-.96.03c-.17.7-.5 1.08-.86 1.3-.38.23-.87.32-1.42.32a.5.5 0 000 1c.64 0 1.33-.1 1.94-.47.34-.2.64-.5.88-.87a2.96 2.96 0 004.68-.01 2.96 2.96 0 004.74-.06c.64.9 1.7 1.41 2.76 1.41a.5.5 0 100-1c-.98 0-1.96-.64-2.29-1.65a.5.5 0 00-.95 0 1.98 1.98 0 01-3.79.07.5.5 0 00-.94 0 1.98 1.98 0 01-3.8-.08z"></path></svg>`,
	4,
)

function BeachIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.25 3v4.75c0 .4-.1.81-.3 1.18l-.84 1.57h7.78l-.84-1.57a2.5 2.5 0 01-.3-1.18V3h.75a.5.5 0 000-1h-7a.5.5 0 000 1h.75zm7.17 8.5H3.58l-1.23 2.3A1.5 1.5 0 003.67 16h5.8c.16-.5.43-.96.8-1.33l2.51-2.5-.36-.67zm-1.44 3.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function BeakerEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.25 4v4.75c0 .4-.1.81-.3 1.18l-.84 1.57h7.78l-.84-1.57a2.5 2.5 0 01-.3-1.18V4h.75a.5.5 0 000-1h-7a.5.5 0 000 1h.75zm7.17 8.5H5.58l-1.23 2.3A1.5 1.5 0 005.67 17h8.66a1.5 1.5 0 001.32-2.2l-1.23-2.3z"></path></svg>`,
	4,
)

function BeakerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l5.1 5.1v.8c0 .4-.1.81-.3 1.18l-.84 1.57h4.68l1 1H5.58l-1.23 2.3A1.5 1.5 0 005.67 17h8.66c.55 0 1-.29 1.27-.7l1.55 1.55a.5.5 0 00.7-.7l-15-15zm4.4 2.98l6.37 6.37h.27l-.84-1.57a2.5 2.5 0 01-.3-1.18V4h.75a.5.5 0 000-1h-7a.5.5 0 000 1h.75v1.13z"></path></svg>`,
	4,
)

function BeakerOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 9a2.5 2.5 0 012.5 2.34v5.16a.5.5 0 01-1 .09V14H3v2.5a.5.5 0 01-1 .09V11.5A2.5 2.5 0 014.34 9H15.5zm-9-6h7A2.5 2.5 0 0116 5.34V8h-2v-.5a.5.5 0 00-.41-.5H11a.5.5 0 00-.5.41V8h-1v-.5a.5.5 0 00-.41-.5H6.5a.5.5 0 00-.5.41V8H4V5.5A2.5 2.5 0 016.34 3h.16z"></path></svg>`,
	4,
)

function BedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v8c1.4 0 2.26-.4 2.86-.96.62-.57.99-1.35 1.3-2.2l.28-.87.13-.41c.14-.41.29-.83.47-1.19s.41-.7.74-.96C9.1 6.14 9.52 6 10 6s.89.14 1.22.4c.33.26.56.6.74.97.18.36.33.78.47 1.19l.13.4c.09.3.18.58.29.87.3.86.67 1.64 1.29 2.21.6.56 1.47.96 2.86.96V5a2 2 0 00-2-2H5zm12 11c-1.6 0-2.74-.47-3.54-1.23a6.39 6.39 0 01-1.56-2.6l-.3-.92-.12-.38a8 8 0 00-.41-1.05c-.15-.3-.3-.5-.46-.63A.93.93 0 0010 7a.93.93 0 00-.6.2c-.17.12-.32.32-.47.62-.14.3-.27.64-.4 1.05l-.13.38-.3.92c-.32.9-.76 1.86-1.56 2.6A4.95 4.95 0 013 14v1c0 1.1.9 2 2 2h10a2 2 0 002-2v-1z"></path></svg>`,
	4,
)

function BezierCurveSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.75 2.93a.5.5 0 10-.5-.86l-12 7A.5.5 0 002 9.5v6A2.5 2.5 0 004.5 18h11a2.5 2.5 0 002.5-2.5v-6a.5.5 0 00-.5-.5H17V6.5c0-.83-.67-1.5-1.5-1.5h-2c-.83 0-1.5.67-1.5 1.5V7H9.5C8.67 7 8 7.67 8 8.5V9H4.35l10.4-6.07zM12 8v1H9v-.5c0-.28.22-.5.5-.5H12zm1 1V6.5c0-.28.22-.5.5-.5h2c.28 0 .5.22.5.5V9h-3z"></path></svg>`,
	4,
)

function BinFullIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.53 2.04c-.3.11-.5.4-.5.71v5.88l-1.8-1.46a.75.75 0 00-.95 1.16L8.34 10l-2.06 1.67a.75.75 0 10.94 1.16l1.82-1.46v5.88a.75.75 0 001.33.47l3.46-4.25a.75.75 0 00-.1-1.05l-3-2.42 3-2.42a.75.75 0 00.1-1.05l-3.46-4.25a.75.75 0 00-.84-.24zm1 9.73l1.66 1.34-1.65 2.03v-3.37zm0-3.54V4.86l1.66 2.03-1.65 1.34zM16 10a1 1 0 11-2 0 1 1 0 012 0zM4 11a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function BluetoothConnectedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.87 9.57L2.15 2.85a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-3.8-3.79-2.77 3.41a.76.76 0 01-.07.08l-.14.17a.75.75 0 01-1.33-.47V11.36l-1.82 1.47a.75.75 0 01-.94-1.16l2.59-2.1zM12.29 13l-1.75-1.74V15.14l.93-1.14.82-1zm1.43-5.4L11.5 9.37 9.04 6.92V2.75a.75.75 0 011.33-.47l3.46 4.25a.75.75 0 01-.1 1.05zm-2.2-.17h.01l.66-.53-1.65-2.03v3.36l.99-.8z"></path></svg>`,
	4,
)

function BluetoothDisabledIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.53 2.04c-.3.11-.5.4-.5.71v5.88l-1.8-1.46a.75.75 0 00-.95 1.16L8.34 10l-2.06 1.67a.75.75 0 10.94 1.16l1.82-1.46v5.88a.75.75 0 001.33.47l3.46-4.25a.75.75 0 00-.1-1.05l-3-2.42 3-2.42a.75.75 0 00.1-1.05l-3.46-4.25a.75.75 0 00-.84-.24zm1 9.73l1.66 1.34-1.65 2.03v-3.37zm0-3.54V4.86l1.66 2.03-1.65 1.34z"></path></svg>`,
	4,
)

function BluetoothIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.53 2.04c-.3.11-.5.4-.5.71v5.88l-1.8-1.46a.75.75 0 00-.95 1.16L8.34 10l-2.06 1.67a.75.75 0 10.94 1.16l1.82-1.46v5.88a.75.75 0 001.33.47l3.46-4.25a.75.75 0 00-.1-1.05l-3-2.42 3-2.42a.75.75 0 00.1-1.05l-3.46-4.25a.75.75 0 00-.84-.24zm1 9.73l1.66 1.34-1.65 2.03v-3.37zm0-3.54V4.86l1.66 2.03-1.65 1.34zm6.72-1.9a.75.75 0 011 .35 7.72 7.72 0 010 6.64.75.75 0 01-1.35-.64 6.22 6.22 0 000-5.36.75.75 0 01.35-1zm-1.04 1.94a.75.75 0 10-1.42.5 3.74 3.74 0 010 2.47.75.75 0 101.42.49 5.24 5.24 0 000-3.46z"></path></svg>`,
	4,
)

function BluetoothSearchingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 105.3 14H10v-1h6.25a8 8 0 00.68-1H10v-1h7.42c.13-.32.24-.66.33-1H10v-1h7.94c.04-.33.06-.66.06-1h-8V9h7.94c-.04-.34-.1-.67-.2-1H10V7h7.42c-.14-.35-.3-.68-.49-1H10V5h6.25c-.3-.36-.61-.7-.96-1H10V3h3.88A7.96 7.96 0 0010 2z"></path></svg>`,
	4,
)

function BlurIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.95 5.5a2.6 2.6 0 01.98.18 2.5 2.5 0 11-2.29 4.42l.45 1.86c.2.78-.4 1.54-1.21 1.54h-.76c-.81 0-1.41-.76-1.22-1.55l.45-1.85a2.48 2.48 0 01-1.41.4 2 2 0 00-.7-1.07 3.99 3.99 0 00-.4-3.64 2.5 2.5 0 011.2-.29 2.5 2.5 0 012.46-3 2.5 2.5 0 012.45 3zM6.5 5a3 3 0 00-2.24 5H4a1 1 0 100 2h.52a5.76 5.76 0 01-1.9 3.3c-.35.28-.62.73-.62 1.25 0 .8.65 1.45 1.45 1.45h6.1c.8 0 1.45-.65 1.45-1.45 0-.52-.27-.97-.62-1.26A5.76 5.76 0 018.48 12H9a1 1 0 100-2h-.26A3 3 0 006.5 5z"></path></svg>`,
	4,
)

function BoardGamesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 7V3H6a3 3 0 00-3 3v1h6.5zm1.25 8.41l3.43 3.46c.18.17.46.17.64 0l3.43-3.46A2.6 2.6 0 0017 11.06a2.55 2.55 0 00-2.38.7l-.12.12-.12-.12a2.55 2.55 0 00-3.84.24 2.6 2.6 0 00.21 3.41zM9.5 17v-1.58a3.6 3.6 0 010-3.67V8H3v6a3 3 0 003 3h3.5zm5-6.43a3.55 3.55 0 012.5-.53V6a3 3 0 00-3-3h-3.5v7.66a3.55 3.55 0 014-.09z"></path></svg>`,
	4,
)

function BoardHeartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 3v4H3V6a3 3 0 013-3h3.5zm1 0v9H17V6a3 3 0 00-3-3h-3.5zM17 13h-6.5v4H14a3 3 0 003-3v-1zm-7.5 4V8H3v6a3 3 0 003 3h3.5z"></path></svg>`,
	4,
)

function BoardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v3h8V3H6zm5 7H3v4a3 3 0 003 3h5v-7zm3 7h-2v-4h5v1a3 3 0 01-3 3zm3-5h-5V8h5v4zm0-5h-5V3h2a3 3 0 013 3v1z"></path></svg>`,
	4,
)

function BoardSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h4.26a5.5 5.5 0 01-.66-1H6a1 1 0 01-1-1h4.2A5.5 5.5 0 0116 9.2V4a2 2 0 00-2-2H6zm.75 2.5h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 010-1.5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function BookAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 2.98a.5.5 0 01-.5.5h-2a.5.5 0 010-1h.8a3.5 3.5 0 101.7 3 .5.5 0 011 0 4.5 4.5 0 11-2-3.74V.98a.5.5 0 01.5-.5c.28 0 .5.22.5.5v2zM9.02 6A5.5 5.5 0 0016 10.77V15a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4c0-1.1.9-2 2-2h4.24a5.5 5.5 0 00-1.22 4z"></path></svg>`,
	4,
)

function BookArrowClockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm6 9a4 4 0 100-8 4 4 0 000 8zm-.5-6c.28 0 .5.22.5.5V9h1a.5.5 0 010 1H9.5a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function BookClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm6 1c-.76 0-1.47.16-2.02.48C7.43 5.8 7 6.31 7 7c0 .69.43 1.2.98 1.52.55.32 1.26.48 2.02.48s1.47-.16 2.02-.48c.55-.32.98-.83.98-1.52 0-.69-.43-1.2-.98-1.52A4.08 4.08 0 0010 5zM7.03 9.03a.79.79 0 00-.03.22c0 .3.18.55.33.71.17.18.4.36.65.5a4.1 4.1 0 004.04 0c.26-.14.48-.32.65-.5.15-.16.33-.41.33-.71a.79.79 0 00-.03-.22l-.45.3a5.1 5.1 0 01-5.49-.3zm0 2a.79.79 0 00-.03.22c0 .3.18.55.33.71.17.18.4.36.65.5a4.1 4.1 0 004.04 0c.26-.14.48-.32.65-.5.15-.16.33-.41.33-.71a.79.79 0 00-.03-.22l-.45.3a5.1 5.1 0 01-5.49-.3z"></path></svg>`,
	4,
)

function BookCoinsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm6 .5a.5.5 0 00-.5.5v1.06a2 2 0 00-.74 3.5L7.54 12.3a.5.5 0 00.92.4l1.21-2.73a2.01 2.01 0 00.66 0l1.21 2.73a.5.5 0 10.92-.4l-1.22-2.73a2 2 0 00-.74-3.5V5a.5.5 0 00-.5-.5zm-.5 2.63a1 1 0 101 1.74 1 1 0 00-1-1.74z"></path></svg>`,
	4,
)

function BookCompassIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm5.5 5.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM7 10.75c0-.41.34-.75.75-.75h4.5c.41 0 .75.34.75.75V11a2 2 0 01-2 2H9a2 2 0 01-2-2v-.25z"></path></svg>`,
	4,
)

function BookContactsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm4.48 2.34C8.13 6.55 8 6.8 8 7c0 .21.13.45.48.66.36.2.9.34 1.52.34a3.1 3.1 0 001.52-.34c.35-.21.48-.45.48-.66 0-.21-.13-.45-.48-.66A3.1 3.1 0 0010 6a3.1 3.1 0 00-1.52.34zm-.5-.86C7.43 5.8 7 6.31 7 7v4c0 .63.45 1.14.97 1.46A3.9 3.9 0 0010 13c.78 0 1.5-.21 2.03-.54.52-.32.97-.83.97-1.46V7c0-.69-.43-1.2-.98-1.52A4.08 4.08 0 0010 5c-.76 0-1.47.16-2.02.48zM12 11V8.53A4.1 4.1 0 0110 9a4.1 4.1 0 01-2-.47V11c0 .12.1.36.5.6.36.23.9.4 1.5.4s1.14-.17 1.5-.4c.4-.24.5-.48.5-.6z"></path></svg>`,
	4,
)

function BookDatabaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm6 1a.5.5 0 00-.5.5v4a.5.5 0 001 0v-4A.5.5 0 0010 5zm.75 7.25a.75.75 0 10-1.5 0 .75.75 0 001.5 0z"></path></svg>`,
	4,
)

function BookExclamationMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$su = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm4 10.5l-.04-.02a.62.62 0 01-.15-.14 2.76 2.76 0 01-.4-.82A9.4 9.4 0 019.01 9h1.98a9.4 9.4 0 01-.4 2.52c-.13.38-.27.65-.4.82a.62.62 0 01-.15.14.15.15 0 01-.03.02H10zM13.97 9a4 4 0 01-2.6 3.26l.17-.42c.25-.76.41-1.75.45-2.84h1.98zm0-1h-1.98a10.43 10.43 0 00-.61-3.26A4 4 0 0113.97 8zm-5.35 4.26A4 4 0 016.03 9h1.98a10.43 10.43 0 00.61 3.26zM6.03 8a4 4 0 012.6-3.26l-.17.42c-.25.76-.41 1.75-.45 2.84H6.03zM10 4.5l.04.02c.04.02.09.06.15.14.13.17.27.44.4.82.21.64.36 1.52.4 2.52H9.01c.04-1 .19-1.88.4-2.52.13-.38.27-.65.4-.82a.62.62 0 01.15-.14.15.15 0 01.03-.02H10z"></path></svg>`,
	4,
)

function BookGlobeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$su.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$st = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm.75 2.5h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function BookIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$st.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ss = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm4.75 3.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.25 6.75a.5.5 0 01-1 0v-4a.5.5 0 011 0v4z"></path></svg>`,
	4,
)

function BookInformationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ss.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm4 3c.2 0 .38.12.46.3l3 7a.5.5 0 01-.92.4l-.73-1.7H8.2l-.73 1.7a.5.5 0 01-.92-.4l3-7A.5.5 0 0110 5zm-1.38 5h2.76L10 6.77 8.62 10z"></path></svg>`,
	4,
)

function BookLetterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5a5.5 5.5 0 001.5-.2v6.7a.5.5 0 01-.8.4L10 14.12 4.8 17.9a.5.5 0 01-.8-.4v-13A2.5 2.5 0 016.5 2h3.76a5.5 5.5 0 004.24 9z"></path></svg>`,
	4,
)

function BookmarkAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4.5A2.5 2.5 0 016.5 2h7A2.5 2.5 0 0116 4.5v13a.5.5 0 01-.8.4L10 14.12 4.8 17.9a.5.5 0 01-.8-.4v-13z"></path></svg>`,
	4,
)

function BookmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$so = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.27 3A2 2 0 018 2h4.5A3.5 3.5 0 0116 5.5v10a.5.5 0 01-.78.42l-.22-.15V5.5A2.5 2.5 0 0012.5 3H6.27zM6 4a2 2 0 00-2 2v11.5a.5.5 0 00.78.42L9 15.1l4.22 2.82a.5.5 0 00.78-.42V6a2 2 0 00-2-2H6z"></path></svg>`,
	4,
)

function BookmarkMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$so.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16.7l1.15 1.15a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7L4 4.71V17.5a.5.5 0 00.8.4l5.2-3.78 5.2 3.78a.5.5 0 00.8-.4v-.8zm0-12.2v9.38L4.8 2.68A2.5 2.5 0 016.5 2h7A2.5 2.5 0 0116 4.5z"></path></svg>`,
	4,
)

function BookmarkOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.6 7.3a3.5 3.5 0 11.7-.7l2.55 2.55a.5.5 0 01-.7.7L15.6 7.3zm.4-2.8a2.5 2.5 0 10-5 0 2.5 2.5 0 005 0zm0 4.62v8.38a.5.5 0 01-.8.4L10 14.12 4.8 17.9a.5.5 0 01-.8-.4v-13A2.5 2.5 0 016.5 2h3.26a4.5 4.5 0 005.68 6.56l.56.56z"></path></svg>`,
	4,
)

function BookmarkSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.61 8h.98l-.2 1h-.98l.2-1zM6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 100-1H6a1 1 0 01-1-1h10.5a.5.5 0 00.5-.5V4a2 2 0 00-2-2H6zm5.6 3.51a.5.5 0 01.4.59l-.19.9h.94a.5.5 0 010 1h-1.14l-.2 1h1.1a.5.5 0 110 1h-1.3L11 11.1a.5.5 0 01-.98-.2l.18-.9h-.98l-.22 1.1a.5.5 0 11-.98-.2l.18-.9h-.94a.5.5 0 010-1H8.4l.2-1H7.5a.5.5 0 010-1h1.29l.22-1.1a.5.5 0 01.98.2l-.18.9h.98l.22-1.1a.5.5 0 01.59-.39z"></path></svg>`,
	4,
)

function BookNumberIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.75v5.5a5.5 5.5 0 00-1.5-.88V4.75a.25.25 0 00-.25-.25H12c-.69 0-1.25.56-1.25 1.25v4.73a5.5 5.5 0 00-1.5 2.38V5.75c0-.69-.56-1.25-1.25-1.25H3.75a.25.25 0 00-.25.25v10.5c0 .14.11.25.25.25H8c.42 0 .8-.2 1.02-.53.05.58.19 1.13.4 1.64-.42.25-.9.39-1.42.39H3.75C2.78 17 2 16.22 2 15.25V4.75C2 3.78 2.78 3 3.75 3H8c.79 0 1.5.33 2 .86.5-.53 1.21-.86 2-.86h4.25c.97 0 1.75.78 1.75 1.75z"></path><path d="M13.01 14a8.9 8.9 0 01.54-2.85c.17-.42.35-.72.53-.91.19-.2.33-.24.42-.24.1 0 .23.05.42.24.18.19.36.5.53.91.3.73.5 1.72.54 2.85h-2.98z"></path><path d="M12.62 10.78c.07-.16.13-.31.21-.46a4.5 4.5 0 00-2.8 3.68H12c.05-1.23.27-2.36.61-3.22z"></path><path d="M16.38 10.78a5.35 5.35 0 00-.2-.46c1.5.6 2.6 2 2.8 3.68h-1.99a9.92 9.92 0 00-.61-3.22z"></path><path d="M17 15h1.97a4.5 4.5 0 01-2.8 3.68A9.92 9.92 0 0017 15z"></path><path d="M14.92 18.76c-.19.2-.33.24-.42.24-.1 0-.23-.05-.42-.24-.18-.19-.36-.5-.53-.91a8.9 8.9 0 01-.54-2.85h2.98a8.9 8.9 0 01-.54 2.85c-.17.42-.35.72-.53.91z"></path><path d="M10.03 15a4.5 4.5 0 002.8 3.68A9.92 9.92 0 0112 15h-1.98z"></path></svg>`,
	16,
)

function BookOpenGlobeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 16.14c-.5.53-1.21.86-2 .86H3.75C2.78 17 2 16.22 2 15.25V4.75C2 3.78 2.78 3 3.75 3H8c.79 0 1.5.33 2 .86.5-.53 1.21-.86 2-.86h4.25c.97 0 1.75.78 1.75 1.75v10.5c0 .97-.78 1.75-1.75 1.75H12c-.79 0-1.5-.33-2-.86zM3.5 4.75v10.5c0 .14.11.25.25.25H8c.69 0 1.25-.56 1.25-1.25v-8.5c0-.69-.56-1.25-1.25-1.25H3.75a.25.25 0 00-.25.25zm7.25 9.5c0 .69.56 1.25 1.25 1.25h4.25c.14 0 .25-.11.25-.25V4.75a.25.25 0 00-.25-.25H12c-.69 0-1.25.56-1.25 1.25v8.5z"></path></svg>`,
	4,
)

function BookOpenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$si = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 16.14c-.5.53-1.21.86-2 .86H3.75C2.78 17 2 16.22 2 15.25V4.75C2 3.78 2.78 3 3.75 3H8c.79 0 1.5.33 2 .86.5-.53 1.21-.86 2-.86h4.25c.97 0 1.75.78 1.75 1.75v6.75a2.5 2.5 0 00-1.5-2.3V4.76a.25.25 0 00-.25-.25H12c-.69 0-1.25.56-1.25 1.25v8.5c0 .3.1.58.28.8.09.7.34 1.37.72 1.94a2.74 2.74 0 01-1.75-.85zM3.5 4.75v10.5c0 .14.11.25.25.25H8c.69 0 1.25-.56 1.25-1.25v-8.5c0-.69-.56-1.25-1.25-1.25H3.75a.25.25 0 00-.25.25zm13.93 11.34c.35-.43.57-.98.57-1.59a.5.5 0 011 0 3.5 3.5 0 01-3 3.46v.54a.5.5 0 01-1 0v-.54a3.49 3.49 0 01-3-3.46.5.5 0 011 0 2.5 2.5 0 002.5 2.5 2.5 2.5 0 001.93-.9zM15.5 16a1.5 1.5 0 01-1.5-1.5v-3a1.5 1.5 0 013 0v3c0 .83-.67 1.5-1.5 1.5z"></path></svg>`,
	4,
)

function BookOpenMicrophoneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$si.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm5.46 2.3a.5.5 0 00-.9-.02L7.18 9H6.5a.5.5 0 000 1h1a.5.5 0 00.45-.28l1.03-2.06 2.06 4.55a.5.5 0 00.89.05L13.28 10h.22a.5.5 0 000-1H13a.5.5 0 00-.43.24l-1 1.69-2.11-4.64z"></path></svg>`,
	4,
)

function BookPulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm2.76 4.4a.9.9 0 00-.26.6.5.5 0 01-1 0c0-.37.14-.87.54-1.28C8.45 5.29 9.09 5 10 5c.91 0 1.55.29 1.96.72.4.41.54.91.54 1.28 0 1.05-.73 1.55-1.28 1.82a8 8 0 01-.39.18h-.01a5.75 5.75 0 00-.32.15V10a.5.5 0 01-1 0V9c0-.25.13-.43.24-.53.11-.1.24-.18.35-.23l.32-.15.02-.01a7 7 0 00.35-.16c.45-.22.72-.47.72-.92a.9.9 0 00-.26-.6c-.19-.19-.55-.4-1.24-.4s-1.05.21-1.24.4zM10 13a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function BookQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm5.24 4.4c-.19-.19-.55-.4-1.24-.4s-1.05.21-1.24.4a.9.9 0 00-.26.6c0 .45.27.7.72.92l.35.16.02.01.32.15c.1.05.24.12.35.23.11.1.24.28.24.53v1a.5.5 0 11-1 0v-.85l-.04-.02A5.75 5.75 0 009.18 9h-.01a7.97 7.97 0 01-.4-.18C8.24 8.55 7.5 8.05 7.5 7c0-.37.14-.87.54-1.28C8.45 5.29 9.09 5 10 5c.91 0 1.55.29 1.96.72.4.41.54.91.54 1.28a.5.5 0 01-1 0 .9.9 0 00-.26-.6zM10 13a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function BookQuestionMarkRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$se = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm5.59 7.88l1.26 1.27a.5.5 0 01-.7.7l-1.27-1.26a2.5 2.5 0 11.7-.7zM8 8.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"></path></svg>`,
	4,
)

function BookSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$se.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v11a1 1 0 01-1 1H5a1 1 0 001 1h9.5a.5.5 0 010 1H6a2 2 0 01-2-2V4zm6.45 1.29a.5.5 0 00-.9 0l-.83 1.77-1.93.23a.5.5 0 00-.28.87l1.43 1.33-.38 1.91a.5.5 0 00.73.53l1.71-.95 1.7.95a.5.5 0 00.74-.53l-.38-1.91 1.43-1.33a.5.5 0 00-.28-.87l-1.93-.23-.83-1.77zm-.94 2.44L10 6.7l.49 1.04a.5.5 0 00.39.29l1.14.14-.84.78a.5.5 0 00-.15.46l.22 1.14-1-.56a.5.5 0 00-.5 0l-1 .56.22-1.14a.5.5 0 00-.15-.46l-.84-.78 1.14-.14a.5.5 0 00.4-.29z"></path></svg>`,
	4,
)

function BookStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 1A2.5 2.5 0 002 3.5v9A2.5 2.5 0 004.5 15H8V9H5.5a.5.5 0 010-1h2.67a3 3 0 01.6-1H5.5a.5.5 0 010-1H16V3.5A2.5 2.5 0 0013.5 1h-9zM5 4.5c0-.28.22-.5.5-.5h7a.5.5 0 010 1h-7a.5.5 0 01-.5-.5zM18 9a2 2 0 00-2-2h-5a2 2 0 00-2 2v8c0 1.1.9 2 2 2h6.5a.5.5 0 000-1H11a1 1 0 01-1-1h7.5a.5.5 0 00.5-.5V9zm-8 7V9a1 1 0 011-1h5a1 1 0 011 1v7h-7z"></path></svg>`,
	4,
)

function BookTemplateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 000-1H6a1 1 0 01-1-1h10a1 1 0 001-1V4a2 2 0 00-2-2H6zm1 7c0-1.06.3-2.04.83-2.77A2.7 2.7 0 0110 5c.9 0 1.66.5 2.17 1.23.52.73.83 1.71.83 2.77s-.3 2.04-.83 2.77A2.7 2.7 0 0110 13c-.9 0-1.66-.5-2.17-1.23A4.79 4.79 0 017 9zm4.97.5c-.07.67-.3 1.25-.6 1.68-.4.54-.88.82-1.37.82-.49 0-.97-.28-1.36-.82a3.62 3.62 0 01-.61-1.68h3.94zm0-1a3.62 3.62 0 00-.6-1.68C10.96 6.28 10.48 6 10 6c-.49 0-.97.28-1.36.82a3.62 3.62 0 00-.61 1.68h3.94z"></path></svg>`,
	4,
)

function BookThetaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$sa = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5V3h.5c.83 0 1.5.67 1.5 1.5V6h-2v-.5a.5.5 0 00-1 0V6h-3v-.5a.5.5 0 00-1 0V6h-2V4.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5V3h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zM17 7h2v1.5c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 0110 8.5V7h2v.5a.5.5 0 001 0V7h3v.5a.5.5 0 001 0V7zm-5.96-4.96l.01-.04H6a2 2 0 00-2 2v12c0 1.1.9 2 2 2h9.5a.5.5 0 100-1H6a1 1 0 01-1-1h10.5a.5.5 0 00.5-.5V11h-4.5A2.5 2.5 0 019 8.5v-4a2.5 2.5 0 012.04-2.46z"></path></svg>`,
	4,
)

function BookToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$sa.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 4.5c-.97 0-1.75.78-1.75 1.75v3h4.75V4.5h-3zm4.5 0v4.75h4.75v-3c0-.97-.78-1.75-1.75-1.75h-3zm4.75 6.25h-4.75v4.75h3c.97 0 1.75-.78 1.75-1.75v-3zM9.25 15.5v-4.75H4.5v3c0 .97.78 1.75 1.75 1.75h3zM3 6.25C3 4.45 4.46 3 6.25 3h7.5C15.55 3 17 4.46 17 6.25v7.5c0 1.8-1.46 3.25-3.25 3.25h-7.5A3.25 3.25 0 013 13.75v-7.5z"></path></svg>`,
	4,
)

function BorderAllIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 3.75c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 018 3.75zm-2.55.85a1.5 1.5 0 00-.88.94.75.75 0 01-1.38-.58 3 3 0 011.77-1.77.75.75 0 11.5 1.41zm9.95.85a1.5 1.5 0 00-.94-.88.75.75 0 01.58-1.38 3 3 0 011.78 1.77h-.01a.75.75 0 11-1.41.49zM3.75 11a.75.75 0 01-.75-.75v-1.5a.75.75 0 011.5 0v1.5c0 .41-.34.75-.75.75zm11.75-.75a.75.75 0 001.5 0v-1.5a.75.75 0 00-1.5 0v1.5zm-12.5 6c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75zM3.75 13a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H3.75z"></path></svg>`,
	4,
)

function BorderBottomDoubleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 3.75c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 018 3.75zm.71 11.75a.7.7 0 01.04 0h2.5a.7.7 0 01.04 0H14a1.5 1.5 0 001.43-1.03v-.01a.75.75 0 011.38.58A3 3 0 0114 17H6a3 3 0 01-2.81-1.96.75.75 0 111.41-.49c.22.56.77.95 1.4.95h2.71zM4.61 5.45a1.5 1.5 0 01.93-.88.75.75 0 00-.58-1.38 3 3 0 00-1.77 1.77.75.75 0 101.41.49zm9.94-.85a1.5 1.5 0 01.88.94.75.75 0 001.38-.58 3 3 0 00-1.77-1.77.75.75 0 10-.5 1.41zM3 11.25a.75.75 0 001.5 0v-2.5a.75.75 0 00-1.5 0v2.5zm13.25.75a.75.75 0 01-.75-.75v-2.5a.75.75 0 011.5 0v2.5c0 .41-.34.75-.75.75z"></path></svg>`,
	4,
)

function BorderBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 3a1 1 0 000 2h2a1 1 0 100-2H9zm-4.64.5a1 1 0 111.16 1.62 1 1 0 00-.4.4 1 1 0 01-1.84-.33 1 1 0 01.22-.83c.22-.35.51-.64.85-.87zM6 15a1 1 0 01-.88-.52 1 1 0 00-1.84.33 1 1 0 00.22.83A3 3 0 006 17h8a3 3 0 002.5-1.35 1 1 0 10-1.62-1.17A1 1 0 0114 15H6zm9.64-11.5a1 1 0 10-1.16 1.62c.17.1.3.23.4.4a1 1 0 001.84-.33 1 1 0 00-.22-.83 3.02 3.02 0 00-.85-.87zM4 12a1 1 0 01-1-1V9a1 1 0 012 0v2a1 1 0 01-1 1zm11-1a1 1 0 102 0V9a1 1 0 10-2 0v2z"></path></svg>`,
	4,
)

function BorderBottomThickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.25 8c.41 0 .75.34.75.75v2.5a.75.75 0 01-1.5 0v-2.5c0-.41.34-.75.75-.75zM3 11.27V14a3 3 0 001.96 2.81.75.75 0 00.58-1.38A1.5 1.5 0 014.5 14V6a1.5 1.5 0 011.03-1.43.75.75 0 00-.58-1.38A3 3 0 003 6v5.27zM14.55 4.6a1.5 1.5 0 01.88.94.75.75 0 001.38-.58 3 3 0 00-1.77-1.77.75.75 0 10-.49 1.41zm.85 9.95a1.5 1.5 0 01-.94.88.75.75 0 00.58 1.38 3 3 0 001.77-1.77.75.75 0 10-1.41-.5zM8.75 3a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5zM8 16.25c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function BorderLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 6a1.5 1.5 0 00-1.04-1.43.75.75 0 01.58-1.38A3 3 0 0117 6v8a3 3 0 01-1.96 2.81.75.75 0 11-.58-1.38l.07-.03c.57-.21.97-.76.97-1.4V6zM8.75 3a.75.75 0 100 1.5h2.5a.75.75 0 000-1.5h-2.5zm0 12.5a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5zM5.45 4.6A1.5 1.5 0 004.5 6v8a1.5 1.5 0 001.03 1.43h.01a.75.75 0 01-.58 1.38A3 3 0 013 14.01V6a3 3 0 011.96-2.82.75.75 0 11.49 1.42z"></path></svg>`,
	4,
)

function BorderLeftRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.75 3a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5zm0 12.5a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5zM5.45 4.6a1.5 1.5 0 00-.88.94.75.75 0 01-1.38-.58 3 3 0 011.77-1.77.75.75 0 11.5 1.41zm9.95.85a1.5 1.5 0 00-.94-.88.75.75 0 01.58-1.38 3 3 0 011.78 1.77h-.01a.75.75 0 11-1.41.49zM3.75 12a.75.75 0 01-.75-.75v-2.5a.75.75 0 011.5 0v2.5c0 .41-.34.75-.75.75zm11.75-.75a.75.75 0 001.5 0v-2.5a.75.75 0 00-1.5 0v2.5zM5.45 15.4a1.5 1.5 0 01-.88-.94.75.75 0 00-1.38.58 3 3 0 001.77 1.77.75.75 0 10.5-1.41zm9.95-.85a1.5 1.5 0 01-.94.88.75.75 0 00.58 1.38 3 3 0 001.78-1.77h-.01a.75.75 0 10-1.41-.49z"></path></svg>`,
	4,
)

function BorderNoneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm3-1.5c-.83 0-1.5.67-1.5 1.5v8c0 .83.67 1.5 1.5 1.5h8c.83 0 1.5-.67 1.5-1.5V6c0-.83-.67-1.5-1.5-1.5H6z"></path></svg>`,
	4,
)

function BorderOutsideIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm3-1a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V6a1 1 0 00-1-1H6z"></path></svg>`,
	4,
)

function BorderOutsideThickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 12a.75.75 0 01-.75-.75v-2.5a.75.75 0 011.5 0v2.5c0 .41-.34.75-.75.75zM17 8.73V6a3 3 0 00-1.96-2.81.75.75 0 10-.58 1.38l.07.03c.57.21.97.76.97 1.4v8a1.5 1.5 0 01-1.04 1.43.75.75 0 00.58 1.38A3 3 0 0017 14v-2.73-2.52-.02zM5.45 15.4a1.5 1.5 0 01-.88-.94.75.75 0 00-1.38.58 3 3 0 001.77 1.77.75.75 0 10.49-1.41zM4.6 5.45a1.5 1.5 0 01.94-.88.75.75 0 00-.58-1.38 3 3 0 00-1.77 1.77.75.75 0 101.41.5zM11.25 17a.75.75 0 000-1.5h-2.5a.75.75 0 000 1.5h2.5zM12 3.75c0 .41-.34.75-.75.75h-2.5a.75.75 0 010-1.5h2.5c.41 0 .75.34.75.75z"></path></svg>`,
	4,
)

function BorderRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5a1.5 1.5 0 00-1.43 1.04.75.75 0 01-1.38-.58A3 3 0 016 3h8a3 3 0 012.81 1.96.75.75 0 01-1.38.58A1.5 1.5 0 0014 4.5H6zM3.75 11a.75.75 0 01-.75-.75v-1.5a.75.75 0 011.5 0v1.5c0 .41-.34.75-.75.75zm12.5 0a.75.75 0 01-.75-.75v-1.5a.75.75 0 011.5 0v1.5c0 .41-.34.75-.75.75zm-12.5 4.5a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H3.75zM3 13.75c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function BorderTopBottomDoubleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5a1.5 1.5 0 00-1.43 1.04.75.75 0 01-1.38-.58A3 3 0 016 3h8a3 3 0 012.81 1.96.75.75 0 01-1.38.58A1.5 1.5 0 0014 4.5H6zm-3 6.75a.75.75 0 001.5 0v-2.5a.75.75 0 00-1.5 0v2.5zm12.5 0a.75.75 0 001.5 0v-2.5a.75.75 0 00-1.5 0v2.5zm-10.9 3.3c.22.56.77.95 1.4.95h8a1.5 1.5 0 001.43-1.03v-.01a.75.75 0 011.38.58A3 3 0 0114 17H6a3 3 0 01-2.81-1.96.75.75 0 111.41-.49z"></path></svg>`,
	4,
)

function BorderTopBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.12 5.52A1 1 0 016 5h8a1 1 0 01.88.52 1 1 0 001.84-.33 1 1 0 00-.22-.83A3 3 0 0014 3H6a3 3 0 00-2.5 1.35 1 1 0 101.62 1.17zm0 8.96A1 1 0 006 15h8a1 1 0 00.88-.52 1 1 0 011.84.33 1 1 0 01-.22.83A3 3 0 0114 17H6a3 3 0 01-2.5-1.35 1 1 0 111.62-1.17zM4 12a1 1 0 01-1-1V9a1 1 0 112 0v2a1 1 0 01-1 1zm11-1a1 1 0 002 0V9a1 1 0 10-2 0v2z"></path></svg>`,
	4,
)

function BorderTopBottomThickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 16.25c0 .41-.34.75-.75.75h-2.5a.75.75 0 010-1.5h2.5c.41 0 .75.34.75.75zM8.73 3H6a3 3 0 00-2.81 1.96.75.75 0 001.38.58l.03-.07A1.5 1.5 0 016 4.5h8a1.5 1.5 0 011.43 1.04.75.75 0 001.38-.58A3 3 0 0014 3h-2.73-2.52-.02zm6.67 11.55a1.5 1.5 0 01-.94.88.75.75 0 00.58 1.38 3 3 0 001.77-1.77.75.75 0 10-1.41-.49zm-9.95.85a1.5 1.5 0 01-.88-.94.75.75 0 00-1.38.58 3 3 0 001.77 1.77.75.75 0 10.5-1.41zM17 8.75a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5zM3.75 8c.41 0 .75.34.75.75v2.5a.75.75 0 01-1.5 0v-2.5c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function BorderTopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 9c.14 0 .27 0 .4.02.07-.17.1-.34.1-.52v-4c0-.83-.67-1.5-1.5-1.5h-3v-.5c0-.3-.22-.5-.5-.5a.5.5 0 00-.5.5V3h-3C5.67 3 5 3.67 5 4.5v4c0 .83.67 1.5 1.5 1.5h4.84c.9-.63 1.98-1 3.16-1zM7 6.5a1 1 0 112 0 1 1 0 01-2 0zm4 0a1 1 0 112 0 1 1 0 01-2 0zm-2 8c0-1.1.33-2.13.89-3H5.3c-1 0-1.81.81-1.81 1.81v.7c.04.77.25 1.75 1.13 2.55.95.87 2.6 1.44 5.37 1.44h.26A5.48 5.48 0 019 14.5zm10 0a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function BotAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.7 11.5c.99 0 1.8.81 1.8 1.81v.7a3.52 3.52 0 01-1.13 2.55c-.95.87-2.6 1.44-5.37 1.44s-4.42-.57-5.37-1.44A3.52 3.52 0 013.5 14H3.5v-.69c0-1 .81-1.8 1.8-1.8h9.4zM6.5 3C5.67 3 5 3.67 5 4.5v4c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-3v-.5c0-.3-.22-.5-.5-.5a.5.5 0 00-.5.5V3h-3zM7 6.5a1 1 0 112 0 1 1 0 01-2 0zm4 0a1 1 0 112 0 1 1 0 01-2 0z"></path></svg>`,
	4,
)

function BotIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.24 2.07a.5.5 0 01.69.17L9.09 9h1.82L7.07 2.76a.5.5 0 01.86-.52L12.09 9h5.41c.28 0 .5.22.5.5v.5c0 .7-.09 1.36-.25 2H2.25A8.01 8.01 0 012 10v-.5c0-.28.22-.5.5-.5h5.41L4.07 2.76a.5.5 0 01.17-.69zM10 18a8 8 0 01-7.42-5h14.84A8 8 0 0110 18z"></path></svg>`,
	4,
)

function BowlChopsticksIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.92 4.83a3.5 3.5 0 016.25.17 3.75 3.75 0 00-3.39 2.32 6.15 6.15 0 00-2.86-2.49zM17 9a3.76 3.76 0 00-2.7-3.85A4.5 4.5 0 006 4.48 10.07 10.07 0 003.14 4a9.5 9.5 0 00-.67 0 .5.5 0 00-.47.47 4.84 4.84 0 000 .67c.01.41.05.98.17 1.62.12.68.33 1.46.68 2.23H2.5a.5.5 0 00-.5.5v.5c0 .7.09 1.36.25 2h15.5c.16-.64.25-1.3.25-2v-.5a.5.5 0 00-.5-.5H17zM4 9a7.87 7.87 0 01-.83-2.4A10.47 10.47 0 013 5a9.4 9.4 0 011.59.16c1.18.22 2.57.69 3.57 1.7A5.83 5.83 0 019.48 9H7.7L5.85 7.15a.5.5 0 10-.7.7L6.29 9H4zm6.54 0l-.02-.08-.01-.17a2.75 2.75 0 115.49.25h-5.46zM10 18a8 8 0 01-7.42-5h14.84A8 8 0 0110 18z"></path></svg>`,
	4,
)

function BowlSaladIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.42 5L14.38 6.2l-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM10 7.95l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zM2 6.18c0-.11.01-.22.04-.33L9.5 8.84v3.36a5.48 5.48 0 000 4.6v.93a3.5 3.5 0 01-.8-.21l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18zm16 0v4.08a5.48 5.48 0 00-7.5.46V8.84l7.46-2.99c.03.1.04.22.04.33zm1 8.32a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-6.86-.35l2-2a.5.5 0 11.71.7L13.71 14h2.79a.5.5 0 010 1h-2.8l1.15 1.15a.5.5 0 11-.7.7l-2-2a.5.5 0 01-.15-.35.5.5 0 01.14-.35z"></path></svg>`,
	4,
)

function BoxArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.42 5L14.38 6.2l-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM10 7.95l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zM2 6.18c0-.11.01-.22.04-.33L9.5 8.84v3.36a5.48 5.48 0 000 4.6v.93a3.5 3.5 0 01-.8-.21l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18zm16 0v4.08a5.48 5.48 0 00-7.5.46V8.84l7.46-2.99c.03.1.04.22.04.33zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm.35-6.86l2 2a.5.5 0 11-.7.71L15 13.71v2.79a.5.5 0 01-1 0v-2.8l-1.15 1.15a.5.5 0 11-.7-.7l2-2a.5.5 0 01.35-.15.5.5 0 01.35.14z"></path></svg>`,
	4,
)

function BoxArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.42 5L14.38 6.2l-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM10 7.95l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zM2 6.18c0-.11.01-.22.04-.33L9.5 8.84v3.36a5.48 5.48 0 000 4.6v.93a3.5 3.5 0 01-.8-.21l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18zm16 0v4.08a5.48 5.48 0 00-7.5.46V8.84l7.46-2.99c.03.1.04.22.04.33zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-1-3.7l2.65-2.65a.5.5 0 01.7.7l-3 3a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64z"></path></svg>`,
	4,
)

function BoxCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.42 5L14.38 6.2l-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM10 7.95l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zm-7.96-2.1c-.03.1-.04.2-.04.32v7.64c0 .62.37 1.17.94 1.4l5.76 2.3c.26.1.53.17.8.21v-.94a5.48 5.48 0 010-4.58V8.84L2.04 5.85zM18 6.17v4.08a5.48 5.48 0 00-7.5.46V8.84l7.46-2.99c.03.1.04.22.04.33zm1 8.32a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function BoxDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.42 5L14.38 6.2l-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM10 7.95l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zm-7.96-2.1c-.03.1-.04.2-.04.32v7.64c0 .62.37 1.17.94 1.4l5.76 2.3.36.12.37-1.49.07-.23V8.84L2.04 5.85zM18 6.17v2.95a2.87 2.87 0 00-2.9.71l-4.6 4.6v-5.6l7.46-2.99c.03.1.04.22.04.33zm-7.02 9.2l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function BoxEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 7.96l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zm-7.96-2.1c-.03.1-.04.2-.04.32v7.64c0 .62.37 1.17.94 1.4l5.76 2.3c.26.1.53.17.8.21v-8.9L2.04 5.86zm8.46 11.87c.27-.04.54-.1.8-.21l5.76-2.3c.57-.23.94-.78.94-1.4V6.18c0-.11-.01-.22-.04-.33L10.5 8.84v8.9zM17.42 5l-3.04 1.22-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21z"></path></svg>`,
	4,
)

function BoxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.58 2.38a3 3 0 00-2.16 0L7.96 3.7A1.5 1.5 0 007 5.1v1.1a4 4 0 011.94.23l3.46 1.34c.61.23 1.1.7 1.36 1.27a5.55 5.55 0 014.24 1.2V5.12a1.5 1.5 0 00-.96-1.4l-3.46-1.33zm1.87 2.15a.5.5 0 11.35.94l-2.76 1.06a1.5 1.5 0 01-1.08 0L9.2 5.47a.5.5 0 01.35-.94l2.77 1.07a.5.5 0 00.36 0l2.77-1.07zm-3.41 4.18c.3.11.54.32.71.57-.62.21-1.2.53-1.7.93a.5.5 0 00-.6-.2L7.5 11.14 4.55 10a.5.5 0 10-.35.93L7 12.02v2.49a.5.5 0 001 0V12l2.09-.8a5.48 5.48 0 00-.39 5.98l-1.12.43a3 3 0 01-2.16 0l-3.46-1.33a1.5 1.5 0 01-.96-1.4V10.1c0-.62.38-1.18.96-1.4l3.46-1.33a3 3 0 012.16 0l3.46 1.33zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 100-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function BoxMultipleArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.58 2.38a3 3 0 00-2.16 0L7.96 3.7A1.5 1.5 0 007 5.1v1.1a4 4 0 011.94.23l3.46 1.34c.61.23 1.1.7 1.36 1.27a5.55 5.55 0 014.24 1.2V5.12a1.5 1.5 0 00-.96-1.4l-3.46-1.33zm1.87 2.15a.5.5 0 11.35.94l-2.76 1.06a1.5 1.5 0 01-1.08 0L9.2 5.47a.5.5 0 01.35-.94l2.77 1.07a.5.5 0 00.36 0l2.77-1.07zm-3.41 4.18c.3.11.54.32.71.57-.62.21-1.2.53-1.7.93a.5.5 0 00-.6-.2L7.5 11.14 4.55 10a.5.5 0 10-.35.93L7 12.02v2.49a.5.5 0 001 0V12l2.09-.8a5.48 5.48 0 00-.39 5.98l-1.12.43a3 3 0 01-2.16 0l-3.46-1.33a1.5 1.5 0 01-.96-1.4V10.1c0-.62.38-1.18.96-1.4l3.46-1.33a3 3 0 012.16 0l3.46 1.33zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function BoxMultipleArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.58 2.38a3 3 0 00-2.16 0L7.96 3.7A1.5 1.5 0 007 5.1v1.1a4 4 0 011.94.23l3.46 1.34c.61.23 1.1.7 1.36 1.27a5.55 5.55 0 014.24 1.2V5.12a1.5 1.5 0 00-.96-1.4l-3.46-1.33zm1.87 2.15a.5.5 0 11.35.94l-2.76 1.06a1.5 1.5 0 01-1.08 0L9.2 5.47a.5.5 0 01.35-.94l2.77 1.07a.5.5 0 00.36 0l2.77-1.07zm-3.41 4.18c.3.11.54.32.71.57-.62.21-1.2.53-1.7.93a.5.5 0 00-.6-.2L7.5 11.14 4.55 10a.5.5 0 10-.35.93L7 12.02v2.49a.5.5 0 001 0V12l2.09-.8a5.48 5.48 0 00-.39 5.98l-1.12.43a3 3 0 01-2.16 0l-3.46-1.33a1.5 1.5 0 01-.96-1.4V10.1c0-.62.38-1.18.96-1.4l3.46-1.33a3 3 0 012.16 0l3.46 1.33zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function BoxMultipleCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.58 2.38a3 3 0 00-2.16 0L7.96 3.7A1.5 1.5 0 007 5.1v1.1a4 4 0 011.94.23l3.46 1.34A2.5 2.5 0 0114 10.1v4.78c0 .2-.03.4-.07.6l3.1-1.2c.59-.22.97-.78.97-1.4V5.1a1.5 1.5 0 00-.96-1.4l-3.46-1.33zm1.87 2.15a.5.5 0 11.35.94l-2.76 1.06a1.5 1.5 0 01-1.08 0L9.2 5.47a.5.5 0 01.35-.94l2.77 1.07a.5.5 0 00.36 0l2.77-1.07zM6.42 7.38a3 3 0 012.16 0l3.46 1.33c.58.22.96.78.96 1.4v4.78a1.5 1.5 0 01-.96 1.4l-3.46 1.33a3 3 0 01-2.16 0l-3.46-1.33a1.5 1.5 0 01-.96-1.4V10.1c0-.62.38-1.18.96-1.4l3.46-1.33zm4.67 2.91a.5.5 0 00-.64-.28L7.5 11.14 4.55 10a.5.5 0 10-.35.93L7 12.02v2.49a.5.5 0 001 0V12l2.8-1.07a.5.5 0 00.3-.65z"></path></svg>`,
	4,
)

function BoxMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.42 2.38a3 3 0 012.16 0l3.46 1.33c.58.22.96.78.96 1.4v7.78c0 .07 0 .15-.02.22A4.5 4.5 0 0013.74 9a2.5 2.5 0 00-1.34-1.23L8.94 6.44A4 4 0 007 6.21V5.1c0-.62.38-1.18.96-1.4l3.46-1.33zm4.67 2.44a.5.5 0 00-.64-.29L12.68 5.6a.5.5 0 01-.36 0L9.55 4.53a.5.5 0 00-.35.94l2.76 1.06c.35.13.73.13 1.08 0l2.76-1.06a.5.5 0 00.3-.65zM12.6 9.09a1.5 1.5 0 00-.56-.38L8.58 7.38a3 3 0 00-2.16 0L2.96 8.7A1.5 1.5 0 002 10.1v4.78c0 .62.38 1.18.96 1.4l3.46 1.33a3 3 0 002.16 0l1.94-.75a4.49 4.49 0 01-1.02-5.43l-1.5.58v2.49a.5.5 0 01-1 0V12l-2.8-1.07a.5.5 0 11.35-.93l2.95 1.13L10.45 10a.5.5 0 01.25-.03c.54-.44 1.2-.75 1.9-.9zm3.7 6.5a3.5 3.5 0 10-.7.7l2.55 2.56a.5.5 0 00.7-.7L16.3 15.6zm-.3-2.1a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path></svg>`,
	4,
)

function BoxMultipleSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 7.96l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zm-7.96-2.1c-.03.1-.04.2-.04.32v7.64c0 .62.37 1.17.94 1.4l5.76 2.3c.26.1.53.17.8.21v-2.17a4.48 4.48 0 010-4.12v-2.6L2.04 5.85zM18 13.42V6.18c0-.11-.01-.22-.04-.33L10.5 8.84v1.3a4.5 4.5 0 017.5 3.28zm-.58-8.44l-3.04 1.22-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM16.3 15.6a3.5 3.5 0 10-.7.7l2.55 2.56a.5.5 0 10.7-.7L16.3 15.6zm-.3-2.1a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path></svg>`,
	4,
)

function BoxSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.42 5L14.38 6.2l-7.5-3 1.82-.73a3.5 3.5 0 012.6 0l5.76 2.3c.13.06.25.13.36.21zM10 7.95l3.03-1.21-7.5-3-2.59 1.03a1.5 1.5 0 00-.36.21L10 7.96zm-7.96-2.1c-.03.1-.04.2-.04.32v7.64c0 .62.37 1.17.94 1.4l5.76 2.3.3.1V13.5c0-.56.19-1.08.5-1.5V8.84L2.04 5.85zM18 6.17v4.87h-.04A2.5 2.5 0 0015.5 9h-2a2.5 2.5 0 00-2.46 2.04c-.19.04-.37.1-.54.17V8.84l7.46-2.99c.03.1.04.22.04.33zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 101 0V16h3v.5a.5.5 0 101 0z"></path></svg>`,
	4,
)

function BoxToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 5.75A2.75 2.75 0 016.23 3a.75.75 0 110 1.5C5.55 4.5 5 5.06 5 5.75L5 8.38c0 .6-.21 1.17-.58 1.62.37.45.58 1.02.58 1.62v2.63c0 .7.56 1.25 1.25 1.25a.75.75 0 010 1.5 2.75 2.75 0 01-2.75-2.75v-2.63c0-.4-.22-.76-.57-.94a.75.75 0 010-1.36c.35-.18.57-.54.57-.94V5.75zm13 0A2.75 2.75 0 0013.77 3a.75.75 0 000 1.5c.69 0 1.25.56 1.25 1.25L15 8.38c0 .6.21 1.17.58 1.62a2.56 2.56 0 00-.58 1.62v2.63c0 .7-.56 1.25-1.25 1.25a.75.75 0 000 1.5 2.75 2.75 0 002.75-2.75v-2.63c0-.4.22-.76.57-.94a.75.75 0 000-1.36 1.06 1.06 0 01-.57-.94V5.75z"></path></svg>`,
	4,
)

function BracesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.75 2.5A2.75 2.75 0 003 5.25v3.13c0 .4-.22.76-.57.94a.75.75 0 000 1.36c.35.18.57.54.57.94v3.13a2.75 2.75 0 002.75 2.75.75.75 0 000-1.5c-.69 0-1.25-.56-1.25-1.25v-3.13c0-.6-.21-1.17-.58-1.62.37-.45.58-1.02.58-1.62V5.25C4.5 4.56 5.06 4 5.75 4a.75.75 0 000-1.5zm8.5 0A2.75 2.75 0 0117 5.25v3.13c0 .4.22.76.57.94a.75.75 0 010 1.36c-.35.18-.57.54-.57.94v3.13a2.75 2.75 0 01-2.75 2.75.75.75 0 010-1.5c.69 0 1.25-.56 1.25-1.25v-3.13c0-.6.21-1.17.58-1.62a2.56 2.56 0 01-.58-1.62V5.25c0-.69-.56-1.25-1.25-1.25a.75.75 0 010-1.5zM8.11 6.06a.75.75 0 10-1.22.88L9.08 10l-2.19 3.06a.75.75 0 001.22.88L10 11.29l1.89 2.65a.75.75 0 001.22-.88L10.92 10l2.19-3.06a.75.75 0 00-1.22-.88L10 8.71 8.11 6.06z"></path></svg>`,
	4,
)

function BracesVariableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.13 2.8A3.9 3.9 0 018.5 2a.9.9 0 01.54.21c.13.1.24.22.35.35.07.09.11.2.11.32V6.5H8.41a1.5 1.5 0 100 1H9.5v9.42a.5.5 0 01-.18.38c-.47.38-1.08.7-1.82.7-1.19 0-2.07-.6-2.64-1.31a4.06 4.06 0 01-.82-1.76c-.33-.08-.7-.25-1.05-.55A3 3 0 012 12c0-.56.04-1.06.12-1.5h3.13c.64 0 1.16.47 1.24 1.09a1.5 1.5 0 101 0A2.25 2.25 0 005.25 9.5h-2.8a1.9 1.9 0 01.83-.85c-.29-.83-.21-1.8.06-2.57.18-.49.45-.96.84-1.27.25-.2.55-.34.88-.36.14-.68.55-1.25 1.07-1.66zm4.37 11.7h.75c1.24 0 2.25-1 2.25-2.25v-1.84a1.5 1.5 0 10-1 0v1.84c0 .69-.56 1.25-1.25 1.25h-.75V2.88a.5.5 0 01.11-.32c.1-.13.22-.25.35-.35A.9.9 0 0111.5 2c.85 0 1.71.28 2.37.8.52.4.93.97 1.07 1.65.33.02.63.16.88.36.39.31.66.78.84 1.27.27.77.35 1.74.06 2.57l.21.12c.28.19.49.45.64.76.3.6.43 1.44.43 2.47a3 3 0 01-.99 2.38c-.34.3-.72.47-1.05.55-.1.56-.38 1.2-.82 1.76A3.34 3.34 0 0112.5 18c-.74 0-1.35-.32-1.82-.7a.5.5 0 01-.18-.38V14.5zM7 6.5a.5.5 0 100 1 .5.5 0 000-1zm0 6a.5.5 0 100 1 .5.5 0 000-1zm6-3a.5.5 0 100-1 .5.5 0 000 1z"></path></svg>`,
	4,
)

function BrainCircuitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.15 6.85a.5.5 0 00.7-.7L10.71 5h1.79A2.5 2.5 0 0115 7.5V12a3 3 0 101 .17V7.5A3.5 3.5 0 0012.5 4h-1.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2a.5.5 0 000 .7l2 2zM5 8a3 3 0 10-1-.17v4.67A3.5 3.5 0 007.5 16h1.8l-1.15 1.15a.5.5 0 00.7.7l2-2a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L9.29 15H7.5A2.5 2.5 0 015 12.5V8z"></path></svg>`,
	4,
)

function BranchCompareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a3 3 0 00-.5 5.96v3.79a.5.5 0 001 0V11H12a2.5 2.5 0 002.5-2.5v-.54a3 3 0 10-1 0v.54c0 .83-.67 1.5-1.5 1.5H6.5V7.96A3 3 0 006 2zM4.87 13.4a.5.5 0 10-.58-.8 3.02 3.02 0 00-1.12 1.54.5.5 0 10.96.3 1.99 1.99 0 01.74-1.03zm2.9-.8a.5.5 0 10-.57.8 2.02 2.02 0 01.75 1.04.5.5 0 10.95-.3 2.99 2.99 0 00-1.12-1.55zM4.3 16a.5.5 0 00-.88.5 3 3 0 001.38 1.27.5.5 0 10.42-.91 2 2 0 01-.92-.85zm4.37.5a.5.5 0 00-.87-.5 2 2 0 01-.98.88.5.5 0 10.38.92 3 3 0 001.47-1.3z"></path></svg>`,
	4,
)

function BranchForkHintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 5a3 3 0 01-2.5 2.96V10H12c.83 0 1.5-.67 1.5-1.5v-.54a3 3 0 111 0v.54A2.5 2.5 0 0112 11H6.5v1.04a3 3 0 11-1 0V7.96A3 3 0 119 5z"></path></svg>`,
	4,
)

function BranchForkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 7.96a3 3 0 10-1 0v4.08a3 3 0 101 0V11H11a2.5 2.5 0 002.5-2.5v-.54a3 3 0 10-1 0v.54c0 .83-.67 1.5-1.5 1.5H5.5V7.96zm7 5.04a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function BranchForkLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5a3 3 0 01-2.15 2.88A5.76 5.76 0 0012 9.98a3 3 0 11.17 1.01A6.8 6.8 0 017.5 9v3.05a3 3 0 11-1 0V7.96A3 3 0 1110 5z"></path></svg>`,
	4,
)

function BranchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ry = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 5a3 3 0 01-2.5 2.96v4.08a3 3 0 11-1 0V7.96A3 3 0 118 5zm3.85 1.85a.5.5 0 01-.7 0l-2-2a.5.5 0 010-.7l2-2a.5.5 0 01.7.7L10.71 4h1.79A3.5 3.5 0 0116 7.5v4.67a3 3 0 11-1-.17V7.5A2.5 2.5 0 0012.5 5h-1.8l1.15 1.15c.2.2.2.5 0 .7z"></path></svg>`,
	4,
)

function BranchRequestIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ry.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3h-3.35A3.99 3.99 0 0012 14v-2a4 4 0 00-4-4H6c-1.2 0-2.27.52-3 1.35V6zm3 3a3 3 0 00-3 3v2a3 3 0 003 3h2a3 3 0 003-3v-2a3 3 0 00-3-3H6z"></path></svg>`,
	4,
)

function BreakoutRoomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 3.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5V6h1.5A2.5 2.5 0 0117 8.5v5a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 13.5v-5A2.5 2.5 0 015.5 6H7V3.5zM12 6V4H8v2h4z"></path></svg>`,
	4,
)

function BriefcaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 3a.5.5 0 00-.5.5V6H5a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V9a3 3 0 00-3-3h-2V3.5a.5.5 0 00-.5-.5h-5zM12 6H8V4h4v2zm-2 3c.28 0 .5.22.5.5v2h2a.5.5 0 010 1h-2v2a.5.5 0 01-1 0v-2h-2a.5.5 0 010-1h2v-2c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function BriefcaseMedicalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ru = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L5.3 6.01A2.5 2.5 0 003 8.5v5A2.5 2.5 0 005.5 16h9c.24 0 .47-.03.7-.1l1.95 1.95a.5.5 0 00.7-.7l-1.73-1.74L2.85 2.15zM17 13.5c0 .4-.1.78-.26 1.12L8.12 6H12V4H8v1.88l-1-1V3.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5V6h1.5A2.5 2.5 0 0117 8.5v5z"></path></svg>`,
	4,
)

function BriefcaseOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ru.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zM10 6a4 4 0 110 8 4 4 0 010-8zm3 4a3 3 0 00-3-3v6a3 3 0 003-3zm5 0a.5.5 0 01-.5.5h-1a.5.5 0 010-1h1c.28 0 .5.22.5.5zm-7.5 6.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zM4 10a.5.5 0 01-.5.5H2.46a.5.5 0 010-1H3.5c.28 0 .5.22.5.5zm.85-5.85a.5.5 0 10-.7.7l1 1a.5.5 0 10.7-.7l-1-1zm-.7 11.7c.2.2.5.2.7 0l1-1a.5.5 0 00-.7-.7l-1 1a.5.5 0 000 .7zm11-11.7a.5.5 0 01.7.7l-1 1a.5.5 0 01-.7-.7l1-1zm.7 11.7a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l1 1c.2.2.2.5 0 .7z"></path></svg>`,
	4,
)

function BrightnessHighIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3c.28 0 .5.22.5.5v1a.5.5 0 01-1 0v-1c0-.28.22-.5.5-.5zm0 3a4 4 0 100 8 4 4 0 000-8zm0 7V7a3 3 0 110 6zm6.5-2.5a.5.5 0 000-1h-1a.5.5 0 000 1h1zM10 15c.28 0 .5.22.5.5v1a.5.5 0 01-1 0v-1c0-.28.22-.5.5-.5zm-5.5-4.5a.5.5 0 000-1h-1a.5.5 0 000 1h1zm.65-5.35c.2-.2.5-.2.7 0l.5.5a.5.5 0 11-.7.7l-.5-.5a.5.5 0 010-.7zm.7 9.7a.5.5 0 01-.7-.7l.5-.5a.5.5 0 01.7.7l-.5.5zm9-9.7a.5.5 0 00-.7 0l-.5.5a.5.5 0 00.7.7l.5-.5a.5.5 0 000-.7zm-.7 9.7a.5.5 0 00.7-.7l-.5-.5a.5.5 0 00-.7.7l.5.5z"></path></svg>`,
	4,
)

function BrightnessLowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 3C2.67 3 2 3.67 2 4.5v4c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-13zm0 9c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5h-4zm9 0c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5h-4z"></path></svg>`,
	4,
)

function BroadActivityFeedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.91 2.18c.2.2.2.51 0 .7L13.3 7.5a5.6 5.6 0 00-.7-.7l4.6-4.62c.2-.2.51-.2.71 0zm-5.66 5.66a4.5 4.5 0 00-6.36 0l-.42.42 6.36 6.36.42-.42a4.5 4.5 0 000-6.36zm-10.5 2.75l2.9-1.74 6.5 6.5a.5.5 0 00.1.08L9.5 18.35a.5.5 0 01-.78.1l-7.07-7.08a.5.5 0 01.1-.78z"></path></svg>`,
	4,
)

function BroomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 3.5a.5.5 0 00-1 0v2A1.5 1.5 0 0114.5 7H14a3 3 0 00-2.31-2.92A2 2 0 0012 3v-.5a.5.5 0 00-1 0V3a1 1 0 01-2 0v-.5a.5.5 0 10-1 0V3c0 .38.1.76.31 1.08A3 3 0 006 7h-.5A1.5 1.5 0 014 5.5v-2a.5.5 0 10-1 0v2A2.5 2.5 0 005.5 8H6v1.5H2.5a.5.5 0 100 1H6V12h-.5A2.5 2.5 0 003 14.5v2a.5.5 0 001 0v-2A1.5 1.5 0 015.5 13H6a3.99 3.99 0 003.59 3.96A5.49 5.49 0 0114 9.02V8h.5A2.5 2.5 0 0017 5.5v-2zM14.5 10a4.5 4.5 0 100 9 4.5 4.5 0 000-9zm0 7.25a2.74 2.74 0 01-2.05-.92.5.5 0 11.75-.66 1.75 1.75 0 10.4-2.67h.4a.5.5 0 010 1h-1.5a.5.5 0 01-.5-.63V12a.5.5 0 011 0v.2a2.75 2.75 0 111.5 5.05z"></path></svg>`,
	4,
)

function BugArrowCounterclockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ro = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2.5a.5.5 0 00-1 0V3c0 .4.12.77.32 1.08A3 3 0 006 7h-.5A1.5 1.5 0 014 5.5v-2a.5.5 0 00-1 0v2A2.5 2.5 0 005.5 8H6v1.5H2.5a.5.5 0 000 1H6V12h-.5A2.5 2.5 0 003 14.5v2a.5.5 0 001 0v-2c0-.83.67-1.5 1.5-1.5H6a4 4 0 008 0h.5c.83 0 1.5.67 1.5 1.5v2a.5.5 0 001 0v-2a2.5 2.5 0 00-2.5-2.5H14v-1.5h3.5a.5.5 0 000-1H14V8h.5A2.5 2.5 0 0017 5.5v-2a.5.5 0 00-1 0v2c0 .83-.67 1.5-1.5 1.5H14a3 3 0 00-2.32-2.92A2 2 0 0012 3v-.5a.5.5 0 00-1 0V3a1 1 0 11-2 0v-.5z"></path></svg>`,
	4,
)

function BugIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ro.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 10a4.5 4.5 0 100 9 4.5 4.5 0 000-9zM11 14.5a3.5 3.5 0 015.6-2.8l-4.9 4.9c-.46-.6-.7-1.34-.7-2.1zm3.5 3.5c-.76 0-1.5-.24-2.1-.7l4.9-4.9a3.48 3.48 0 01-.33 4.57A3.5 3.5 0 0114.5 18zM17 3.5a.5.5 0 00-1 0v2A1.5 1.5 0 0114.5 7H14a3 3 0 00-2.31-2.92A2 2 0 0012 3v-.5a.5.5 0 00-1 0V3a1 1 0 01-2 0v-.5a.5.5 0 10-1 0V3c0 .38.1.76.31 1.08A3 3 0 006 7h-.5A1.5 1.5 0 014 5.5v-2a.5.5 0 10-1 0v2A2.5 2.5 0 005.5 8H6v1.5H2.5a.5.5 0 100 1H6V12h-.5A2.5 2.5 0 003 14.5v2a.5.5 0 001 0v-2A1.5 1.5 0 015.5 13H6a3.99 3.99 0 003.59 3.96 5.46 5.46 0 01.85-6.17A5.5 5.5 0 0114 9.03V8h.5A2.5 2.5 0 0017 5.5v-2z"></path></svg>`,
	4,
)

function BugProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.23 2.18a1.33 1.33 0 011.54 0l5.85 4.15A.92.92 0 0116.1 8H3.9a.92.92 0 01-.52-1.67l5.85-4.15zm.77 3.7a.83.83 0 100-1.67.83.83 0 000 1.66zM4.5 9v4h2V9h-2zM3 16.17c0-1.2.97-2.17 2.17-2.17h9.66c1.2 0 2.17.97 2.17 2.17v.33a.5.5 0 01-.5.5h-13a.5.5 0 01-.5-.5v-.33zM15.5 9v4h-2V9h2zm-3 0v4h-2V9h2zm-3 0v4h-2V9h2z"></path></svg>`,
	4,
)

function BuildingBankIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.23 2.18a1.33 1.33 0 011.54 0l5.85 4.15A.92.92 0 0116.1 8H3.9a.92.92 0 01-.52-1.67l5.85-4.15zm.77 3.7a.83.83 0 100-1.67.83.83 0 000 1.66zM4.5 9v4h2V9h-2zM3 16.17c0-1.2.97-2.17 2.17-2.17h3.17a3.49 3.49 0 000 3H3.5a.5.5 0 01-.5-.5v-.33zM9.05 13c.14-.14.29-.26.45-.37V9h-2v4h1.55zm2.45-1h1V9h-2v3.14c.32-.09.65-.14 1-.14zm2 0h2V9h-2v3zm-2 1a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 100 1h.5a1.5 1.5 0 010 3H15a.5.5 0 100 1h.5a2.5 2.5 0 000-5H15zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 110 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function BuildingBankLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.23 2.18a1.33 1.33 0 011.54 0l5.85 4.15A.92.92 0 0115.1 8H2.9a.92.92 0 01-.52-1.67l5.85-4.15zM9 5.88A.83.83 0 109 4.2a.83.83 0 000 1.66zM3.5 9v4h2V9h-2zm.67 5C2.97 14 2 14.97 2 16.17v.33c0 .28.22.5.5.5H9v-3H4.17zm7.33-4V9h-2v3c.37-.5.91-.84 1.54-.96.07-.38.23-.74.46-1.04zm-3 3V9h-2v4h2zm3.5-1v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 4.5h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 101 0V16h3v.5a.5.5 0 101 0V16z"></path></svg>`,
	4,
)

function BuildingBankToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.94 3.4c.05-.79.7-1.4 1.5-1.4h1.12c.8 0 1.45.61 1.5 1.4l.87 13a1.5 1.5 0 01-1.5 1.6H3.57a1.5 1.5 0 01-1.5-1.6l.87-13zM8.44 18c.34-.46.53-1.04.49-1.67L8.4 8.51l3.76-3.38a.5.5 0 01.84.37v3.38l4.16-3.75a.5.5 0 01.84.37v11c0 .83-.67 1.5-1.5 1.5H8.43zM16 17v-4.2a.8.8 0 00-.8-.8h-3.4a.8.8 0 00-.8.8V17h5z"></path></svg>`,
	4,
)

function BuildingFactoryIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ri = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 2a.5.5 0 00-.5.5v2.6A5 5 0 005 10v1H4a2 2 0 00-2 2v4a1 1 0 001 1h4.5a.5.5 0 00.5-.5v-2c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5v2c0 .28.22.5.5.5H17a1 1 0 001-1v-4a2 2 0 00-2-2h-1v-1a5 5 0 00-5-5V4h2.5a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-3zM6 13.5v2a.5.5 0 01-1 0v-2a.5.5 0 011 0zm8.5-.5c.28 0 .5.22.5.5v2a.5.5 0 01-1 0v-2c0-.28.22-.5.5-.5zM9 9.5v2a.5.5 0 01-1 0v-2a.5.5 0 011 0zm2.5-.5c.28 0 .5.22.5.5v2a.5.5 0 01-1 0v-2c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function BuildingGovernmentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ri.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 2C2.56 2 2 2.56 2 3.25v10.5c0 .69.56 1.25 1.25 1.25H7.5v-1.74c0-.68.3-1.33.82-1.78l3.47-2.96c.35-.3.78-.47 1.21-.52v-.75C13 6.56 12.44 6 11.75 6h-1.5a.25.25 0 01-.25-.25v-2.5C10 2.56 9.44 2 8.75 2h-5.5zm1.5 3.5a.75.75 0 110-1.5.75.75 0 010 1.5zM5.5 7A.75.75 0 114 7a.75.75 0 011.5 0zm-.75 3a.75.75 0 110-1.5.75.75 0 010 1.5zM8 4.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75 3a.75.75 0 110-1.5.75.75 0 010 1.5zM8 9.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm6.06.03c-.47-.4-1.15-.4-1.62 0l-3.47 2.96c-.3.26-.47.63-.47 1.02v4.61C8.5 18.5 9 19 9.63 19h1.74c.63 0 1.13-.5 1.13-1.13v-1.75c0-.06.06-.12.13-.12h1.24c.07 0 .13.06.13.13v1.74c0 .63.5 1.13 1.13 1.13h1.74c.63 0 1.13-.5 1.13-1.13v-4.61c0-.4-.17-.76-.47-1.02l-3.47-2.96zm-.97.77c.1-.08.23-.08.32 0L16.88 13c.08.07.12.16.12.26v4.61c0 .07-.06.13-.13.13h-1.75a.12.12 0 01-.12-.13v-1.75c0-.62-.5-1.12-1.13-1.12h-1.24c-.63 0-1.13.5-1.13 1.13v1.74c0 .07-.06.13-.13.13H9.63a.12.12 0 01-.13-.13v-4.61c0-.1.04-.2.12-.26l3.47-2.95z"></path></svg>`,
	4,
)

function BuildingHomeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.5C4 2.67 4.67 2 5.5 2h6c.83 0 1.5.67 1.5 1.5V8h1.5c.83 0 1.5.67 1.5 1.5v8a.5.5 0 01-.5.5H13v-3.5a.5.5 0 00-.5-.5h-5a.5.5 0 00-.5.5V18H4.5a.5.5 0 01-.5-.5v-14zm2.75 3a.75.75 0 100-1.5.75.75 0 000 1.5zm.75 2.25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-.75 3.75a.75.75 0 100-1.5.75.75 0 000 1.5zm3.75-6.75a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM9.75 9.5a.75.75 0 100-1.5.75.75 0 000 1.5zm.75 2.25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm2.25.75a.75.75 0 100-1.5.75.75 0 000 1.5zM12 15v3h-1.5v-3H12zm-2.5 0H8v3h1.5v-3z"></path></svg>`,
	4,
)

function BuildingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.25 2.07a.5.5 0 00-.5 0L5.57 3.88A1.13 1.13 0 006 6v2.2a2 2 0 00-1.15 1.59l-.79 7.11a1 1 0 001 1.11h7.88a1 1 0 001-1.11l-.8-7.11A2 2 0 0012 8.18v-.17V6a1.13 1.13 0 00.43-2.12L9.25 2.07zM11 8H7V6h4v2zm-5.48 4.88l6.76-1.8.22 1.9-7.2 1.92.22-2.02zM16.5 7h-2a.5.5 0 110-1h2a.5.5 0 010 1zm-.65-3.15a.5.5 0 10-.7-.7l-1 1a.5.5 0 00.7.7l1-1zm0 6a.5.5 0 000-.7l-1-1a.5.5 0 10-.7.7l1 1c.2.2.5.2.7 0z"></path></svg>`,
	4,
)

function BuildingLighthouseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$re = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 00-2 2v13a1 1 0 001 1h7.5a.5.5 0 00.5-.5v-2c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5v2c0 .28.22.5.5.5H17a1 1 0 001-1V7a2 2 0 00-2-2h-4V4a2 2 0 00-2-2H4zm7 3h-1a2 2 0 00-2 2v10H3V4a1 1 0 011-1h6a1 1 0 011 1v1zM5.25 9.5a.75.75 0 100-1.5.75.75 0 000 1.5zM6 5.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75 9.75a.75.75 0 100-1.5.75.75 0 000 1.5zM6 11.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm5.25-2.25a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.75-2.25a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"></path></svg>`,
	4,
)

function BuildingMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$re.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 10V8h8v2H6zm6 4v-1h2v1h-2zm6-9.5c0 .65-.42 1.2-1 1.41V16.5a.5.5 0 01-.5.5H10v-4.5a.5.5 0 00-.5-.5h-4a.5.5 0 00-.5.5V17H3.5a.5.5 0 01-.5-.5V5.91A1.5 1.5 0 013.5 3h13c.83 0 1.5.67 1.5 1.5zm-15 0c0 .28.22.5.5.5h13a.5.5 0 000-1h-13a.5.5 0 00-.5.5zM5.5 7a.5.5 0 00-.5.5v3c0 .28.22.5.5.5h9a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-9zm6 5a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h3a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-3zM6 17h3v-4H6v4z"></path></svg>`,
	4,
)

function BuildingRetailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 10V8h8v2H6zm11-4.09A1.5 1.5 0 0016.5 3h-13A1.5 1.5 0 003 5.91V16.5c0 .28.22.5.5.5H5v-4.5c0-.28.22-.5.5-.5h4c.2 0 .38.12.46.3.3-.2.66-.3 1.04-.3h6V5.91zM3.5 4h13a.5.5 0 010 1h-13a.5.5 0 010-1zM5 7.5c0-.28.22-.5.5-.5h9c.28 0 .5.22.5.5v3a.5.5 0 01-.5.5h-9a.5.5 0 01-.5-.5v-3zM9 13v4H6v-4h3zm8.5 0c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5v-3c0-.83.67-1.5 1.5-1.5h6zm0 5c0-.28.22-.5.5-.5v-1c-.83 0-1.5.67-1.5 1.5h1zm.5-3.5a.5.5 0 01-.5-.5h-1c0 .83.67 1.5 1.5 1.5v-1zm-6.5-.5a.5.5 0 01-.5.5v1c.83 0 1.5-.67 1.5-1.5h-1zm-.5 3.5c.28 0 .5.22.5.5h1c0-.83-.67-1.5-1.5-1.5v1zm3.5-3a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"></path></svg>`,
	4,
)

function BuildingRetailMoneyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$rb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.3a1 1 0 01.7-.3h10.6a1 1 0 01.7.3l2.64 2.63c.76.77.22 2.07-.85 2.07H2.2a1.21 1.21 0 01-.85-2.07L4 3.3zM17 9H3v6c0 1.1.9 2 2 2h10a2 2 0 002-2V9zM7 13a1 1 0 110-2 1 1 0 010 2zm3 0a1 1 0 110-2 1 1 0 010 2zm3 0a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function BuildingRetailMoreIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$rb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ra = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.5c0 .65-.42 1.2-1 1.41v3.36c-.34-.24-.63-.5-.85-.73A1.6 1.6 0 0015 8.06V7.5a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v3c0 .28.22.5.5.5h4.58a1.5 1.5 0 00-.08.5V13v-.5a.5.5 0 00-.5-.5h-4a.5.5 0 00-.5.5V17H3.5a.5.5 0 01-.5-.5V5.91A1.5 1.5 0 013.5 3h13c.83 0 1.5.67 1.5 1.5zm-15 0c0 .28.22.5.5.5h13a.5.5 0 000-1h-13a.5.5 0 00-.5.5zM14 8v.4l-.15.14A4.71 4.71 0 0111.22 10H6V8h8zm-5 5H6v4h3v-4zm9.5-2.04a5.69 5.69 0 01-3.06-1.72.62.62 0 00-.88 0 5.7 5.7 0 01-3.06 1.72c-.27.04-.5.26-.5.54V14c0 3.47 3.18 4.73 3.87 4.96a.4.4 0 00.26 0c.69-.23 3.87-1.5 3.87-4.96v-2.5c0-.28-.23-.5-.5-.54z"></path></svg>`,
	4,
)

function BuildingRetailShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ra.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.91A1.5 1.5 0 0016.5 3h-13A1.5 1.5 0 003 5.91V16.5c0 .28.22.5.5.5H5v-4.5c0-.28.22-.5.5-.5h4c.37-.5.91-.84 1.54-.96l.01-.04H5.5a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5h9c.28 0 .5.22.5.5V9h.5c.56 0 1.08.19 1.5.5V5.91zM3.5 4h13a.5.5 0 010 1h-13a.5.5 0 010-1zM9 13v4H6v-4h3zm4.5-4h.5V8H6v2h5.5c.46-.6 1.18-1 2-1zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function BuildingRetailToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 12h2v2h-2v-2zM5 2h10a.5.5 0 01.38.18l2.5 3c.12.14.12.21.12.3V7a3 3 0 01-1 2.24v8.26a.5.5 0 01-.5.5H10v-6.5a.5.5 0 00-.5-.5h-4a.5.5 0 00-.5.5V18H3.5a.5.5 0 01-.5-.5V9.24A3 3 0 012 7V5.5a.5.5 0 01.12-.32l2.5-3A.5.5 0 015 2zM3 6v1a2 2 0 104 0V6H3zm5 0v1a2 2 0 104 0V6H8zm5 0v1a2 2 0 104 0V6h-4zM5.23 3L3.57 5h3.57l.67-2H5.23zm6.58 2l-.67-2H8.86l-.67 2h3.62zm1.05 0h3.57l-1.66-2h-2.58l.67 2zM11 11.5v3c0 .28.22.5.5.5h3a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-3a.5.5 0 00-.5.5zM9 18v-6H6v6h3z"></path></svg>`,
	4,
)

function BuildingShopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5V3H7v-.5zM5.46 4a.5.5 0 00-.46.5V5h6v-.5a.5.5 0 00-.46-.5H5.46zm8.29 11a.75.75 0 100-1.5.75.75 0 000 1.5zm.75-3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM5 6h6v.02c.6.34 1 .99 1 1.73V8h.5a4.5 4.5 0 014.5 4.5v4a.5.5 0 01-.5.5H9v-2.5a.5.5 0 00-.5-.5h-1a.5.5 0 00-.5.5V17H4.5a.5.5 0 01-.5-.5V7.75a2 2 0 011-1.73V6zm7 10h4v-3.5A3.5 3.5 0 0012.5 9H12v7zM7.5 8.75a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm1.75.75a.75.75 0 100-1.5.75.75 0 000 1.5zM7.5 11.25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm1.75.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function BuildingSkyscraperIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 2h-7A2.5 2.5 0 004 4.5v11A2.5 2.5 0 006.5 18h3.77a5.48 5.48 0 01-.64-6.07 1 1 0 111.17-1.52A5.48 5.48 0 0116 9.19V4.5A2.5 2.5 0 0013.5 2zm-6 2h5c.83 0 1.5.67 1.5 1.5v1c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 016 6.5v-1C6 4.67 6.67 4 7.5 4zm.5 7a1 1 0 11-2 0 1 1 0 012 0zm0 3a1 1 0 11-2 0 1 1 0 012 0zm9.5-1.52a.5.5 0 00.5-.5v-2a.5.5 0 00-1 0v.76a4.5 4.5 0 102 3.74.5.5 0 10-1 0 3.5 3.5 0 11-1.7-3h-.8a.5.5 0 100 1h2z"></path></svg>`,
	4,
)

function CalculatorArrowClockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 2h-7A2.5 2.5 0 004 4.5v11A2.5 2.5 0 006.5 18h7a2.5 2.5 0 002.5-2.5v-11A2.5 2.5 0 0013.5 2zm-6 2h5c.83 0 1.5.67 1.5 1.5v1c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 016 6.5v-1C6 4.67 6.67 4 7.5 4zm.5 7a1 1 0 11-2 0 1 1 0 012 0zm0 3a1 1 0 11-2 0 1 1 0 012 0zm5-2a1 1 0 110-2 1 1 0 010 2zm1 2a1 1 0 11-2 0 1 1 0 012 0zm-4-2a1 1 0 110-2 1 1 0 010 2zm1 2a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function CalculatorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2A2.5 2.5 0 003 4.5v9A2.5 2.5 0 005.5 16h7a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0012.5 2h-7zM5 5a1 1 0 011-1h6a1 1 0 011 1v2a1 1 0 01-1 1H6a1 1 0 01-1-1V5zm0 5a1 1 0 112 0 1 1 0 01-2 0zm4-1a1 1 0 110 2 1 1 0 010-2zm0 2.75a1 1 0 110 2 1 1 0 010-2zM11 10a1 1 0 112 0 1 1 0 01-2 0zm1 1.75a1 1 0 110 2 1 1 0 010-2zm-6 0a1 1 0 110 2 1 1 0 010-2zM7.5 18a2.5 2.5 0 01-2-1h7a3.5 3.5 0 003.5-3.5v-9c.6.46 1 1.18 1 2v7a4.5 4.5 0 01-4.5 4.5h-5z"></path></svg>`,
	4,
)

function CalculatorMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9zm-8 3a.5.5 0 00-.5.41v7.18a.5.5 0 001 0V6.41A.5.5 0 006.5 6zM10 6a.5.5 0 00-.5.41v7.18a.5.5 0 001 0V6.41A.5.5 0 0010 6zm3.5 0a.5.5 0 00-.5.41v7.18a.5.5 0 001 0V6.41a.5.5 0 00-.5-.41z"></path></svg>`,
	4,
)

function Calendar3DayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function CalendarAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 14.5a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9zm-3-8a.5.5 0 00-.41-.5H6.41a.5.5 0 000 1h7.18a.5.5 0 00.41-.5zm0 3.5a.5.5 0 00-.41-.5H6.41a.5.5 0 000 1h7.18A.5.5 0 0014 10zm0 3.5a.5.5 0 00-.41-.5H6.41a.5.5 0 000 1h7.18a.5.5 0 00.41-.5z"></path></svg>`,
	4,
)

function CalendarAgendaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5V6h14v-.5A2.5 2.5 0 0014.5 3h-9zM17 7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6V7zm2 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.85 2.35a.5.5 0 00.35.15.5.5 0 00.35-.15l2-2a.5.5 0 00-.7-.7L15 15.29V12.5a.5.5 0 00-1 0v2.8l-1.15-1.15a.5.5 0 00-.7.7l2 2z"></path></svg>`,
	4,
)

function CalendarArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zm0 4.1V7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6zm2 4.9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function CalendarArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm0 16a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-1.1-7.17a.5.5 0 01.48-.33h1.18a.5.5 0 01.47.66l-.28.84H16a.5.5 0 01.42.77l-2.25 3.5a.5.5 0 01-.9-.4l.5-1.87H13a.5.5 0 01-.47-.67l.88-2.5z"></path></svg>`,
	4,
)

function CalendarAssistantIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.5.7l1.15 1.15a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14z"></path></svg>`,
	4,
)

function CalendarCancelIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5V6h14v-.5A2.5 2.5 0 0014.5 3h-9zM17 7H3v7.5A2.5 2.5 0 005.5 17h3.92l.07-.23A5.48 5.48 0 0114.5 9c.9 0 1.75.22 2.5.6V7zm-7 7.5c0 .8.2 1.54.56 2.18l-.54 1.8c-.1.3.2.6.51.5l1.79-.54A4.5 4.5 0 1010 14.5zm2.5-1.5h4a.5.5 0 010 1h-4a.5.5 0 110-1zm-.5 2.5c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function CalendarChatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function CalendarCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zm0 4.1V7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.5-6.5a.5.5 0 011 0V14h1a.5.5 0 010 1h-1.5a.5.5 0 01-.5-.5v-2z"></path></svg>`,
	4,
)

function CalendarClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 17H10v-2a2 2 0 013-1.73V11a2 2 0 114 0V7H3v7.5A2.5 2.5 0 005.5 17zm9-14A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm.5 7a1 1 0 00-1 1v7a1 1 0 102 0v-7a1 1 0 00-1-1zm-3 4a1 1 0 00-1 1v3a1 1 0 102 0v-3a1 1 0 00-1-1zm5-1a1 1 0 112 0v5a1 1 0 11-2 0v-5z"></path></svg>`,
	4,
)

function CalendarDataBarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9zm-1.78 6H7.28c-.44 0-.6.05-.77.13a.9.9 0 00-.38.38c-.07.14-.12.29-.13.62v2.59c0 .44.05.6.13.77.1.16.22.29.38.38.14.07.29.12.62.13H12.72c.44 0 .6-.05.77-.13a.9.9 0 00.38-.38c.07-.14.12-.29.13-.62v-2.59c0-.44-.05-.6-.13-.77a.9.9 0 00-.38-.38 1.24 1.24 0 00-.62-.13h-.15zm.2 1h.07V13H7.01v-2.98h5.9zm.58-4H6.41a.5.5 0 000 1h7.18a.5.5 0 000-1h-.09z"></path></svg>`,
	4,
)

function CalendarDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2c-.7.03-1.37.31-1.9.84l-4.83 4.83c-.4.4-.7.92-.84 1.48l-.21.85H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm-3.52 12.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.08l.37-1.5c.1-.38.3-.73.58-1.01z"></path></svg>`,
	4,
)

function CalendarEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v7.5a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9z"></path></svg>`,
	4,
)

function CalendarEmptyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5V6h14v-.5A2.5 2.5 0 0014.5 3h-9zM17 7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6V7zm2 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function CalendarErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm-.63 9.5a.62.62 0 111.25 0 .62.62 0 01-1.24 0zm1.13 4a.5.5 0 01-1 0v-2a.5.5 0 011 0v2zm-5-2a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm1 0a3.5 3.5 0 107 0 3.5 3.5 0 00-7 0z"></path></svg>`,
	4,
)

function CalendarInfoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5V6h14v-.5A2.5 2.5 0 0014.5 3h-9zM17 7H3v7.5A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5V7zm-9 3a1 1 0 11-2 0 1 1 0 012 0zm-1 4a1 1 0 110-2 1 1 0 010 2zm4-4a1 1 0 11-2 0 1 1 0 012 0zm-1 4a1 1 0 110-2 1 1 0 010 2zm4-4a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function CalendarLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5V5h12v-.5A2.5 2.5 0 0011.5 2h-7zM14 6H2v5.5A2.5 2.5 0 004.5 14H5v-3a3 3 0 013-3h6V6zm-7.93 4.48A2 2 0 018 9h8a2 2 0 011.93 1.48L12 13.96l-5.93-3.48zm6.31 4.42L18 11.6V16a2 2 0 01-2 2H8a2 2 0 01-2-2v-4.4l5.62 3.3c.23.14.53.14.76 0z"></path></svg>`,
	4,
)

function CalendarMailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v3.42A4.98 4.98 0 0010 15c0 .71.15 1.39.42 2H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm.5 9a3 3 0 101.28 5.71.5.5 0 11.44.9A4 4 0 1119 15v.51a1.5 1.5 0 01-2.65.97A2 2 0 0113 15a2 2 0 013.17-1.62.5.5 0 01.83.37v1.75a.5.5 0 101 0V15a3 3 0 00-3-3zm-1 3a1 1 0 102 0 1 1 0 00-2 0z"></path></svg>`,
	4,
)

function CalendarMentionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9zM7 11a1 1 0 100 2 1 1 0 000-2zm3 0a1 1 0 100 2 1 1 0 000-2zM7 7a1 1 0 100 2 1 1 0 000-2zm3 0a1 1 0 100 2 1 1 0 000-2zm3 0a1 1 0 100 2 1 1 0 000-2z"></path></svg>`,
	4,
)

function CalendarMonthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 13.5V6H2v7.5A2.5 2.5 0 004.5 16h9a2.5 2.5 0 002.5-2.5zm0-9A2.5 2.5 0 0013.5 2h-9A2.5 2.5 0 002 4.5V5h14v-.5zM5 17c.46.6 1.18 1 2 1h6.5a4.5 4.5 0 004.5-4.5v-7c0-.82-.4-1.54-1-2v9a3.5 3.5 0 01-3.5 3.5H5z"></path></svg>`,
	4,
)

function CalendarMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.75 3h8.5A2.75 2.75 0 0117 5.75v8.5A2.75 2.75 0 0114.25 17h-8.5A2.75 2.75 0 013 14.25v-8.5A2.75 2.75 0 015.75 3zM4.5 5.75V7h11V5.75c0-.69-.56-1.25-1.25-1.25h-8.5c-.69 0-1.25.56-1.25 1.25zM14.7 8l-4 4h2.6l2.2-2.2V8h-.8zm-1.4 0h-2.6l-4 4h2.6l4-4zm-8 4l4-4H6.7l-2.2 2.2V12h.8zm-.8-3.2l.8-.8h-.8v.8zM14.7 12h.8v-.8l-.8.8z"></path></svg>`,
	4,
)

function CalendarPatternIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.4a3 3 0 00-3.73 4.6 2.5 2.5 0 00-2.23 3H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm3 9a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function CalendarPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v1.05a2.51 2.51 0 00-.5-.05h-3a2.5 2.5 0 00-2.5 2.5v6c0 .17.02.34.05.5H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm-.75 6c-.97 0-1.75.78-1.75 1.75v5.5c0 .97.78 1.75 1.75 1.75h2.5c.97 0 1.75-.78 1.75-1.75v-5.5C18 9.78 17.22 9 16.25 9h-2.5zm.25 6.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function CalendarPhoneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zm0 4.1V7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.62-2a.62.62 0 111.24 0 .62.62 0 01-1.24 0zm-1.23-3.54c-.01-1.14.8-1.96 1.85-1.96 1.03 0 1.85.85 1.85 1.95 0 .59-.21.91-.72 1.32l-.28.22c-.25.19-.33.3-.35.44v.16a.5.5 0 01-1-.09c0-.57.21-.88.72-1.29l.27-.21c.3-.23.36-.35.36-.55 0-.55-.38-.95-.85-.95-.5 0-.86.37-.85.95a.5.5 0 11-1 0z"></path></svg>`,
	4,
)

function CalendarQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm0 16a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function CalendarReplyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zM3 7h14v7.5a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5V7zm9 3a1 1 0 102 0 1 1 0 00-2 0zm1 4a1 1 0 100-2 1 1 0 000 2zm-4-4a1 1 0 102 0 1 1 0 00-2 0zm1 4a1 1 0 100-2 1 1 0 000 2zm-4-4a1 1 0 102 0 1 1 0 00-2 0z"></path></svg>`,
	4,
)

function CalendarRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 14.5V7H3v2.47a4.5 4.5 0 016.06 5.97L10.62 17h3.88a2.5 2.5 0 002.5-2.5zm0-9A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zM7.1 16.3a3.5 3.5 0 11.7-.7l2.55 2.55a.5.5 0 01-.7.7L7.1 16.3zm.4-2.8a2.5 2.5 0 10-5 0 2.5 2.5 0 005 0z"></path></svg>`,
	4,
)

function CalendarSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zm-2.43 8.44a2 2 0 01-1.43 2.48l-.47.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function CalendarSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zm0 4.1V7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6zm2 4.9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.02-2.64a.5.5 0 00-.96 0l-.47 1.53H12c-.48 0-.69.65-.3.95l1.26.94-.48 1.53c-.15.49.38.89.77.59l1.25-.95 1.25.95c.4.3.92-.1.77-.59l-.48-1.53 1.25-.94c.4-.3.2-.95-.3-.95h-1.54l-.47-1.53z"></path></svg>`,
	4,
)

function CalendarStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 7v2.6A5.5 5.5 0 009.6 17H5.5A2.5 2.5 0 013 14.5V7h14zm-2.5-4A2.5 2.5 0 0117 5.5V6H3v-.5A2.5 2.5 0 015.5 3h9zM10 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function CalendarSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 10a1 1 0 100-2 1 1 0 000 2zm7 4.5V7H3v7.5A2.5 2.5 0 005.5 17h3v-1.75a1.5 1.5 0 01-.98-2.64h.01l1.5-1.25a1.5 1.5 0 011.94 0l1.5 1.25a1.5 1.5 0 01-.97 2.64V17h3a2.5 2.5 0 002.5-2.5zM12 9a2 2 0 11-4 0 2 2 0 014 0zm5-3.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zm-5.82 8.63a.5.5 0 00.64-.76l-1.5-1.25a.5.5 0 00-.64 0l-1.5 1.25a.5.5 0 10.64.76l.68-.56v3.93a.5.5 0 101 0v-3.93l.68.56z"></path></svg>`,
	4,
)

function CalendarTodayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5V6h14v-.5A2.5 2.5 0 0014.5 3h-9zM17 7H3v7.5A2.5 2.5 0 005.5 17H9v-3.5a2.5 2.5 0 012.04-2.46A2.5 2.5 0 0113.5 9h2c.56 0 1.08.19 1.5.5V7zm-5 5v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 4.5h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function CalendarToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3h-9zM7 6.5v1a.5.5 0 01-1 0v-1a.5.5 0 011 0zM6.5 9c.28 0 .5.22.5.5v1a.5.5 0 01-1 0v-1c0-.28.22-.5.5-.5zm.5 3.5v1a.5.5 0 01-1 0v-1a.5.5 0 011 0z"></path></svg>`,
	4,
)

function CalendarWeekNumbersIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9zm-8 3a.5.5 0 00-.5.41v7.18a.5.5 0 001 0V6.41A.5.5 0 006.5 6z"></path></svg>`,
	4,
)

function CalendarWeekStartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 9V7h6v2H7zm10-3.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9zM6.5 6h7c.28 0 .5.22.5.5v3a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function CalendarWorkWeekIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.55 2.44a4.1 4.1 0 012.99-.32c.5.12.94.45 1.2.9l.9 1.57a2.5 2.5 0 01-.84 3.36l-.79.5c-.32.2-.44.52-.37.77.27.9.86 1.9 1.52 2.58.19.2.54.25.9.05l.43-.26a2.5 2.5 0 013.44.94l.8 1.44c.27.47.31 1.03.12 1.53a3.9 3.9 0 01-1.96 2.22c-.9.41-1.94.4-2.88-.24-1.5-1-3.3-2.68-4.94-5.48a13.27 13.27 0 01-2.03-7.06 2.87 2.87 0 011.51-2.5zM15 2.5a.5.5 0 00-1 0V5h-2.5a.5.5 0 000 1H14v2.5a.5.5 0 001 0V6h2.5a.5.5 0 000-1H15V2.5z"></path></svg>`,
	4,
)

function CallAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.54 2.12a4.1 4.1 0 00-2.99.32 2.87 2.87 0 00-1.5 2.5c-.06 1.8.36 4.22 2.02 7.06A16.28 16.28 0 009 17.48c.94.63 1.99.65 2.88.24a3.9 3.9 0 001.96-2.22c.2-.5.15-1.06-.12-1.53l-.8-1.44a2.5 2.5 0 00-3.44-.94l-.44.26c-.35.2-.7.15-.9-.05a6.83 6.83 0 01-1.5-2.58c-.08-.25.04-.56.36-.77l.8-.5a2.5 2.5 0 00.82-3.36l-.9-1.56c-.25-.46-.69-.79-1.2-.91zm11.31.03c.2.2.2.5 0 .7l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 4.65-4.64c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function CallCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.55 2.44a4.1 4.1 0 012.99-.32c.5.12.94.45 1.2.9l.9 1.57a2.5 2.5 0 01-.84 3.36l-.79.5c-.32.2-.44.52-.37.77.27.9.86 1.9 1.52 2.58.19.2.54.25.9.05l.43-.26a2.5 2.5 0 013.44.94l.8 1.44c.27.47.31 1.03.12 1.53a3.9 3.9 0 01-1.96 2.22c-.9.41-1.94.4-2.88-.24-1.5-1-3.3-2.68-4.94-5.48a13.27 13.27 0 01-2.03-7.06 2.87 2.87 0 011.51-2.5zm9.2-.38a.5.5 0 10-.5.88l.4.21a8.5 8.5 0 014.32 6.58l.03.32a.5.5 0 101-.1l-.03-.32a9.5 9.5 0 00-4.84-7.35l-.39-.22zm-1.18 2.68a.5.5 0 01.69-.17l.12.07a6.5 6.5 0 013.07 4.51l.04.27a.5.5 0 11-.98.16l-.05-.27a5.5 5.5 0 00-2.6-3.8l-.12-.08a.5.5 0 01-.17-.69z"></path></svg>`,
	4,
)

function CallConnectingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.54 2.12a4.1 4.1 0 00-2.99.32 2.87 2.87 0 00-1.5 2.5c-.06 1.8.36 4.22 2.02 7.06A16.28 16.28 0 009 17.48c.94.63 1.99.65 2.88.24a3.9 3.9 0 001.96-2.22c.2-.5.15-1.06-.12-1.53l-.8-1.44a2.5 2.5 0 00-3.44-.94l-.44.26c-.35.2-.7.15-.9-.05a6.83 6.83 0 01-1.5-2.58c-.08-.25.04-.56.36-.77l.8-.5a2.5 2.5 0 00.82-3.36l-.9-1.56c-.25-.46-.69-.79-1.2-.91zm11.31.03c.2.2.2.5 0 .7L15.21 5.5l2.64 2.65a.5.5 0 01-.7.7L14.5 6.21l-2.65 2.64a.5.5 0 01-.7-.7l2.64-2.65-2.64-2.65a.5.5 0 01.7-.7l2.65 2.64 2.65-2.64c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function CallDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.96 10.94l-.16.83c-.15.78-.87 1.3-1.7 1.22l-1.63-.16c-.72-.07-1.25-.59-1.47-1.33-.3-1-.5-1.75-.5-1.75a6.63 6.63 0 00-5 0s-.2.75-.5 1.75c-.2.67-.5 1.26-1.2 1.33l-1.63.16c-.81.08-1.6-.43-1.82-1.2l-.25-.84c-.25-.82-.03-1.7.58-2.28C4.1 7.3 6.67 6.51 9.99 6.5c3.33 0 5.6.78 7.16 2.16.66.58.97 1.46.8 2.28z"></path></svg>`,
	4,
)

function CallEndIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.8 7.77l.16-.83c.16-.82-.15-1.7-.8-2.28-1.57-1.38-3.84-2.16-7.17-2.16-3.32 0-5.89.79-7.31 2.17-.6.59-.83 1.46-.58 2.28l.25.83A1.74 1.74 0 004.17 9l1.63-.16c.7-.07 1-.66 1.2-1.33.3-1 .5-1.75.5-1.75a6.63 6.63 0 015 0s.2.75.5 1.75c.22.74.75 1.26 1.47 1.33l1.63.16c.83.08 1.55-.44 1.7-1.22zm-3.3 5.73a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM10 11a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function CallExclamationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.29 2.2l-.85-.16a2.53 2.53 0 00-2.32.81C4.7 4.42 4 6.87 4 10.2c0 3.32.72 5.7 2.13 7.12.6.6 1.5.83 2.34.58l.84-.25c.8-.23 1.33-1 1.24-1.82l-.17-1.63a1.53 1.53 0 00-1.26-1.36l-1.8-.32a6.36 6.36 0 01-.16-4.98l1.93-.5c.7-.19 1.21-.8 1.28-1.5l.17-1.65a1.54 1.54 0 00-1.25-1.7zm5.06 3.45a.5.5 0 00-.7.7L16.29 9H10.5a.5.5 0 000 1h5.8l-2.65 2.65a.5.5 0 00.7.7l3.5-3.5a.5.5 0 000-.7l-3.5-3.5z"></path></svg>`,
	4,
)

function CallForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.99 2.07A2 2 0 019.3 3l.08.15.66 1.47a2.5 2.5 0 01-.44 2.72l-.13.13-1.05.98c-.19.17-.04.86.64 2.04.6 1.06 1.1 1.56 1.35 1.58h.1l2.05-.64a1.5 1.5 0 011.56.45l.1.11 1.35 1.88a2 2 0 01-.13 2.5l-.12.12-.54.52a3.5 3.5 0 01-3.72.7c-1.93-.78-3.69-2.56-5.29-5.33S3.52 7.2 3.82 5.14a3.5 3.5 0 012.26-2.8l.19-.06.72-.21z"></path></svg>`,
	4,
)

function CallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L13.5 6.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path><path d="M14.5 11l.33-.01a2.5 2.5 0 01-.2.42l-3.46 5.91c-.15.27-.4.47-.67.58v-7.03a1 1 0 00.46-1.16c.95.8 2.19 1.29 3.54 1.29z"></path><path d="M9 5.5c0 1.35.49 2.59 1.3 3.54a1 1 0 00-.8 1.83v7.04a1.37 1.37 0 01-.7-.59l-3.46-5.9a2.5 2.5 0 01-.1-2.34L6.7 6h-.2A1.5 1.5 0 015 4.5v-2a.5.5 0 011 0v2c0 .28.22.5.5.5h2.52L9 5.5z"></path></svg>`,
	8,
)

function CalligraphyPenCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 3a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.25zm0 2.87l.35-.01a2.5 2.5 0 01-.2.42l-3.47 5.91c-.15.27-.4.48-.68.59v-7.04a1 1 0 00.46-1.16c.95.8 2.19 1.29 3.54 1.29zM9 5.5c0 1.35.49 2.59 1.3 3.54a1 1 0 00-.8 1.83v7.04a1.37 1.37 0 01-.68-.59l-3.47-5.9a2.5 2.5 0 01-.1-2.34l1.23-2.6A1.75 1.75 0 015 4.75v-2a.75.75 0 011.5 0v2c0 .14.11.25.25.25h2.27L9 5.5z"></path></svg>`,
	4,
)

function CalligraphyPenErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ql = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2.5a.5.5 0 00-1 0v2C5 5.33 5.67 6 6.5 6h.2L5.24 9.08a2.5 2.5 0 00.1 2.33l3.47 5.91c.16.27.4.48.69.59v-7.04a1 1 0 111 0v7.03c.28-.11.52-.31.67-.58l3.47-5.9a2.5 2.5 0 00.1-2.34L13.28 6h.22c.83 0 1.5-.67 1.5-1.5v-2a.5.5 0 00-1 0v2a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5v-2z"></path></svg>`,
	4,
)

function CalligraphyPenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ql.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 1a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm.62 7a.62.62 0 10-1.24 0 .62.62 0 001.24 0zm1.23-3.55c0-1.1-.82-1.95-1.85-1.95-1.05 0-1.86.82-1.85 1.96a.5.5 0 101-.01c0-.58.36-.95.85-.95.47 0 .85.4.85.95 0 .2-.07.32-.36.55l-.27.21c-.51.4-.72.72-.72 1.29a.5.5 0 001 .09v-.16c.02-.14.1-.25.35-.44l.28-.22c.5-.4.72-.73.72-1.32z"></path><path d="M14.5 11l.33-.01a2.5 2.5 0 01-.2.42l-3.46 5.91c-.15.27-.4.47-.67.58v-7.03a1 1 0 00.46-1.16c.95.8 2.19 1.29 3.54 1.29z"></path><path d="M9 5.5c0 1.35.49 2.59 1.3 3.54a1 1 0 00-.8 1.83v7.04a1.37 1.37 0 01-.7-.59l-3.46-5.9a2.5 2.5 0 01-.1-2.34L6.7 6h-.2A1.5 1.5 0 015 4.5v-2a.5.5 0 011 0v2c0 .28.22.5.5.5h2.52L9 5.5z"></path></svg>`,
	8,
)

function CalligraphyPenQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.54 2.12a4.1 4.1 0 00-2.99.32 2.87 2.87 0 00-1.5 2.5c-.06 1.8.36 4.22 2.02 7.06A16.28 16.28 0 009 17.48c.94.63 1.99.65 2.88.24a3.9 3.9 0 001.96-2.22c.2-.5.15-1.06-.12-1.53l-.8-1.44a2.5 2.5 0 00-3.44-.94l-.44.26c-.35.2-.7.15-.9-.05a6.83 6.83 0 01-1.5-2.58c-.08-.25.04-.56.36-.77l.8-.5a2.5 2.5 0 00.82-3.36l-.9-1.56c-.25-.46-.69-.79-1.2-.91zm11.31.03c.2.2.2.5 0 .7L12.71 8h3.79a.5.5 0 010 1h-5a.5.5 0 01-.5-.5v-5a.5.5 0 111 0v3.8l5.15-5.15c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function CallInboundIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.8 7.77l.16-.83c.16-.82-.15-1.7-.8-2.28-1.57-1.38-3.84-2.16-7.17-2.16-3.32 0-5.89.79-7.31 2.17-.6.59-.83 1.46-.58 2.28l.25.83A1.74 1.74 0 004.17 9l1.63-.16c.7-.07 1-.66 1.2-1.33.3-1 .5-1.75.5-1.75a6.63 6.63 0 015 0s.2.75.5 1.75c.22.74.75 1.26 1.47 1.33l1.63.16c.83.08 1.55-.44 1.7-1.22zM9.5 11.5c.28 0 .5.22.5.5v1.5h1a.5.5 0 110 1H9.5A.5.5 0 019 14v-2c0-.28.22-.5.5-.5zm-4 2a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM10 10a3.5 3.5 0 100 7 3.5 3.5 0 000-7z"></path></svg>`,
	4,
)

function CallMissedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.54 2.12a4.1 4.1 0 00-2.99.32 2.87 2.87 0 00-1.5 2.5c-.06 1.8.36 4.22 2.02 7.06A16.28 16.28 0 009 17.48c.94.63 1.99.65 2.88.24a3.9 3.9 0 001.96-2.22c.2-.5.15-1.06-.12-1.53l-.8-1.44a2.5 2.5 0 00-3.44-.94l-.44.26c-.35.2-.7.15-.9-.05a6.83 6.83 0 01-1.5-2.58c-.08-.25.04-.56.36-.77l.8-.5a2.5 2.5 0 00.82-3.36l-.9-1.56c-.25-.46-.69-.79-1.2-.91zm4.6 6.73a.5.5 0 010-.7L16.3 3H12.5a.5.5 0 110-1h5c.28 0 .5.22.5.5v5a.5.5 0 01-1 0V3.7l-5.15 5.15a.5.5 0 01-.7 0z"></path></svg>`,
	4,
)

function CallOutboundIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.55 2.44a4.1 4.1 0 012.99-.32c.5.12.94.45 1.2.9l.9 1.57a2.5 2.5 0 01-.84 3.36l-.79.5c-.32.2-.44.52-.37.77.27.9.86 1.9 1.52 2.58.19.2.54.25.9.05l.43-.26a2.5 2.5 0 013.44.94l.8 1.44c.27.47.31 1.03.12 1.53a3.9 3.9 0 01-1.96 2.22c-.9.41-1.94.4-2.88-.24-1.5-1-3.3-2.68-4.94-5.48a13.27 13.27 0 01-2.03-7.06 2.87 2.87 0 011.51-2.5zM12.5 2a.5.5 0 00-.5.5v7a.5.5 0 101 0V7h1.5a2.5 2.5 0 000-5h-2zm2 4H13V3h1.5a1.5 1.5 0 010 3z"></path></svg>`,
	4,
)

function CallParkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.55 2.44a4.1 4.1 0 012.99-.32c.5.12.94.45 1.2.9l.9 1.57a2.5 2.5 0 01-.84 3.36l-.79.5c-.32.2-.44.52-.37.77.27.9.86 1.9 1.52 2.58.19.2.54.25.9.05l.43-.26a2.5 2.5 0 013.44.94l.8 1.44c.27.47.31 1.03.12 1.53a3.9 3.9 0 01-1.96 2.22c-.9.41-1.94.4-2.88-.24-1.5-1-3.3-2.68-4.94-5.48a13.27 13.27 0 01-2.03-7.06 2.87 2.87 0 011.51-2.5zM13 2.5a.5.5 0 00-1 0v6a.5.5 0 001 0v-6zm3 0a.5.5 0 00-1 0v6a.5.5 0 001 0v-6z"></path></svg>`,
	4,
)

function CallPauseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qe = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.96 6.94l-.16.83c-.15.78-.87 1.3-1.7 1.22l-1.63-.16c-.72-.07-1.25-.59-1.47-1.33-.3-1-.5-1.75-.5-1.75a6.63 6.63 0 00-5 0S7.3 6.5 7 7.5c-.2.67-.5 1.26-1.2 1.33l-1.63.16c-.81.08-1.6-.43-1.82-1.2l-.25-.84c-.25-.82-.03-1.7.58-2.28C4.1 3.3 6.67 2.51 9.99 2.5c3.33 0 5.6.78 7.16 2.16.66.58.97 1.46.8 2.28zM6.82 16.68a4.5 4.5 0 106.36-6.36 4.5 4.5 0 00-6.36 6.36zm5.65-.7a3.5 3.5 0 01-4.57.32l4.9-4.9a3.5 3.5 0 01-.33 4.57zm-.37-5.28l-4.9 4.9a3.5 3.5 0 014.9-4.9z"></path></svg>`,
	4,
)

function CallProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qe.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.55 2.44a4.1 4.1 0 012.99-.32c.5.12.94.45 1.2.9l.97 1.7a2.5 2.5 0 01-.67 3.24l-.6.45c-.28.22-.4.52-.34.77.18.82.59 1.57 1.15 2.13.17.16.47.22.8.1l.66-.26a2.5 2.5 0 013.07 1.11l.95 1.7c.27.48.31 1.04.12 1.54a3.9 3.9 0 01-1.96 2.22c-.9.41-1.94.4-2.88-.24-1.5-1-3.3-2.68-4.94-5.48a13.27 13.27 0 01-2.03-7.06 2.87 2.87 0 011.51-2.5zM12 8.5a.5.5 0 11-1 0 .5.5 0 011 0zm.5-.5a.5.5 0 100-1 .5.5 0 000 1zM14 6.5a.5.5 0 11-1 0 .5.5 0 011 0zm3 1a.5.5 0 001 0v-5a.5.5 0 00-.5-.5h-5a.5.5 0 000 1h3.8l-2.15 2.15a.5.5 0 00.7.7L17 3.71V7.5z"></path></svg>`,
	4,
)

function CallTransferIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.6 1.55l-3.5 7A1 1 0 0010 10h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM14 3.5v3a.5.5 0 11-1 0v-3a.5.5 0 111 0zM13.5 9a.5.5 0 110-1 .5.5 0 010 1zM6.54 2.12a4.1 4.1 0 00-2.99.32 2.87 2.87 0 00-1.5 2.5c-.06 1.8.36 4.22 2.02 7.06A16.28 16.28 0 009 17.48c.94.63 1.99.65 2.88.24a3.9 3.9 0 001.96-2.22c.2-.5.15-1.06-.12-1.53l-.95-1.7a2.5 2.5 0 00-3.07-1.12l-.67.26c-.32.12-.62.06-.79-.1A4.32 4.32 0 017.1 9.19c-.06-.26.06-.56.34-.78l.6-.45a2.5 2.5 0 00.67-3.24l-.97-1.7c-.26-.45-.7-.78-1.2-.9z"></path></svg>`,
	4,
)

function CallWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.78 2.83c.26-.51.78-.83 1.34-.83h3.77c.57 0 1.09.32 1.34.83L13.81 4h1.7A2.5 2.5 0 0118 6.5v3.76a5.48 5.48 0 00-4.13-1.23 4 4 0 10-4.85 4.85A5.56 5.56 0 009.6 17H4.5A2.5 2.5 0 012 14.5v-8A2.5 2.5 0 014.5 4h1.7l.58-1.17zM10 7a3 3 0 012.9 2.24 5.51 5.51 0 00-3.66 3.66A3 3 0 0110 7zm9 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 100 1H14v1.5a.5.5 0 101 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function CameraAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$qa = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5C2 3.67 2.67 3 3.5 3h13a1.5 1.5 0 010 3h-13A1.5 1.5 0 012 4.5zM10 9a3 3 0 100 6 3 3 0 000-6zm-2 3a2 2 0 114 0 2 2 0 01-4 0zM3 7h14v4a7 7 0 11-14 0V7zm7 1a4 4 0 100 8 4 4 0 000-8z"></path></svg>`,
	4,
)

function CameraDomeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$qa.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.12 2a1.5 1.5 0 00-1.34.83L6.2 4H4.5A2.5 2.5 0 002 6.5v8A2.5 2.5 0 004.5 17H8l.06-.35.37-1.5c.12-.46.34-.9.64-1.26a4 4 0 114.82-4.83l.21-.22A2.87 2.87 0 0118 8.7V6.5A2.5 2.5 0 0015.5 4h-1.69l-.58-1.16A1.5 1.5 0 0011.89 2H8.12zM13 9.94A3 3 0 109.94 13L13 9.94zm1.8-.4l-4.82 4.84a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function CameraEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 10a3 3 0 116 0 3 3 0 01-6 0zm-.22-7.17c.26-.51.78-.83 1.34-.83h3.77c.57 0 1.09.32 1.34.83L13.81 4h1.7A2.5 2.5 0 0118 6.5v8a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5v-8A2.5 2.5 0 014.5 4h1.68l.6-1.17zM10 6a4 4 0 100 8 4 4 0 000-8z"></path></svg>`,
	4,
)

function CameraIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4.2L2.15 2.86a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-.95-.95c-.22.07-.46.1-.7.1h-11A2.5 2.5 0 012 14.5v-8c0-1.02.62-1.9 1.5-2.3zm8.95 8.96l-.71-.71a3 3 0 01-4.18-4.18l-.72-.72a4 4 0 005.61 5.61zM9.22 7.1l3.68 3.68A3 3 0 009.22 7.1zM14 10c0 .55-.11 1.08-.32 1.56l4.06 4.06c.17-.34.26-.72.26-1.12v-8A2.5 2.5 0 0015.5 4h-1.69l-.58-1.17A1.5 1.5 0 0011.89 2H8.12a1.5 1.5 0 00-1.34.83L6.2 4h-.07l2.32 2.32A3.99 3.99 0 0114 10z"></path></svg>`,
	4,
)

function CameraOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.15 2.15c.2-.2.5-.2.7 0l2 2c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7-.7L15.29 5H4a1 1 0 00-1 1v6.5a.5.5 0 01-1 0V6c0-1.1.9-2 2-2h11.3l-1.15-1.15a.5.5 0 010-.7zM17 14a1 1 0 01-1 1H4.7l1.15-1.15a.5.5 0 00-.7-.7l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L4.71 16H16a2 2 0 002-2V7.5a.5.5 0 00-1 0V14zm-4-4a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>`,
	4,
)

function CameraSwitchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.8 7a1 1 0 00-.78 1.63l3.81 4.72c.6.74 1.74.74 2.34 0l3.81-4.72A1 1 0 0014.2 7H5.8z"></path></svg>`,
	4,
)

function CaretDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 5.96a1 1 0 00-1.7-.71l-8.05 8.04a1 1 0 00.7 1.71h7.55c.83 0 1.5-.67 1.5-1.5V5.96z"></path></svg>`,
	4,
)

function CaretDownRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 14.2a1 1 0 01-1.63.78l-4.72-3.81a1.5 1.5 0 010-2.34l4.72-3.81A1 1 0 0113 5.8v8.4z"></path></svg>`,
	4,
)

function CaretLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 14.2a1 1 0 001.63.78l4.72-3.81a1.5 1.5 0 000-2.34L8.63 5.02A1 1 0 007 5.8v8.4z"></path></svg>`,
	4,
)

function CaretRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.8 13.9a1 1 0 01-.78-1.62l3.81-4.72a1.5 1.5 0 012.34 0l3.81 4.72a1 1 0 01-.78 1.63H5.8z"></path></svg>`,
	4,
)

function CaretUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3.5c0-.28.22-.5.5-.5h.44c.72 0 1.14.47 1.38.94.17.32.29.72.39 1.06H16a1 1 0 01.96 1.27l-1.5 5.28A2 2 0 0113.55 13H8.46a2 2 0 01-1.93-1.47L5.9 9.17l-.01-.03-1.03-3.5-.1-.33a5.2 5.2 0 00-.32-.91c-.16-.31-.3-.4-.5-.4H3.5a.5.5 0 01-.5-.5zM8.5 17a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm5 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path></svg>`,
	4,
)

function CartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v9c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5v-9c0-.83-.67-1.5-1.5-1.5h-13zM4 8c0-.28.22-.5.5-.5a6 6 0 016 6 .5.5 0 01-1 0 5 5 0 00-5-5A.5.5 0 014 8zm.5 2A3.5 3.5 0 018 13.5a.5.5 0 11-1 0A2.5 2.5 0 004.5 11a.5.5 0 010-1zm.25 4a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function CastIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.67 7.14c.1-.2.38-.19.46.02l2.33 6.2a1.75 1.75 0 003.23.14l1.22-2.6a.25.25 0 01.23-.15h1.06a1.5 1.5 0 100-1.5h-1.06c-.68 0-1.3.4-1.59 1l-1.22 2.6c-.1.2-.38.2-.46-.01l-2.33-6.2A1.75 1.75 0 006.3 6.5L5.1 9.1a.25.25 0 01-.22.15H3.8a1.5 1.5 0 100 1.5h1.07c.67 0 1.29-.4 1.58-1l1.22-2.6z"></path></svg>`,
	4,
)

function CatchUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.03 3c-.32 0-.74.14-1.16.6a.5.5 0 11-.74-.66A2.57 2.57 0 014.03 2c.64 0 1.2.28 1.57.7A1.5 1.5 0 015.28 5c.27.2.47.42.6.69.26.59.08 1.2-.28 1.61-.36.42-.93.7-1.56.7-.65 0-1.33-.29-1.91-.94a.5.5 0 01.74-.66c.42.46.84.6 1.17.6.34 0 .63-.15.8-.35.17-.2.2-.4.12-.55-.07-.17-.33-.44-1.07-.61a.5.5 0 010-.98c.74-.17 1-.44 1.07-.61.07-.15.05-.35-.12-.55-.17-.2-.46-.35-.8-.35zm.72 10c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.11v-4.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v6.5a.75.75 0 01-1.5.11V9.75c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v8.5a.75.75 0 01-1.5.11V7.75c0-.41.34-.75.75-.75zm3-2c.37 0 .68.27.74.63l.01.1-.01 10.52a.74.74 0 01-1.48.12l-.01-.1.01-10.52c0-.41.33-.75.74-.75zm-7.5-2h.25s.13 0 .28.06c.17.07.36.18.48.42a.5.5 0 00.89-.46C10.62 2 9.53 2 9.5 2h-.25C8.01 2 7 3 7 4.25v1.5a2.25 2.25 0 004.5 0v-.5a.5.5 0 00-.5-.5H9.5a.5.5 0 100 1h1a1.25 1.25 0 01-2.5 0v-1.5C8 3.56 8.56 3 9.25 3z"></path></svg>`,
	4,
)

function Cellular3gIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 3h-.25C8.56 3 8 3.56 8 4.25v1.5a1.25 1.25 0 002.5 0h-1a.5.5 0 110-1H11c.28 0 .5.22.5.5v.5a2.25 2.25 0 11-4.5 0v-1.5C7 3.01 8 2 9.25 2h.25c.03 0 1.12 0 1.65 1.02a.5.5 0 11-.89.46.86.86 0 00-.48-.42C9.63 3.01 9.51 3 9.5 3zM4.75 13c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.11v-4.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v6.5a.75.75 0 01-1.5.11V9.75c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v8.5a.75.75 0 01-1.5.11V7.75c0-.41.34-.75.75-.75zm3-2c.37 0 .68.27.74.63l.01.1-.01 10.52a.74.74 0 01-1.48.12l-.01-.1.01-10.52c0-.41.33-.75.74-.75zM4.95 2.7a.7.7 0 00-1.26-.4L1.13 5.9A.7.7 0 001.7 7h2.26v.5a.5.5 0 101 0V7h.54a.5.5 0 000-1h-.54V2.7zm-1 .94V6H2.29l1.68-2.36z"></path></svg>`,
	4,
)

function Cellular4gIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 3h-.25C8.56 3 8 3.56 8 4.25v1.5a1.25 1.25 0 002.5 0h-1a.5.5 0 010-1H11c.28 0 .5.22.5.5v.5a2.25 2.25 0 01-4.5 0v-1.5C7 3.01 8 2 9.25 2h.25c.03 0 1.12 0 1.65 1.02a.5.5 0 11-.89.46.86.86 0 00-.48-.42C9.63 3.01 9.51 3 9.5 3zM4.75 13c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.11v-4.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v6.5a.75.75 0 01-1.5.11V9.75c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v8.5a.75.75 0 01-1.5.11V7.75c0-.41.34-.75.75-.75zm3-2c.37 0 .68.27.74.63l.01.1-.01 10.52a.74.74 0 01-1.48.12l-.01-.1.01-10.52c0-.41.33-.75.74-.75zm-14-3a.5.5 0 00-.5.44l-.25 2a.5.5 0 00.54.56l.18-.02 1.37-.11c.49-.04.91.35.91.84v.22C5 6.52 4.52 7 3.93 7a.98.98 0 01-.75-.32 1.23 1.23 0 01-.2-.3l-.01-.02a.5.5 0 00-.94.36l.01.02a1.44 1.44 0 00.1.2A1.98 1.98 0 003.93 8C5.07 8 6 7.07 6 5.93V5.7c0-1.08-.92-1.93-2-1.84l-.93.08L3.2 3H5.5a.5.5 0 000-1H2.75z"></path></svg>`,
	4,
)

function Cellular5gIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 12c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.11v-4.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v6.5a.75.75 0 01-1.5.11V8.75c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v8.5a.75.75 0 01-1.5.11V6.75c0-.41.34-.75.75-.75zm3-2c.37 0 .68.27.74.63l.01.1-.01 10.52a.74.74 0 01-1.48.12l-.01-.1.01-10.52c0-.41.33-.75.74-.75z"></path></svg>`,
	4,
)

function CellularData1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 12c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.1v-2.6c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.1v-4.6c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64v6.61a.75.75 0 01-1.48.11l-.01-.11v-6.5c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64v8.61a.75.75 0 01-1.48.11l-.01-.11v-8.5c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function CellularData2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 12c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.1v-2.6c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.1v-4.6c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v6.5a.75.75 0 01-1.5.11V8.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function CellularData3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 12c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.11v-4.61c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function CellularData4Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 12c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function CellularData5Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L10 10.71v4.65a.75.75 0 001.5-.11v-3.04l1.5 1.5V15.36a.75.75 0 001.5-.11v-.04l2.65 2.64a.5.5 0 00.7-.7l-15-15zM13 10.88V6.75a.75.75 0 011.5-.11v5.74l-1.5-1.5zm4.48 4.48L16 13.88l.01-9.13a.74.74 0 011.48-.12l.01.1-.01 10.52-.01.1zM5.49 12.64a.75.75 0 00-1.49.11v2.61a.75.75 0 001.5-.11v-2.61zm3-2a.75.75 0 00-1.49.11v4.61a.75.75 0 001.5-.11v-4.61z"></path></svg>`,
	4,
)

function CellularOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 12c.38 0 .69.28.74.64l.01.11v2.5a.75.75 0 01-1.5.11v-2.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v4.5a.75.75 0 01-1.5.11v-4.61c0-.41.34-.75.75-.75zm3-2c.38 0 .69.28.74.64l.01.11v3.79l-1.47 2.93a.75.75 0 01-.02-.1l-.01-.12v-6.5c0-.41.34-.75.75-.75zM13 9.68c.4-.45.95-.68 1.5-.68V6.64a.75.75 0 00-1.5.11v2.93zm3.3.43l1.19 2.39.01-7.76v-.11a.74.74 0 00-1.49.12v4.93c.1.12.2.27.28.43zm-2.7.44l-3.5 7A1 1 0 0011 19h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM15 12.5v3a.5.5 0 11-1 0v-3a.5.5 0 011 0zm-.5 5.5a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function CellularWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 18a.5.5 0 01-.5-.5v-15a.5.5 0 011 0v15a.5.5 0 01-.5.5z"></path><path d="M16 17.5a.5.5 0 001 0v-15a.5.5 0 00-1 0v15z"></path><path d="M9 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h2a2 2 0 002-2V6a2 2 0 00-2-2H9z"></path></svg>`,
	8,
)

function CenterHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 3a.5.5 0 000 1h15a.5.5 0 000-1h-15zM2 16.5c0-.28.22-.5.5-.5h15a.5.5 0 010 1h-15a.5.5 0 01-.5-.5zM6 7a2 2 0 00-2 2v2c0 1.1.9 2 2 2h8a2 2 0 002-2V9a2 2 0 00-2-2H6z"></path></svg>`,
	4,
)

function CenterVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3a2 2 0 00-2 2v8c0 1.1.9 2 2 2h7.5v-.67c-.09-.1-.17-.22-.24-.33H4a1 1 0 01-1-1V5a1 1 0 011-1h12a1 1 0 011 1v2.47c.36.18.7.4 1 .68V5a2 2 0 00-2-2H4zm14.5 8.5a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0zM15 16c.93 0 1.79-.28 2.5-.76V18a.5.5 0 01-.8.4l-1.4-1.05a.5.5 0 00-.6 0l-1.4 1.05a.5.5 0 01-.8-.4v-2.76c.71.48 1.57.76 2.5.76zM5 6.5c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9a.5.5 0 01-.5-.5zm.5 4.5a.5.5 0 000 1h4a.5.5 0 000-1h-4z"></path></svg>`,
	4,
)

function CertificateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3a2.5 2.5 0 00-2.3 1.52l.3-.02A2 2 0 113 8.44v6.06A2.5 2.5 0 005.5 17h4.1a5.48 5.48 0 010-5H7.5a.5.5 0 010-1h2.76A5.49 5.49 0 0117 9.6V5.5A2.5 2.5 0 0014.5 3h-9zM7 8.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm-3.5-3a1 1 0 00-1 1 1 1 0 101-1zm15.5 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function ChannelAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3a2.5 2.5 0 00-2.3 1.52l.3-.02A2 2 0 113 8.44v6.06A2.5 2.5 0 005.5 17h4.1a5.48 5.48 0 010-5H7.5a.5.5 0 010-1h2.76A5.49 5.49 0 0117 9.6V5.5A2.5 2.5 0 0014.5 3h-9zM7 8.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm-3.5-3a1 1 0 00-1 1 1 1 0 101-1zm15.5 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM16.5 13a2 2 0 10-4 0v1.8l-.35.35a.5.5 0 00.35.85h4a.5.5 0 00.35-.85l-.35-.36V13zm-3.41 4a1.5 1.5 0 002.82 0H13.1z"></path></svg>`,
	4,
)

function ChannelAlertIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3a2.5 2.5 0 00-2.3 1.52l.3-.02A2 2 0 113 8.44v6.06A2.5 2.5 0 005.5 17h4.1a5.48 5.48 0 010-5H7.5a.5.5 0 010-1h2.76A5.49 5.49 0 0117 9.6V5.5A2.5 2.5 0 0014.5 3h-9zM7 8.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm-3.5-3a1 1 0 00-1 1 1 1 0 101-1zm15.5 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function ChannelArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3a2.5 2.5 0 00-2.3 1.52l.3-.02A2 2 0 113 8.44v6.06A2.5 2.5 0 005.5 17h4.1a5.48 5.48 0 010-5H7.5a.5.5 0 010-1h2.76A5.49 5.49 0 0117 9.6V5.5A2.5 2.5 0 0014.5 3h-9zM7 8.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm-3.5-3a1 1 0 00-1 1 1 1 0 101-1zm15.5 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function ChannelDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3a2.5 2.5 0 00-2.3 1.52l.3-.02A2 2 0 113 8.44v6.06A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3h-9zM7 8.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm.5 2.5h3a.5.5 0 010 1h-3a.5.5 0 010-1zm-4-5.5a1 1 0 00-1 1 1 1 0 101-1z"></path></svg>`,
	4,
)

function ChannelIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h5A2.5 2.5 0 0113 5.5a.5.5 0 01-1 0c0-.83-.67-1.5-1.5-1.5h-5C4.67 4 4 4.67 4 5.5v5c0 .83.67 1.5 1.5 1.5h4.51a2.25 2.25 0 11.12 1H5.5A2.5 2.5 0 013 10.5v-5zM7.5 14a.5.5 0 00-.5.5A2.5 2.5 0 009.5 17h5a2.5 2.5 0 002.5-2.5v-5A2.5 2.5 0 0014.5 7H9.87A2.25 2.25 0 1010 8h4.51c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 018 14.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function ChannelShareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.2 4.52A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v4.1a5.48 5.48 0 00-6.74 1.4H7.5a.5.5 0 000 1h2.1a5.48 5.48 0 000 5H5.5A2.5 2.5 0 013 14.5V8.44a2 2 0 10.2-3.92zM7.5 8a.5.5 0 000 1h5a.5.5 0 000-1h-5zM3 5.63a1 1 0 111 1.73 1 1 0 01-1-1.73zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm2-4h-4a.5.5 0 010-1h4a.5.5 0 010 1z"></path></svg>`,
	4,
)

function ChannelSubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 11c0-.37.1-.7.27-1H10.5A1.5 1.5 0 019 8.5V2.02a7.5 7.5 0 000 14.96V15a2 2 0 013-1.73V13a2 2 0 013-1.73V11zm-5-8.98V8.5c0 .28.22.5.5.5h6.48A7.5 7.5 0 0010 2.02zM16 11a1 1 0 112 0v7a1 1 0 11-2 0v-7zm-6 4a1 1 0 112 0v3a1 1 0 11-2 0v-3zm3-2a1 1 0 112 0v5a1 1 0 11-2 0v-5z"></path></svg>`,
	4,
)

function ChartMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2.5a.5.5 0 10-1 0V3H4.75A2.75 2.75 0 002 5.75v6.5A2.75 2.75 0 004.75 15h1.82l-1.49 2.23a.5.5 0 00.84.55L7.77 15H11.5a2.5 2.5 0 011.77-.99A2.99 2.99 0 0115.5 9a3 3 0 012.5 1.34V5.75A2.75 2.75 0 0015.25 3H10.5v-.5zM5 6.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm.5 4.5h4a.5.5 0 010 1h-4a.5.5 0 010-1zm0-2.5h5a.5.5 0 010 1h-5a.5.5 0 010-1zm12 3.5a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function ChartPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 018 8.25A5.5 5.5 0 0010.26 18a7.93 7.93 0 01-3.87-.85l-.12-.07-3.65.92a.5.5 0 01-.62-.45v-.08l.01-.08.92-3.64-.07-.12a7.95 7.95 0 01-.83-2.9l-.02-.37L2 10a8 8 0 018-8zm4.5 17a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function ChatArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 018 8.25A5.5 5.5 0 0010.26 18a7.93 7.93 0 01-3.87-.85l-.12-.07-3.65.92a.5.5 0 01-.62-.45v-.08l.01-.08.92-3.64-.07-.12a7.95 7.95 0 01-.83-2.9l-.02-.37L2 10a8 8 0 018-8zm9 12.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-5.65-1.15a.5.5 0 00-.7-.7l-1.5 1.5a.5.5 0 000 .7l1.5 1.5a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15zm1.86.65l.64-.65a.5.5 0 00-.7-.7l-1.5 1.5a.5.5 0 000 .7l1.5 1.5a.5.5 0 00.7-.7l-.64-.65H17v.5a.5.5 0 001 0V15a1 1 0 00-1-1h-1.8z" opacity=".99"></path></svg>`,
	4,
)

function ChatArrowDoubleBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 1a6.5 6.5 0 00-5.68 9.67l-.8 2.08a1 1 0 001.21 1.32l2.49-.7A6.5 6.5 0 108.5 1zm0 3.9c-.37.07-.76.3-1.07.85a.5.5 0 11-.87-.5A2.57 2.57 0 018.3 3.92c.65-.13 1.3.04 1.8.36.48.32.87.84.88 1.47.01.66-.39 1.25-1.12 1.68-.5.3-.7.5-.77.63-.07.11-.1.21-.1.44a.5.5 0 01-1 0c0-.27.02-.61.25-.97.2-.34.56-.64 1.11-.96.54-.32.63-.62.63-.8 0-.2-.14-.46-.44-.65-.3-.2-.68-.3-1.05-.22zm.25 6.6a.75.75 0 110-1.5.75.75 0 010 1.5zm-2.21 3.24a6.49 6.49 0 007.7 1.64l2.49.7a1 1 0 001.2-1.33l-.8-2.08a6.47 6.47 0 00-1.37-8.04c.15.56.23 1.15.24 1.76a5.47 5.47 0 01.16 5.98l-.13.2.97 2.54-2.86-.8-.18.09A5.47 5.47 0 018.3 15a7.5 7.5 0 01-1.75-.26z"></path></svg>`,
	4,
)

function ChatBubblesQuestionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 10-16 0v.35l.03.38c.1 1.01.38 1.99.83 2.89l.06.12-.9 3.64-.02.08v.08c.03.3.31.52.62.45l3.65-.91.12.06A8 8 0 0018 10zM7.85 7.15L10 9.29l2.15-2.14a.5.5 0 01.7.7L10.71 10l2.14 2.15a.5.5 0 01-.7.7L10 10.71l-2.15 2.14a.5.5 0 01-.7-.7L9.29 10 7.15 7.85a.5.5 0 11.7-.7z"></path></svg>`,
	4,
)

function ChatDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 114.26 7.07L2.62 18a.5.5 0 01-.6-.61l.9-3.64A7.97 7.97 0 012 10zm7.25-2.7c.15-.17.39-.3.75-.3s.6.13.75.3c.16.2.25.44.25.7 0 .32-.07.52-.17.69-.1.17-.23.3-.42.5l-.02.03c-.19.2-.42.44-.6.78-.18.35-.29.76-.29 1.3a.5.5 0 101 0c0-.4.08-.64.18-.84.1-.2.24-.35.43-.55l.04-.04c.17-.18.38-.4.55-.68.18-.32.3-.7.3-1.19a1.95 1.95 0 00-2-2 1.95 1.95 0 00-2 2 .5.5 0 001 0c0-.26.09-.5.25-.7zm1.45 6.21a.7.7 0 10-1.4 0 .7.7 0 001.4 0z"></path></svg>`,
	4,
)

function ChatHelpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$py = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 11-3.61 15.14l-.12-.07-3.65.92a.5.5 0 01-.62-.45v-.08l.01-.08.92-3.64-.07-.12a7.95 7.95 0 01-.83-2.9l-.02-.37L2 10a8 8 0 018-8zm.5 9H7.41a.5.5 0 000 1H10.59a.5.5 0 000-1h-.09zm2-3H7.41a.5.5 0 000 1h5.18a.5.5 0 000-1h-.09z"></path></svg>`,
	4,
)

function ChatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$py.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$px = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7a6 6 0 113 5.2l-2.34.77a.5.5 0 01-.64-.6l.71-2.5A5.98 5.98 0 012 7zm4.5-1.5a.5.5 0 000 1h3a.5.5 0 000-1h-3zm2 2h-2a.5.5 0 000 1h2a.5.5 0 000-1z"></path><path d="M12.28 14.95l-2.4-1.2c.43-.13.86-.29 1.26-.5l1.36.7 4.5-2.26V11a1 1 0 00-1-1h-1.67c.15-.32.28-.65.38-1H16a2 2 0 012 2v5a2 2 0 01-2 2H9a2 2 0 01-2-2v-2.07c.33.05.66.07 1 .07v2a1 1 0 001 1h7a1 1 0 001-1v-3.2l-4.28 2.15a.5.5 0 01-.44 0z"></path></svg>`,
	6,
)

function ChatMailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$px.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.54 2a6.5 6.5 0 00-5.68 9.67l-.8 2.08a1 1 0 001.21 1.32l2.49-.7A6.5 6.5 0 108.54 2zM6.57 15.74a6.49 6.49 0 007.71 1.64l2.49.7a1 1 0 001.2-1.33l-.8-2.08a6.47 6.47 0 00-1.37-8.04c.15.56.23 1.15.24 1.76a5.47 5.47 0 01.16 5.98l-.13.2.97 2.54-2.86-.8-.18.09a5.47 5.47 0 01-5.67-.4 7.5 7.5 0 01-1.76-.26z"></path></svg>`,
	4,
)

function ChatMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4.7L2.15 2.86a.5.5 0 11.7-.7L4.71 4 16 15.3l1.85 1.85a.5.5 0 01-.7.7L15.29 16a7.97 7.97 0 01-8.9 1.14l-.12-.07-3.65.92a.5.5 0 01-.62-.45v-.08l.01-.08.92-3.64-.07-.12a7.95 7.95 0 01-.83-2.9l-.02-.37L2 10c0-2.03.76-3.88 2-5.3zm6.97 6.98l-.68-.68H7.41a.5.5 0 000 1H10.59a.5.5 0 00.38-.32zM8.29 9l-.97-.97a.5.5 0 00.09.96L7.5 9h.8z"></path><path d="M12.5 9h-1.38l5.5 5.5A8 8 0 005.5 3.39L10.11 8H12.6a.5.5 0 010 1h-.09z"></path></svg>`,
	6,
)

function ChatOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 018 8.25A5.5 5.5 0 0010.26 18a7.93 7.93 0 01-3.87-.85l-.12-.07-3.65.92a.5.5 0 01-.62-.45v-.08l.01-.08.92-3.64-.07-.12a7.95 7.95 0 01-.83-2.9l-.02-.37L2 10a8 8 0 018-8zm2.07 9.44a2 2 0 01-1.44 2.48l-.46.12a4.73 4.73 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function ChatSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 10-16 0v.35l.03.38c.1 1.01.38 1.99.83 2.89l.06.12-.9 3.64-.02.08v.08c.03.3.31.52.62.45l3.65-.91.12.06A8 8 0 0018 10zM6 8a1 1 0 011-1h3a1 1 0 011 1v4a1 1 0 01-1 1H7a1 1 0 01-1-1V8zm7.15-.15a.5.5 0 01.85.36v3.58a.5.5 0 01-.85.36L12 11V9l1.15-1.15z"></path></svg>`,
	4,
)

function ChatVideoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ps = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 11-3.61 15.14l-.12-.07-3.65.92a.5.5 0 01-.62-.45v-.08l.01-.08.92-3.64-.07-.12a7.95 7.95 0 01-.83-2.9l-.02-.37L2 10a8 8 0 018-8zm0 3.5a.5.5 0 00-.5.5v5.5a.5.5 0 001 0V6a.5.5 0 00-.5-.5zm0 9a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function ChatWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ps.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h8c.77 0 1.47-.29 2-.76v-.83a1.5 1.5 0 01-1.4-2.61l2-1.5c.12-.1.26-.16.4-.21V6a3 3 0 00-3-3H6zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7zm3.87 4.2a.5.5 0 01.28.45v5a.5.5 0 01-1 0v-4l-1.2.9a.5.5 0 01-.6-.8l2-1.5a.5.5 0 01.52-.05z"></path></svg>`,
	4,
)

function Checkbox1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h7.05c.06-.3.18-.63.4-1 .23-.4.57-.8 1.04-1.23a1.5 1.5 0 01-1.12-2.48A3.51 3.51 0 0115.82 11c.42-.02.82.05 1.18.17V6a3 3 0 00-3-3H6zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7zM15.93 13c-.3.02-.67.16-1.05.6a.5.5 0 11-.76-.65c.54-.61 1.15-.91 1.76-.95.6-.03 1.14.2 1.52.57.38.36.63.88.59 1.43-.04.57-.38 1.1-.99 1.45-1.1.64-1.6 1.2-1.82 1.55h2.32a.5.5 0 110 1h-3a.5.5 0 01-.5-.45 1.43 1.43 0 01.03-.34c.04-.19.12-.42.28-.7a5.8 5.8 0 012.2-1.93c.36-.21.47-.46.48-.65a.84.84 0 00-.28-.64c-.2-.19-.48-.3-.78-.29z"></path></svg>`,
	4,
)

function Checkbox2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a3 3 0 00-3 3v8a3 3 0 003 3h4.2A5.5 5.5 0 0116 9.2V5a3 3 0 00-3-3H5zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 11.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7zM14.5 10a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function CheckboxArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$po = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function CheckboxCheckedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$po.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a3 3 0 00-3 3v8a3 3 0 003 3h4.2A5.5 5.5 0 0116 9.2V5a3 3 0 00-3-3H5zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 11.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7zM10 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function CheckboxCheckedSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zM4.5 6c0-.83.67-1.5 1.5-1.5h8c.83 0 1.5.67 1.5 1.5v8c0 .83-.67 1.5-1.5 1.5H6A1.5 1.5 0 014.5 14V6zM7 6a1 1 0 00-1 1v6a1 1 0 001 1h6a1 1 0 001-1V7a1 1 0 00-1-1H7z"></path></svg>`,
	4,
)

function CheckboxIndeterminateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h5.04a2.5 2.5 0 012.23-2.99A2.99 2.99 0 0115.5 9c.55 0 1.06.15 1.5.4V6a3 3 0 00-3-3H6zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function CheckboxPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm3-1.5c-.83 0-1.5.67-1.5 1.5v8c0 .83.67 1.5 1.5 1.5h8c.83 0 1.5-.67 1.5-1.5V6c0-.83-.67-1.5-1.5-1.5H6z"></path></svg>`,
	4,
)

function CheckboxUncheckedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.27l3.44-6.9a2 2 0 013.58 0l.71 1.42V6a3 3 0 00-3-3H6zm7.85 4.85l-5 5a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 4.65-4.64a.5.5 0 01.7.7zm-.25 2.7l-3.5 7A1 1 0 0011 19h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM15 12.5v3a.5.5 0 11-1 0v-3a.5.5 0 111 0zm-.5 5.5a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function CheckboxWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.88 5H4a2 2 0 00-2 2v6c0 1.1.9 2 2 2h12a2 2 0 002-2V7.12l-4.44 4.44a1.5 1.5 0 01-2.12-2.12L15.88 5zM4 8.5c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm0 3c0-.28.22-.5.5-.5H9a.5.5 0 010 1H4.5a.5.5 0 01-.5-.5zm13.85-5.65a.5.5 0 00-.7-.7l-5 5a.5.5 0 00.7.7l5-5z"></path></svg>`,
	4,
)

function CheckIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ph = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zm3.36 5.65a.5.5 0 00-.64-.06l-.07.06L9 11.3 7.35 9.65l-.07-.06a.5.5 0 00-.7.7l.07.07 2 2 .07.06c.17.11.4.11.56 0l.07-.06 4-4 .07-.08a.5.5 0 00-.06-.63z"></path></svg>`,
	4,
)

function CheckmarkCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ph.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.03 13.9L3.56 10a.75.75 0 00-1.12 1l4 4.5c.29.32.79.34 1.09.03l10.5-10.5a.75.75 0 00-1.06-1.06l-9.94 9.94z"></path></svg>`,
	4,
)

function CheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 018 8.33A3 3 0 0012.5 12v.06A2 2 0 0011 14v3.94A8 8 0 1110 2zm3.36 5.65a.5.5 0 00-.64-.06l-.07.06L9 11.3 7.35 9.65l-.07-.06a.5.5 0 00-.7.7l.07.07 2 2 .07.06c.17.11.4.11.56 0l.07-.06 4-4 .07-.08a.5.5 0 00-.06-.63zM15.5 10a2 2 0 012 2v1h.5a1 1 0 011 1v4a1 1 0 01-1 1h-5a1 1 0 01-1-1v-4a1 1 0 011-1h.5v-1c0-1.1.9-2 2-2zm-.65 6.37a.75.75 0 101.3-.74.75.75 0 00-1.3.74zM15.5 11a1 1 0 00-1 1v1h2v-1a1 1 0 00-1-1z"></path></svg>`,
	4,
)

function CheckmarkLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pe = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.03 12.9L2.56 9a.75.75 0 10-1.12 1l4 4.5c.29.32.79.34 1.09.03l10.5-10.5a.75.75 0 00-1.06-1.06l-9.94 9.94zM11 13c0-1.1.9-2 2-2h5a2 2 0 012 2v4a2 2 0 01-2 2h-5a2 2 0 01-2-2v-4zm6.5 3h-4a.5.5 0 100 1h4a.5.5 0 100-1zm-4-3a.5.5 0 100 1h4a.5.5 0 100-1h-4z"></path></svg>`,
	4,
)

function CheckmarkNoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pe.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zm7.35 5.35l-4 4a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7L9 11.29l3.65-3.64a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function CheckmarkSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.46 1.9l.99.39c.35.14.75.14 1.1 0l.99-.4c1.21-.47 2.58.1 3.1 1.3l.42.97c.16.35.43.62.78.77l.98.43c1.2.52 1.76 1.89 1.28 3.1l-.39.99a1.5 1.5 0 000 1.1l.4.99a2.42 2.42 0 01-1.3 3.1l-.97.42a1.5 1.5 0 00-.78.78l-.42.98a2.42 2.42 0 01-3.1 1.28l-1-.39a1.5 1.5 0 00-1.09 0l-.99.4a2.42 2.42 0 01-3.1-1.3l-.43-.97a1.5 1.5 0 00-.77-.78l-.98-.42a2.42 2.42 0 01-1.28-3.1l.39-1a1.5 1.5 0 000-1.09l-.4-.99a2.42 2.42 0 011.3-3.1l.97-.43c.35-.15.62-.42.77-.77l.43-.98a2.42 2.42 0 013.1-1.28zm4.17 5.77l-3.65 4.1-1.63-1.62a.5.5 0 00-.7.7l2 2c.2.2.53.2.72-.02l4-4.5a.5.5 0 00-.74-.66z"></path></svg>`,
	4,
)

function CheckmarkStarburstIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.85-11.85c.2.2.2.5 0 .7l-4 4a.5.5 0 01-.7 0l-2-2a.5.5 0 11.7-.7L9.5 9.79l3.65-3.64c.2-.2.5-.2.7 0zM7.5 13h5a.5.5 0 010 1h-5a.5.5 0 010-1z"></path></svg>`,
	4,
)

function CheckmarkUnderlineCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$pa = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2a.5.5 0 00-.5.5v2.6a3 3 0 002.2 2.89 16.03 16.03 0 01-1.67 6.05c.18.21.36.37.5.49.51.43.97 1.14.97 2.02 0 .54-.18 1.04-.48 1.45H17c.83 0 1.5-.67 1.5-1.5v-.3c0-.35-.12-.68-.3-.94A15.03 15.03 0 0115.8 8 3 3 0 0018 5.1V2.5a.5.5 0 00-.5-.5h-.75a.75.75 0 00-.75.75v.75a.5.5 0 01-1 0v-.75a.75.75 0 00-.75-.75h-.5a.75.75 0 00-.75.75v.75a.5.5 0 01-1 0v-.75a.75.75 0 00-.75-.75h-.75zm-4 3a3 3 0 00-2.24 5H4a1 1 0 100 2h.52a5.76 5.76 0 01-1.9 3.3c-.35.28-.62.73-.62 1.25 0 .8.65 1.45 1.45 1.45h6.1c.8 0 1.45-.65 1.45-1.45 0-.52-.27-.97-.62-1.26A5.76 5.76 0 018.48 12H9a1 1 0 100-2h-.26A3 3 0 006.5 5z"></path></svg>`,
	4,
)

function ChessIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$pa.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm4.85-1.85a.5.5 0 10-.7.7l3.5 3.5a.5.5 0 00.7 0l3.5-3.5a.5.5 0 00-.7-.7L10 11.29 6.85 8.15z"></path></svg>`,
	4,
)

function ChevronCircleDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zm1.85 4.85a.5.5 0 00-.7-.7l-3.5 3.5a.5.5 0 000 .7l3.5 3.5a.5.5 0 00.7-.7L8.71 10l3.14-3.15z"></path></svg>`,
	4,
)

function ChevronCircleLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 110-16 8 8 0 010 16zm-1.85-4.85a.5.5 0 00.7.7l3.5-3.5a.5.5 0 000-.7l-3.5-3.5a.5.5 0 10-.7.7L11.29 10l-3.14 3.15z"></path></svg>`,
	4,
)

function ChevronCircleRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1016 0 8 8 0 00-16 0zm4.85 1.85a.5.5 0 01-.7-.7l3.5-3.5a.5.5 0 01.7 0l3.5 3.5a.5.5 0 01-.7.7L10 8.71l-3.15 3.14z"></path></svg>`,
	4,
)

function ChevronCircleUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.8 8.73c.28.3.27.78-.03 1.06l-5.25 5a.75.75 0 01-1.04 0l-5.25-5a.75.75 0 011.04-1.08L10 13.2l4.73-4.5a.75.75 0 011.06.02zm0-4c.28.3.27.78-.03 1.06l-5.25 5a.75.75 0 01-1.04 0l-5.25-5a.75.75 0 011.04-1.08L10 9.2l4.73-4.5a.75.75 0 011.06.02z"></path></svg>`,
	4,
)

function ChevronDoubleDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.27 15.8a.75.75 0 01-1.06-.03l-5-5.25a.75.75 0 010-1.04l5-5.25a.75.75 0 111.08 1.04L6.8 10l4.5 4.73c.29.3.28.78-.02 1.06zm4 0a.75.75 0 01-1.06-.03l-5-5.25a.75.75 0 010-1.04l5-5.25a.75.75 0 111.09 1.04L10.79 10l4.5 4.73c.3.3.28.78-.02 1.06z"></path></svg>`,
	4,
)

function ChevronDoubleLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.73 4.2a.75.75 0 011.06.03l5 5.25c.28.3.28.75 0 1.04l-5 5.25a.75.75 0 11-1.08-1.04L13.2 10l-4.5-4.73a.75.75 0 01.02-1.06zm-4 0a.75.75 0 011.06.03l5 5.25c.28.3.28.75 0 1.04l-5 5.25a.75.75 0 11-1.08-1.04L9.2 10l-4.5-4.73a.75.75 0 01.02-1.06z"></path></svg>`,
	4,
)

function ChevronDoubleRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.2 15.27a.75.75 0 01.03-1.06l5.25-5a.75.75 0 011.04 0l5.25 5a.75.75 0 01-1.04 1.08L10 10.8l-4.73 4.5a.75.75 0 01-1.06-.02zm0-5a.75.75 0 01.03-1.06l5.25-5a.75.75 0 011.04 0l5.25 5a.75.75 0 01-1.04 1.08L10 5.8l-4.73 4.5a.75.75 0 01-1.06-.02z"></path></svg>`,
	4,
)

function ChevronDoubleUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.8 7.73c.28.3.27.78-.03 1.06l-5.25 5a.75.75 0 01-1.04 0l-5.25-5a.75.75 0 011.04-1.08L10 12.2l4.73-4.5a.75.75 0 011.06.02z"></path></svg>`,
	4,
)

function ChevronDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.27 15.8a.75.75 0 01-1.06-.03l-5-5.25a.75.75 0 010-1.04l5-5.25a.75.75 0 111.08 1.04L7.8 10l4.5 4.73c.29.3.28.78-.02 1.06z"></path></svg>`,
	4,
)

function ChevronLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.73 4.2a.75.75 0 011.06.03l5 5.25c.28.3.28.75 0 1.04l-5 5.25a.75.75 0 11-1.08-1.04L12.2 10l-4.5-4.73a.75.75 0 01.02-1.06z"></path></svg>`,
	4,
)

function ChevronRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.1 7.3a.75.75 0 01-1.13.98L10 4.31 6.03 8.28l-.08.07a.75.75 0 01-.98-1.13l4.5-4.5.08-.07c.3-.22.71-.2.98.07l4.5 4.5.07.08zM4.9 12.7a.75.75 0 011.13-.98L10 15.69l3.97-3.97.08-.07a.75.75 0 01.98 1.13l-4.5 4.5-.08.07c-.3.22-.71.2-.98-.07l-4.5-4.5-.07-.08z"></path></svg>`,
	4,
)

function ChevronUpDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.2 12.27a.75.75 0 01.03-1.06l5.25-5a.75.75 0 011.04 0l5.25 5a.75.75 0 01-1.04 1.08L10 7.8l-4.73 4.5a.75.75 0 01-1.06-.02z"></path></svg>`,
	4,
)

function ChevronUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 00-1 15.94c.02-.1.03-.2.06-.29l.37-1.5a3.2 3.2 0 01.84-1.48l4.83-4.83a2.87 2.87 0 012.85-.72A8 8 0 0010 2zm.98 13.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function CircleEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.73 17.17a2.5 2.5 0 010-3.53l4.9-4.9a2.5 2.5 0 013.54 0l.8.8a8 8 0 10-8.44 8.44l-.8-.8zm7.74-7.73l2.1 2.1a1.5 1.5 0 010 2.12l-3.6 3.6-4.22-4.22 3.6-3.6a1.5 1.5 0 012.12 0zm-2.21 8.52l-4.22-4.22-.6.6a1.5 1.5 0 000 2.13l2.1 2.1a1.5 1.5 0 001.12.43h4.09a.5.5 0 000-1h-2.53l.04-.04z"></path></svg>`,
	4,
)

function CircleEraserIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.54 9.25h12.92a6.5 6.5 0 00-12.92 0zM2 10a8 8 0 1116 0 8 8 0 01-16 0z"></path></svg>`,
	4,
)

function CircleHalfFillIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16z"></path></svg>`,
	4,
)

function CircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 7h2.48A5.5 5.5 0 107 12.98V10.5A3.5 3.5 0 0110.5 7zm0 1A2.5 2.5 0 008 10.5v5c0 .5.15.98.41 1.38l3.18-3.17a2 2 0 012.82 0l3.18 3.17c.26-.4.41-.87.41-1.38v-5A2.5 2.5 0 0015.5 8h-5zm5.5 3a1 1 0 11-2 0 1 1 0 012 0zm.88 6.59L13.7 14.4a1 1 0 00-1.42 0L9.12 17.6c.4.26.87.41 1.38.41h5c.5 0 .98-.15 1.38-.41z"></path></svg>`,
	4,
)

function CircleImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.98 10.5H2.02a8 8 0 0015.96 0zm0-1H2.02a8 8 0 0115.96 0z"></path></svg>`,
	4,
)

function CircleLineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.92 6A7 7 0 006 12.92 6 6 0 1112.92 6zm-3.8 0H4.5a.5.5 0 000 1h3.2c.44-.38.92-.72 1.42-1zM19 13a6 6 0 11-12 0 6 6 0 0112 0zm-3.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-1.15-1.14a.5.5 0 00-.7.7l1.5 1.5c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function CircleMultipleSubtractCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.3 16l1.85 1.85a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7L4 4.71A8 8 0 0015.3 16zm2.7-6c0 1.67-.51 3.21-1.38 4.5L5.5 3.38A8 8 0 0118 10z"></path></svg>`,
	4,
)

function CircleOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 10a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>`,
	4,
)

function CircleSmallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2c.28 0 .5.22.5.5V4h1c.83 0 1.5.67 1.5 1.5v2.55a2.5 2.5 0 00-2 2.45V18h-2V8a2 2 0 00-2-2v-.5C8 4.67 8.67 4 9.5 4h1V2.5c0-.28.22-.5.5-.5zM8.64 7.24c-.28-.2-.48-.2-.64-.15a.77.77 0 00-.14.06L4.73 9.03A1.5 1.5 0 004 10.32v6.18c0 .83.67 1.5 1.5 1.5H9V8a1 1 0 00-.36-.76zM15.5 9h-1c-.83 0-1.5.68-1.5 1.5V18h3.5c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5h-1z"></path></svg>`,
	4,
)

function CityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2h-3v6.5a.5.5 0 01-.8.4L8.5 7.62 6.8 8.9a.5.5 0 01-.8-.4V2zm4 0H7v5.5l1.2-.9a.5.5 0 01.6 0l1.2.9V2z"></path></svg>`,
	4,
)

function ClassIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.57 16.48a1 1 0 01-1.42 0L3.5 10.82a1 1 0 010-1.41l1.42-1.42-.08-.1a1 1 0 01.08-1.31L6.68 4.8a2.5 2.5 0 013.53 0l1.31 1.31 1.44-2.41a2.44 2.44 0 013.83-.48 2.42 2.42 0 01-.5 3.8l-2.43 1.42 1.3 1.31a2.5 2.5 0 010 3.54l-1.77 1.76a1 1 0 01-1.41 0l-1.41 1.42zM5.62 8.7L4.2 10.1l5.66 5.66 1.41-1.41L5.62 8.7zm8.2-4.48l-1.56 2.63.87.87 2.66-1.55a1.43 1.43 0 00.01-2.46 1.44 1.44 0 00-1.98.5z"></path></svg>`,
	4,
)

function ClassificationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.47 3c-.38 0-.7.28-.75.65l-.13 1a.75.75 0 101.49.2l.04-.35H7.9l-1.57 9h-.58a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-.4l1.57-9h2.69l-.02.16a.75.75 0 101.48.2l.14-1.01a.75.75 0 00-.75-.85h-8.5zM2.75 15.5a.75.75 0 000 1.5H9.6a5.46 5.46 0 01-.5-1.5H2.74zm16.25-1a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function ClearFormattingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM8 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm-1 11v-6a.5.5 0 011 0v6a.5.5 0 01-1 0zm5.5.5a.5.5 0 01-.5-.5v-6a.5.5 0 011 0v6a.5.5 0 01-.5.5zm-3-.5v-6a.5.5 0 011 0v6a.5.5 0 01-1 0z"></path></svg>`,
	4,
)

function Clipboard3DayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v4.7a5.5 5.5 0 00-5.74 8.8H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function ClipboardArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3c-.65 0-1.2.42-1.41 1zM8.5 3h3a.5.5 0 010 1h-3a.5.5 0 010-1zM9 8.5c0-.28.22-.5.5-.5H13a.5.5 0 010 1H9.5a.5.5 0 01-.5-.5zm0 3c0-.28.22-.5.5-.5H13a.5.5 0 010 1H9.5a.5.5 0 01-.5-.5zm0 3c0-.28.22-.5.5-.5H13a.5.5 0 010 1H9.5a.5.5 0 01-.5-.5zm-1-6a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 3a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75 3.75a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function ClipboardBulletListLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59c.2-.58.76-1 1.41-1zM8 3.5c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5zm4.75 5.75a.75.75 0 100-1.5.75.75 0 000 1.5zm0 3a.75.75 0 100-1.5.75.75 0 000 1.5zM12 14.5a.75.75 0 101.5 0 .75.75 0 00-1.5 0zm-1-6a.5.5 0 00-.5-.5H7a.5.5 0 000 1h3.5a.5.5 0 00.5-.5zm0 3a.5.5 0 00-.5-.5H7a.5.5 0 000 1h3.5a.5.5 0 00.5-.5zm0 3a.5.5 0 00-.5-.5H7a.5.5 0 000 1h3.5a.5.5 0 00.5-.5z"></path></svg>`,
	4,
)

function ClipboardBulletListRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v4.7a5.5 5.5 0 00-5.74 8.8H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function ClipboardCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 9.5a.5.5 0 00-1 0V11c0 .28.22.5.5.5h1.5a.5.5 0 000-1h-1v-1zM7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm5.5 8a4 4 0 10-8 0 4 4 0 008 0z"></path></svg>`,
	4,
)

function ClipboardClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v5.88a1.5 1.5 0 00-2.44.71l-.4 1.41h-.74a1.5 1.5 0 00-2.55-.48l-1.5 1.75a1.5 1.5 0 000 1.95l1.5 1.75c.29.35.7.53 1.13.53H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm2.88 10.32a.5.5 0 10-.76-.65l-1.5 1.75a.5.5 0 000 .65l1.5 1.75a.5.5 0 00.7.06.5.5 0 00.06-.71l-1.22-1.42 1.22-1.43zm4.1-1.68a.5.5 0 10-.96-.28l-2 7a.5.5 0 10.97.28l2-7zm1.2 5.24a.5.5 0 01-.06-.71l1.22-1.42-1.22-1.43a.5.5 0 01.76-.65l1.5 1.75a.5.5 0 010 .65l-1.5 1.75a.5.5 0 01-.7.06z"></path></svg>`,
	4,
)

function ClipboardCodeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM8 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm5 8.5v2.5a.5.5 0 01-1 0V12a.5.5 0 011 0zm-3-3c.28 0 .5.22.5.5v5a.5.5 0 01-1 0v-5c0-.28.22-.5.5-.5zM8 7.5v7a.5.5 0 01-1 0v-7a.5.5 0 011 0z"></path></svg>`,
	4,
)

function ClipboardDataBarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 11h4v3H8v-3zm-.91-8c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zM7 7.5c0 .28.22.5.5.5h5a.5.5 0 000-1h-5a.5.5 0 00-.5.5zM7 11v3a1 1 0 001 1h4a1 1 0 001-1v-3a1 1 0 00-1-1H8a1 1 0 00-1 1z"></path></svg>`,
	4,
)

function ClipboardDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5H8l.06-.35.37-1.5a3.2 3.2 0 01.84-1.48l4.83-4.83c.53-.53 1.21-.8 1.9-.84V4.5c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM8 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm1.98 11.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function ClipboardEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v4.7a5.5 5.5 0 00-5.74 8.8H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function ClipboardErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5V9c-.7.03-1.4.25-2 .66a3.85 3.85 0 00-4.87 5.91L11.55 18H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm5.15 15.68a.5.5 0 00.7 0l3.82-3.81a2.85 2.85 0 10-4.03-4.04l-.14.14-.13-.14a2.85 2.85 0 10-4.04 4.04l3.82 3.81z"></path></svg>`,
	4,
)

function ClipboardHeartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3z"></path></svg>`,
	4,
)

function ClipboardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5V9h-3.5A3.5 3.5 0 009 12.5v4c0 .54.12 1.05.34 1.5H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm1.5 9.5a2.5 2.5 0 012.5-2.5h4a2.5 2.5 0 012.5 2.5v4c0 .5-.15.98-.41 1.38l-3.03-3.03a1.5 1.5 0 00-2.12 0l-3.03 3.03c-.26-.4-.41-.87-.41-1.38v-4zm7 .25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-5.88 5.84c.4.26.87.41 1.38.41h4c.5 0 .98-.15 1.38-.41l-3.03-3.03a.5.5 0 00-.7 0l-3.03 3.03z"></path></svg>`,
	4,
)

function ClipboardImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ox = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h3.59a1.5 1.5 0 01.04-1.1l3.5-8a1.5 1.5 0 012.74 0l.63 1.44V4.5c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zm3 1a.5.5 0 010 1h-3a.5.5 0 010-1h3zm2.95 6.3a.5.5 0 00-.91 0l-3.5 8a.5.5 0 10.92.4l1.18-2.7h3.72l1.18 2.7a.5.5 0 00.92-.4l-3.5-8zm.97 4.7h-2.84L14 10.75 15.42 14z"></path></svg>`,
	4,
)

function ClipboardLetterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ox.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ow = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5V11h-3.5a4.5 4.5 0 00-3.74 7H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zM19 15.5a3.5 3.5 0 00-3.5-3.5h-.09a.5.5 0 00.09 1h.16a2.5 2.5 0 01-.16 5l-.1.01a.5.5 0 00.1 1V19h.2a3.5 3.5 0 003.3-3.5zm-6-3a.5.5 0 00-.5-.5h-.2a3.5 3.5 0 00.2 7h.09a.5.5 0 00-.09-1h-.16a2.5 2.5 0 01.16-5h.09a.5.5 0 00.41-.5zm2.5 2.5h-3.09a.5.5 0 00.09 1h3.09a.5.5 0 00-.09-1z"></path></svg>`,
	4,
)

function ClipboardLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ow.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ov = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM8 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM7 10a1 1 0 110-2 1 1 0 010 2zm1 2a1 1 0 11-2 0 1 1 0 012 0zm5-2a1 1 0 110-2 1 1 0 010 2zm-2 2a1 1 0 11-2 0 1 1 0 012 0zm-1-2a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function ClipboardMonthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ov.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ou = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v10.48c-.43.22-.78.56-1 .99a2.25 2.25 0 00-4 0A2.25 2.25 0 006.98 18H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm1.75 14a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM13 18.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zm4 0a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function ClipboardMoreIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ou.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ot = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5V10h-4a3 3 0 00-3 3v4a3 3 0 00.17 1H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm3.5 8a2 2 0 00-2 2v4c0 1.1.9 2 2 2h5a2 2 0 002-2v-4a2 2 0 00-2-2h-5zm0 5.5c0-.28.22-.5.5-.5h4a.5.5 0 110 1h-4a.5.5 0 01-.5-.5zm0-3c0-.28.22-.5.5-.5h4a.5.5 0 110 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ClipboardNoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ot.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$os = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 4h1.59c.2.58.76 1 1.41 1h3c.65 0 1.2-.42 1.41-1h1.59c.28 0 .5.22.5.5v1a.5.5 0 001 0v-1c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3c-.65 0-1.2.42-1.41 1H4.5C3.67 3 3 3.67 3 4.5v12c0 .83.67 1.5 1.5 1.5h3a.5.5 0 000-1h-3a.5.5 0 01-.5-.5v-12c0-.28.22-.5.5-.5zm3 0a.5.5 0 010-1h3a.5.5 0 010 1h-3zm3 3C9.67 7 9 7.67 9 8.5v8c0 .83.67 1.5 1.5 1.5h5c.83 0 1.5-.67 1.5-1.5v-8c0-.83-.67-1.5-1.5-1.5h-5z"></path></svg>`,
	4,
)

function ClipboardPasteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$os.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$or = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5V10h-1.57l-.59-1.17a1.5 1.5 0 00-2.68 0l-.33.65-.9-2.92a1.5 1.5 0 00-2.8-.17L5.53 10H4V4.5C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm5 10H16v3.5c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5V13h2.5c.6 0 1.13-.35 1.37-.9l.37-.83.83 2.67a1.5 1.5 0 002.77.23l.74-1.48c.26.2.58.31.92.31zM8.98 6.85a.5.5 0 00-.94-.05L6.18 11H2.5a.5.5 0 000 1h4a.5.5 0 00.46-.3L8.4 8.42l1.61 5.23a.5.5 0 00.93.07l1.55-3.1.55 1.1a.5.5 0 00.45.28h4a.5.5 0 000-1h-3.7l-.85-1.72a.5.5 0 00-.9 0l-1.44 2.88-1.63-5.3z"></path></svg>`,
	4,
)

function ClipboardPulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$or.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v3.76a4.5 4.5 0 015.56 6.18l2 2c.42.42.54 1.03.35 1.56h2.59c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zm3 1a.5.5 0 010 1h-3a.5.5 0 010-1h3zM8.3 14.6a3.5 3.5 0 10-.7.7l2.55 2.55a.5.5 0 00.7-.7L8.3 14.6zm-2.8.4a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function ClipboardSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$op = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v4.7a5.5 5.5 0 00-5.74 8.8H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm3.57 8.44a2 2 0 01-1.44 2.48l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function ClipboardSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$op.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2c-.65 0-1.2.42-1.41 1H3.5C2.67 3 2 3.67 2 4.5v12c0 .83.67 1.5 1.5 1.5h6.76A5.5 5.5 0 0114 9.02V4.5c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM6 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm4.85 6.35l-3.5 3.5a.5.5 0 01-.7 0l-1.5-1.5a.5.5 0 01.7-.7L7 12.29l3.15-3.14a.5.5 0 01.7.7zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function ClipboardTaskAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$on = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM8 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm4.85 6.35l-3.5 3.5a.5.5 0 01-.7 0l-1.5-1.5a.5.5 0 01.7-.7L9 12.29l3.15-3.14a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function ClipboardTaskIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$on.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$om = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zM8 3.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm1.35 4.35L7.6 9.6a.5.5 0 01-.69.02l-.75-.69a.5.5 0 11.68-.73l.4.36 1.4-1.41a.5.5 0 11.71.7zm0 4.3c.2.2.2.5 0 .7L7.6 14.6a.5.5 0 01-.69.02l-.75-.69a.5.5 0 01.68-.73l.4.36 1.4-1.41c.2-.2.52-.2.71 0zm1.65.6h2.5a.5.5 0 010 1H11a.5.5 0 010-1zm-.5-4.5c0-.28.22-.5.5-.5h2.5a.5.5 0 010 1H11a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ClipboardTaskListLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$om.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ol = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zM8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zm5.35 4.15a.5.5 0 00-.7 0l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75a.5.5 0 000-.7zm0 5.7a.5.5 0 00-.7-.7l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75zM6.5 8a.5.5 0 000 1H9a.5.5 0 000-1H6.5zM6 13.5c0 .28.22.5.5.5H9a.5.5 0 000-1H6.5a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function ClipboardTaskListRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ol.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ok = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v4.73c-.33.14-.63.34-.9.61L10.94 14H6.5a.5.5 0 000 1h3.49a3.2 3.2 0 00-.56 1.16l-.37 1.5c-.03.11-.05.23-.06.34H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zm4.91.5a.5.5 0 00-.5-.5h-3a.5.5 0 000 1h3a.5.5 0 00.5-.5zM13.5 8h-7a.5.5 0 000 1h7a.5.5 0 000-1zM10 11.5a.5.5 0 00-.5-.5h-3a.5.5 0 000 1h3a.5.5 0 00.5-.5zm.98 3.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function ClipboardTextEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ok.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M21.83 4h1.67A3.5 3.5 0 0127 7.5v19a3.5 3.5 0 01-3.5 3.5h-15A3.5 3.5 0 015 26.5v-19A3.5 3.5 0 018.5 4h1.67A3 3 0 0113 2h6a3 3 0 012.83 2zM19 4h-6a1 1 0 100 2h6a1 1 0 100-2zm-8 8a1 1 0 100 2h10a1 1 0 100-2H11zm-1 6a1 1 0 001 1h5a1 1 0 100-2h-5a1 1 0 00-1 1zm1 4a1 1 0 100 2h8a1 1 0 100-2h-8z"></path></svg>`,
	4,
)

function ClipboardTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2c-.65 0-1.2.42-1.41 1H5.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-12c0-.83-.67-1.5-1.5-1.5h-1.59c-.2-.58-.76-1-1.41-1h-3zm3 1a.5.5 0 010 1h-3a.5.5 0 010-1h3zm-5 5h7a.5.5 0 010 1h-7a.5.5 0 010-1zm0 3h3a.5.5 0 010 1h-3a.5.5 0 010-1zM6 14.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ClipboardTextLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 3c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59zm4.91.5a.5.5 0 00-.5-.5h-3a.5.5 0 000 1h3a.5.5 0 00.5-.5zM10.5 11a.5.5 0 000 1h3a.5.5 0 000-1h-3zM6 8.5c0 .28.22.5.5.5h7a.5.5 0 000-1h-7a.5.5 0 00-.5.5zM8.5 14a.5.5 0 000 1h5a.5.5 0 000-1h-5z"></path></svg>`,
	4,
)

function ClipboardTextRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$og = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.76 3.37A3.16 3.16 0 002 5.19c0 1.08.53 2.03 1.35 2.61a7 7 0 001.36 6.78l-1.56 1.57a.5.5 0 00.7.7l1.57-1.56a6.97 6.97 0 009.16 0l1.57 1.56a.5.5 0 00.7-.7l-1.56-1.57a6.97 6.97 0 001.35-6.8 3.17 3.17 0 10-4.41-4.42 7 7 0 00-4.47 0zM5.16 3c.66 0 1.25.3 1.65.77a7.03 7.03 0 00-3.06 3.07A2.2 2.2 0 015.17 3zm8.02.76A2.16 2.16 0 0117 5.18c0 .66-.3 1.25-.76 1.65a7.03 7.03 0 00-3.06-3.07zM9.5 6c.28 0 .5.22.5.5V10h2.5a.5.5 0 010 1h-3a.5.5 0 01-.5-.5v-4c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function ClockAlarmIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$og.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$of = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 17A7.5 7.5 0 103 9.6a5.5 5.5 0 017.4 7.4h.1zM11 5.5V9h2.5a.5.5 0 010 1h-3a.5.5 0 01-.5-.5v-4a.5.5 0 011 0zm-10 9a4.5 4.5 0 014-4.47v3.76l-.65-.64a.5.5 0 00-.7.7l1.5 1.5c.2.2.5.2.7 0l1.5-1.5a.5.5 0 00-.7-.7l-.65.64v-3.76a4.5 4.5 0 11-5 4.47zm2 2c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function ClockArrowDownloadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$of.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oe = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 1a8 8 0 11-.59 15.98 5.5 5.5 0 00-7.39-7.39L3 9a8 8 0 018-8zm-.5 3a.5.5 0 00-.5.5v5.09a.5.5 0 00.5.41h3.09a.5.5 0 00-.09-1H11V4.41a.5.5 0 00-.5-.41zM10 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7L5.5 13.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L6.21 14.5l1.14-1.15z"></path></svg>`,
	4,
)

function ClockDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oe.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$od = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zm-.5 3a.5.5 0 00-.5.5v5.09a.5.5 0 00.5.41h3.09a.5.5 0 00-.09-1H10V5.41A.5.5 0 009.5 5z"></path></svg>`,
	4,
)

function ClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$od.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 17A7.5 7.5 0 103 9.6a5.5 5.5 0 017.4 7.4h.1zM11 5.41V9h2.5a.5.5 0 01.09 1H10.5a.5.5 0 01-.5-.41V5.5a.5.5 0 011-.09zm-1 9.09a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM4 12a.5.5 0 00-.5.5v4a.5.5 0 001 0v-4A.5.5 0 004 12zm3 0a.5.5 0 00-.5.5v4a.5.5 0 001 0v-4A.5.5 0 007 12z"></path></svg>`,
	4,
)

function ClockPauseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ob = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 9c-.56 0-1.08.19-1.5.5a7.5 7.5 0 118 7.48V13.5a2.5 2.5 0 00-2.04-2.46A2.5 2.5 0 006.5 9h-2zm6-4a.5.5 0 00-.5.5v4.09a.5.5 0 00.5.41h3.09a.5.5 0 00-.09-1H11V5.41a.5.5 0 00-.5-.41zM3 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15H8v-.5a.5.5 0 00-1 0v.5H4v-.5a.5.5 0 00-1 0v.5H1v-1.5c0-.83.67-1.5 1.5-1.5H3zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zM8 16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 011 17.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function ClockToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ob.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$oa = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm1.4 3.24c.82-.41 1.8-.24 2.45.4a.5.5 0 01-.7.71 1.12 1.12 0 00-1.3-.22C6.44 8.34 6 8.9 6 10s.44 1.66.85 1.87c.43.21.95.13 1.3-.22a.5.5 0 11.7.7c-.65.65-1.63.82-2.45.41C5.56 12.34 5 11.39 5 10c0-1.39.56-2.34 1.4-2.76zm7.95.4a.5.5 0 01-.7.71 1.12 1.12 0 00-1.3-.22c-.41.21-.85.76-.85 1.87s.44 1.66.85 1.87c.43.21.95.13 1.3-.22a.5.5 0 01.7.7c-.65.65-1.63.82-2.45.41-.84-.42-1.4-1.37-1.4-2.76 0-1.39.56-2.34 1.4-2.76.82-.41 1.8-.24 2.45.4z"></path></svg>`,
	4,
)

function ClosedCaptionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$oa.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l1.48 1.48A3 3 0 002 7v6a3 3 0 003 3h10l.28-.01 1.87 1.86a.5.5 0 00.7-.7l-1.48-1.48-3.7-3.7-1.05-1.05L10.5 9.8 8.94 8.23 7.77 7.06 4.72 4.01 2.85 2.15zm4.46 5.87c-.16 0-.31.04-.46.11C6.44 8.34 6 8.9 6 10s.44 1.66.85 1.87c.43.21.95.13 1.3-.22a.5.5 0 11.7.7c-.65.65-1.63.82-2.45.41C5.56 12.34 5 11.39 5 10c0-1.39.56-2.34 1.4-2.76l.1-.04.81.82zm3.42.59L6.13 4H15a3 3 0 013 3v6c0 .8-.31 1.52-.82 2.06l-5.64-5.64c.13-.73.48-1.12.8-1.29.44-.21.96-.13 1.3.22a.5.5 0 00.71-.7 2.12 2.12 0 00-2.45-.41c-.52.26-.93.72-1.17 1.37z"></path></svg>`,
	4,
)

function ClosedCaptionOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07a3.33 3.33 0 013.27 3.66A5.74 5.74 0 007.77 13H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zm3.5 16a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V13h1.5a.5.5 0 010 1H14v1.5a.5.5 0 01-1 0V14h-1.5a.5.5 0 010-1H13v-1.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function CloudAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 4c2.82 0 4.41 1.92 4.65 4.25h.07c1.24 0 2.32.7 2.88 1.75H11a2 2 0 00-1 3.73V15H5.28A3.33 3.33 0 012 11.62c0-1.8 1.37-3.27 3.1-3.37h.25C5.6 5.9 7.18 4 10 4zm0 8a1 1 0 011-1h7a1 1 0 110 2h-7a1 1 0 01-1-1zm8 2h-7v3c0 1.1.9 2 2 2h3a2 2 0 002-2v-3zm-4.5 1h2a.5.5 0 010 1h-2a.5.5 0 010-1z"></path></svg>`,
	4,
)

function CloudArchiveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07a3.33 3.33 0 013.27 3.66A5.74 5.74 0 007.77 13H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zm3.5 16a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm1.6-4.9L14 14.2v-2.7a.5.5 0 00-1 0v2.7l-1.1-1.1a.56.56 0 10-.8.8l2 2c.22.22.58.22.8 0l2-2a.56.56 0 10-.8-.8z"></path></svg>`,
	4,
)

function CloudArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07a3.33 3.33 0 013.27 3.66A5.74 5.74 0 007.77 13H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zm3.5 7a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm1.6 4.9a.56.56 0 10.8-.8l-2-2a.56.56 0 00-.8 0l-2 2a.56.56 0 10.8.8l1.1-1.1v2.7a.5.5 0 001 0v-2.7l1.1 1.1z"></path></svg>`,
	4,
)

function CloudArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07a3.33 3.33 0 013.27 3.66A5.74 5.74 0 007.77 13H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zm8 11.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function CloudCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07a3.33 3.33 0 013.27 3.66A5.74 5.74 0 007.77 13H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zm8 11.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function CloudDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.65 8.25C14.4 5.92 12.82 4 10 4 7.18 4 5.59 5.9 5.35 8.25h-.07A3.33 3.33 0 002 11.62 3.33 3.33 0 005.28 15h3.2c.15-.5.42-.96.8-1.33l4.82-4.83c.25-.25.54-.45.85-.59H14.65zm.16 1.3l-4.83 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function CloudEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07A3.33 3.33 0 0118 9.76 2.99 2.99 0 0013.17 11a2.5 2.5 0 00-2.32 1.7l-.1.3H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zm6 12a2 2 0 10-2-2h-.78a1.5 1.5 0 00-1.42 1.03l-.55 1.63a.5.5 0 01-.47.34H9.73a2 2 0 10.27 1h.78a1.5 1.5 0 001.42-1.03l.55-1.63a.5.5 0 01.47-.34h1.05c.34.6.99 1 1.73 1zm0-1a1 1 0 110-2 1 1 0 010 2zm-7 3a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function CloudFlowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 4c2.82 0 4.41 1.92 4.65 4.25h.07A3.33 3.33 0 0118 11.62 3.33 3.33 0 0114.72 15H5.28A3.33 3.33 0 012 11.62a3.33 3.33 0 013.28-3.37h.07C5.6 5.9 7.18 4 10 4z"></path></svg>`,
	4,
)

function CloudIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.65 8.25C14.4 5.92 12.82 4 10 4 7.18 4 5.59 5.9 5.35 8.25h-.07A3.33 3.33 0 002 11.62 3.33 3.33 0 005.28 15h3.76a3.5 3.5 0 013.46-4h4c.53 0 1.04.12 1.49.33a3.32 3.32 0 00-3.27-3.08h-.07zM12.5 12a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-3.5 2a.5.5 0 000 1h4a.5.5 0 000-1h-4z"></path></svg>`,
	4,
)

function CloudLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l3.67 3.67c-.25.53-.4 1.11-.47 1.73h-.07A3.33 3.33 0 002 11.62 3.33 3.33 0 005.28 15h9.01l2.86 2.85a.5.5 0 00.7-.7l-15-15zM18 11.62a3.4 3.4 0 01-1.45 2.8l-9.5-9.48A4.66 4.66 0 0110 4c2.82 0 4.41 1.92 4.65 4.25h.07A3.33 3.33 0 0118 11.62z"></path></svg>`,
	4,
)

function CloudOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.65 8.25C14.4 5.92 12.82 4 10 4 7.18 4 5.59 5.9 5.35 8.25H5.1A3.34 3.34 0 002 11.62 3.33 3.33 0 005.28 15h2.8a1.5 1.5 0 01.36-1.56l2-2A1.5 1.5 0 0112.9 13h1.18a1.5 1.5 0 012.47-1.56l1.27 1.27c.1-.34.17-.7.17-1.09a3.33 3.33 0 00-3.28-3.37h-.07zm-2.8 4.6a.5.5 0 00-.7-.7l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L10.71 15h5.58l-1.14 1.15a.5.5 0 00.7.7l2-2a.5.5 0 000-.7l-2-2a.5.5 0 00-.7.7L16.29 14h-5.58l1.14-1.15z"></path></svg>`,
	4,
)

function CloudSwapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c2.82 0 4.41 1.92 4.65 4.25h.07a3.33 3.33 0 013.27 3.66A5.74 5.74 0 007.77 13H5.28A3.33 3.33 0 012 9.62a3.33 3.33 0 013.28-3.37h.07C5.6 3.9 7.18 2 10 2zM9 13.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H14a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V11c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V16a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H13a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function CloudSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.65 8.25C14.4 5.92 12.82 4 10 4 7.18 4 5.59 5.9 5.35 8.25H5.1A3.34 3.34 0 002 11.62 3.33 3.33 0 005.28 15h9.44A3.33 3.33 0 0018 11.62a3.33 3.33 0 00-3.28-3.37h-.07zM8.5 7h3a.5.5 0 010 1h-3a.5.5 0 010-1zM4 11.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm7.5-.5h4a.5.5 0 010 1h-4a.5.5 0 010-1z"></path></svg>`,
	4,
)

function CloudWordsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm9.96-3.8a.5.5 0 10-.92-.4l-3.5 8a.5.5 0 10.92.4l3.5-8zm-5.1 1.45a.5.5 0 00-.71 0l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L5.21 10l1.64-1.65a.5.5 0 000-.7zm6.29.7L14.79 10l-1.64 1.65a.5.5 0 00.7.7l2-2a.5.5 0 000-.7l-2-2a.5.5 0 00-.7.7z"></path></svg>`,
	4,
)

function CodeCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.94 4.05a.75.75 0 00-1.38-.6l-5.5 12.5a.75.75 0 101.38.6l5.5-12.5zm1.35 9.8a.75.75 0 01-.13-1.06L16.3 10l-2.14-2.8a.75.75 0 011.18-.9l2.5 3.24c.21.27.21.65 0 .92l-2.5 3.25a.75.75 0 01-1.05.13zm-8.58-7.7c.33.26.39.73.13 1.06L3.7 10l2.14 2.8a.75.75 0 11-1.18.9l-2.5-3.24a.75.75 0 010-.92l2.5-3.25a.75.75 0 011.05-.13z"></path></svg>`,
	4,
)

function CodeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 4.5a.75.75 0 000 1.5h5a.75.75 0 000-1.5h-5zm3 3a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM4 11.25c0-.41.34-.75.75-.75h9.5c.06 0 .12 0 .17.02L12.94 12H4.75a.75.75 0 01-.75-.75zm6.27 3.42l.98-.98a.75.75 0 00-.5-.19h-8a.75.75 0 000 1.5h7.24c.08-.12.18-.23.28-.33zm2.23-6.42c0-.41.34-.75.75-.75h3a.75.75 0 010 1.5h-3a.75.75 0 01-.75-.75zM10.75 4.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm.23 10.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function CodeTextEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 4.5a.75.75 0 000 1.5h5a.75.75 0 000-1.5h-5zm3 3a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM4 11.25c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5a.75.75 0 01-.75-.75zM2.75 13.5a.75.75 0 000 1.5h8a.75.75 0 000-1.5h-8zm9.75-5.25c0-.41.34-.75.75-.75h3a.75.75 0 010 1.5h-3a.75.75 0 01-.75-.75zM10.75 4.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z"></path></svg>`,
	4,
)

function CodeTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 7A2.5 2.5 0 0118 9.33v.93A5.5 5.5 0 0010.26 18H9.5A2.5 2.5 0 017 15.66V9.5A2.5 2.5 0 019.33 7h6.17zm-2.84-3.3l.05.15.57 2.15H9a3 3 0 00-3 2.82V14.35a2.5 2.5 0 01-2.31-1.69l-.05-.17-1.56-5.8a2.5 2.5 0 011.61-3l.16-.05 5.8-1.56a2.5 2.5 0 012.95 1.46l.06.15zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 100 1H14v1.5a.5.5 0 101 0V15h1.5a.5.5 0 100-1H15v-1.5z"></path></svg>`,
	4,
)

function CollectionsAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 7A2.5 2.5 0 0118 9.33v6.17a2.5 2.5 0 01-2.33 2.5H9.5A2.5 2.5 0 017 15.66V9.5A2.5 2.5 0 019.34 7h6.16zm-3 2a.5.5 0 00-.5.4V12H9.41a.5.5 0 000 1H12v2.59a.5.5 0 001 0v-2.6h2.6a.5.5 0 000-.98l-.1-.01H13V9.4a.5.5 0 00-.5-.4zm.16-5.3l.05.15L13.3 6H9a3 3 0 00-3 2.82V14.35a2.5 2.5 0 01-2.3-1.69l-.06-.17-1.55-5.8a2.5 2.5 0 011.6-3l.16-.05 5.8-1.56a2.5 2.5 0 012.96 1.46l.05.15z"></path></svg>`,
	4,
)

function CollectionsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10.66l1.08 1.08a3 3 0 004.24 0l.68-.68c.03 1.34.96 2.94 2.75 2.94 1.82 0 2.75-1.65 2.75-3 0-1.01-.53-1.96-.86-2.47-.2-.3-.38-.55-.52-.72l-.01-.02-.22-.26-.02-.03a1.5 1.5 0 00-.85-.48 3 3 0 00-.87-2.35L9.48 4h6.02A2.5 2.5 0 0118 6.5v7a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 13.5v-2.84zM5 1.5a.5.5 0 011 0v1.17a2 2 0 011.32.59l2.12 2.12a2 2 0 010 2.83l-2.83 2.83a2 2 0 01-2.82 0L1.66 8.9a2 2 0 010-2.82L4.5 3.26A2 2 0 015 2.89V1.5zm0 4V4.16L2.66 6.5h6.32a1 1 0 00-.25-.41L6.61 3.96A1 1 0 006 3.68V5.5a.5.5 0 01-1 0zm-2.92 2c0 .26.1.51.3.7l2.11 2.13a1 1 0 001.42 0L8.73 7.5H2.08zm8.3.67l-.22.26c-.12.15-.29.38-.46.64C9.4 9.57 9 10.3 9 11c0 1 .67 2 1.75 2s1.75-1 1.75-2c0-.7-.39-1.44-.7-1.93a8.13 8.13 0 00-.46-.64l-.22-.26a.5.5 0 00-.74 0zm.17 1.44c.06-.11.13-.21.2-.3l.2.3c.31.47.55 1 .55 1.39 0 .3-.1.57-.25.75a.62.62 0 01-.5.25.62.62 0 01-.5-.25A1.21 1.21 0 0110 11c0-.4.24-.92.55-1.4z"></path></svg>`,
	4,
)

function ColorBackgroundIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 12c0 1.35.93 3 2.75 3 1.55 0 2.46-1.2 2.69-2.39A2 2 0 0118 14v2a2 2 0 01-2 2H4a2 2 0 01-2-2v-2c0-1.1.9-2 2-2h.34l1.45 1.45a3 3 0 004.24 0L11.48 12H12zm2.38-2.83l-.22.26c-.12.15-.29.38-.46.64-.31.5-.7 1.23-.7 1.93 0 1 .67 2 1.75 2s1.75-1 1.75-2c0-.7-.39-1.44-.7-1.93a8.13 8.13 0 00-.46-.64l-.21-.25-.02-.02a.47.47 0 00-.36-.16.5.5 0 00-.37.17zm.37 1.14l.2.3c.31.47.55 1 .55 1.39 0 .3-.1.57-.25.75a.62.62 0 01-.5.25.62.62 0 01-.5-.25A1.21 1.21 0 0114 12c0-.4.24-.92.55-1.4l.2-.3zM8.5 1a.5.5 0 00-.5.5v1.56a2 2 0 00-.8.49L3.66 7.09a2 2 0 000 2.82l2.83 2.83a2 2 0 002.83 0l3.54-3.53a2 2 0 000-2.83l-2.83-2.83A2 2 0 009 3V1.5a.5.5 0 00-.5-.5zM8 4.17V5.5a.5.5 0 001 0V4.04a1 1 0 01.32.22l2.83 2.83a1 1 0 01.25.41H4.66l3.25-3.24.09-.08zM4.37 9.21a1 1 0 01-.3-.71h8.08l-3.54 3.54a1 1 0 01-1.41 0L4.37 9.2zm10-.04z"></path></svg>`,
	4,
)

function ColorFillIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.77 3.17a7.82 7.82 0 017.93-.18c3.97 2.04 5.5 6.16 4.18 10.44a7.46 7.46 0 01-2.37 3.59 4.32 4.32 0 01-4.2.8 3.84 3.84 0 01-2.2-1.68c-.41-.7-.53-1.47-.58-2.14l-.04-.58-.02-.37c-.02-.3-.05-.55-.1-.76a1.16 1.16 0 00-.2-.47.75.75 0 00-.4-.24 1.86 1.86 0 00-1.15-.04c-.25.08-.45.2-.69.35l-.2.12c-.31.18-.72.4-1.23.37a2.91 2.91 0 01-1.66-.77 2.63 2.63 0 01-.94-2.12c0-.79.25-1.63.62-2.43a9.6 9.6 0 013.25-3.9zm3.98 3.58a1 1 0 100-2 1 1 0 000 2zm3 1a1 1 0 100-2 1 1 0 000 2zM15.5 9a1 1 0 10-2 0 1 1 0 002 0zm-1 4a1 1 0 100-2 1 1 0 000 2zm-1 1a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function ColorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.24 2.54a2.26 2.26 0 00-3.07.13L6.21 8.66l-.11.12a1.5 1.5 0 00-.28.56l-.8 3.08-.01.08a.5.5 0 00.62.53l3.08-.76.16-.05c.2-.08.4-.2.55-.35l5.96-6 .12-.12c.72-.85.72-2.1 0-2.95l-.13-.14-.13-.12zM4.1 12H4a2 2 0 00-2 2v2c0 1.1.9 2 2 2h12a2 2 0 002-2v-2a2 2 0 00-2-2h-5.3l-.57.57a2.5 2.5 0 01-.92.59H9.2l-.21.07-3.11.77A1.5 1.5 0 014 12.4v-.04l.04-.16.05-.21z"></path></svg>`,
	4,
)

function ColorLineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4c0-1.1.9-2 2-2h1a2 2 0 012 2v3.75H5.75a1.75 1.75 0 100 3.5H7V15a2 2 0 01-2 2H4a2 2 0 01-2-2V4zm13-2a2 2 0 00-2 2v11c0 1.1.9 2 2 2h1a2 2 0 002-2V4a2 2 0 00-2-2h-1zM8.97 6.97c.3-.3.77-.3 1.06 0l2 2c.3.3.3.77 0 1.06l-2 2a.75.75 0 11-1.06-1.06l.72-.72H5.5a.75.75 0 010-1.5h4.19l-.72-.72a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function ColumnArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 3H3a2 2 0 00-2 2v10a2 2 0 002 2h4a2 2 0 002-2V5a2 2 0 00-2-2zm1 4H2v-.96h6V7zm9-4h-4a2 2 0 00-2 2v10a2 2 0 002 2h4a2 2 0 002-2V5a2 2 0 00-2-2zm1 10h-6v-3h6v3z"></path></svg>`,
	4,
)

function ColumnDoubleCompareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3.5c0-.28.22-.5.5-.5H4a2 2 0 012 2v10a2 2 0 01-2 2h-.5a.5.5 0 010-1H4a1 1 0 001-1V5a1 1 0 00-1-1h-.5a.5.5 0 01-.5-.5zM9 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h.22l.21-.84a3.2 3.2 0 01.84-1.49L13 11.94V5a2 2 0 00-2-2H9zm6 2v4.94l-1 1V5c0-1.1.9-2 2-2h.5a.5.5 0 010 1H16a1 1 0 00-1 1zm-4.02 10.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function ColumnEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.5 17a.5.5 0 100-1H16a1 1 0 01-1-1V5a1 1 0 011-1h.5a.5.5 0 000-1H16a2 2 0 00-2 2v10c0 1.1.9 2 2 2h.5zM7 5c0-1.1.9-2 2-2h2a2 2 0 012 2v10a2 2 0 01-2 2H9a2 2 0 01-2-2V5zM4 17a2 2 0 002-2V5a2 2 0 00-2-2h-.5a.5.5 0 000 1H4a1 1 0 011 1v10.1a1 1 0 01-1 .9h-.5a.5.5 0 100 1H4z"></path></svg>`,
	4,
)

function ColumnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1H4zm5 0a1 1 0 00-1 1v12a1 1 0 001 1h.22l.21-.84a3.2 3.2 0 01.84-1.49L12 12.94V4a1 1 0 00-1-1H9zm8 1v5c-.69.03-1.37.31-1.9.84l-2.1 2.1V4a1 1 0 011-1h2a1 1 0 011 1zm-6.02 11.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function ColumnTripleEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1H4zm5 0a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1H9zm5 0a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1h-2z"></path></svg>`,
	4,
)

function ColumnTripleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 7.5a3.5 3.5 0 10-1.88 3.1c-.23.87-.56 1.6-.95 2.18-.8 1.16-1.83 1.72-2.92 1.72a.75.75 0 000 1.5c1.67 0 3.14-.88 4.16-2.38 1-1.49 1.59-3.58 1.59-6.12z"></path></svg>`,
	4,
)

function CommaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5c1.33 0 2.55-.47 3.5-1.26v2.54a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h5a5.5 5.5 0 004.9 8z"></path></svg>`,
	4,
)

function CommentAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 6.5a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0zM10.5 6a.5.5 0 000 1h4.8l-1.65 1.65a.5.5 0 00.7.7l2.5-2.5a.5.5 0 000-.7l-2.5-2.5a.5.5 0 00-.7.7L15.29 6H10.5zm3 7c1.75 0 3.33-.69 4.5-1.81v1.09a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h3.42a6.5 6.5 0 005.48 10z"></path></svg>`,
	4,
)

function CommentArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 6h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2zM14.5 11c1.33 0 2.55-.47 3.5-1.26v2.54a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h5a5.5 5.5 0 004.9 8z"></path></svg>`,
	4,
)

function CommentArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L13.5 6.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7zM14.5 11c1.33 0 2.55-.47 3.5-1.26v2.54a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h5a5.5 5.5 0 004.9 8z"></path></svg>`,
	4,
)

function CommentCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7L14.5 4.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L15.21 5.5l1.14-1.15zM14.5 11c1.33 0 2.55-.47 3.5-1.26v2.54a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h5a5.5 5.5 0 004.9 8z"></path></svg>`,
	4,
)

function CommentDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.4 17.6a1 1 0 001.4.2L8 16.9l.05-.25.37-1.5a3.2 3.2 0 01.84-1.48l4.83-4.83A2.87 2.87 0 0118 8.7V5.57A2.58 2.58 0 0015.4 3H4.6A2.58 2.58 0 002 5.57v6.7a2.58 2.58 0 002.6 2.57h.6v2.17c0 .22.07.42.2.6zm9.4-8.05l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.07 1.07l1.5-.37c.39-.1.74-.3 1.02-.58l4.83-4.83a1.87 1.87 0 10-2.64-2.64z"></path></svg>`,
	4,
)

function CommentEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 3a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.25zM18 9.73A5.5 5.5 0 019.6 3h-5A2.58 2.58 0 002 5.57v6.7a2.58 2.58 0 002.6 2.57h.6v2.17c0 .22.07.42.2.6a1 1 0 001.4.2l4.01-2.97h4.59c1.44 0 2.6-1.15 2.6-2.56V9.74z"></path></svg>`,
	4,
)

function CommentErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ny = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h10.8C16.84 3 18 4.15 18 5.57v6.7a2.58 2.58 0 01-2.6 2.57h-4.59L6.8 17.8zm-.6-.8z"></path></svg>`,
	4,
)

function CommentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ny.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.61 7c.33 0 .56.3.49.62l-.44 1.74c-.12.48.46.83.83.49l4.87-4.55a.75.75 0 00-.51-1.3h-.4a.5.5 0 01-.48-.66l.56-1.68a.5.5 0 00-.47-.66h-3.48a.5.5 0 00-.46.3l-2.08 5c-.14.34.1.7.46.7h1.11zm-.64 1h-.47a1.5 1.5 0 01-1.38-2.08L11.33 3H4.6A2.58 2.58 0 002 5.57v6.7a2.58 2.58 0 002.6 2.57h.6v2.17c0 .22.07.42.2.6a1 1 0 001.4.2l4.01-2.97h4.59c1.44 0 2.6-1.15 2.6-2.56V7l-3.83 3.58c-1.1 1.02-2.84-.01-2.48-1.46L11.97 8z"></path></svg>`,
	4,
)

function CommentLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 2a3 3 0 101.28 5.71.5.5 0 01.44.9A4 4 0 1119 5v.51a1.5 1.5 0 01-2.65.97A2 2 0 0113 5a2 2 0 013.04-1.7.5.5 0 01.96.2v2a.5.5 0 101 0V5a3 3 0 00-3-3zm-1 3a1 1 0 102 0 1 1 0 00-2 0zm1 5c1.13 0 2.16-.37 3-1v3.28a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3h5.82A4.98 4.98 0 0015 10z"></path></svg>`,
	4,
)

function CommentMentionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2a2.5 2.5 0 00-2.46 2.03C4.2 4 4.34 4 4.5 4h8A3.5 3.5 0 0116 7.5v1.7c.74.22 1.42.58 2 1.06V6a4 4 0 00-4-4H6.5zM15 7.5v1.52A5.5 5.5 0 009.2 16h-.04l-2.58 1.84A1 1 0 015 17.03V16h-.5A2.5 2.5 0 012 13.5v-6A2.5 2.5 0 014.5 5h8A2.5 2.5 0 0115 7.5zm4 7a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-2.15-1.85c.2.2.2.5 0 .7l-3 3a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64 2.65-2.64c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function CommentMultipleCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2a2.5 2.5 0 00-2.46 2.03C4.2 4 4.34 4 4.5 4h8A3.5 3.5 0 0116 7.5v5.45a2.5 2.5 0 002-2.45V6a4 4 0 00-4-4H6.5zm-2 3A2.5 2.5 0 002 7.5v6A2.5 2.5 0 004.5 16H5v1.03a1 1 0 001.58.81L9.16 16h3.34a2.5 2.5 0 002.5-2.5v-6A2.5 2.5 0 0012.5 5h-8z"></path></svg>`,
	4,
)

function CommentMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2a2.5 2.5 0 00-2.46 2.03C4.2 4 4.34 4 4.5 4h8A3.5 3.5 0 0116 7.5V11h.5c.49 0 .95.1 1.38.28.08-.24.12-.5.12-.78V6a4 4 0 00-4-4H6.5zM15 7.5V11h-2.5a3.5 3.5 0 00-3.16 5h-.18l-2.58 1.84A1 1 0 015 17.03V16h-.5A2.5 2.5 0 012 13.5v-6A2.5 2.5 0 014.5 5h8A2.5 2.5 0 0115 7.5zM12.5 12a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function CommentMultipleLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ns = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 1c-.83 0-1.5.67-1.5 1.5v5c0 .83.67 1.5 1.5 1.5h6c.83 0 1.5-.67 1.5-1.5v-5c0-.83-.67-1.5-1.5-1.5h-6zm1 5h4a.5.5 0 010 1h-4a.5.5 0 010-1zM12 3.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM4.6 3H9v4.5a2.5 2.5 0 002.5 2.5h6c.17 0 .34-.02.5-.05v2.33a2.58 2.58 0 01-2.6 2.56h-4.59L6.8 17.8a1 1 0 01-1.4-.2.98.98 0 01-.2-.59v-2.17h-.6A2.58 2.58 0 012 12.28V5.57A2.58 2.58 0 014.6 3z"></path></svg>`,
	4,
)

function CommentNoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ns.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l.76.77C2.35 4.09 2 4.79 2 5.57v6.7a2.58 2.58 0 002.6 2.57h.6v2.17c0 .22.07.42.2.6a1 1 0 001.4.2l4.01-2.97h3.33l3 3.01a.5.5 0 00.71-.7l-2.3-2.31L3.82 3.12l-.97-.97zM18 12.28c0 .97-.55 1.81-1.35 2.25L5.12 3H15.4C16.84 3 18 4.15 18 5.57v6.7z"></path></svg>`,
	4,
)

function CommentOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 11a6.5 6.5 0 1111.1 4.6.75.75 0 101.06 1.05 8 8 0 10-11.33 0A.75.75 0 005.4 15.6 6.48 6.48 0 013.5 11zm3 0a3.5 3.5 0 115.98 2.47.75.75 0 101.06 1.06A4.99 4.99 0 0010 6a5 5 0 00-3.54 8.53.75.75 0 001.06-1.06A3.49 3.49 0 016.5 11zM10 9a2 2 0 100 4 2 2 0 000-4z"></path></svg>`,
	4,
)

function CommunicationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$np = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 4.5a6.5 6.5 0 00-4.6 11.1.75.75 0 11-1.06 1.05 8 8 0 1113.63-6.35 3 3 0 00-1.76-1.21A6.5 6.5 0 0010 4.5zm4.64 4.63a5 5 0 10-8.18 5.4.75.75 0 001.06-1.06 3.5 3.5 0 115.81-3.54 3 3 0 011.3-.8zM8 11a2 2 0 114 0 2 2 0 01-4 0zm9.5 1a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function CommunicationPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$np.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$no = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.06 9A8 8 0 0110 2v1.5a.5.5 0 001 0V2.06A8 8 0 0117.94 9H16.5a.5.5 0 000 1H18a8 8 0 01-7 7.94V16.5a.5.5 0 00-1 0V18a8 8 0 01-8-8h1.5a.5.5 0 000-1H2.06zm10.1.48a3 3 0 00-1.65-1.6l-3.49-1.4a.42.42 0 00-.54.54l1.4 3.49a3 3 0 001.6 1.65l3.73 1.6c.34.14.7-.2.55-.55l-1.6-3.73z"></path></svg>`,
	4,
)

function CompassNorthwestIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$no.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 15.71v-1.58a5.5 5.5 0 114.21-.1l-.2.1v1.58a7 7 0 10-4.26-.08l.25.08zm0-2.68v-1.8A3 3 0 0112 6a3 3 0 012.14 5.1l-.14.14v1.8a4.5 4.5 0 10-4.2-.1l.2.1zm1.39 8.76a1 1 0 001.22 0l.1-.08 3-3 .08-.1a1 1 0 000-1.22l-.08-.1-.1-.08a1 1 0 00-1.22 0l-.1.08L13 18.6V9a1 1 0 00-2-.12V18.6l-1.3-1.3-.09-.08a1 1 0 00-1.4 1.4l.08.1 3 3 .1.08z"></path></svg>`,
	4,
)

function Component2DoubleTapSwipeDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8.29v1.58a5.5 5.5 0 104.21.1l-.2-.1V8.3a7 7 0 11-4.26.08l.25-.08zm0 2.68v1.8A3 3 0 0012 18a3 3 0 002.14-5.1l-.14-.14v-1.8a4.5 4.5 0 11-4.2.1l.2-.1zm1.39-8.76a1 1 0 011.22 0l.1.08 3 3 .08.1a1 1 0 010 1.22l-.08.1-.1.08a1 1 0 01-1.22 0l-.1-.08L13 5.4V15a1 1 0 01-2 .12V5.4l-1.3 1.3-.09.08a1 1 0 01-1.4-1.4l.08-.1 3-3 .1-.08z"></path></svg>`,
	4,
)

function Component2DoubleTapSwipeUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 3.28a.75.75 0 10-1.06-1.06l-7.5 7.5L9 11l1.28-.22 7.5-7.5zM5.75 3A2.75 2.75 0 003 5.75v8.5A2.75 2.75 0 005.75 17h8.5A2.75 2.75 0 0017 14.25v-5.5a.75.75 0 00-1.5 0v5.5c0 .69-.56 1.25-1.25 1.25h-8.5c-.69 0-1.25-.56-1.25-1.25v-8.5c0-.69.56-1.25 1.25-1.25h5.5a.75.75 0 000-1.5h-5.5z"></path></svg>`,
	4,
)

function ComposeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.19 2.11a.5.5 0 01.41-.1l7 1.5c.23.05.4.25.4.5v12a.5.5 0 01-.4.48l-7 1.5a.5.5 0 01-.6-.49v-15c0-.15.07-.3.19-.39zm3.31 7.9a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM8 3H3.5a.5.5 0 00-.5.5V16.5c0 .27.22.5.5.5H8V3z"></path></svg>`,
	4,
)

function ConferenceRoomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 4.5c0 .51-.15.98-.41 1.38L8.62 7.9a2.49 2.49 0 012.76 0l2.03-2.03a2.5 2.5 0 11.7.7L12.1 8.63a2.49 2.49 0 010 2.76l2.03 2.03a2.5 2.5 0 11-.7.7l-2.04-2.02a2.49 2.49 0 01-2.76 0L6.6 14.12a2.5 2.5 0 11-.7-.7l2.02-2.04a2.49 2.49 0 010-2.76L5.88 6.6A2.5 2.5 0 117 4.5z"></path></svg>`,
	4,
)

function ConnectedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ni = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 3a.5.5 0 00-.5.5v2.8L2.15 8.14A.5.5 0 002 8.5v5c0 .28.22.5.5.5H4v2.5a.5.5 0 001 0V14h1v2.5a.5.5 0 001 0V14h1.5a.5.5 0 00.5-.5v-5a.5.5 0 00-.15-.35L7 6.29V3.5a.5.5 0 00-.5-.5h-2zm11 14a.5.5 0 00.5-.5v-2.8l1.85-1.85a.5.5 0 00.15-.35v-5a.5.5 0 00-.5-.5H17V3.5a.5.5 0 00-.5-.5h-4a.5.5 0 00-.5.5V6h-.5a.5.5 0 00-.5.5v5c0 .13.05.26.15.35L13 13.71v2.79c0 .28.22.5.5.5h2zM13 6V4h3v2h-3z"></path></svg>`,
	4,
)

function ConnectorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ni.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 4A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h11a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 4h-11zM12 8.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm.5 2.5h3a.5.5 0 010 1h-3a.5.5 0 010-1zM4 10.75c0-.41.34-.75.75-.75h3a.75.75 0 01.75.75v.81c-.02.16-.1.58-.5.92-.33.29-.86.52-1.75.52C4 13 4 11.5 4 11.5v-.75zM6.25 9a1.25 1.25 0 110-2.5 1.25 1.25 0 010 2.5zm4.25-1a1 1 0 11-2 0 1 1 0 012 0zm-1.07 3.98a2.26 2.26 0 00.07-.41V10.75c0-.27-.06-.52-.17-.75H10a1 1 0 011 1c0 .83-.67 1.5-1.5 1.5h-.26c.1-.2.16-.37.2-.52z"></path></svg>`,
	4,
)

function ContactCardGroupIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ng = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v9c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5v-9c0-.83-.67-1.5-1.5-1.5h-13zm3 6a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm-1.55.75h3.1c.53 0 .95.42.95.95 0 .85-.58 1.58-1.4 1.79l-.06.01a4.3 4.3 0 01-2.08 0l-.06-.01c-.82-.2-1.4-.94-1.4-1.8 0-.52.42-.94.95-.94zM11 8.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm.5 2.5h3a.5.5 0 010 1h-3a.5.5 0 010-1z"></path></svg>`,
	4,
)

function ContactCardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ng.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5C2 4.67 2.67 4 3.5 4h13c.83 0 1.5.67 1.5 1.5v5.84a3.49 3.49 0 00-1.5-.34h-4a3.5 3.5 0 00-3.16 5H3.5A1.5 1.5 0 012 14.5v-9zm3 3a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm4 3.2a.95.95 0 00-.95-.95h-3.1a.95.95 0 00-.95.95c0 .85.58 1.58 1.4 1.79l.06.01c.68.18 1.4.18 2.08 0l.06-.01c.82-.2 1.4-.94 1.4-1.8zM11.5 8a.5.5 0 000 1h3a.5.5 0 000-1h-3zm1 4a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-3.5 2a.5.5 0 000 1h4a.5.5 0 000-1h-4z"></path></svg>`,
	4,
)

function ContactCardLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ne = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v9c0 .83.67 1.5 1.5 1.5H13v-.35a3.98 3.98 0 01-.87-3.65h-.63a.5.5 0 010-1h1.04A4 4 0 0118 9.54V5.5c0-.83-.67-1.5-1.5-1.5h-13zm3 6a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm1.55.75c.53 0 .95.42.95.95 0 .85-.58 1.58-1.4 1.79l-.06.01a4.3 4.3 0 01-2.08 0l-.06-.01c-.82-.2-1.4-.94-1.4-1.8 0-.52.42-.94.95-.94h3.1zM11 8.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zm8 4.5a3 3 0 11-6 0 3 3 0 016 0zm-1 3.46a3.98 3.98 0 01-4 0v2.29c0 .2.21.31.38.22L16 18l1.62.97c.17.1.38-.03.38-.22v-2.29z"></path></svg>`,
	4,
)

function ContactCardRibbonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ne.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 5.25A2.75 2.75 0 015.25 2.5h9.5a2.75 2.75 0 012.75 2.75v4.64c-.46-.3-.96-.53-1.5-.68V7H4v7.75c0 .69.56 1.25 1.25 1.25h3.96c.15.54.38 1.04.68 1.5H5.25a2.75 2.75 0 01-2.75-2.75v-9.5zM9 14.5v-6a.5.5 0 00-.5-.5h-3a.5.5 0 00-.5.5v6c0 .28.22.5.5.5h3a.5.5 0 00.5-.5zM6 14V9h2v5H6zm4-5.5c0-.28.22-.5.5-.5h4a.5.5 0 110 1h-4a.5.5 0 01-.5-.5zm2.07 2.94a2 2 0 01-1.43 2.48l-.47.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function ContentSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 7H6v2h3V7zM3 6a3 3 0 013-3h6v14H6a3 3 0 01-3-3V6zm2 1v2a1 1 0 001 1h3a1 1 0 001-1V7a1 1 0 00-1-1H6a1 1 0 00-1 1zm.5 4a.5.5 0 000 1h4a.5.5 0 000-1h-4zM5 13.5c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5zm8 3.5h1a3 3 0 003-3v-1h-4v4zm4-5V8h-4v4h4zm0-5V6a3 3 0 00-3-3h-1v4h4z"></path></svg>`,
	4,
)

function ContentViewGalleryIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$nb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 7H6v2h8V7zm-2 5h2v1h-2v-1zM6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zM5 7a1 1 0 011-1h8a1 1 0 011 1v2a1 1 0 01-1 1H6a1 1 0 01-1-1V7zm7 4h2a1 1 0 011 1v1a1 1 0 01-1 1h-2a1 1 0 01-1-1v-1a1 1 0 011-1zm-7 .5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm.5 1.5h4a.5.5 0 010 1h-4a.5.5 0 010-1z"></path></svg>`,
	4,
)

function ContentViewIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$nb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$na = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.7 8l4.15-4.15a.5.5 0 00-.7-.7L12 7.29V3.5a.5.5 0 00-1 0v5c0 .28.22.5.5.5h5a.5.5 0 000-1h-3.8zM6 4a2 2 0 00-2 2v4h4a2 2 0 012 2v4h4a2 2 0 002-2v-2.5a.5.5 0 011 0V14a3 3 0 01-3 3H6a3 3 0 01-3-3V6a3 3 0 013-3h2.5a.5.5 0 010 1H6z"></path></svg>`,
	4,
)

function ContractDownLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$na.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v6.5A2.75 2.75 0 0115.25 16H4.75A2.75 2.75 0 012 13.25v-6.5zM6 7a2 2 0 00-2 2v2c0 1.1.9 2 2 2h.5a.5.5 0 000-1H6a1 1 0 01-1-1V9a1 1 0 011-1h.5a.5.5 0 000-1H6zm3 .5a.5.5 0 00-1 0V9h-.5a.5.5 0 000 1H8v1.75c0 .69.56 1.25 1.25 1.25h.25a.5.5 0 000-1h-.25a.25.25 0 01-.25-.25V10h.5a.5.5 0 000-1H9V7.5zm7 0a.5.5 0 00-1 0v5a.5.5 0 001 0v-5zm-4 3c0-.28.22-.5.5-.5h1a.5.5 0 000-1h-1c-.83 0-1.5.67-1.5 1.5v2a.5.5 0 001 0v-2z"></path></svg>`,
	4,
)

function ControlButtonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v2c0 1.1.9 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2H5zm12.5 5c.28 0 .5.22.5.5v2a2.5 2.5 0 01-2.5 2.5h-1.8l1.15 1.15a.5.5 0 01-.7.7l-2-2a.5.5 0 010-.7l2-2a.5.5 0 01.7.7L13.71 11h1.79c.83 0 1.5-.67 1.5-1.5v-2c0-.28.22-.5.5-.5zm-5.62 3H5a2 2 0 00-2 2v4c0 1.1.9 2 2 2h8a2 2 0 002-2v-1.09a1.5 1.5 0 01-1.56-.35l-2-2a1.5 1.5 0 010-2.12l.44-.44zM6.5 14c0-.28.22-.5.5-.5h4a.5.5 0 010 1H7a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ConvertRangeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 019.87-7.78.5.5 0 01.24.85 2 2 0 00.95 3.38c.26.06.44.29.44.55A2 2 0 0017 8.32a.5.5 0 01.87.24A8 8 0 112 10zm5-2a1 1 0 10-2 0 1 1 0 002 0zm3 3a1 1 0 100-2 1 1 0 000 2zm3 3a1 1 0 10-2 0 1 1 0 002 0zm-6 0a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function CookiesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4c0-1.1.9-2 2-2h6a2 2 0 012 2v5.2A5.5 5.5 0 009.2 16H8a2 2 0 01-2-2V4zm4.26 14a5.5 5.5 0 01-.66-1H7.5A2.5 2.5 0 015 14.5V4.27A2 2 0 004 6v8.5A3.5 3.5 0 007.5 18h2.76zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function CopyAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4c0-1.1.9-2 2-2h6a2 2 0 012 2v5.2A5.5 5.5 0 009.2 16H8a2 2 0 01-2-2V4zm4.26 14a5.5 5.5 0 01-.66-1H7.5A2.5 2.5 0 015 14.5V4.27A2 2 0 004 6v8.5A3.5 3.5 0 007.5 18h2.76zm4.24-8a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function CopyArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4c0-1.1.9-2 2-2h6a2 2 0 012 2v10a2 2 0 01-2 2H8a2 2 0 01-2-2V4zM4 6a2 2 0 011-1.73V14.5A2.5 2.5 0 007.5 17h6.23A2 2 0 0112 18H7.5A3.5 3.5 0 014 14.5V6z"></path></svg>`,
	4,
)

function CopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 3a1 1 0 00-1 1v.5a.5.5 0 01-1 0V4c0-1.1.9-2 2-2h.5a.5.5 0 010 1H8zm-1 9a1 1 0 001 1h.5a.5.5 0 010 1H8a2 2 0 01-2-2v-.5a.5.5 0 011 0v.5zm0-5.5a.5.5 0 00-1 0v3a.5.5 0 001 0v-3zM16 3a1 1 0 011 1v.5a.5.5 0 001 0V4a2 2 0 00-2-2h-.5a.5.5 0 000 1h.5zm0 10a1 1 0 001-1v-.5a.5.5 0 011 0v.5a2 2 0 01-2 2h-.5a.5.5 0 010-1h.5zm1.5-7a.5.5 0 00-.5.5v3a.5.5 0 001 0v-3a.5.5 0 00-.5-.5zm-7-4a.5.5 0 000 1h3a.5.5 0 000-1h-3zM10 13.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM4 6h1v6.5A2.5 2.5 0 007.5 15H14v1a2 2 0 01-2 2H5.5A3.5 3.5 0 012 14.5V8c0-1.1.9-2 2-2z"></path></svg>`,
	4,
)

function CopySelectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 6.5V8h.29c1.25 0 2.3.85 2.62 2h6.19c.3-1.15 1.36-2 2.61-2H16V6.5c0-.83-.67-1.5-1.5-1.5h-9C4.67 5 4 5.67 4 6.5zM3.5 15h13c.83 0 1.5-.67 1.5-1.5v-2.68c0-1-.81-1.82-1.82-1.82h-.47c-.94 0-1.71.77-1.71 1.71 0 .16-.13.29-.29.29H6.3a.29.29 0 01-.29-.29C6 9.77 5.23 9 4.29 9h-.47C2.82 9 2 9.81 2 10.82v2.68c0 .83.67 1.5 1.5 1.5z"></path></svg>`,
	4,
)

function CouchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75V8H2V6.75zM9.2 16H4.76A2.75 2.75 0 012 13.25V9h12.5a5.5 5.5 0 00-5.3 7zm9.8-1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1v-1.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function CreditCardClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75V8H2V6.75zM2 9h12.5a3 3 0 00-2.23 5.01c-1.1.1-2 .92-2.22 1.99h-5.3A2.75 2.75 0 012 13.25V9zm14.5 3a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S11 17.75 11 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function CreditCardPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75V8H2V6.75zM13.5 9H2v4.25A2.75 2.75 0 004.75 16H9v-2.5a2.5 2.5 0 012.04-2.46A2.5 2.5 0 0113.5 9zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function CreditCardToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2.75a.75.75 0 00-1.5 0V4.5H2.75a.75.75 0 000 1.5H4.5v6.75a2.75 2.75 0 002.75 2.75H14v1.75a.75.75 0 001.5 0V15.5h1.75a.75.75 0 000-1.5h-10C6.56 14 6 13.44 6 12.75v-10zm8 4.5V13h1.5V7.25a2.75 2.75 0 00-2.75-2.75H7V6h5.75c.69 0 1.25.56 1.25 1.25z"></path></svg>`,
	4,
)

function CropIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 4h3a2 2 0 001.77 1.99l.47 4.16A2 2 0 0011 12H6a2 2 0 00-1.24-1.85L5.23 6A2 2 0 007 4zm6.23 6.01l-.47-4.16A2 2 0 1010.26 3H6.74a2 2 0 10-2.5 2.85L3.78 10A2 2 0 105.73 13h5.54a2 2 0 101.96-2.99zm.74-2.4A4.5 4.5 0 119.65 15h.85a.5.5 0 000-1h-2a.5.5 0 00-.5.5v2a.5.5 0 001 0v-.72A5.48 5.48 0 0018.5 12a5.5 5.5 0 00-4.65-5.43l.12 1.03z"></path></svg>`,
	4,
)

function CropInterimIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.02 3.73l-.87-.88a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-1.2-1.2A5.47 5.47 0 019 15.78v.72a.5.5 0 01-1 0v-2c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-.85a4.49 4.49 0 005.56.92l-1.94-1.94L13 14a2 2 0 01-1.73-1H5.73a2 2 0 11-1.96-2.99l.47-4.16a2 2 0 01-1.22-2.12zm8 8L5.27 5.98h-.04l-.47 4.17A2 2 0 016 12h5c0-.1 0-.18.02-.27zm.75-5.74l.46 4.12 2.63 2.63A2 2 0 0013.23 10l-.47-4.16A2 2 0 1010.26 3H6.74a2 2 0 00-2.47-.86l2.6 2.6A2 2 0 007 4h3a2 2 0 001.77 1.99zm4.92 8.58l.72.72a5.5 5.5 0 00-3.56-8.72l.12 1.03a4.5 4.5 0 012.72 6.97z"></path></svg>`,
	4,
)

function CropInterimOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.7 2.48a3.5 3.5 0 012.6 0l5.76 2.3c.57.23.94.78.94 1.4v4.08a5.48 5.48 0 00-7.5.47v-1.9l4.2-1.87a.5.5 0 10-.4-.92L10 7.95l-4.3-1.9a.5.5 0 10-.4.9l4.2 1.88v3.38a5.48 5.48 0 00.58 5.56 3.5 3.5 0 01-1.38-.25l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18c0-.62.37-1.17.94-1.4l5.76-2.3zM17 18.24a4.5 4.5 0 11-5-7.48 4.5 4.5 0 015 7.48zm-2.15-6.1a.5.5 0 00-.85.36V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5a.5.5 0 00-.15-.35z"></path></svg>`,
	4,
)

function CubeAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1 5.5a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm6.4.9l-.9.89V5.74A2.75 2.75 0 003.75 3H3.5a.5.5 0 100 1h.25c.97 0 1.75.78 1.75 1.74V7.3l-.9-.9a.5.5 0 00-.7.7l1.75 1.76a.5.5 0 00.7 0L8.12 7.1a.5.5 0 10-.71-.7zm3.6-.9c0 .78-.17 1.53-.46 2.2l3.76-1.66a.5.5 0 01.4.91l-4.2 1.87v4.67a.5.5 0 01-1 0V9.27a5.49 5.49 0 01-7.5.46v4.08c0 .61.37 1.16.94 1.39l5.76 2.3a3.5 3.5 0 002.6 0l5.76-2.3c.57-.23.94-.78.94-1.4V6.18a1.5 1.5 0 00-.94-1.39l-5.76-2.3a3.5 3.5 0 00-1.38-.25A5.47 5.47 0 0111 5.5z"></path></svg>`,
	4,
)

function CubeArrowCurveDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.7 2.48a3.5 3.5 0 012.6 0l5.76 2.3c.57.23.94.78.94 1.4v7.64a1.5 1.5 0 01-.94 1.4l-5.76 2.3a3.5 3.5 0 01-2.6 0l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18c0-.62.37-1.17.94-1.4l5.76-2.3zm-3 3.56a.5.5 0 10-.4.92l4.2 1.86v4.68a.5.5 0 001 0V8.82l4.2-1.86a.5.5 0 10-.4-.92L10 7.95l-4.3-1.9z"></path></svg>`,
	4,
)

function CubeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.7 2.48a3.5 3.5 0 012.6 0l5.76 2.3c.57.23.94.78.94 1.4v5.85a3.54 3.54 0 00-.5-.03h-4a3.5 3.5 0 00-2.73 5.68c-.69.16-1.41.1-2.07-.16l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18c0-.62.37-1.17.94-1.4l5.76-2.3zm-3 3.56a.5.5 0 10-.4.92l4.2 1.86v4.68a.5.5 0 001 0V8.82l4.2-1.86a.5.5 0 10-.4-.92L10 7.95l-4.3-1.9zM13.5 13a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 100 1h.5a1.5 1.5 0 010 3H17a.5.5 0 100 1h.5a2.5 2.5 0 000-5H17zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 110 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function CubeLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.2 2.51a5 5 0 013.6 0l4.24 1.64c.58.22.96.77.96 1.4v.14a2.5 2.5 0 00-.6-.34l-4.96-1.9a4 4 0 00-2.88 0L3.6 5.35c-.22.09-.42.2-.6.34v-.14c0-.63.38-1.18.96-1.4L8.21 2.5zm2.88 1.87a3 3 0 00-2.16 0l-4.96 1.9A1.5 1.5 0 003 7.69v6.63c0 .62.38 1.18.96 1.4l4.96 1.91a3 3 0 002.16 0l4.96-1.9c.58-.23.96-.79.96-1.4V7.68a1.5 1.5 0 00-.96-1.4l-4.96-1.91zM6.04 8.3a.5.5 0 01.66-.26L10 9.46l3.3-1.42a.5.5 0 01.4.92l-3.2 1.37v3.17a.5.5 0 11-1 0v-3.17L6.3 8.96a.5.5 0 01-.26-.66z"></path></svg>`,
	4,
)

function CubeMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.81 4.67a1.5 1.5 0 011.38 0l3 1.54c.5.25.81.77.81 1.33v3.92a1.5 1.5 0 01-.81 1.33l-3 1.54a1.5 1.5 0 01-1.38 0l-3-1.54A1.5 1.5 0 019 11.46V7.54c0-.56.31-1.08.81-1.33l3-1.54zm-1.76 3.1a.5.5 0 00.23.68L13 9.3v2.19a.5.5 0 101 0V9.3l1.72-.85a.5.5 0 10-.44-.9l-1.78.9-1.78-.9a.5.5 0 00-.67.23zM3.5 6a.5.5 0 000 1h4a.5.5 0 000-1h-4zm-1 3a.5.5 0 000 1h4a.5.5 0 000-1h-4zm1 3a.5.5 0 000 1h4a.5.5 0 000-1h-4z"></path></svg>`,
	4,
)

function CubeQuickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.53 2.63c.93-.43 2-.43 2.94 0l4.66 2.15c.53.24.87.78.87 1.36V8h-1a1.5 1.5 0 00-.81 2.76A10.54 10.54 0 019.99 12c-2.1 0-3.92-.5-5.18-1.24A1.5 1.5 0 004 8H3V6.14c0-.58.34-1.12.87-1.36l4.66-2.15zM6.7 6.54a.5.5 0 00-.4.92l3.2 1.37v1.67a.5.5 0 101 0V8.83l3.2-1.37a.5.5 0 10-.4-.92L10 7.96 6.7 6.54zm8.8 2.96c0-.28.22-.5.5-.5h2.5a.5.5 0 01.5.5V12a.5.5 0 01-1 0v-.98a6.2 6.2 0 01-1.64 1.37A12.4 12.4 0 0110 14a12.4 12.4 0 01-6.36-1.61A6.2 6.2 0 012 11.02V12a.5.5 0 01-1 0V9.5a.5.5 0 01.5-.5H4a.5.5 0 010 1H2.48a4.12 4.12 0 00.92 1 6.57 6.57 0 00.76.54c.4.25.87.47 1.37.67 1.27.5 2.8.8 4.47.8s3.2-.3 4.47-.8a8.67 8.67 0 002.13-1.2 5.24 5.24 0 00.92-1H16a.5.5 0 01-.5-.5zM10 15c-2.66 0-5.16-.67-7-1.83v.7c0 .58.34 1.1.87 1.35l4.66 2.15c.93.43 2 .43 2.94 0l4.66-2.15c.53-.24.87-.77.87-1.36v-.69A13.32 13.32 0 0110 15z"></path></svg>`,
	4,
)

function CubeRotateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.7 2.48a3.5 3.5 0 012.6 0l5.76 2.3c.57.23.94.78.94 1.4v4.08a5.48 5.48 0 00-7.5.47v-1.9l4.2-1.87a.5.5 0 10-.4-.92L10 7.95l-4.3-1.9a.5.5 0 10-.4.9l4.2 1.87v3.39a5.48 5.48 0 00.58 5.56 3.5 3.5 0 01-1.38-.25l-5.76-2.3a1.5 1.5 0 01-.94-1.4V6.18c0-.62.37-1.17.94-1.4l5.76-2.3zM10 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function CubeSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.57 2.07c.28-.09.58-.09.86 0l2.85.85a1 1 0 01.72.95v4.26a1 1 0 01-.72.96l-2.79.83a.5.5 0 01.01.08v1H12a2 2 0 012 2v.05a2.5 2.5 0 11-1 0V13a1 1 0 00-1-1H8a1 1 0 00-1 1v.05a2.5 2.5 0 11-1 0V13c0-1.1.9-2 2-2h1.5v-1a.5.5 0 010-.08l-2.78-.83A1 1 0 016 8.13V3.87a1 1 0 01.72-.95l2.85-.85zm-.91 2.46a.5.5 0 00-.32.95l1.16.38V7a.5.5 0 001 0V5.86l1.16-.38a.5.5 0 10-.32-.95L10 4.97l-1.34-.44z"></path></svg>`,
	4,
)

function CubeTreeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2a.75.75 0 00-.75.75v.33A3.5 3.5 0 002 6.5v.28c0 1.47.85 2.8 2.17 3.42l.58.27v4.87a2 2 0 01-1.25-1.86V12.4a.75.75 0 00-1.5 0v1.08a3.5 3.5 0 002.75 3.42v.35a.75.75 0 001.5 0v-.35A3.5 3.5 0 009 13.48v-.27c0-1.46-.84-2.8-2.17-3.42l-.58-.27V4.64A2 2 0 017.5 6.5v1.1a.75.75 0 001.5 0V6.5a3.5 3.5 0 00-2.75-3.42v-.33A.75.75 0 005.5 2zm-2 4.5a2 2 0 011.25-1.86v4.18A2.28 2.28 0 013.5 6.78V6.5zm2.75 8.84v-4.16a2.27 2.27 0 011.25 2.03v.27a2 2 0 01-1.25 1.86zM12.5 10c0-.34.02-.66.06-.98h1.7a.75.75 0 000-1.5h-1.38A6.1 6.1 0 0113.61 6c.67-1 1.52-1.5 2.36-1.5.3 0 .63.1.86.25a.75.75 0 00.84-1.24 3.1 3.1 0 00-1.7-.51c-1.49 0-2.75.9-3.6 2.16a7.8 7.8 0 00-1.05 2.36h-.57a.75.75 0 000 1.5h.3a10.02 10.02 0 00-.05 1h-.25a.75.75 0 100 1.5h.37a8.2 8.2 0 001.25 3.32c.85 1.26 2.11 2.16 3.6 2.16.54 0 1.2-.14 1.72-.52a.75.75 0 10-.87-1.22c-.21.15-.53.24-.85.24-.84 0-1.69-.5-2.36-1.5a6.6 6.6 0 01-.97-2.48h1.61a.75.75 0 100-1.5H12.5V10z"></path></svg>`,
	4,
)

function CurrencyDollarEuroIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 2.75a.75.75 0 10-1.5 0v.33A3.5 3.5 0 002 6.5v.28c0 1.47.85 2.8 2.17 3.42l.58.27v4.87a2 2 0 01-1.25-1.86V12.4a.75.75 0 00-1.5 0v1.08a3.5 3.5 0 002.75 3.42v.35a.75.75 0 001.5 0v-.35A3.5 3.5 0 009 13.48v-.27c0-1.46-.84-2.8-2.17-3.42l-.58-.27V4.64A2 2 0 017.5 6.5v1.1a.75.75 0 001.5 0V6.5a3.5 3.5 0 00-2.75-3.42v-.33zm-1.5 1.9v4.17A2.28 2.28 0 013.5 6.78V6.5a2 2 0 011.25-1.86zm1.5 6.53a2.27 2.27 0 011.25 2.03v.27a2 2 0 01-1.25 1.86v-4.16zM10.75 3a.75.75 0 000 1.5h2.75c.88 0 1.65.5 2.02 1.25h-4.77a.75.75 0 000 1.5h4.94A2.25 2.25 0 0113.5 9h-2.75a.75.75 0 00-.57 1.24l6.5 7.5a.75.75 0 101.14-.98l-5.43-6.26h1.11c1.9 0 3.47-1.42 3.72-3.25h.03a.75.75 0 000-1.5h-.13a3.74 3.74 0 00-.62-1.25h.75a.75.75 0 000-1.5h-6.5z"></path></svg>`,
	4,
)

function CurrencyDollarRupeeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2c.28 0 .5.22.5.5v2a.5.5 0 01-1 0v-2c0-.28.22-.5.5-.5zM3.61 3.61c.2-.2.51-.2.7 0l1.42 1.42a.5.5 0 11-.7.7L3.6 4.32a.5.5 0 010-.7zm7.78 0c.2.2.2.51 0 .7L9.97 5.74a.5.5 0 11-.7-.7l1.41-1.42c.2-.2.51-.2.7 0zM2 7.5c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm5.5.53v9.26c0 .45.54.67.85.36l2.56-2.56a2 2 0 011.42-.59h3.23a.5.5 0 00.31-.9L8.31 7.65a.5.5 0 00-.81.4z"></path></svg>`,
	4,
)

function CursorClickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v7c0 1.1.9 2 2 2h5v-4.5a1.5 1.5 0 012.56-1.06l5 5c.11.11.2.24.28.38A2 2 0 0018 13V6a2 2 0 00-2-2H4zm6.85 6.15a.5.5 0 00-.85.35v7a.5.5 0 00.91.29l1.57-2.25 2.94.45a.5.5 0 00.43-.84l-5-5zM11 15.9v-4.2l3.07 3.06-1.74-.26a.5.5 0 00-.49.2l-.84 1.2z"></path></svg>`,
	4,
)

function CursorHoverIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.39 4.1A2 2 0 002 6v7c0 1.1.9 2 2 2h5v-4.5c0-.23.05-.45.15-.65l.85.86v6.79a.5.5 0 00.91.29l1.57-2.25 2.78.43 1.89 1.88a.5.5 0 00.7-.7l-8-8-7-7zm11.22 12.62l-1.74-.26a.5.5 0 00-.49.2l-.84 1.2v-4.2l3.07 3.06zm2.84.01A2 2 0 0018 13V6a2 2 0 00-2-2H6.12l10.79 10.78z"></path></svg>`,
	4,
)

function CursorHoverOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.64 2.29A1 1 0 005 3.06v14a1 1 0 001.76.65l3.52-4.07c.28-.33.7-.52 1.13-.52h5.6a1 1 0 00.63-1.77l-11-9.06z"></path></svg>`,
	4,
)

function CursorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.88 3.16l-3.1 4.77-.9-1.38 2.74-4.2a.75.75 0 011.26.8zm-2.38 8.6a3.24 3.24 0 014.5 2.99 3.25 3.25 0 11-5.72-2.11L10 10.66l-1.28 1.98a3.25 3.25 0 11-1.21-.88l1.6-2.47-3.99-6.13a.75.75 0 011.26-.82l6.12 9.41zm.2 1.6a1.75 1.75 0 10.01-.02l-.02.02zM6.24 13a1.75 1.75 0 100 3.5 1.75 1.75 0 000-3.5z"></path></svg>`,
	4,
)

function CutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3.5a6.5 6.5 0 110 13v-13zM10 2a8 8 0 100 16 8 8 0 000-16z"></path></svg>`,
	4,
)

function DarkThemeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 2.49a.5.5 0 00-1 .01v15c0 .28.22.5.5.5h15a.5.5 0 100-1H3V2.49zM16 16V5.5a.5.5 0 00-.81-.39L10.45 8.9l-3.2-1.83a.5.5 0 00-.45-.03L4 8.3V16h12z"></path></svg>`,
	4,
)

function DataAreaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 100 4h5a2 2 0 100-4H4zm0 6a2 2 0 100 4h8a2 2 0 100-4H4zm0 6a2 2 0 100 4h12a2 2 0 100-4H4z"></path></svg>`,
	4,
)

function DataBarHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a2 2 0 01-2-2V4a2 2 0 114 0v5.6a5.5 5.5 0 00-1.76 8.39L10 18zm4.5-9c1.33 0 2.55.47 3.5 1.26V8a2 2 0 10-4 0v1.02l.5-.02zM2 16a2 2 0 104 0v-4a2 2 0 10-4 0v4zm17-1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function DataBarVerticalAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10a2 2 0 104 0V5a2 2 0 00-2-2zm5 3a2 2 0 00-2 2v7a2 2 0 104 0V8a2 2 0 00-2-2zm5 3a2 2 0 00-2 2v4a2 2 0 104 0v-4a2 2 0 00-2-2z"></path></svg>`,
	4,
)

function DataBarVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9v2.09A5.5 5.5 0 0010.26 18H10c-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.85 2.35a.5.5 0 00.35.15.5.5 0 00.35-.15l2-2a.5.5 0 00-.7-.7L15 15.29V12.5a.5.5 0 00-1 0v2.8l-1.15-1.15a.5.5 0 00-.7.7l2 2z"></path></svg>`,
	4,
)

function DatabaseArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9v2.09A5.5 5.5 0 0010.26 18H10c-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM14.5 10a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function DatabaseArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9v2.09A5.5 5.5 0 0010.26 18H10c-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM10 14.5a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm4.85-2.35a.5.5 0 00-.35-.15.5.5 0 00-.35.15l-2 2a.5.5 0 00.7.7L14 13.71v2.79a.5.5 0 001 0v-2.8l1.15 1.15a.5.5 0 00.7-.7l-2-2z"></path></svg>`,
	4,
)

function DatabaseArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9V15c0 1.66-2.69 3-6 3s-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98z"></path></svg>`,
	4,
)

function DatabaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$my = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9V9h-1.92c-.6 0-1.15.36-1.38.92l-2.08 5A1.5 1.5 0 0012 17h.47l-.2.78c-.7.14-1.46.22-2.27.22-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM13.11 16c.33 0 .57.3.49.62l-.44 1.74c-.12.48.46.83.83.49l4.87-4.55a.75.75 0 00-.51-1.3h-.4a.5.5 0 01-.48-.66l.56-1.68a.5.5 0 00-.47-.66h-3.47a.5.5 0 00-.47.3l-2.08 5c-.14.34.1.7.46.7h1.11z"></path></svg>`,
	4,
)

function DatabaseLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$my.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9V13h-3.5a3.5 3.5 0 00-3.17 4.98C6.33 17.81 4 16.54 4 15V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM12.5 14a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DatabaseLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4c0 1.66-2.69 3-6 3S6 5.66 6 4s2.69-3 6-3 6 1.34 6 3zm0 2.12c-.38.36-.84.66-1.31.9-1.25.62-2.91.98-4.69.98-.62 0-1.23-.04-1.81-.13.93.53 1.72 1.34 1.8 2.44H12v6.19c0 .17-.02.34-.05.5H12c3.31 0 6-1.34 6-3V6.12zm-10.69.9l.05.02A9.08 9.08 0 006 7.01v-.89c.38.36.84.66 1.31.9zM9 8.42A7.86 7.86 0 006.5 8C4.01 8 2 9.12 2 10.5S4.01 13 6.5 13s4.5-1.12 4.5-2.5c0-.87-.8-1.63-2-2.08zm1.17 4.72c-1 .55-2.29.86-3.67.86s-2.68-.3-3.67-.86c-.29-.16-.58-.36-.83-.59v3.95C2 17.88 4.01 19 6.5 19s4.5-1.12 4.5-2.5v-3.95c-.25.23-.54.43-.83.6z"></path></svg>`,
	4,
)

function DatabaseMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 5c0 1.66-2.69 3-6 3S4 6.66 4 5s2.69-3 6-3 6 1.34 6 3zm-1.31 3.02c.28-.14.55-.3.81-.49 0 .81-.7 1.44-1.41 1.82a3 3 0 00-.82 4.66A2.5 2.5 0 0011 16.5c0 .49.1.97.33 1.43-.43.04-.87.07-1.33.07-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function DatabasePersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9v2.99a2.97 2.97 0 00-1.87.86l-.6.6a1.98 1.98 0 00-.58 1.52 1.95 1.95 0 00-1.52.58l-.6.6a2.99 2.99 0 00-.77 2.9l-.76.75-.05.06C6.3 17.79 4 16.53 4 15V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zm4.5 2.83a.5.5 0 10-.7-.7l-1.19 1.18a.64.64 0 00-.03.05 2 2 0 00-2.44.3l-.6.6a.98.98 0 000 1.4l1.45 1.43a.98.98 0 001.38 0l.6-.6a2 2 0 00.3-2.44.36.36 0 00.06-.03l1.18-1.19zm-5.66 3.53a.98.98 0 00-1.39 0l-.6.6a2 2 0 00-.3 2.43.42.42 0 00-.05.04L10 18.63a.5.5 0 00.7.7l1.19-1.18a.5.5 0 00.03-.05 2 2 0 002.44-.3l.6-.6a.98.98 0 000-1.39l-1.44-1.44z"></path></svg>`,
	4,
)

function DatabasePlugConnectedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9v2.64a4.5 4.5 0 10-3.83 8.04c-.68.13-1.4.2-2.17.2-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM13.5 17c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L16.3 15.6a3.5 3.5 0 10-2.8 1.4zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function DatabaseSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ms = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.85 18.85a.5.5 0 01-.7 0l-2-2a.5.5 0 010-.7l2-2a.5.5 0 01.81.16.5.5 0 01-.1.54L10.7 16h5.58l-1.14-1.15a.5.5 0 01.16-.81.5.5 0 01.54.1l2 2a.5.5 0 010 .71l-2 2a.5.5 0 01-.81-.16.5.5 0 01.1-.54L16.3 17h-5.58l1.14 1.15a.5.5 0 010 .7zM10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm-1.56 9.56a1.5 1.5 0 010-2.12l2-2a1.5 1.5 0 012.12 0 1.5 1.5 0 01.35 1.56h1.18A1.5 1.5 0 0116 13.1V7.11a4.93 4.93 0 01-1.31.9c-.33.16-.66.3-1.01.42-1.19.38-2.43.57-3.68.56-1.25.01-2.5-.18-3.68-.57a8.15 8.15 0 01-1.7-.81 4.93 4.93 0 01-.62-.5V15c0 1.45 2.07 2.66 4.81 2.93l-.37-.37z"></path></svg>`,
	4,
)

function DatabaseSwitchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ms.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 5c0 1.66-2.69 3-6 3S4 6.66 4 5s2.69-3 6-3 6 1.34 6 3zm-1.31 3.02l.31-.17v.21c-.53.14-1 .48-1.29 1.05l-3.5 7c-.31.64-.25 1.34.06 1.89H10c-3.31 0-6-1.34-6-3V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zm-.09 1.53l-3.5 7A1 1 0 0012 18h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM16 11.5v3a.5.5 0 11-1 0v-3a.5.5 0 111 0zm-.5 5.5a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function DatabaseWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 8c3.31 0 6-1.34 6-3s-2.69-3-6-3-6 1.34-6 3 2.69 3 6 3zm4.69.02c.47-.24.93-.54 1.31-.9V9h-4.5A2.5 2.5 0 009 11.5v6c0 .16.01.31.04.46C6.18 17.73 4 16.5 4 15V7.12c.38.36.84.66 1.31.9C6.56 8.64 8.22 9 10 9c1.78 0 3.44-.36 4.69-.98zM10 11.5c0-.83.67-1.5 1.5-1.5h6c.83 0 1.5.67 1.5 1.5v.5h-9v-.5zm0 1.5h9v4.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V13z"></path></svg>`,
	4,
)

function DatabaseWindowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4c0-1.1.9-2 2-2h12a2 2 0 110 4H4a2 2 0 01-2-2zm2 6c0-1.1.9-2 2-2h8a2 2 0 110 4H6a2 2 0 01-2-2zm4 4a2 2 0 100 4h4a2 2 0 100-4H8z"></path></svg>`,
	4,
)

function DataFunnelIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 4.5c0-.83-.67-1.5-1.5-1.5h-1C8.67 3 8 3.67 8 4.5V17h4V4.5zM13 6v11h3.5a.5.5 0 00.5-.5V8a2 2 0 00-2-2h-2zM5 9h2v8H3.5a.5.5 0 01-.5-.5V11c0-1.1.9-2 2-2z"></path></svg>`,
	4,
)

function DataHistogramIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a2.5 2.5 0 01-3.44 2.32l-1.29 1.92A2.5 2.5 0 0111.5 14a2.5 2.5 0 01-2.05-1.08L6.95 14A2.51 2.51 0 014.5 17a2.5 2.5 0 112.05-3.92L9.05 12a2.51 2.51 0 013.4-2.83l1.28-1.92A2.5 2.5 0 0115.5 3 2.5 2.5 0 0118 5.5z"></path></svg>`,
	4,
)

function DataLineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 4.07c.55-.08 1 .38 1 .93v6h6c.55 0 1 .45.93 1A7 7 0 118 4.07zM17.06 10c.5 0 .93-.37.94-.86V9a7 7 0 00-7.14-7c-.5.01-.86.44-.86.94V9a1 1 0 001 1h6.06z"></path></svg>`,
	4,
)

function DataPieIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ml = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 2.5a.5.5 0 00-1 0v15c0 .28.22.5.5.5h15a.5.5 0 000-1H3V2.5zM7.5 10a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM17 5.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM12.5 15a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"></path></svg>`,
	4,
)

function DataScatterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ml.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.94 3.13a.5.5 0 01-.2.68A7.03 7.03 0 003.8 6.73a.5.5 0 01-.89-.46 8.03 8.03 0 013.35-3.35.5.5 0 01.67.21zm6.12 0a.5.5 0 01.67-.2 8.03 8.03 0 013.35 3.34.5.5 0 01-.89.46 7.03 7.03 0 00-2.92-2.92.5.5 0 01-.21-.68zm-9.93 9.93a.5.5 0 01.68.2 7.03 7.03 0 002.92 2.93.5.5 0 01-.46.89 8.03 8.03 0 01-3.35-3.35.5.5 0 01.21-.67zm13.74 0a.5.5 0 01.2.67 8.03 8.03 0 01-3.34 3.35.5.5 0 11-.46-.89 7.03 7.03 0 002.92-2.92.5.5 0 01.68-.21zM10 5.5c-.15 0-.3 0-.45.02a.5.5 0 11-.1-1L10 4.5a5.5 5.5 0 015.25 3.85.5.5 0 11-.96.3A4.5 4.5 0 0010 5.5zm-2.6.2a.5.5 0 01-.1.7 4.5 4.5 0 00-1.2 5.85.5.5 0 01-.86.5A5.48 5.48 0 016.7 5.6a.5.5 0 01.7.1zm7.52 5.32a.5.5 0 01.33.63 5.5 5.5 0 01-8 3.11.5.5 0 01.5-.86 4.5 4.5 0 006.54-2.55.5.5 0 01.63-.33zM10 13a3 3 0 100-6 3 3 0 000 6z"></path></svg>`,
	4,
)

function DataSunburstIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 3H6a3 3 0 00-3 3v8a3 3 0 003 3h1V3zm1 14h6a3 3 0 003-3v-1H8v4zm9-5V6a3 3 0 00-3-3H8v9h9z"></path></svg>`,
	4,
)

function DataTreemapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 16.25c0 .41-.34.75-.75.75H4.75C3.78 17 3 16.22 3 15.25V3.75a.75.75 0 011.5 0v11.5c0 .14.11.25.25.25h11.5c.41 0 .75.34.75.75zm-5-10.5c0-.41.34-.75.75-.75h3.5c.41 0 .75.34.75.75v3.5a.75.75 0 01-1.5 0V7.56l-3.97 3.97a.75.75 0 01-1.06 0L9 10.06l-2.22 2.22a.75.75 0 01-1.06-1.06l2.75-2.75a.75.75 0 011.06 0L11 9.94l3.44-3.44h-1.69a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function DataTrendingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 00-2 2v10c0 1.1.9 2 2 2h5.48c.15-.5.42-.96.8-1.33l1.84-1.85a.5.5 0 01-.12-.32v-7a.5.5 0 011 0v6.44l2.1-2.1c.27-.27.57-.47.9-.6V4a2 2 0 00-2-2H4zm5 7c.28 0 .5.22.5.5v3a.5.5 0 01-1 0v-3c0-.28.22-.5.5-.5zM5 7.5a.5.5 0 011 0v5a.5.5 0 01-1 0v-5zm5.98 7.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.82 4.83a2.2 2.2 0 01-1.03.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function DataUsageEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm5 7c.28 0 .5.22.5.5v3a.5.5 0 01-1 0v-3c0-.28.22-.5.5-.5zM6 8.5a.5.5 0 011 0v5a.5.5 0 01-1 0v-5zM13.5 6c.28 0 .5.22.5.5v7a.5.5 0 01-1 0v-7c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function DataUsageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6a3 3 0 013-3h8a3 3 0 013 3v3.2a5.5 5.5 0 00-3 0V6.5a.5.5 0 00-1 0v3.1a5.5 5.5 0 00-2.5 2.6v-1.7a.5.5 0 00-1 0v3a.5.5 0 00.52.5 5.5 5.5 0 00.58 3H5a3 3 0 01-3-3V6zm3.5 2a.5.5 0 00-.5.5v5a.5.5 0 001 0v-5a.5.5 0 00-.5-.5zm6.57 3.44a2 2 0 01-1.43 2.48l-.47.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function DataUsageSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$me = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 00-2 2v10c0 1.1.9 2 2 2h5v-2.5c0-.17.02-.34.05-.5H9a.5.5 0 01-.5-.5v-3a.5.5 0 011 0V12c.37-.5.91-.84 1.54-.96A2.5 2.5 0 0112 9.5v-4a.5.5 0 011 0v3.55c.16-.03.33-.05.5-.05h2c.17 0 .34.02.5.05V4a2 2 0 00-2-2H4zm1 5.5a.5.5 0 011 0v5a.5.5 0 01-1 0v-5zm7 4.5v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 4.5h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function DataUsageToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$me.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$md = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1 3.5c0-.28.22-.5.5-.5H7a2 2 0 012 2v4.5h6c1.04 0 2 .74 2 1.8V16h1.5a.5.5 0 010 1H13c-1.04 0-2-.74-2-1.8v-4.7H5a2 2 0 01-2-2V4H1.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DataWaterfallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$md.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a.5.5 0 000 1h1v1h-.5C4.67 4 4 4.67 4 5.5V10h5V5.5C9 4.67 8.33 4 7.5 4H7V3h1a.5.5 0 000-1H5zm7 2a.5.5 0 000 1h1v1h-.5c-.83 0-1.5.67-1.5 1.5V9h5V7.5c0-.83-.67-1.5-1.5-1.5H14V5h1a.5.5 0 000-1h-3zM4.5 15.5c0 .28.22.5.5.5h3a.5.5 0 000-1H7v-1h.5c.83 0 1.5-.67 1.5-1.5V11H4v1.5c0 .83.67 1.5 1.5 1.5H6v1H5a.5.5 0 00-.5.5zM12 18a.5.5 0 010-1h1v-1h-.5a1.5 1.5 0 01-1.5-1.5V10h5v4.5c0 .83-.67 1.5-1.5 1.5H14v1h1a.5.5 0 010 1h-3z"></path></svg>`,
	4,
)

function DataWhiskerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$mb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3A2.5 2.5 0 006 5.5v4a2.5 2.5 0 005 0v-4A2.5 2.5 0 008.5 3zm-1 2.5a1 1 0 012 0v4a1 1 0 11-2 0v-4zM3 12a1 1 0 100-2 1 1 0 000 2zm12.5-9A2.5 2.5 0 0013 5.5v3.7c.48-.13.98-.2 1.5-.2V5.5a1 1 0 112 0v3.87c.51.2.98.48 1.4.81.07-.22.1-.44.1-.68v-4A2.5 2.5 0 0015.5 3zm-1 16a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm-2.35-4.85a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function DecimalArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$mb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ma = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3A2.5 2.5 0 006 5.5v4a2.5 2.5 0 005 0v-4A2.5 2.5 0 008.5 3zm-1 2.5a1 1 0 012 0v4a1 1 0 11-2 0v-4zM3 12a1 1 0 100-2 1 1 0 000 2zm12.5-9A2.5 2.5 0 0013 5.5v3.7c.48-.13.98-.2 1.5-.2V5.5a1 1 0 112 0v3.87c.51.2.98.48 1.4.81.07-.22.1-.44.1-.68v-4A2.5 2.5 0 0015.5 3zm-1 7a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function DecimalArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ma.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 4a1.5 1.5 0 00-3 0h3zm-4 0a2.5 2.5 0 015 0h5a.5.5 0 010 1h-1.05l-.49 4.2a5.5 5.5 0 00-5.7 8.8H7.73a3 3 0 01-2.98-2.66L3.55 5H2.5a.5.5 0 010-1h5zm7 15a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function DeleteArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 4a1.5 1.5 0 00-3 0h3zm-4 0a2.5 2.5 0 015 0h5a.5.5 0 010 1h-1.05l-.49 4.2a5.5 5.5 0 00-5.7 8.8H7.73a3 3 0 01-2.98-2.66L3.55 5H2.5a.5.5 0 010-1h5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function DeleteDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 4h3a1.5 1.5 0 00-3 0zm-1 0a2.5 2.5 0 015 0h5a.5.5 0 010 1h-1.05l-1.2 10.34A3 3 0 0112.27 18H7.73a3 3 0 01-2.98-2.66L3.55 5H2.5a.5.5 0 010-1h5zM9 8a.5.5 0 00-1 0v6a.5.5 0 001 0V8zm2.5-.5a.5.5 0 00-.5.5v6a.5.5 0 001 0V8a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function DeleteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 4a1.5 1.5 0 00-3 0h3zm-4 0a2.5 2.5 0 015 0h5a.5.5 0 010 1h-1.05l-.81 7H11.5a1.5 1.5 0 00-1.12 2.5 1.5 1.5 0 000 2 1.5 1.5 0 00-.3 1.5H7.74a3 3 0 01-2.98-2.66L3.55 5H2.5a.5.5 0 010-1h5zm4 9a.5.5 0 000 1h6a.5.5 0 000-1h-6zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6z"></path></svg>`,
	4,
)

function DeleteLinesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.3 4L2.14 2.85a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-2-2A3 3 0 0112.27 18H7.73a3 3 0 01-2.98-2.66L3.55 5H2.5a.5.5 0 010-1h.8zm8.7 8.7l-1-1V14a.5.5 0 001 0v-1.3zm-3-3l-1-1V14a.5.5 0 001 0V9.7zM12 8v1.88l3.48 3.48.97-8.36h1.05a.5.5 0 000-1h-5a2.5 2.5 0 00-5 0H6.12L11 8.88V8a.5.5 0 011 0zm-.5-4h-3a1.5 1.5 0 113 0z"></path></svg>`,
	4,
)

function DeleteOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.94 3.93a3.46 3.46 0 00-2.9-.74c-.92.18-1.73.69-2.26 1.27a4.1 4.1 0 00-1.24 2.7c-.03.6.06 1.47.53 2.13a5 5 0 011.12 3.15c0 .65.14 1.53.46 2.34.32.8.87 1.6 1.77 1.94h.02l.03.01c.52.14 1 .1 1.38-.25.32-.3.46-.76.53-1.16.07-.38.1-.82.14-1.25l.01-.15a12 12 0 01.19-1.44c.26-1.27.64-1.5.82-1.55.49-.13.78-.04.97.1.28.2.49.61.64 1.22.14.6.2 1.27.25 1.88.07.87.25 1.65.6 2.16.18.26.44.49.79.56.35.08.69-.03.99-.22 1.1-.7 1.74-2.17 1.91-4.1.08-.88.17-1.3.3-1.64.1-.25.22-.46.42-.8a37.6 37.6 0 00.36-.63c.25-.43.65-1.23.7-2.16a3.48 3.48 0 00-1.44-2.96 4.4 4.4 0 00-3.01-1.16c-.9.05-1.62.46-2.13.9h-.01l-.01.02c-.5.49-.73.58-.88.57-.17 0-.45-.14-1-.7l-.03-.02-.02-.02zm4 1.67c.48 0 .98.15 1.38.5.4.35.64.87.7 1.52a.5.5 0 01-1 .1c-.03-.45-.19-.72-.37-.88a1.06 1.06 0 00-.71-.24.5.5 0 010-1z"></path></svg>`,
	4,
)

function DentistIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 4.5c-.75 0-1.44.24-2.01.64a3.59 3.59 0 00-.41-1.52A5 5 0 0114 8h2.25c.97 0 1.75.78 1.75 1.75v5.5c0 .97-.78 1.75-1.75 1.75h-5.5C9.78 17 9 16.22 9 15.25V13c-.72 0-1.4-.15-2.02-.42L7 11.5v-.06-.57c.56.4 1.26.63 2 .63V9.75C9 8.78 9.78 8 10.75 8h1.75A3.5 3.5 0 009 4.5zm4.77 5a5.01 5.01 0 01-3.27 3.27v2.48c0 .14.11.25.25.25h5.5c.14 0 .25-.11.25-.25v-5.5a.25.25 0 00-.25-.25h-2.48zm-1.6 0h-1.42a.25.25 0 00-.25.25v1.41a3.51 3.51 0 001.66-1.66zM4.57 2.13a.5.5 0 01.12.6l-.01.08c0 .07.01.19.16.34l.2.18.16.16c.13.12.27.27.4.45.25.38.39.86.39 1.56 0 .85-.32 1.58-.8 2.03l.05.07c.29.34.45.79.55 1.23.2.87.2 1.92.2 2.64v.03c0 2.79-.38 4.37-.8 5.27-.2.46-.43.75-.62.93a1.48 1.48 0 01-.4.26S4.09 18 4 18c-.07 0-.19-.04-.19-.04a.75.75 0 01-.13-.06c-.07-.05-.16-.1-.26-.2-.2-.18-.41-.47-.62-.93-.42-.9-.8-2.48-.8-5.27v-.03c0-.72 0-1.77.2-2.64a3.02 3.02 0 01.6-1.3C2.33 7.08 2 6.35 2 5.5a4.73 4.73 0 01.69-2.1A4.07 4.07 0 013.93 2.1l.04-.03a.5.5 0 01.61.05z"></path></svg>`,
	4,
)

function DesignIdeasIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35A.5.5 0 0017 5.5a.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 5H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2zM14.5 11c1.33 0 2.55-.47 3.5-1.26v3.76c0 .83-.67 1.5-1.5 1.5H13v2h1.5a.5.5 0 010 1h-9a.5.5 0 010-1H7v-2H3.5A1.5 1.5 0 012 13.5v-10C2 2.67 2.67 2 3.5 2h6.76a5.5 5.5 0 004.24 9zM12 17v-2H8v2h4z"></path></svg>`,
	4,
)

function DesktopArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 000 1H11v-1H8v-2h3v-4.5a1.5 1.5 0 012.56-1.07l4.4 4.37c.03-.1.04-.2.04-.3v-10c0-.83-.67-1.5-1.5-1.5h-13zm9.36 8.14a.5.5 0 00-.86.36v8a.5.5 0 00.9.3l2-2.65 3.5.78a.5.5 0 00.45-.84l-6-5.95z"></path></svg>`,
	4,
)

function DesktopCursorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.98 6.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02zm-.7-.71L13.93 2H3.5C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 000 1h9a.5.5 0 000-1H13v-2h3.5c.83 0 1.5-.67 1.5-1.5V6.06l-3.67 3.67c-.4.4-.92.7-1.48.84l-1.5.37a1.89 1.89 0 01-2.3-2.29l.38-1.5a3.2 3.2 0 01.84-1.48zM12 15v2H8v-2h4z"></path></svg>`,
	4,
)

function DesktopEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 2.5c0-.18.03-.34.09-.5H3.5C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 000 1h9a.5.5 0 000-1H13v-2h3.5c.83 0 1.5-.67 1.5-1.5V7h-2.5a1.5 1.5 0 01-1.1-.47l-.25.76A2.5 2.5 0 0112 9v.51c0 .83-.67 1.5-1.5 1.5h-3A1.5 1.5 0 016 9.5v-3C6 5.67 6.67 5 7.5 5h3c.43 0 .82.18 1.1.47l.25-.76A2.5 2.5 0 0114 3V2.5zM12 15v2H8v-2h4zm3.5-13a.5.5 0 00-.5.5V4h-.78a1.5 1.5 0 00-1.42 1.03l-.55 1.63a.5.5 0 01-.47.34H11v-.5a.5.5 0 00-.5-.5h-3a.5.5 0 00-.5.5v3c0 .28.22.5.5.5h3a.5.5 0 00.5-.5V8h.78a1.5 1.5 0 001.42-1.03l.55-1.63a.5.5 0 01.47-.34H15v.5c0 .28.22.5.5.5h3a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-3z"></path></svg>`,
	4,
)

function DesktopFlowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 000 1h9a.5.5 0 000-1H13v-2h3.5c.83 0 1.5-.67 1.5-1.5v-10c0-.83-.67-1.5-1.5-1.5h-13zM12 15v2H8v-2h4z"></path></svg>`,
	4,
)

function DesktopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4c0-1.1.9-2 2-2h12a2 2 0 012 2v7.1a2.75 2.75 0 00-.75-.1h-5.5A2.75 2.75 0 009 13.75v3.5c0 .26.04.51.1.75H6.5a.5.5 0 010-1H8v-2H4a2 2 0 01-2-2V4zm9.75 8c-.97 0-1.75.78-1.75 1.75v3.5c0 .97.78 1.75 1.75 1.75h5.5c.97 0 1.75-.78 1.75-1.75v-3.5c0-.97-.78-1.75-1.75-1.75h-5.5zm.25 5.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm.5-3.5a.5.5 0 110-1 .5.5 0 010 1zm1.5 1.5a.5.5 0 11-1 0 .5.5 0 011 0zm.5-1.5a.5.5 0 110-1 .5.5 0 010 1zm1.5 1.5a.5.5 0 11-1 0 .5.5 0 011 0zm.5-1.5a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function DesktopKeyboardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 00-2 2v9c0 1.1.9 2 2 2h4v1a1 1 0 01-1 1h-.5a.5.5 0 000 1h7a.5.5 0 000-1H13a1 1 0 01-1-1v-1h4a2 2 0 002-2V4a2 2 0 00-2-2H4zM3 13v-1h14v1a1 1 0 01-1 1H4a1 1 0 01-1-1zm5.73 4A2 2 0 009 16v-1h2v1c0 .36.1.7.27 1H8.73z"></path></svg>`,
	4,
)

function DesktopMacIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4c0-1.1.9-2 2-2h12a2 2 0 012 2v4h-2.57l-1.09-2.17a1.5 1.5 0 00-2.68 0L10.32 8.5 8.93 4.05a1.5 1.5 0 00-2.82-.1L4.49 8H2V4zm12.5 7H18v2a2 2 0 01-2 2h-3v2h1.5a.5.5 0 010 1h-9a.5.5 0 010-1H7v-2H4a2 2 0 01-2-2v-2h3.5a1.5 1.5 0 001.4-.94l.43-1.09 1.24 3.98a1.5 1.5 0 002.77.22L13 9.85l.16.32c.25.5.77.83 1.34.83zM12 17v-2H8v2h4zM7.98 4.35a.5.5 0 00-.94-.04L5.16 9H2.5a.5.5 0 000 1h3a.5.5 0 00.47-.31l1.47-3.7 2.08 6.66a.5.5 0 00.93.07L13 7.62l1.05 2.1a.5.5 0 00.45.28h3a.5.5 0 000-1h-2.7l-1.35-2.72a.5.5 0 00-.9 0l-2.44 4.89-2.13-6.82z"></path></svg>`,
	4,
)

function DesktopPulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 1c-.18 0-.36 0-.54.02a.5.5 0 10.08 1L12 2a6 6 0 015.98 6.46.5.5 0 101 .08L19 8a7 7 0 00-7-7zm0 2c-.19 0-.37.01-.55.03a.5.5 0 00.1 1L12 4a4 4 0 013.98 4.45.5.5 0 10.99.1A5 5 0 0012 3zm0 2c-.2 0-.4.02-.6.06a.5.5 0 00.2.98A2.01 2.01 0 0114 8c0 .14-.01.27-.04.4a.5.5 0 00.98.2A3.01 3.01 0 0012 5zm-1.92-3H3.5C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 100 1h9a.5.5 0 000-1H13v-2h3.5c.83 0 1.5-.67 1.5-1.5V9.92a1.5 1.5 0 01-.52-.3 1.5 1.5 0 01-2.02-.01 1.5 1.5 0 01-2.13-.11 2 2 0 01-2.82-2.82 1.5 1.5 0 01-.12-2.14 1.5 1.5 0 010-2.02 1.5 1.5 0 01-.31-.52zM12 15v2H8v-2h4zm1-7a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function DesktopSignalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 000 1h6.38l-1-1H8v-2h1v-1.5c0-.83.67-1.5 1.5-1.5h.38l1.56-1.56a1.5 1.5 0 012.5.67c.3-.12.6-.14.88-.07A1.5 1.5 0 0118 10.2V3.5c0-.83-.67-1.5-1.5-1.5h-13zm10.2 9.04c.18.08.3.26.3.46v6a.5.5 0 01-.85.35L11.29 16h-.79a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5h.8l1.85-1.85a.5.5 0 01.54-.11zm3.95.16c.12.16.29.45.44.87.26.68.41 1.5.41 2.43 0 .94-.15 1.75-.4 2.43-.16.42-.33.7-.45.87a.5.5 0 01-.85-.52l.12-.19a5.9 5.9 0 00.58-2.6 5.9 5.9 0 00-.58-2.58l-.07-.11a.5.5 0 01.8-.6zm-1.43 1.77c-.1-.3-.2-.55-.27-.7a.5.5 0 10-.9.45 4.6 4.6 0 01.45 1.78 3.94 3.94 0 01-.37 1.6l-.08.18a.5.5 0 10.9.44 5.5 5.5 0 00.55-2.22c0-.5-.1-1.02-.28-1.53z"></path></svg>`,
	4,
)

function DesktopSpeakerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.15 2.85a.5.5 0 01.7-.7l15 15a.5.5 0 01-.7.7L14 14.71v2.79a.5.5 0 01-.85.35L11.29 16h-.79a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5h.8l.5-.5-.71-.7-.21.2h-.38c-.83 0-1.5.67-1.5 1.5V15H8v2h2.88l1 1H5.5a.5.5 0 010-1H7v-2H3.5A1.5 1.5 0 012 13.5v-10c0-.23.05-.45.15-.65zM18.5 14.5a7.4 7.4 0 01-.19 1.7l-.86-.87a6.95 6.95 0 00-.3-2.9c-.08-.24-.17-.41-.23-.52l-.07-.11a.5.5 0 01.8-.6c.12.16.29.45.44.87.26.68.41 1.5.41 2.43zm-2.28-1.53c.16.47.26.95.28 1.4l-1.3-1.29a3.95 3.95 0 00-.15-.36.5.5 0 11.9-.44c.07.14.17.38.27.69zm-2.15-2.86a1.5 1.5 0 00-1.57.27L4.12 2H16.5c.83 0 1.5.67 1.5 1.5v6.7a1.5 1.5 0 00-2.18.84 1.5 1.5 0 00-.87.07 1.5 1.5 0 00-.88-1z"></path></svg>`,
	4,
)

function DesktopSpeakerOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.98 1.98 0 00-1.72-.1 2 2 0 00-.66.44.5.5 0 11-.71-.71A3 3 0 0116 3.15V3c0-.28.22-.5.5-.5zm-.88 5.53A3 3 0 0113 7.85V8a.5.5 0 01-1 0V6.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.98 1.98 0 001.72.1 2 2 0 00.66-.44.5.5 0 11.71.71 3 3 0 01-1 .66zM14.5 11c1.33 0 2.55-.47 3.5-1.26v3.76c0 .83-.67 1.5-1.5 1.5H13v2h1.5a.5.5 0 010 1h-9a.5.5 0 010-1H7v-2H3.5A1.5 1.5 0 012 13.5v-10C2 2.67 2.67 2 3.5 2h6.76a5.5 5.5 0 004.24 9zM12 15H8v2h4v-2z"></path></svg>`,
	4,
)

function DesktopSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2C2.67 2 2 2.67 2 3.5v10c0 .83.67 1.5 1.5 1.5H7v2H5.5a.5.5 0 000 1h3.55a2.51 2.51 0 01-.05-.5V17H8v-2h1v-1.5a2.5 2.5 0 012.04-2.46A2.5 2.5 0 0113.5 9h2a2.5 2.5 0 012.46 2.04l.04.01V3.5c0-.83-.67-1.5-1.5-1.5h-13zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function DesktopToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 12a2 2 0 100-4 2 2 0 000 4zM8 2.5a.5.5 0 00-1 0V4h-.5A2.5 2.5 0 004 6.5V7H2.5a.5.5 0 000 1H4v1.5H2.5a.5.5 0 000 1H4V12H2.5a.5.5 0 000 1H4v.5A2.5 2.5 0 006.5 16H7v1.5a.5.5 0 001 0V16h1.5v1.5a.5.5 0 001 0V16H12v1.5a.5.5 0 001 0V16h.5a2.5 2.5 0 002.5-2.5V13h1.5a.5.5 0 000-1H16v-1.5h1.5a.5.5 0 000-1H16V8h1.5a.5.5 0 000-1H16v-.5A2.5 2.5 0 0013.5 4H13V2.5a.5.5 0 00-1 0V4h-1.5V2.5a.5.5 0 00-1 0V4H8V2.5zm5 7.5a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>`,
	4,
)

function DeveloperBoardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 2.5a.5.5 0 00-1 0V4h-.5A2.5 2.5 0 004 6.5V7H2.5a.5.5 0 000 1H4v1.5H2.5a.5.5 0 000 1H4V12H2.5a.5.5 0 000 1H4v.5A2.5 2.5 0 006.5 16H7v1.5a.5.5 0 001 0V16h1.5v1.5a.5.5 0 001 0V16H12v1.5a.5.5 0 001 0V16h.5a2.5 2.5 0 002.5-2.5V13h1.5a.5.5 0 000-1H16v-1.5h1.5a.5.5 0 000-1H16V8h1.5a.5.5 0 000-1H16v-.5A2.5 2.5 0 0013.5 4H13V2.5a.5.5 0 00-1 0V4h-1.5V2.5a.5.5 0 00-1 0V4H8V2.5zm2.99 5.04L10.57 9h1.53c.34 0 .52.4.3.66l-2.65 3.19c-.3.35-.86.05-.73-.4L9.46 11H7.9a.4.4 0 01-.3-.66l2.66-3.19c.3-.34.85-.05.73.39z"></path></svg>`,
	4,
)

function DeveloperBoardLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 2.5a.5.5 0 00-1 0V4h-.5A2.5 2.5 0 004 6.5V7H2.5a.5.5 0 000 1H4v1.5H2.5a.5.5 0 000 1H4V12H2.5a.5.5 0 000 1H4v.5A2.5 2.5 0 006.5 16H7v1.5a.5.5 0 001 0V16h1v-2.5c0-.23.03-.45.09-.67a.4.4 0 01-.07-.37L9.46 11H7.9a.4.4 0 01-.3-.66l2.66-3.19c.3-.34.85-.05.73.39L10.57 9h1.53c.17 0 .3.1.36.23.32-.15.67-.23 1.04-.23h2c.17 0 .34.02.5.05V8h1.5a.5.5 0 000-1H16v-.5A2.5 2.5 0 0013.5 4H13V2.5a.5.5 0 00-1 0V4h-1.5V2.5a.5.5 0 00-1 0V4H8V2.5zm4 9.5v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function DeveloperBoardLightningToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 9a2 2 0 11-4 0 2 2 0 014 0zM8.5 1c.28 0 .5.22.5.5V3h1.5V1.5a.5.5 0 011 0V3H13V1.5a.5.5 0 011 0V3h.5A2.5 2.5 0 0117 5.5V6h1.5a.5.5 0 010 1H17v1.5h1.5a.5.5 0 010 1H17V11h1.5a.5.5 0 010 1H17v.5a2.5 2.5 0 01-2.5 2.5H14v1.5a.5.5 0 01-1 0V15h-1.5v1.5a.5.5 0 01-1 0V15H8.74a4.5 4.5 0 00-5.68-5.76.5.5 0 01.44-.74H5V7H3.5a.5.5 0 010-1H5v-.5A2.5 2.5 0 017.5 3H8V1.5c0-.28.22-.5.5-.5zM11 12a3 3 0 100-6 3 3 0 000 6zm-6.5 5c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 00.7-.7L7.3 15.6A3.5 3.5 0 104.5 17zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function DeveloperBoardSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.41 0 .75.34.75.75v14.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zm3.75 3c.41 0 .75.34.75.75v8.5a.75.75 0 01-1.5 0v-8.5c0-.41.34-.75.75-.75zM7 5.75a.75.75 0 00-1.5 0v8.5a.75.75 0 001.5 0v-8.5zM17.25 8c.41 0 .75.34.75.75v2.5a.75.75 0 01-1.5 0v-2.5c0-.41.34-.75.75-.75zM3.5 8.75a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path></svg>`,
	4,
)

function DeviceEqIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.66 4.95A2.5 2.5 0 016.1 3h7.8c1.17 0 2.18.8 2.44 1.95l1.6 7A2.5 2.5 0 0115.48 15H4.51a2.5 2.5 0 01-2.44-3.05l1.59-7zM5.5 16a.5.5 0 000 1h9a.5.5 0 000-1h-9z"></path></svg>`,
	4,
)

function DeviceMeetingRoomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.66 4.95A2.5 2.5 0 016.1 3h7.8c1.17 0 2.18.8 2.44 1.95l1.6 7A2.5 2.5 0 0115.48 15H9V9.5A2.5 2.5 0 006.5 7h-3c-.1 0-.21 0-.31.02l.47-2.07zM9 16.5c0 .17-.02.34-.05.5h5.55a.5.5 0 000-1H9v.5zM5 12a1 1 0 100-2 1 1 0 000 2zM2 9.5C2 8.67 2.67 8 3.5 8h3C7.33 8 8 8.67 8 9.5v7c0 .83-.67 1.5-1.5 1.5h-3A1.5 1.5 0 012 16.5v-7zM3.5 9a.5.5 0 00-.5.5v7c0 .28.22.5.5.5h3a.5.5 0 00.5-.5v-7a.5.5 0 00-.5-.5h-3z"></path></svg>`,
	4,
)

function DeviceMeetingRoomRemoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a3 3 0 00-3 3v9a3 3 0 003 3h.82l.9-1H5a2 2 0 01-2-2V5c0-1.1.9-2 2-2h8a2 2 0 012 2v5.03c.36.06.7.2 1 .4V5a3 3 0 00-3-3H5zm.5 3a.5.5 0 000 1h7a.5.5 0 000-1h-7zM5 8.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM6.5 11a.5.5 0 00-.37.83L8.94 15l-2.81 3.17a.5.5 0 00.37.83h8.1c.38 0 .76-.15 1.04-.42l3.13-3.04c.3-.3.3-.78 0-1.08l-3.13-3.04a1.5 1.5 0 00-1.05-.42H6.5z"></path></svg>`,
	4,
)

function DiagramIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 5.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zm0 4a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM7.25 12a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM10 5.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM11.25 8a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM10 13.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM11.25 16a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM14 5.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM15.25 8a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM14 13.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function DialpadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l3.9 3.9H6a1.25 1.25 0 101.25 1.2l2.8 2.8H10a1.25 1.25 0 101.25 1.2l5.9 5.9a.5.5 0 00.7-.7l-15-15zM15.25 12c0 .31-.12.6-.3.82l-1.77-1.76a1.25 1.25 0 012.07.94zm-4-4c0 .31-.12.6-.3.82L9.17 7.06a1.25 1.25 0 012.07.94zm-4-4c0 .31-.12.6-.3.82L5.17 3.06A1.25 1.25 0 017.25 4zm0 8a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM10 5.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM11.25 16a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM14 5.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM15.25 8a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0z"></path></svg>`,
	4,
)

function DialpadOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.59 11.41a2 2 0 010-2.82l6-6a2 2 0 012.83 0l6 6a2 2 0 010 2.82l-6 6a2 2 0 01-2.83 0l-6-6z"></path></svg>`,
	4,
)

function DiamondIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.77 3.06a2.5 2.5 0 00-3.54 0L3.06 8.23a2.5 2.5 0 000 3.54l5.17 5.17a2.5 2.5 0 003.54 0l5.17-5.17a2.5 2.5 0 000-3.54l-5.17-5.17zm-1.12 3.09c.2-.2.5-.2.7 0l1.5 1.5c.2.2.2.5 0 .7l-1.5 1.5a.5.5 0 01-.7-.7l.64-.65h-.79C9.67 8.5 9 9.17 9 10v2.5a.5.5 0 01-1 0V10a2.5 2.5 0 012.5-2.5h.8l-.65-.65a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function DirectionsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zM7.8 7.11a.5.5 0 00-.63.06l-.06.07a.5.5 0 00.06.64L9.3 10l-2.12 2.12-.06.07a.5.5 0 00.06.64l.07.06c.2.13.47.11.64-.06L10 10.7l2.12 2.12.07.06c.2.13.46.11.64-.06l.06-.07a.5.5 0 00-.06-.64L10.7 10l2.12-2.12.06-.07a.5.5 0 00-.06-.64l-.07-.06a.5.5 0 00-.64.06L10 9.3 7.88 7.17l-.07-.06z"></path></svg>`,
	4,
)

function DismissCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.9 4.05l.07-.08a.75.75 0 01.98-.07l.08.07L10 8.94l4.97-4.97a.75.75 0 01.98-.07l.08.07c.27.27.3.68.07.98l-.07.08L11.06 10l4.97 4.97c.27.27.3.68.07.98l-.07.08a.75.75 0 01-.98.07l-.08-.07L10 11.06l-4.97 4.97a.75.75 0 01-.98.07l-.08-.07a.75.75 0 01-.07-.98l.07-.08L8.94 10 3.97 5.03a.75.75 0 01-.07-.98l.07-.08-.07.08z"></path></svg>`,
	4,
)

function DismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm4.15 1.15a.5.5 0 000 .7L9.29 10l-2.14 2.15a.5.5 0 00.7.7L10 10.71l2.15 2.14a.5.5 0 00.7-.7L10.71 10l2.14-2.15a.5.5 0 00-.7-.7L10 9.29 7.85 7.15a.5.5 0 00-.7 0z"></path></svg>`,
	4,
)

function DismissSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h7A2.5 2.5 0 0115 5.5v7a2.5 2.5 0 01-2.5 2.5h-7A2.5 2.5 0 013 12.5v-7zm3.15.65a.5.5 0 000 .7L8.29 9l-2.14 2.15a.5.5 0 00.7.7L9 9.71l2.15 2.14a.5.5 0 00.7-.7L9.71 9l2.14-2.15a.5.5 0 00-.7-.7L9 8.29 6.85 6.15a.5.5 0 00-.7 0zM5.5 16c.46.6 1.18 1 2 1h5a4.5 4.5 0 004.5-4.5v-5c0-.82-.4-1.54-1-2v7a3.5 3.5 0 01-3.5 3.5h-7z"></path></svg>`,
	4,
)

function DismissSquareMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.74 16.45A2.99 2.99 0 016 17a3 3 0 01-2.45-4.74l4.19 4.19zm5.9-5.36l-2.23 1.15a.75.75 0 00-.41.66v2.2c0 .28.16.53.41.66l2.23 1.15c.23.12.5.12.72 0l2.23-1.15a.75.75 0 00.41-.66v-2.2a.75.75 0 00-.41-.66l-2.23-1.15a.79.79 0 00-.72 0zm-5.2 4.65A2.99 2.99 0 009 14a3 3 0 00-4.74-2.45l4.19 4.19zM13 3a2 2 0 00-2 2v2c0 1.1.9 2 2 2h2a2 2 0 002-2V5a2 2 0 00-2-2h-2zm-8.09.67c.45-.9 1.73-.9 2.18 0l1.78 3.54c.4.82-.18 1.79-1.1 1.79H4.23c-.9 0-1.5-.97-1.09-1.79l1.78-3.54z"></path></svg>`,
	4,
)

function DiversityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.75 3c.41 0 .75.34.75.75v12.5a.75.75 0 01-1.5 0V3.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function DividerShortIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.75 1c.41 0 .75.34.75.75v16.5a.75.75 0 01-1.5 0V1.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function DividerTallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ly = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.53 3.22a.75.75 0 00-1.06 0l-2.5 2.5a.75.75 0 001.06 1.06l1.22-1.22v6.69a.75.75 0 001.5 0V5.56l1.22 1.22a.75.75 0 101.06-1.06l-2.5-2.5zM3.5 10.5a1 1 0 011-1h2.75a.75.75 0 000-1.5H4.5A2.5 2.5 0 002 10.5v3A2.5 2.5 0 004.5 16h11a2.5 2.5 0 002.5-2.5v-3A2.5 2.5 0 0015.5 8h-2.75a.75.75 0 000 1.5h2.75a1 1 0 011 1v3a1 1 0 01-1 1h-11a1 1 0 01-1-1v-3z"></path></svg>`,
	4,
)

function DockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ly.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4c-.83 0-1.5.67-1.5 1.5v2C1.5 8.33 2.17 9 3 9h2c.83 0 1.5-.67 1.5-1.5v-2C6.5 4.67 5.83 4 5 4H3zm0 6c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5H3zm4.5-4.5C7.5 4.67 8.17 4 9 4h2c.83 0 1.5.67 1.5 1.5v2c0 .83-.67 1.5-1.5 1.5H9a1.5 1.5 0 01-1.5-1.5v-2zM9 10c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5H9zm4.5-4.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v2c0 .83-.67 1.5-1.5 1.5h-2a1.5 1.5 0 01-1.5-1.5v-2zM15 10c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5h-2z"></path></svg>`,
	4,
)

function DockRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3C7.67 3 7 3.67 7 4.5V7H4.5C3.67 7 3 7.67 3 8.5v3c0 .83.67 1.5 1.5 1.5H7v2.5c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5V13h2.5c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5H13V4.5c0-.83-.67-1.5-1.5-1.5h-3z"></path></svg>`,
	4,
)

function DoctorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H6v-1.5z"></path></svg>`,
	4,
)

function DocumentAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM5.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-2.35-4.15a.5.5 0 01.7-.7L5 15.29V12.5a.5.5 0 011 0v2.8l1.15-1.15a.5.5 0 01.7.7l-2 2a.5.5 0 01-.35.15.5.5 0 01-.35-.14l-2-2z"></path></svg>`,
	4,
)

function DocumentArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L4.71 15H7.5a.5.5 0 000-1H4.7l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function DocumentArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ls = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM5.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm.35-2.15a.5.5 0 01-.7-.7L6.29 15H3.5a.5.5 0 010-1h2.8l-1.15-1.15a.5.5 0 01.7-.7l2 2a.5.5 0 01.15.35.5.5 0 01-.14.35l-2 2z"></path></svg>`,
	4,
)

function DocumentArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ls.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM5.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm2.35-4.85a.5.5 0 11-.7.7L6 13.71v2.79a.5.5 0 01-1 0v-2.8l-1.15 1.15a.5.5 0 11-.7-.7l2-2A.5.5 0 015.5 12a.5.5 0 01.35.14l2 2z"></path></svg>`,
	4,
)

function DocumentArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H12v-4.5A2.5 2.5 0 009.5 11H9v-1a1 1 0 00-1-1H4V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM4 10.5c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5V12h1a2 2 0 012 2v3a2 2 0 01-2 2H3a2 2 0 01-2-2v-3c0-1.1.9-2 2-2h1v-1.5zm3 .5H5v1h2v-1zm-4 2a1 1 0 00-1 1v3a1 1 0 001 1h6a1 1 0 001-1v-3a1 1 0 00-1-1H3z"></path></svg>`,
	4,
)

function DocumentBriefcaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h4.76a5.47 5.47 0 01-1.24-3H8.5a.5.5 0 010-1h.52c.03-.34.1-.68.19-1H8.5a.5.5 0 010-1h1.1c.18-.36.4-.7.66-1H8.5a.5.5 0 010-1h2.84A5.47 5.47 0 0116 9.2V8h-4.5A1.5 1.5 0 0110 6.5zm-4 4a.5.5 0 111 0 .5.5 0 01-1 0zm0 2a.5.5 0 111 0 .5.5 0 01-1 0zm.5 1.5a.5.5 0 110 1 .5.5 0 010-1z"></path><path d="M11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path><path d="M19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-3a.5.5 0 00-1 0v3c0 .28.22.5.5.5h2a.5.5 0 000-1H15v-2.5z"></path></svg>`,
	8,
)

function DocumentBulletListClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm-4 4a.5.5 0 111 0 .5.5 0 01-1 0zm0 2a.5.5 0 111 0 .5.5 0 01-1 0zm0 2a.5.5 0 111 0 .5.5 0 01-1 0zm2-4c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm3-8V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentBulletListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ln = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 6.5V2H5.5C4.67 2 4 2.67 4 3.5v11c0 .83.67 1.5 1.5 1.5H13a2 2 0 002-2V8h-4.5A1.5 1.5 0 019 6.5zm-3 4a.5.5 0 111 0 .5.5 0 01-1 0zm.5 2.5a.5.5 0 110-1 .5.5 0 010 1zm2-2a.5.5 0 010-1h4a.5.5 0 010 1h-4zM8 12.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm2-6V2.25L14.75 7H10.5a.5.5 0 01-.5-.5zM17 9a1 1 0 00-1-1v6a3 3 0 01-3 3H6a1 1 0 001 1h6.06A3.94 3.94 0 0017 14.06V9z"></path></svg>`,
	4,
)

function DocumentBulletListMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ln.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4.7L2.15 2.86a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-1.16-1.16A1.5 1.5 0 0114.5 18h-9A1.5 1.5 0 014 16.5V4.7zm9.3 9.3H8.5a.5.5 0 000 1h5a.5.5 0 00.47-.32l-.68-.68zm-1-1l-1-1H8.5a.5.5 0 000 1h3.8zm-2-2l-1-1h-.8a.5.5 0 000 1h1.8zm3.2 0h-.38L16 13.88V8h-4.5A1.5 1.5 0 0110 6.5V2H5.5c-.38 0-.73.14-1 .38L12.12 10h1.38a.5.5 0 010 1zM6 10.5a.5.5 0 101 0 .5.5 0 00-1 0zm0 2a.5.5 0 101 0 .5.5 0 00-1 0zm0 2a.5.5 0 101 0 .5.5 0 00-1 0zm5-8V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentBulletListOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ll = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5V13h1.5a1.5 1.5 0 001.34-.83l.04-.07 1.24 2.98a1.5 1.5 0 002.72.1L11.93 13h.57a1.5 1.5 0 000-3H11a1.5 1.5 0 00-1.34.83l-.04.07-1.24-2.98a1.5 1.5 0 00-2.72-.1L4.57 10H4V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM7.46 8.31a.5.5 0 00-.9-.03L5.18 11H3.5a.5.5 0 000 1h2a.5.5 0 00.45-.28l1-2.02 2.09 5a.5.5 0 00.9.02L11.32 12h1.19a.5.5 0 000-1H11a.5.5 0 00-.45.28l-1 2.02-2.09-5z"></path></svg>`,
	4,
)

function DocumentCatchUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ll.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L4.5 15.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function DocumentCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-5.65-1.15a.5.5 0 00-.7-.7l-1.5 1.5a.5.5 0 000 .7l1.5 1.5a.5.5 0 00.7-.7L3.21 14.5l1.14-1.15zm2.3-.7a.5.5 0 000 .7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.5-1.5a.5.5 0 000-.7l-1.5-1.5a.5.5 0 00-.7 0z"></path></svg>`,
	4,
)

function DocumentChevronDoubleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$li = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 6.5V2H7.5C6.67 2 6 2.67 6 3.5v11c0 .83.67 1.5 1.5 1.5h8c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0111 6.5zm1 0V2.25L16.75 7H12.5a.5.5 0 01-.5-.5zM4 5a1 1 0 011-1v10.5A2.5 2.5 0 007.5 17H15a1 1 0 01-1 1H7.55A3.55 3.55 0 014 14.45V5z"></path></svg>`,
	4,
)

function DocumentCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$li.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v7.67a3 3 0 011.38 1A2.5 2.5 0 019.5 12a2.5 2.5 0 014.5 1.5c0 .44-.2.84-.5 1.12.32.42.5.95.5 1.5v.38c0 .56-.19 1.08-.5 1.5h1c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm1 0V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM3 12a2 2 0 00-2 2v2a2 2 0 104 0 .5.5 0 00-1 0 1 1 0 11-2 0v-2a1 1 0 112 0 .5.5 0 001 0 2 2 0 00-2-2zm8.5 0c-.83 0-1.5.67-1.5 1.5v.38c0 .57.32 1.09.83 1.34l.9.45a.5.5 0 01.27.45v.38a.5.5 0 01-1 0 .5.5 0 00-1 0 1.5 1.5 0 003 0v-.38a1.5 1.5 0 00-.83-1.34l-.9-.45a.5.5 0 01-.27-.45v-.38a.5.5 0 011 0 .5.5 0 001 0c0-.83-.67-1.5-1.5-1.5zM6 13.5a1.5 1.5 0 013 0 .5.5 0 01-1 0 .5.5 0 00-1 0v.38c0 .2.1.36.28.45l.9.45c.5.25.82.77.82 1.34v.38a1.5 1.5 0 01-3 0 .5.5 0 011 0 .5.5 0 001 0v-.38a.5.5 0 00-.28-.45l-.9-.45A1.5 1.5 0 016 13.88v-.38z"></path></svg>`,
	4,
)

function DocumentCssIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zM10 9c.28 0 .5.22.5.5v6a.5.5 0 01-1 0v-6c0-.28.22-.5.5-.5zm-2.5 4c.28 0 .5.22.5.5v2a.5.5 0 01-1 0v-2c0-.28.22-.5.5-.5zm5-2c.28 0 .5.22.5.5v4a.5.5 0 01-1 0v-4c0-.28.22-.5.5-.5zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentDataIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM2.32 17.68a4.5 4.5 0 106.36-6.36 4.5 4.5 0 00-6.36 6.36zm1.41-4.95c.2-.2.51-.2.7 0L5.5 13.8l1.06-1.06a.5.5 0 11.7.7L6.22 14.5l1.06 1.06a.5.5 0 11-.71.7L5.5 15.22l-1.06 1.06a.5.5 0 11-.7-.71l1.05-1.06-1.06-1.06a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function DocumentDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$le = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h2.72a1.86 1.86 0 01-.16-1.35l.37-1.5a3.2 3.2 0 01.84-1.48l4.83-4.83c.53-.53 1.21-.8 1.9-.84h-4.5A1.5 1.5 0 0110 6.5zm1 0V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zm6.45 3.05a1.87 1.87 0 00-2.64 0l-4.83 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83c.73-.73.73-1.91 0-2.64z"></path></svg>`,
	4,
)

function DocumentEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$le.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ld = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H11v-6a2 2 0 00-2-2H4V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM3.5 11a.5.5 0 010 1h-1a.5.5 0 00-.5.5v5c0 .28.22.5.5.5h1a.5.5 0 010 1h-1A1.5 1.5 0 011 17.5v-5c0-.83.67-1.5 1.5-1.5h1zm4 7a.5.5 0 000 1h1c.83 0 1.5-.67 1.5-1.5v-5c0-.83-.67-1.5-1.5-1.5h-1a.5.5 0 000 1h1c.28 0 .5.22.5.5v5a.5.5 0 01-.5.5h-1zM6 14.5a.5.5 0 00-1 0v3a.5.5 0 101 0v-3zm0-2a.5.5 0 11-1 0 .5.5 0 011 0z"></path></svg>`,
	4,
)

function DocumentEndnoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ld.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM5.5 12a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function DocumentErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$lb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm-4 1c0-.28.22-.5.5-.5h2c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5H8v1.8L9.2 13H11v-.5c0-.28.22-.5.5-.5h2c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5V14H9.2l-1.35 1.35a.5.5 0 01-.7 0l-1.5-1.5a.5.5 0 010-.7L7 11.79V10h-.5a.5.5 0 01-.5-.5v-2zm5-1V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentFlowchartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$lb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$la = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-3.8 0l1.15-1.15a.5.5 0 00-.7-.7L14.5 4.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L15.21 5.5zm-.7 5.5a5.5 5.5 0 001.5-.2V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4c0-1.1.9-2 2-2h4.26a5.5 5.5 0 004.24 9zM7 14a1 1 0 100 2h6a1 1 0 100-2H7z"></path></svg>`,
	4,
)

function DocumentFooterDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$la.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm1 12h6a1 1 0 110 2H7a1 1 0 110-2z"></path></svg>`,
	4,
)

function DocumentFooterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h4.26A5.5 5.5 0 0116 9.2V4a2 2 0 00-2-2H6zm1 2h6a1 1 0 110 2H7a1 1 0 010-2zm12 10.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.85 2.35a.5.5 0 00.35.15.5.5 0 00.35-.15l2-2a.5.5 0 00-.7-.7L15 15.29V12.5a.5.5 0 00-1 0v2.8l-1.15-1.15a.5.5 0 00-.7.7l2 2z"></path></svg>`,
	4,
)

function DocumentHeaderArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h4.26A5.5 5.5 0 0116 9.2V4a2 2 0 00-2-2H6zm1 2h6a1 1 0 110 2H7a1 1 0 010-2zm12 10.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function DocumentHeaderDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 1a1 1 0 001 1h6a1 1 0 100-2H7a1 1 0 00-1 1zm0 10a1 1 0 001 1h6a1 1 0 100-2H7a1 1 0 00-1 1z"></path></svg>`,
	4,
)

function DocumentHeaderFooterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2H6zm1 2h6a1 1 0 110 2H7a1 1 0 010-2z"></path></svg>`,
	4,
)

function DocumentHeaderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5V9c.7.03 1.4.25 2 .66a3.85 3.85 0 014.88 5.91L8.45 18h6.05c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm1 0V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zm-4.86 4.33a2.85 2.85 0 114.03 4.04l-3.82 3.81a.5.5 0 01-.7 0l-3.82-3.81a2.85 2.85 0 114.03-4.04l.14.14.14-.14zm4.03 4.04l-.36-.36z"></path></svg>`,
	4,
)

function DocumentHeartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 2v4.5c0 .83.67 1.5 1.5 1.5H18v8.5c0 .83-.67 1.5-1.5 1.5H9.45l2.43-2.43A3.85 3.85 0 007 9.66a3.82 3.82 0 00-1-.49V3.5C6 2.67 6.67 2 7.5 2H12zm1 .25V6.5c0 .28.22.5.5.5h4.25L13 2.25zm-5.86 8.58A2.85 2.85 0 0112 13h-1.88l-.56-.56a1.5 1.5 0 00-2.26.16l-.16.22-.35-.6a1.5 1.5 0 00-2.54-.05L3.7 13H2a2.84 2.84 0 014.86-2.17l.14.14.14-.14zM3.97 16l2.68 2.68c.2.2.5.2.7 0L10.03 16H8.5l-.3.4a1.5 1.5 0 01-2.49-.13L5.55 16H3.97zm1.96-3.26a.5.5 0 00-.85-.02L4.23 14H3a.5.5 0 000 1h1.5a.5.5 0 00.42-.22l.56-.85 1.1 1.83a.5.5 0 00.82.04l1.15-1.54.6.6c.1.09.22.14.35.14H11a.5.5 0 000-1H9.7l-.85-.85a.5.5 0 00-.75.05l-1.05 1.4-1.12-1.86z"></path></svg>`,
	4,
)

function DocumentHeartPulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-13C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25z"></path></svg>`,
	4,
)

function DocumentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v7.59c.32.1.59.33.77.6A2.5 2.5 0 019 13.5c0 .44-.2.84-.5 1.12.32.42.5.95.5 1.5v.38c0 .56-.19 1.08-.5 1.5h6c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm1 0V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM3.5 12a.5.5 0 00-.5.5v4a.5.5 0 01-1 0V16a.5.5 0 00-1 0v.5a1.5 1.5 0 003 0v-4a.5.5 0 00-.5-.5zM5 13.5a1.5 1.5 0 013 0 .5.5 0 01-1 0 .5.5 0 00-1 0v.38c0 .2.1.36.28.45l.9.45c.5.25.82.77.82 1.34v.38a1.5 1.5 0 01-3 0 .5.5 0 011 0 .5.5 0 001 0v-.38a.5.5 0 00-.28-.45l-.9-.45A1.5 1.5 0 015 13.88v-.38z"></path></svg>`,
	4,
)

function DocumentJavascriptIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 4A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h11a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 4h-11zM9 7a1 1 0 012 0v6a1 1 0 11-2 0V7zm5 1a1 1 0 011 1v4a1 1 0 11-2 0V9a1 1 0 011-1zm-9 3a1 1 0 112 0v2a1 1 0 11-2 0v-2z"></path></svg>`,
	4,
)

function DocumentLandscapeDataIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10h-4.5A1.5 1.5 0 0112 8.5V4H3.5C2.67 4 2 4.67 2 5.5v9c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5V10zm-.25-1H13.5a.5.5 0 01-.5-.5V4.25L17.75 9z"></path></svg>`,
	4,
)

function DocumentLandscapeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a1 1 0 011-1h.5a.5.5 0 000-1H4a2 2 0 00-2 2v.5a.5.5 0 001 0V6zm1 9a1 1 0 01-1-1v-.5a.5.5 0 00-1 0v.5c0 1.1.9 2 2 2h.5a.5.5 0 000-1H4zM2.5 8c.28 0 .5.22.5.5v3a.5.5 0 01-1 0v-3c0-.28.22-.5.5-.5zm4-4a.5.5 0 000 1h2a.5.5 0 000-1h-2zM6 15.5c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm6-7V4h-1.5a.5.5 0 00-.5.5v11c0 .28.22.5.5.5H16a2 2 0 002-2v-4h-4.5A1.5 1.5 0 0112 8.5zm1 0V4.06c.24.07.47.2.65.38l3.91 3.91c.18.18.31.4.38.65H13.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentLandscapeSplitHintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 8.5V4h-2v12h6a2 2 0 002-2v-4h-4.5A1.5 1.5 0 0112 8.5zM9 16H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2h5v12zm4-7.5V4.06c.24.07.47.2.65.38l3.91 3.91c.18.18.31.4.38.65H13.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentLandscapeSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5h-3.26a4.5 4.5 0 00-3.74-7H4V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM5 12.5a.5.5 0 00-.5-.5h-.2a3.5 3.5 0 00.2 7h.09a.5.5 0 00-.09-1h-.16a2.5 2.5 0 01.16-5h.09a.5.5 0 00.41-.5zm6 3A3.5 3.5 0 007.5 12h-.09a.5.5 0 00.09 1h.16a2.5 2.5 0 01-.16 5l-.1.01a.5.5 0 00.1 1V19h.2a3.5 3.5 0 003.3-3.5zM7.5 15H4.41a.5.5 0 00.09 1h3.09a.5.5 0 00-.09-1z"></path></svg>`,
	4,
)

function DocumentLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H10v-4a2 2 0 00-1.5-1.94V12A3 3 0 004 9.4V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM3.5 12v1H3a1 1 0 00-1 1v4a1 1 0 001 1h5a1 1 0 001-1v-4a1 1 0 00-1-1h-.5v-1a2 2 0 10-4 0zm1 1v-1a1 1 0 112 0v1h-2zm1 2.25a.75.75 0 110 1.5.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function DocumentLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2v-3.5a.5.5 0 011 0V18h6v-3.5a.5.5 0 011 0V18a2 2 0 002-2V4a2 2 0 00-2-2v3.5a.5.5 0 01-1 0V2H7v3.5a.5.5 0 01-1 0V2zm.5 11a.5.5 0 01-.5-.5v-5a.5.5 0 011 0v5a.5.5 0 01-.5.5zm7 0a.5.5 0 01-.5-.5v-5a.5.5 0 011 0v5a.5.5 0 01-.5.5z"></path></svg>`,
	4,
)

function DocumentMarginsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H8.39l-.04-.18C9.95 17.63 11 16.1 11 14.5a5.5 5.5 0 00-7-5.3V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 10-3.14 4.29l.19-.06.06-.03a.54.54 0 00-.43-.99l-.14.05-.2.06a3.43 3.43 0 112.58-3.32c0 .74-.45 1.26-.9 1.26-.34 0-.54-.36-.54-1.26v-1.87a.54.54 0 00-1-.2 1.8 1.8 0 00-.98-.27c-1.22 0-1.98 1.1-1.98 2.34 0 1.25.76 2.34 1.98 2.34.55 0 1-.22 1.34-.58.26.37.66.58 1.18.58 1.09 0 1.98-1.04 1.98-2.34zm-5.4 0c0-.72.38-1.26.9-1.26s.9.54.9 1.26-.38 1.26-.9 1.26-.9-.54-.9-1.26z"></path></svg>`,
	4,
)

function DocumentMentionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 6.5V2H5.5C4.67 2 4 2.67 4 3.5v11c0 .83.67 1.5 1.5 1.5h8c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 019 6.5zm1 0V2.25L14.75 7H10.5a.5.5 0 01-.5-.5zM17 9a1 1 0 00-1-1v6a3 3 0 01-3 3H6a1 1 0 001 1h6.06A3.94 3.94 0 0017 14.06V9z"></path></svg>`,
	4,
)

function DocumentMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.67a3 3 0 012 2.71l1.44-1.44a1.5 1.5 0 012.12 2.12L8.12 14a3 3 0 012.7 2h2.68c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 019 6.5zM5 12a2 2 0 11-4 0 2 2 0 014 0zm-1 0a1 1 0 10-2 0 1 1 0 002 0zm-1.15 5.85a.5.5 0 01-.7-.7l6-6a.5.5 0 01.7.7l-6 6zm10.21.15h-2.23a3 3 0 00.17-1h2a3 3 0 003-3V8a1 1 0 011 1v5.06A3.94 3.94 0 0113.06 18zM8 15a2 2 0 110 4 2 2 0 010-4zm-1 2a1 1 0 102 0 1 1 0 00-2 0zm3-10.5V2.25L14.75 7H10.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentMultiplePercentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2v4.5c0 .83.67 1.5 1.5 1.5H17v6.5c0 .83-.67 1.5-1.5 1.5h-4.7A5.5 5.5 0 006 9.02V3.5C6 2.67 6.67 2 7.5 2H11zM5 9.02V4a1 1 0 00-1 1v4.2c.32-.08.66-.15 1-.18zM10.4 17c-.18.36-.4.7-.66 1H14a1 1 0 001-1h-4.6zM12 2.25V6.5c0 .28.22.5.5.5h4.25L12 2.25zM1 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm2.4 2.8l4.9-4.9a3.5 3.5 0 01-4.9 4.9zm-.7-.7a3.5 3.5 0 014.9-4.9l-4.9 4.9z"></path></svg>`,
	4,
)

function DocumentMultipleProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.7a5.5 5.5 0 016.8 6.8h2.7c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 019 6.5zM13.06 18H9.74c.26-.3.48-.64.66-1H13a3 3 0 003-3V8a1 1 0 011 1v5.06A3.94 3.94 0 0113.06 18zM10 6.5V2.25L14.75 7H10.5a.5.5 0 01-.5-.5zm-9 8a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H6a.5.5 0 010-1h.47a1.99 1.99 0 00-2.38.34.5.5 0 01-.71-.71A3 3 0 017 12.15V12c0-.28.22-.5.5-.5zm-.88 5.53A3 3 0 014 16.85V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H5a.5.5 0 010 1h-.47a1.99 1.99 0 002.38-.34.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function DocumentMultipleSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9zm7.09 5H7.5a.5.5 0 01-.09-1h5.09a.5.5 0 01.09 1zm0 3.5H7.5a.5.5 0 01-.09-1h5.09a.5.5 0 01.09 1zm0 3.5H7.5a.5.5 0 01-.09-1h5.09a.5.5 0 01.09 1z"></path></svg>`,
	4,
)

function DocumentOnePageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 13.5l-.22 1.5H9.3l.22-1.5h1.24zM5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9zm2.57 14.44l.07-.44H7.5a.5.5 0 010-1h.78l.22-1.5H8a.5.5 0 010-1h.65l.16-1.07a.5.5 0 01.99.14l-.14.93h1.24l.16-1.07a.5.5 0 01.99.14l-.14.93h.59a.5.5 0 010 1h-.74l-.22 1.5H12a.5.5 0 010 1h-.6l-.09.59a.5.5 0 01-.99-.15l.07-.44H9.15l-.09.59a.5.5 0 01-.99-.15z"></path></svg>`,
	4,
)

function DocumentPageBottomCenterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.25 14.5l.22-1.5H8.7l-.22 1.5H7.25zM14.5 18c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9zm-4.57-6.44l-.07.44h.64a.5.5 0 010 1h-.78l-.22 1.5h.5a.5.5 0 010 1h-.65l-.16 1.07a.5.5 0 01-.99-.14l.14-.93H7.1l-.16 1.07a.5.5 0 01-.99-.14l.14-.93H5.5a.5.5 0 010-1h.74l.22-1.5H6a.5.5 0 010-1h.6l.09-.59a.5.5 0 01.99.15L7.6 12h1.24l.09-.59a.5.5 0 01.99.15z"></path></svg>`,
	4,
)

function DocumentPageBottomLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.25 14.5l.22-1.5h1.24l-.22 1.5h-1.24zM14.5 18c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9zm-.57-6.44l-.07.44h.64a.5.5 0 110 1h-.78l-.22 1.5h.5a.5.5 0 110 1h-.65l-.16 1.07a.5.5 0 01-.99-.14l.14-.93H11.1l-.16 1.07a.5.5 0 01-.99-.14l.14-.93H9.5a.5.5 0 010-1h.74l.22-1.5H10a.5.5 0 010-1h.6l.09-.59a.5.5 0 11.99.15l-.07.44h1.24l.09-.59a.5.5 0 11.99.15z"></path></svg>`,
	4,
)

function DocumentPageBottomRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 6V2.5a.5.5 0 00-.5-.5h-11a.5.5 0 00-.5.5V6c0 .83.67 1.5 1.49 1.5h9.01c.82 0 1.5-.67 1.5-1.5zM3 9.5a.5.5 0 000 1h1.2a.5.5 0 000-1H3zm3.2 0a.5.5 0 000 1h1.2a.5.5 0 000-1H6.2zm2.7.5c0-.28.22-.5.5-.5h1.2a.5.5 0 010 1H9.4a.5.5 0 01-.5-.5zm3.7-.5a.5.5 0 000 1h1.2a.5.5 0 000-1h-1.2zm2.7.5c0-.28.22-.5.5-.5H17a.5.5 0 010 1h-1.2a.5.5 0 01-.5-.5zm.7 7.5V14c0-.83-.68-1.5-1.5-1.5H5.49A1.5 1.5 0 004 14v3.5c0 .28.22.5.5.5h11a.5.5 0 00.5-.5z"></path></svg>`,
	4,
)

function DocumentPageBreakIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 9.5l-.22 1.5H9.3l.22-1.5h1.24zM5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9zm2.57 10.44l.07-.44H7.5a.5.5 0 110-1h.78l.22-1.5H8a.5.5 0 010-1h.65l.16-1.07a.5.5 0 01.99.14l-.14.93h1.24l.16-1.07a.5.5 0 01.99.14l-.14.93h.59a.5.5 0 010 1h-.74l-.22 1.5H12a.5.5 0 010 1h-.6l-.09.59a.5.5 0 11-.99-.15l.07-.44H9.15l-.09.59a.5.5 0 11-.99-.15z"></path></svg>`,
	4,
)

function DocumentPageNumberIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 5.5L10.53 7H9.3l.22-1.5h1.24zM5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9zm2.57 6.44L8.14 8H7.5a.5.5 0 110-1h.78l.22-1.5H8a.5.5 0 110-1h.65l.16-1.07a.5.5 0 01.99.14l-.14.93h1.24l.16-1.07a.5.5 0 01.99.14l-.14.93h.59a.5.5 0 010 1h-.74L11.54 7H12a.5.5 0 010 1h-.6l-.09.59a.5.5 0 01-.99-.15L10.4 8H9.15l-.09.59a.5.5 0 01-.99-.15z"></path></svg>`,
	4,
)

function DocumentPageTopCenterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.75 5.5L8.53 7H7.3l.22-1.5h1.24zM5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9zm.57 6.44L6.14 8H5.5a.5.5 0 010-1h.78l.22-1.5H6a.5.5 0 010-1h.65l.16-1.07a.5.5 0 01.99.14l-.14.93H8.9l.16-1.07a.5.5 0 01.99.14l-.14.93h.59a.5.5 0 010 1h-.74L9.54 7H10a.5.5 0 010 1h-.6l-.09.59a.5.5 0 11-.99-.15L8.4 8H7.15l-.09.59a.5.5 0 11-.99-.15z"></path></svg>`,
	4,
)

function DocumentPageTopLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.75 5.5L12.53 7H11.3l.22-1.5h1.24zM5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-9zm4.57 6.44l.07-.44H9.5a.5.5 0 110-1h.78l.22-1.5H10a.5.5 0 110-1h.65l.16-1.07a.5.5 0 01.99.14l-.14.93h1.24l.16-1.07a.5.5 0 01.99.14l-.14.93h.59a.5.5 0 010 1h-.74L13.54 7H14a.5.5 0 010 1h-.6l-.09.59a.5.5 0 01-.99-.15L12.4 8h-1.24l-.09.59a.5.5 0 01-.99-.15z"></path></svg>`,
	4,
)

function DocumentPageTopRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 11a.5.5 0 00-.5.5v2a.5.5 0 001 0v-.17h.33a1.17 1.17 0 000-2.33H6.5zm.83 1.33H7V12h.33a.17.17 0 010 .33zM12 11.5c0-.28.23-.5.5-.5h1a.5.5 0 110 1H13v.33h.5a.5.5 0 110 1H13v.17a.5.5 0 11-1 0v-2zM9.5 11a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h.5a1.5 1.5 0 000-3h-.5zm.5 2v-1a.5.5 0 010 1zm0-6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.58c-.58.2-1 .76-1 1.42v4c0 .65.42 1.2 1 1.41v.59c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-.59c.58-.2 1-.76 1-1.41v-4c0-.66-.42-1.21-1-1.42V8h-4.5A1.5 1.5 0 0110 6.5zM4.5 10h11c.28 0 .5.22.5.5v4a.5.5 0 01-.5.5h-11a.5.5 0 01-.5-.5v-4c0-.28.23-.5.5-.5zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentPdfIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.67a3 3 0 012 2.71l1.44-1.44a1.5 1.5 0 012.12 2.12L8.12 14a3 3 0 012.7 4h3.68c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zM5 12a2 2 0 11-4 0 2 2 0 014 0zm-1 0a1 1 0 10-2 0 1 1 0 002 0zm-1.15 5.85a.5.5 0 01-.7-.7l6-6a.5.5 0 01.7.7l-6 6zM6 17a2 2 0 002 2 2 2 0 10-2-2zm2 1a1 1 0 110-2 1 1 0 010 2zm3-11.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentPercentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H8.63c.25-.47.37-.99.37-1.5 0-1.3-1-2.38-2.27-2.49A3 3 0 004 9.04V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM6.5 12a2 2 0 11-4 0 2 2 0 014 0zM8 16.5C8 17.75 7 19 4.5 19S1 17.75 1 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function DocumentPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v.91a3.6 3.6 0 00-2.06 1.03l-4 4A3.62 3.62 0 009.2 18H5.5A1.5 1.5 0 014 16.5v-13C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zm7.35 8.4a2.62 2.62 0 00-3.7 0l-4 4a2.62 2.62 0 003.7 3.7l4-4a2.62 2.62 0 000-3.7zm-3 .7a1.62 1.62 0 112.3 2.3L16 15.29 13.7 13l1.65-1.65zm-1.5 4.3c.2.2.2.5 0 .7l-1 1a.5.5 0 01-.7-.7l1-1c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function DocumentPillIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zm-8.68 9.07a4.5 4.5 0 106.36 6.36 4.5 4.5 0 00-6.36-6.36zm5.65 5.65a3.5 3.5 0 01-4.57.33l4.9-4.9a3.5 3.5 0 01-.33 4.57zM7.6 11.7l-4.9 4.9a3.5 3.5 0 014.9-4.9z"></path></svg>`,
	4,
)

function DocumentProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM10 14.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-4.5 1.88a.62.62 0 110 1.25.62.62 0 010-1.25zm0-4.88c1.03 0 1.85.85 1.85 1.95 0 .59-.21.91-.72 1.32l-.28.22c-.25.19-.33.3-.35.44v.16a.5.5 0 01-1-.09c0-.57.21-.88.72-1.29l.27-.21c.3-.23.36-.35.36-.55 0-.55-.38-.95-.85-.95-.5 0-.86.37-.85.95a.5.5 0 11-1 0c-.01-1.13.8-1.95 1.85-1.95z"></path></svg>`,
	4,
)

function DocumentQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v11c0 .83.67 1.5 1.5 1.5h3.7A5.5 5.5 0 0116 9.2V8h-4.5A1.5 1.5 0 0110 6.5zm-4-1c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zM6.5 7h2a.5.5 0 010 1h-2a.5.5 0 010-1zM6 9.5c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zM5.5 17h4.1c.18.36.4.7.66 1H5.5A3.5 3.5 0 012 14.5v-1a.5.5 0 011 0v1A2.5 2.5 0 005.5 17zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zm8 8a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function DocumentQueueAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v6.5c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 14.5v-11C4 2.67 4.67 2 5.5 2H10zM6.5 5a.5.5 0 000 1h2a.5.5 0 000-1h-2zM6 7.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5zM6.5 9a.5.5 0 000 1h2a.5.5 0 000-1h-2zM11 2.25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM2.5 13c.28 0 .5.22.5.5v1A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-1a.5.5 0 011 0v1a3.5 3.5 0 01-3.5 3.5h-9A3.5 3.5 0 012 14.5v-1c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function DocumentQueueIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.38 3.75l1.11 1.12L16 7.37v-.66c0-.46-.18-.9-.5-1.23l-2.4-2.44A3.5 3.5 0 0010.6 2H5.75C4.83 2 4.07 2.72 4 3.62 4.48 3.23 5.1 3 5.75 3h4.85c.67 0 1.31.27 1.78.75zM2.5 13c.28 0 .5.22.5.5v1A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-1a.5.5 0 011 0v1a3.5 3.5 0 01-3.5 3.5h-9A3.5 3.5 0 012 14.5v-1c0-.28.22-.5.5-.5zM10 4v4.5c0 .83.67 1.5 1.5 1.5H16v4.5c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 14.5v-9C4 4.67 4.67 4 5.5 4H10zM6 7.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5zM6.5 9a.5.5 0 000 1h2a.5.5 0 000-1h-2zM6 11.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5zm5-7.25V8.5c0 .28.22.5.5.5h4.25L11 4.25z"></path></svg>`,
	4,
)

function DocumentQueueMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ky = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H8v-2.35a4 4 0 00-4-6.52V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM8 13a3 3 0 11-6 0 3 3 0 016 0zm-1 3.46a3.98 3.98 0 01-4 0v2.29c0 .2.21.31.38.21L5 18l1.62.96c.17.1.38-.02.38-.21v-2.29z"></path></svg>`,
	4,
)

function DocumentRibbonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ky.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H11v-5.59a2 2 0 00-.59-1.41L9 9.59A2 2 0 007.59 9H4V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM2 10h1v2.5c0 .28.22.5.5.5h4a.5.5 0 00.5-.5v-2.41c.1.05.2.12.3.2l1.4 1.42a1 1 0 01.3.7V18a1 1 0 01-1 1v-4.5a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5V19a1 1 0 01-1-1v-7a1 1 0 011-1zm6 5v4H3v-4h5zm-4-5h3v2H4v-2z"></path></svg>`,
	4,
)

function DocumentSaveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2h5v4.5c0 .83.67 1.5 1.5 1.5H16v9a1 1 0 01-1 1h-1.09a1.5 1.5 0 00-.35-.56l-3.13-3.13A4.98 4.98 0 006 7c-.71 0-1.39.15-2 .42V3a1 1 0 011-1zm6 0l5 5h-4.5a.5.5 0 01-.5-.5V2zm-1 10c0 .92-.31 1.78-.84 2.45l3.7 3.7a.5.5 0 11-.72.7l-3.69-3.69A4 4 0 1110 12zm-4 3a3 3 0 100-6 3 3 0 000 6z"></path></svg>`,
	4,
)

function DocumentSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H8.66A5.5 5.5 0 004 8.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zm-7.94 8.2a2 2 0 01-1.43 2.47l-.46.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 013 16.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 018 10.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zM5.5 14.5a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function DocumentSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ku = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v1.5a.5.5 0 01-.5.5h-11a.5.5 0 01-.5-.5v-6C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM5 12a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zm11 0a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zM5 15.5a.5.5 0 00-1 0v.5c0 1.1.9 2 2 2h.5a.5.5 0 000-1H6a1 1 0 01-1-1v-.5zm11 0a.5.5 0 00-1 0v.5a1 1 0 01-1 1h-.5a.5.5 0 000 1h.5a2 2 0 002-2v-.5zM9 17a.5.5 0 000 1h2a.5.5 0 000-1H9z"></path></svg>`,
	4,
)

function DocumentSplitHintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ku.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4.7v4.8c0 .28.22.5.5.5h4.8l5.7 5.7v.3a1 1 0 01-1 1h-.5a.5.5 0 000 1h.5a2 2 0 001.9-1.39l1.25 1.24a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7L4 4.71zm11 8.18l.6.6A.5.5 0 0016 13v-1a.5.5 0 00-1 0v.88zM4.5 2.38L12.12 10h3.38a.5.5 0 00.5-.5V8h-4.5A1.5 1.5 0 0110 6.5V2H5.5c-.38 0-.73.14-1 .38zm6.5-.13V6.5c0 .28.22.5.5.5h4.25L11 2.25zM5 12a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zm0 3.5a.5.5 0 00-1 0v.5c0 1.1.9 2 2 2h.5a.5.5 0 000-1H6a1 1 0 01-1-1v-.5zm6 1.5H9a.5.5 0 000 1h2a.5.5 0 000-1z"></path></svg>`,
	4,
)

function DocumentSplitHintOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ks = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.74A5.5 5.5 0 004 9.2V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM1 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H6a.5.5 0 010-1h.47a1.99 1.99 0 00-2.38.34.5.5 0 01-.71-.71A3 3 0 017 12.15V12c0-.28.22-.5.5-.5zm-.88 5.53A3 3 0 014 16.85V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H5a.5.5 0 010 1h-.47a1.99 1.99 0 002.38-.34.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function DocumentSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ks.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 10.26A5.52 5.52 0 0110.4 12H13v-1.5a.5.5 0 00-.5-.5H9v.26zM13 13h-2.2a5.5 5.5 0 01.18 2h1.52a.5.5 0 00.5-.5V13zM5.5 9c.46 0 .9.06 1.32.16.2-.1.44-.16.68-.16h5c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5h-1.7a5.49 5.49 0 01-1.06 2h4.76c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.7c.48-.13.98-.2 1.5-.2zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zm-1 8a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35A.5.5 0 008 14.5a.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L6.29 14H3.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function DocumentTableArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 10.26A5.52 5.52 0 0110.4 12H13v-1.5a.5.5 0 00-.5-.5H9v.26zM13 13h-2.2a5.5 5.5 0 01.18 2h1.52a.5.5 0 00.5-.5V13zM5.5 9c.46 0 .9.06 1.32.16.2-.1.44-.16.68-.16h5c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5h-1.7a5.49 5.49 0 01-1.06 2h4.76c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.7c.48-.13.98-.2 1.5-.2zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zm-1 8a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L4.5 15.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function DocumentTableCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.86 12A2 2 0 009 11v-1h3.5c.28 0 .5.22.5.5V12H9.86zM13 13v1.5a.5.5 0 01-.5.5H10v-2h3zM6.27 9.64l-.38-.2a2 2 0 00-1.78 0L4 9.5v-6C4 2.67 4.67 2 5.5 2H10v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H9.32a2 2 0 00.68-1.5V16h2.5c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-5c-.5 0-.96.25-1.23.64zM11 2.25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM1.03 16.51v-3.77a1 1 0 01.56-.9l3-1.5a1 1 0 01.89 0l3 1.5a1 1 0 01.55.9v3.77a1 1 0 01-.55.9l-3 1.5a1 1 0 01-.9 0l-3-1.5a1 1 0 01-.55-.9zm1.04-3.58a.5.5 0 00.27.66l2.2.92v2.62a.5.5 0 101 0V14.5l2.19-.92a.5.5 0 10-.4-.93l-2.3.98-2.3-.98a.5.5 0 00-.66.27z"></path></svg>`,
	4,
)

function DocumentTableCubeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ko = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 15v-2h4v1.5a.5.5 0 01-.5.5H9zm4-4.5V12H9v-2h3.5c.28 0 .5.22.5.5zM7 13h1v2h-.5a.5.5 0 01-.5-.5V13zm1-1v-2h-.5a.5.5 0 00-.5.5V12h1zm2-5.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm-4 4C6 9.67 6.67 9 7.5 9h5c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 016 14.5v-4zm5-4V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentTableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ko.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 15h3.5a.5.5 0 00.5-.5V13H9v2zm.12 1l1.44 1.44c.16.16.28.36.35.56h3.59c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.53a4.55 4.55 0 012.44.4A1.5 1.5 0 017.5 9h5c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5H9.12zM13 12v-1.5a.5.5 0 00-.5-.5H9v2h4zm-2-9.75V6.5c0 .28.22.5.5.5h4.25L11 2.25zM7.3 15.6a3.5 3.5 0 10-.7.7l2.55 2.55a.5.5 0 10.7-.7L7.3 15.6zM7 13.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path></svg>`,
	4,
)

function DocumentTableSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$km = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.87 11.43l.13.05V10h-.5a.5.5 0 00-.48.35c.39.26.7.64.85 1.08zM13 13H9.32l.47.93a2 2 0 01.21.9V15h2.5a.5.5 0 00.5-.5V13zm-7.17-3l.25.01A1.5 1.5 0 017.5 9h5c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5H10v1a2 2 0 01-.27 1h4.77c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5V2H5.5C4.67 2 4 2.67 4 3.5V10h1.83zm7.17.5V12H9v-2h3.5c.28 0 .5.22.5.5zm-2-4V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM2.17 11C1.52 11 1 11.52 1 12.17v4.66c0 .48.28.88.69 1.07a1.33 1.33 0 002.6.1h.75a1.33 1.33 0 002.58 0H8a1 1 0 001-1v-2.18a1 1 0 00-.1-.44l-.75-1.5a1 1 0 00-.9-.55H7v-.16C7 11.52 6.48 11 5.83 11H2.17zM7 14.33V13h.25c.13 0 .25.07.3.18l.58 1.15H7zm-4.67 3.34a.67.67 0 111.34 0 .67.67 0 01-1.34 0zm4 .66a.67.67 0 110-1.33.67.67 0 010 1.33z"></path></svg>`,
	4,
)

function DocumentTableTruckIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$km.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.7a5.5 5.5 0 014.66.8h4.84a.5.5 0 010 1H9.74c.26.3.48.64.66 1h3.1a.5.5 0 010 1h-2.7c.08.32.15.66.18 1h2.52a.5.5 0 010 1h-2.52a5.48 5.48 0 01-1.24 3h4.76c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm1 0V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM5.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zM5 12.5a.5.5 0 011 0V14h1a.5.5 0 010 1H5.5a.5.5 0 01-.5-.5v-2z"></path></svg>`,
	4,
)

function DocumentTextClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5V11h5.5a1.5 1.5 0 010 3H4v2.5c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm-4 3c0-.28.22-.5.5-.5h7a.5.5 0 010 1h-7a.5.5 0 01-.5-.5zm0 6c0-.28.22-.5.5-.5h7a.5.5 0 010 1h-7a.5.5 0 01-.5-.5zm5-9V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM2.5 12a.5.5 0 000 1h7a.5.5 0 000-1h-7z"></path></svg>`,
	4,
)

function DocumentTextExtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zM6.5 10h7a.5.5 0 010 1h-7a.5.5 0 010-1zm0 2h7a.5.5 0 010 1h-7a.5.5 0 010-1zm0 2h7a.5.5 0 010 1h-7a.5.5 0 010-1zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ki = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5V13h2.5a.5.5 0 010-1h7a.5.5 0 010 1h-6c.95 0 1.82.38 2.45 1h3.55a.5.5 0 010 1h-2.84a3.49 3.49 0 010 3h3.84c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zM6.5 10h7a.5.5 0 010 1h-7a.5.5 0 010-1zM11 6.5V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM3.5 14a2.5 2.5 0 000 5H4a.5.5 0 000-1h-.5a1.5 1.5 0 010-3H4a.5.5 0 000-1h-.5zM7 14a.5.5 0 000 1h.5a1.5 1.5 0 010 3H7a.5.5 0 000 1h.5a2.5 2.5 0 000-5H7zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DocumentTextLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ki.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5V2H5.5C4.67 2 4 2.67 4 3.5v5.55c.16-.03.33-.05.5-.05h2c.82 0 1.54.4 2 1h5a.5.5 0 010 1H8.95v.04a2.5 2.5 0 011.55.96h3a.5.5 0 010 1h-2.55c.03.16.05.33.05.5v.5h2.5a.5.5 0 010 1H11v2.5c0 .17-.02.34-.05.5h3.55c.83 0 1.5-.67 1.5-1.5V8h-4.5A1.5 1.5 0 0110 6.5zm1 0V2.25L15.75 7H11.5a.5.5 0 01-.5-.5zM3 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15H8v-.5a.5.5 0 00-1 0v.5H4v-.5a.5.5 0 00-1 0v.5H1v-1.5c0-.83.67-1.5 1.5-1.5H3zm4-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5v.5h3v-.5zM8 16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 011 17.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function DocumentTextToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2v4.5c0 .83.67 1.5 1.5 1.5H16v8.5c0 .83-.67 1.5-1.5 1.5H13v-5a2 2 0 00-2-2h-1v-1a2 2 0 00-2-2H5a2 2 0 00-1 .27V3.5C4 2.67 4.67 2 5.5 2H10zm1 .25V6.5c0 .28.22.5.5.5h4.25L11 2.25zM4 12v-1.5C4 9.67 4.67 9 5.5 9h2c.83 0 1.5.67 1.5 1.5V12h1.5c.83 0 1.5.67 1.5 1.5V15H9v-.5a.5.5 0 00-1 0v.5H5v-.5a.5.5 0 00-1 0v.5H1v-1.5c0-.83.67-1.5 1.5-1.5H4zm1-1.5V12h3v-1.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zM9 16h3v1.5c0 .83-.67 1.5-1.5 1.5h-8A1.5 1.5 0 011 17.5V16h3v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function DocumentToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2h8a2 2 0 012 2v2.34A1.5 1.5 0 0015.02 8h-.52a1.5 1.5 0 000 3h.52a1.5 1.5 0 00.98 1.66V16a2 2 0 01-2 2H6a2 2 0 01-2-2v-3.34A1.5 1.5 0 004.98 11h.52a1.5 1.5 0 000-3h-.52A1.5 1.5 0 004 6.34V4c0-1.1.9-2 2-2zM3.88 7.42a.5.5 0 01-.05.7l-1 .88H5.5a.5.5 0 110 1H2.83l1 .87a.5.5 0 01-.66.76l-2-1.75a.5.5 0 010-.76l2-1.75a.5.5 0 01.7.05zM17.17 10l-1 .87a.5.5 0 00.66.76l2-1.75a.5.5 0 000-.76l-2-1.75a.5.5 0 00-.66.76l1 .87H14.5a.5.5 0 000 1h2.67z"></path></svg>`,
	4,
)

function DocumentWidthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ke = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2.5c-.83 0-1.5.67-1.5 1.5v12c0 .83.67 1.5 1.5 1.5h3.89a5.5 5.5 0 015.61-8.4V4c0-.83-.67-1.5-1.5-1.5H6zM8 10a1 1 0 11-2 0 1 1 0 012 0zm11 4.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function DoorArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ke.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2.5c-.83 0-1.5.67-1.5 1.5v12c0 .83.67 1.5 1.5 1.5h3.89a5.5 5.5 0 015.61-8.4V4c0-.83-.67-1.5-1.5-1.5H6zM8 10a1 1 0 11-2 0 1 1 0 012 0zm6.5 9a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm.35-2.15a.5.5 0 01-.7-.7L15.29 15H12.5a.5.5 0 010-1h2.8l-1.15-1.15a.5.5 0 01.7-.7l2 2a.5.5 0 01.15.35.5.5 0 01-.14.35l-2 2z"></path></svg>`,
	4,
)

function DoorArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 4c0-.83.67-1.5 1.5-1.5h8.15A1.5 1.5 0 0115.5 4v12c0 .83-.67 1.5-1.5 1.5H6A1.5 1.5 0 014.5 16V4zM7 11a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function DoorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$kb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.3 6.3A1 1 0 1110 8H7a2 2 0 00-2 2v6c0 1.1.9 2 2 2h6a2 2 0 002-2V7.05a4.98 4.98 0 00-8.54-3.59A2 2 0 109.3 6.3zM8 14h4a.5.5 0 010 1H8a.5.5 0 010-1z"></path></svg>`,
	4,
)

function DoorTagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$kb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ka = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.28 17.78c-.3.3-.77.3-1.06 0l-2.5-2.5a.75.75 0 111.06-1.06L5 15.44V5.75a.75.75 0 011.5 0v9.69l1.22-1.22a.75.75 0 011.06 1.06l-2.5 2.5zM2 5.75c0 1.44.81 2.69 2 3.32v-1.9a2.25 2.25 0 113.5 0v1.9A3.75 3.75 0 102 5.75zm10.5 3.32a3.75 3.75 0 113.5 0v-1.9a2.25 2.25 0 10-3.5 0v1.9zm2.28 8.71c-.3.3-.77.3-1.06 0l-2.5-2.5a.75.75 0 111.06-1.06l1.22 1.22V5.75a.75.75 0 011.5 0v9.69l1.22-1.22a.75.75 0 111.06 1.06l-2.5 2.5z"></path></svg>`,
	4,
)

function DoubleSwipeDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ka.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.28 2.22a.75.75 0 00-1.06 0l-2.5 2.5a.75.75 0 001.06 1.06L5 4.56v9.69a.75.75 0 001.5 0V4.56l1.22 1.22a.75.75 0 001.06-1.06l-2.5-2.5zM2 14.25c0-1.44.81-2.69 2-3.32v1.9a2.25 2.25 0 103.5 0v-1.9A3.75 3.75 0 112 14.25zm10.5-3.32a3.75 3.75 0 103.5 0v1.9a2.25 2.25 0 11-3.5 0v-1.9zm2.28-8.71a.75.75 0 00-1.06 0l-2.5 2.5a.75.75 0 001.06 1.06l1.22-1.22v9.69a.75.75 0 001.5 0V4.56l1.22 1.22a.75.75 0 101.06-1.06l-2.5-2.5z"></path></svg>`,
	4,
)

function DoubleSwipeUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.53 17.78c-.3.3-.77.3-1.06 0l-2.5-2.5a.75.75 0 011.06-1.06l1.22 1.22V7.75a.75.75 0 111.5 0v7.69l1.22-1.22a.75.75 0 111.06 1.06l-2.5 2.5zM4.25 7.5a5.75 5.75 0 004 5.48v-1.6a4.25 4.25 0 113.5 0v1.6a5.75 5.75 0 10-7.5-5.48zm2.5 0c0 1.15.6 2.16 1.5 2.74V7.75v-.13-.12a1.75 1.75 0 113.5.12v2.62a3.25 3.25 0 10-5-2.74z"></path></svg>`,
	4,
)

function DoubleTapSwipeDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.53 2.22a.75.75 0 00-1.06 0l-2.5 2.5a.75.75 0 001.06 1.06l1.22-1.22v7.69a.75.75 0 001.5 0V4.56l1.22 1.22a.75.75 0 101.06-1.06l-2.5-2.5zM4.25 12.5a5.75 5.75 0 014-5.48v1.6a4.25 4.25 0 103.5 0v-1.6a5.75 5.75 0 11-7.5 5.48zm2.5 0c0-1.15.6-2.16 1.5-2.74v2.74a1.75 1.75 0 103.5 0V9.76a3.25 3.25 0 11-5 2.74z"></path></svg>`,
	4,
)

function DoubleTapSwipeUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.61 8.32l-3.93-3.94-8.04 8.04-.12.13a2 2 0 00-.4.76l-1.1 4.06-.02.08a.5.5 0 00.63.53l4.06-1.1.16-.06a2 2 0 00.73-.46l8.03-8.04zm1.57-5.5a2.78 2.78 0 00-3.93 0l-.87.86 3.94 3.93.86-.86.13-.14c.96-1.09.91-2.75-.13-3.8zM11.65 3H2.5a.5.5 0 000 1h8.15l1-1zm-3 3H2.5a.5.5 0 000 1h5.15l1-1zm-3 3l-1 1H2.5a.5.5 0 110-1h3.15z"></path></svg>`,
	4,
)

function DraftsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.2 0 .39.08.53.22l1.5 1.5a.75.75 0 01-1.06 1.06l-.22-.22v1.69a.75.75 0 01-1.5 0V4.56l-.22.22a.75.75 0 01-1.06-1.06l1.5-1.5A.75.75 0 0110 2zm2 8a2 2 0 11-4 0 2 2 0 014 0zm-9.78-.53a.75.75 0 000 1.06l1.5 1.5a.75.75 0 001.06-1.06l-.22-.22h1.69a.75.75 0 000-1.5H4.56l.22-.22a.75.75 0 00-1.06-1.06l-1.5 1.5zM10 18c.2 0 .39-.08.53-.22l1.5-1.5a.75.75 0 10-1.06-1.06l-.22.22v-1.69a.75.75 0 00-1.5 0v1.69l-.22-.22a.75.75 0 00-1.06 1.06l1.5 1.5c.14.14.33.22.53.22zm7.78-8.53a.75.75 0 010 1.06l-1.5 1.5a.75.75 0 11-1.06-1.06l.22-.22h-1.69a.75.75 0 010-1.5h1.69l-.22-.22a.75.75 0 011.06-1.06l1.5 1.5z"></path></svg>`,
	4,
)

function DragIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H13v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H14V3.5zM6 4h2.2c-.08.32-.15.66-.18 1H6a2 2 0 00-2 2h4.2c.1.35.24.68.4 1H4v3h3.5c.28 0 .5.22.5.5a2 2 0 104 0c0-.28.22-.5.5-.5H16v-.6c.36-.18.7-.4 1-.66V15a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3z"></path></svg>`,
	4,
)

function DrawerAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 5.5a4.5 4.5 0 014-4.47v3.76l-.65-.64a.5.5 0 00-.7.7l1.5 1.5c.2.2.5.2.7 0l1.5-1.5a.5.5 0 00-.7-.7l-.65.64V1.03A4.5 4.5 0 119 5.5zm2 2c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5zM6 4h2.2c-.08.32-.15.66-.18 1H6a2 2 0 00-2 2h4.2c.1.35.24.68.4 1H4v3h3.5c.28 0 .5.22.5.5a2 2 0 104 0c0-.28.22-.5.5-.5H16v-.6c.36-.18.7-.4 1-.66V15a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3z"></path></svg>`,
	4,
)

function DrawerArrowDownloadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 10a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm1.85-6.35c.2.2.2.5 0 .7L14.21 5.5l1.14 1.15a.5.5 0 01-.7.7L13.5 6.21l-1.15 1.14a.5.5 0 01-.7-.7l1.14-1.15-1.14-1.15a.5.5 0 01.7-.7l1.15 1.14 1.15-1.14c.2-.2.5-.2.7 0zM8.21 4H6a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V9.74c-.3.26-.64.48-1 .66v.6h-3.5a.5.5 0 00-.5.5 2 2 0 11-4 0 .5.5 0 00-.5-.5H4V8h4.6c-.16-.32-.3-.65-.4-1H4c0-1.1.9-2 2-2h2.02c.03-.34.1-.68.19-1z"></path></svg>`,
	4,
)

function DrawerDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.2 4H6a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V9.74c-.3.26-.64.48-1 .66v.6h-3.5a.5.5 0 00-.5.5 2 2 0 11-4 0 .5.5 0 00-.5-.5H4V8h4.6c-.16-.32-.3-.65-.4-1H4c0-1.1.9-2 2-2h2.02c.03-.34.1-.68.19-1zm5.3 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.76-6.59l2.97 1.65a.5.5 0 010 .88l-2.97 1.65a.5.5 0 01-.74-.44v-3.3a.5.5 0 01.74-.44z"></path></svg>`,
	4,
)

function DrawerPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2 0a.5.5 0 00-.5-.5h-4a.5.5 0 000 1h4a.5.5 0 00.5-.5zM6 4h2.2c-.08.32-.15.66-.18 1H6a2 2 0 00-2 2h4.2c.1.35.24.68.4 1H4v3h3.5c.28 0 .5.22.5.5a2 2 0 104 0c0-.28.22-.5.5-.5H16v-.6c.36-.18.7-.4 1-.66V15a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3z"></path></svg>`,
	4,
)

function DrawerSubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v9.08c0 .45.55.68.87.36L5.2 14.1l3.74-3.68a1.5 1.5 0 012.1 0l1.74 1.72 2.31-2.3c.53-.54 1.21-.82 1.9-.85V6a3 3 0 00-3-3H6zm8 4.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-1 0a.5.5 0 11-1 0 .5.5 0 011 0zm-2.73 7.17l1.82-1.81-1.74-1.71a.5.5 0 00-.7 0L5.43 15.3c-.23.23-.01.58.3.47l.32-.11c.7-.26 1.76-.55 2.75-.16.28.12.5.28.68.48.15-.5.42-.95.8-1.32zm.71.7l4.83-4.82a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.22.3c-1.12.33-2.8.23-3.31-.18a1.05 1.05 0 01-.32-1.24c.04-.08-.02-.18-.1-.17-.5.07-.9.25-1.3.43-.6.25-1.16.5-1.98.4a1.7 1.7 0 01-1.33-.82c-.12-.2.15-.4.36-.28.37.18.83.33 1.22.24.25-.05.57-.19.94-.34.88-.37 2-.85 2.86-.5.64.26.59.98.4 1.33-.03.07 0 .16.07.18.27.06.65.1 1.11.09 0-.05.02-.1.03-.14l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function DrawImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3c-.69.03-1.37.31-1.9.84l-4.83 4.83a3.2 3.2 0 00-.8 1.31c-.16-.19-.39-.35-.67-.47-.99-.4-2.05-.1-2.75.16a12 12 0 00-.41.15c-.38.19-.72.31-1.01.4A1.2 1.2 0 013.47 16c-.3-.26-.47-.64-.47-1.05v-.93V6zm7.98 9.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.22.3c-1.12.33-2.8.23-3.31-.18a1.05 1.05 0 01-.32-1.24c.04-.08-.02-.18-.1-.17-.5.07-.9.25-1.3.43-.6.25-1.16.5-1.98.4a1.7 1.7 0 01-1.33-.82c-.12-.2.15-.4.36-.28.37.18.83.33 1.22.24.25-.05.57-.19.94-.34.88-.37 2-.85 2.86-.5.64.26.59.98.4 1.33-.03.07 0 .16.07.18.27.06.65.1 1.11.09 0-.05.02-.1.03-.14l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function DrawShapeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.14 10.5H6.86L8.5 5.82l1.64 4.68zm.53 1.5l.33.94 1.18-1.17-2.88-8.2a.85.85 0 00-1.6 0L4.04 14a.75.75 0 001.42.5l.87-2.5h4.34zm5.14-2.45l-4.83 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.92.92 0 00-.03.14 4.6 4.6 0 01-1.1-.1c-.08 0-.1-.1-.07-.17.18-.35.23-1.07-.4-1.33-.87-.35-1.99.13-2.87.5-.37.15-.7.29-.94.34-.4.09-.85-.06-1.22-.24-.21-.11-.48.08-.36.28.22.37.61.74 1.33.83.82.1 1.39-.16 1.97-.41.4-.18.8-.36 1.3-.43.09-.01.15.09.11.17-.15.35-.13.9.32 1.24.52.4 2.19.51 3.31.19l1.22-.31c.39-.1.74-.3 1.02-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function DrawTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2A2.5 2.5 0 004 4.5v11.75c0 .97.78 1.75 1.75 1.75h7.5c.97 0 1.75-.78 1.75-1.75V15h.5a2.5 2.5 0 002.5-2.5v-5A2.5 2.5 0 0015.5 5H15v-.5A2.5 2.5 0 0012.5 2h-6zM15 6h.5c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5H15V6zM5 4.5C5 3.67 5.67 3 6.5 3h6c.83 0 1.5.67 1.5 1.5V5H5v-.5zM12.5 8v6a.5.5 0 01-1 0V8a.5.5 0 011 0zm-3-.5c.28 0 .5.22.5.5v6a.5.5 0 01-1 0V8c0-.28.22-.5.5-.5zm-2 .5v6a.5.5 0 01-1 0V8a.5.5 0 011 0z"></path></svg>`,
	4,
)

function DrinkBeerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 3.5c0 .64.4 1.18.96 1.4-.12.5-.47.88-1 1.43l-.33.34a4.3 4.3 0 00-1.62 3.61L5 10.5v5a2.5 2.5 0 003.75 2.17 2.49 2.49 0 002.5 0A2.5 2.5 0 0015 15.5v-5l-.01-.22a4.07 4.07 0 00-.67-2.56c-.4-.6-.86-1.04-1.24-1.42l-.01-.01c-.55-.54-.9-.9-1.02-1.4A1.5 1.5 0 0011.5 2h-3C7.67 2 7 2.67 7 3.5zm-1 12V15h8v.5a1.5 1.5 0 01-2.44 1.17.5.5 0 00-.62 0 1.5 1.5 0 01-1.88 0 .5.5 0 00-.62 0A1.5 1.5 0 016 15.5zM8.96 5h2.09c.16.86.74 1.43 1.27 1.96l.05.04H7.7l.02-.01C8.24 6.45 8.8 5.87 8.96 5zm2.54-1h-3a.5.5 0 010-1h3a.5.5 0 010 1z"></path></svg>`,
	4,
)

function DrinkBottleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 15.7l2.15 2.15a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7L6.28 7a4.24 4.24 0 00-1.27 3.29L5 10.5v5a2.5 2.5 0 003.75 2.17 2.49 2.49 0 002.5 0 2.49 2.49 0 003.74-1.97zM6 15h8v.5a1.5 1.5 0 01-2.44 1.17.5.5 0 00-.62 0 1.5 1.5 0 01-1.88 0 .5.5 0 00-.62 0A1.5 1.5 0 016 15.5V15zm9-4.5v2.38L9.12 7h3.25l-.05-.04c-.53-.53-1.1-1.1-1.27-1.96h-2.1c-.08.5-.3.9-.58 1.25l-.71-.71c.14-.2.24-.41.3-.64A1.5 1.5 0 018.5 2h3a1.5 1.5 0 01.55 2.9c.12.48.47.85 1.02 1.39l.01.01c.38.38.84.83 1.24 1.42l.02.05a4.14 4.14 0 01.65 2.51l.01.22zM8.5 4h3a.5.5 0 000-1h-3a.5.5 0 000 1z"></path></svg>`,
	4,
)

function DrinkBottleOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.17 3.97C2.52 3.97 2 4.49 2 5.14V10a6 6 0 0011.92 1H15a3 3 0 100-6h-1a1.17 1.17 0 00-1.17-1.03H3.17zM14 6h1a2 2 0 110 4h-1V6z"></path></svg>`,
	4,
)

function DrinkCoffeeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.1 2.99a.5.5 0 00-.2-.98l-4.5 1a.5.5 0 00-.38.37l-.29 1.12H4.5A.5.5 0 004 5v3.5A2.5 2.5 0 006.5 11H7v.5a3 3 0 002.5 2.96V17h-2a.5.5 0 000 1h5a.5.5 0 100-1h-2v-2.5-.04A3 3 0 0013 11.5V11h.5A2.5 2.5 0 0016 8.5V5a.5.5 0 00-.5-.5h-3.73l.14-.58 4.2-.93zM10.49 5.5L10.11 7H5V5.5h5.48zM15 7h-3.86l.38-1.5H15V7z"></path></svg>`,
	4,
)

function DrinkMargaritaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.85 2.15c.2.2.2.5 0 .7L12.71 4h1.62c.32 0 .6.2.7.5l.92 2.5c.18.48-.18 1-.7 1h-.34l-1.43 8.34A2 2 0 0111.51 18H8.5a2 2 0 01-1.97-1.66L5.09 8h-.34a.75.75 0 01-.7-1.01l.92-2.5c.11-.3.39-.49.7-.49h5.65a.5.5 0 01.08-.1l1.75-1.75c.2-.2.5-.2.7 0zM5.11 7h9.78l-.73-2H5.85L5.1 7z"></path></svg>`,
	4,
)

function DrinkToGoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2a.5.5 0 00-.5.5V8a5 5 0 004.5 5v4h-2a.5.5 0 000 1h5a.5.5 0 000-1h-2v-4-.02A5 5 0 0015 8V2.5a.5.5 0 00-.5-.5h-9zM6 5.5V3h8v2.5H6zm7.45 2.58a3.5 3.5 0 01-2.87 2.87.5.5 0 11-.16-.99 2.5 2.5 0 002.05-2.05.5.5 0 01.98.17z"></path></svg>`,
	4,
)

function DrinkWineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 2a2 2 0 00-2 2v1h-1.59A1.5 1.5 0 008.6 5H7V4a2 2 0 10-4 0v3a2 2 0 104 0V6h1.59c.15.43.48.76.91.91v6.18a1.5 1.5 0 00-.91.91H7v-1a2 2 0 10-4 0v3a2 2 0 104 0v-1h1.59a1.5 1.5 0 002.82 0H13v1a2 2 0 104 0v-3a2 2 0 10-4 0v1h-1.59a1.5 1.5 0 00-.91-.91V6.9c.43-.15.76-.48.91-.91H13v1a2 2 0 104 0V4a2 2 0 00-2-2z"></path></svg>`,
	4,
)

function DriveTrainIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.65 2.15c.2-.2.5-.2.7 0 .54.53 1.8 2.06 2.95 3.9 1.13 1.82 2.2 4.05 2.2 5.95 0 1.84-.53 3.35-1.5 4.4a5.3 5.3 0 01-4 1.6c-1.61 0-3-.54-4-1.6A6.29 6.29 0 014.5 12c0-1.9 1.07-4.13 2.2-5.95a25.3 25.3 0 012.95-3.9z"></path></svg>`,
	4,
)

function DropIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5c1.33 0 2.55-.47 3.5-1.26V16a2 2 0 01-2 2h-5.5V9.27a5.48 5.48 0 004 1.73zm-5-3.2A5.47 5.47 0 019.02 6H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V7.8zM6 15.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function DualScreenAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 1a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85A.5.5 0 0017 5.5a.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 5H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2zM14.5 11c1.33 0 2.55-.47 3.5-1.26V16a2 2 0 01-2 2h-5.5V9.27a5.48 5.48 0 004 1.73zm-5-3.2A5.47 5.47 0 019.02 6H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V7.8zM6 15.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function DualScreenArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.85-2.35l-2 2a.5.5 0 00.7.7L14 4.71V7.5a.5.5 0 001 0V4.7l1.15 1.15a.5.5 0 00.7-.7l-2-2A.5.5 0 0014.5 3a.5.5 0 00-.35.14zM14.5 11c1.33 0 2.55-.47 3.5-1.26V16a2 2 0 01-2 2h-5.5V9.27a5.48 5.48 0 004 1.73zm-5-3.2A5.47 5.47 0 019.02 6H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V7.8zM6 15.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function DualScreenArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 3a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1V3.5a.5.5 0 00-.5-.5zm0 8c1.33 0 2.55-.47 3.5-1.26V16a2 2 0 01-2 2h-5.5V9.27a5.48 5.48 0 004 1.73zm-5-3.2A5.47 5.47 0 019.02 6H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V7.8zM6 15.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function DualScreenClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 5a3 3 0 016 0v2l1.32 1.12a.5.5 0 01-.32.88h-8a.5.5 0 01-.32-.88L10.5 7V5zm3 6a1.5 1.5 0 01-1.42-1h2.83c-.2.58-.76 1-1.41 1zm-4-4.46l-.97.82A1.5 1.5 0 009.5 10h1.52l.12.33A2.5 2.5 0 0014 11.95V15a2 2 0 01-2 2H6a1 1 0 01-1-1V6a1 1 0 011-1h3.5v1.54z"></path></svg>`,
	4,
)

function DualScreenClosedAlertIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h10a2 2 0 012 2v7a2 2 0 01-2 2h-2v2h1a.5.5 0 010 1h-2v-6a3 3 0 00-3-3H4V4zm6 14H7.5V8H10a2 2 0 012 2v6a2 2 0 01-2 2zM4 8h2.5v10H4a2 2 0 01-2-2v-6c0-1.1.9-2 2-2zm5.5 7a.5.5 0 000 1h.5a.5.5 0 000-1h-.5zm-6 .5c0 .28.22.5.5.5h.5a.5.5 0 000-1H4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function DualScreenDesktopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7L14.5 4.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L15.21 5.5l1.14-1.15zM14.5 11c1.33 0 2.55-.47 3.5-1.26V16a2 2 0 01-2 2h-5.5V9.27a5.48 5.48 0 004 1.73zm-5-3.2A5.47 5.47 0 019.02 6H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V7.8zM6 15.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function DualScreenDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 16H16a2 2 0 002-2V6a2 2 0 00-2-2h-5.5v12zm-1-12H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V4z"></path></svg>`,
	4,
)

function DualScreenGroupIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16h-5.5V8H18v6a2 2 0 01-2 2zm2-9V6a2 2 0 00-2-2h-5.5v3H18zM9.5 7V4H4a2 2 0 00-2 2v1h7.5zM2 8v6c0 1.1.9 2 2 2h5.5V8H2z"></path></svg>`,
	4,
)

function DualScreenHeaderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V4H4zm2 9.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zM10.5 4v12H16a2 2 0 002-2V6a2 2 0 00-2-2h-5.5zm2 9h1a.5.5 0 010 1h-1a.5.5 0 010-1z"></path></svg>`,
	4,
)

function DualScreenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3v1H14a1 1 0 00-1 1v4a1 1 0 001 1h5a1 1 0 001-1V5a1 1 0 00-1-1h-.5V3a2 2 0 10-4 0zm1 1V3a1 1 0 112 0v1h-2zm1 2.25a.75.75 0 110 1.5.75.75 0 010-1.5zM12 9V6h-1.5v12H16a2 2 0 002-2v-5h-4a2 2 0 01-2-2zM4 6a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V6H4zm2 9.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6 0c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function DualScreenLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 16H16a2 2 0 002-2V6a2 2 0 00-2-2h-5.5v12zm-1-12H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V4zM5.75 8c.18 0 .34.1.43.25l1.75 3a.5.5 0 01-.43.75H4a.5.5 0 01-.43-.75l1.75-3A.5.5 0 015.75 8zm8.93.25l1.75 3A.5.5 0 0116 12h-3.5a.5.5 0 01-.43-.75l1.75-3a.5.5 0 01.86 0z"></path></svg>`,
	4,
)

function DualScreenMirrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16h-5.5V4H16a2 2 0 012 2v8a2 2 0 01-2 2zM4 4h5.5v12H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2zm8.5 10a.5.5 0 100-1 .5.5 0 000 1zm2.5-.5a.5.5 0 10-1 0 .5.5 0 001 0zm1.5.5a.5.5 0 100-1 .5.5 0 000 1z"></path></svg>`,
	4,
)

function DualScreenPaginationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.07 2.44a2 2 0 01-1.44 2.48l-.46.12a4.73 4.73 0 00.01 1.01l.35.09A2 2 0 0112 8.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 2.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zM14.5 6.5a1 1 0 110-2 1 1 0 010 2zm0 4.5c1.33 0 2.55-.47 3.5-1.26V16a2 2 0 01-2 2h-5.5V9.27a5.48 5.48 0 004 1.73zm-5-3.2A5.47 5.47 0 019.02 6H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V7.8zM6 15.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function DualScreenSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16h-5.5v-5.5h3.8l-1.15 1.15a.5.5 0 00.7.7l2-2a.5.5 0 000-.7l-2-2a.5.5 0 00-.7.7l1.14 1.15H10.5V4H16a2 2 0 012 2v8a2 2 0 01-2 2zM9.5 9.5V4H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5v-5.5H5.7l1.15 1.15a.5.5 0 01-.7.7l-2-2a.5.5 0 010-.7l2-2a.5.5 0 11.7.7L5.71 9.5H9.5z"></path></svg>`,
	4,
)

function DualScreenSpanIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.65 2.2c.12.16.29.45.44.87.26.68.41 1.5.41 2.43 0 .94-.15 1.75-.4 2.43-.16.42-.33.7-.45.87a.5.5 0 01-.85-.52l.12-.19a5.9 5.9 0 00.58-2.6 5.9 5.9 0 00-.58-2.58l-.07-.11a.5.5 0 11.8-.6zm-3.96-.16c.19.08.31.26.31.46v6a.5.5 0 01-.85.35L11.29 7h-.79a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5h.8l1.85-1.85a.5.5 0 01.54-.11zm2.53 1.93c-.1-.3-.2-.55-.27-.7a.5.5 0 10-.9.45 4.59 4.59 0 01.45 1.78 3.94 3.94 0 01-.37 1.6l-.08.18a.5.5 0 10.9.44 5.5 5.5 0 00.55-2.22c0-.5-.1-1.02-.28-1.53zm.13 5.73a1.5 1.5 0 01-.53-.74 1.5 1.5 0 01-.87-.07 1.5 1.5 0 01-2.51.67L10.88 8h-.38v8H16a2 2 0 002-2V9.8c-.5.29-1.15.27-1.65-.1zM9.5 16V7.62A1.5 1.5 0 019 6.5v-2c0-.18.03-.34.09-.5H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5zM6 13.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm6.5-.5h1a.5.5 0 010 1h-1a.5.5 0 010-1z"></path></svg>`,
	4,
)

function DualScreenSpeakerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16h-5.5V4H16a2 2 0 012 2v8a2 2 0 01-2 2zM4 4h5.5v12H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2zm8.5 2a.5.5 0 000 1H16a.5.5 0 000-1h-3.5z"></path></svg>`,
	4,
)

function DualScreenStatusBarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5c0-1.1.9-2 2-2h10a2 2 0 012 2v6a2 2 0 01-2 2h-3v-2h.5a.5.5 0 000-1H13V9a3 3 0 00-3-3H4V5zm6 12H7.5V7H10a2 2 0 012 2v6a2 2 0 01-2 2zM4 7h2.5v10H4a2 2 0 01-2-2V9c0-1.1.9-2 2-2zm5.5 7a.5.5 0 000 1h.5a.5.5 0 000-1h-.5zm-6 .5c0 .28.22.5.5.5h.5a.5.5 0 000-1H4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function DualScreenTabletIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16h-5.5V4H16a2 2 0 012 2v8a2 2 0 01-2 2zM4 4h5.5v12H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2zm12.85 7.85a.5.5 0 00-.7-.7L15 12.29V6.5a.5.5 0 00-1 0v5.8l-1.15-1.15a.5.5 0 00-.7.7l2 2c.2.2.5.2.7 0l2-2z"></path></svg>`,
	4,
)

function DualScreenUpdateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 16H16a2 2 0 002-2V6a2 2 0 00-2-2h-5.5v12zm-1-12H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.5V4zm7.35 7.15c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.65 1.64 1.65-1.64c.2-.2.5-.2.7 0zm0-3a.5.5 0 01-.7.7L14.5 7.21l-1.65 1.64a.5.5 0 01-.7-.7l2-2c.2-.2.5-.2.7 0l2 2z"></path></svg>`,
	4,
)

function DualScreenVerticalScrollIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 15H13a2 2 0 002-2V7a2 2 0 00-2-2h-2.5v10zm-1-10H7a2 2 0 00-2 2v6c0 1.1.9 2 2 2h2.5V5zm2.5 7.5c0-.28.22-.5.5-.5h.5a.5.5 0 010 1h-.5a.5.5 0 01-.5-.5zM7 12h.5a.5.5 0 010 1H7a.5.5 0 010-1zM1.88 6.51a.5.5 0 01.6.37l.41 1.64c.1.35.05.71-.1 1.03l-.62 1.23a.5.5 0 000 .44l.78 1.56a.5.5 0 11-.9.44l-.77-1.55a1.5 1.5 0 010-1.34l.6-1.22a.5.5 0 00.04-.35l-.4-1.64a.5.5 0 01.36-.6zm16.6.37a.5.5 0 00-.97.24l.41 1.64a.5.5 0 01-.03.35l-.61 1.22a1.5 1.5 0 000 1.34l.77 1.55a.5.5 0 10.9-.44l-.78-1.56a.5.5 0 010-.44l.61-1.23c.16-.32.2-.68.11-1.03l-.4-1.64z"></path></svg>`,
	4,
)

function DualScreenVibrateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ju = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.33 3.13a1.98 1.98 0 00-3 .22A2.4 2.4 0 009.2 7.43l1.01 1-1.06 1.08 1.36 1.36 1.07-1.07 1.01 1.02a2.4 2.4 0 004.08-2.13 1.98 1.98 0 00.23-3l-.6-.6.52-.52a.97.97 0 10-1.37-1.37l-.52.52-.6-.6zm.27 3.54a.5.5 0 11-.7.71l-1.28-1.27a.5.5 0 11.7-.71l1.28 1.27zM4.02 9.2a2.4 2.4 0 013.4 0l3.4 3.4a2.4 2.4 0 01-2.13 4.07 1.98 1.98 0 01-3 .23l-.6-.6-.54.53a.97.97 0 11-1.37-1.36l.54-.54-.6-.6a1.98 1.98 0 01.23-3 2.4 2.4 0 01.67-2.13zm2.94 5.82a.5.5 0 000-.71L5.7 13.04a.5.5 0 00-.7.7l1.27 1.28c.2.2.5.2.7 0z"></path></svg>`,
	4,
)

function DumbbellIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ju.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm8-7h-.25c.11.23.25.5.37.83.28.74.52 1.82.08 2.76-.4.86-1.1 1.08-1.63 1.22l-.1.02c-.5.13-.75.2-.93.46-.17.26-.12.58.04 1.12l.04.12c.07.21.14.46.18.69.05.28.06.63-.11.97-.18.34-.41.57-.69.72-.26.14-.53.2-.75.24l-.08.01c-.41.07-.65.12-.87.35-.18.2-.28.51-.34.94l-.05.54v.1c-.02.2-.04.41-.09.6v.02a6.98 6.98 0 008.86 1.25 3.56 3.56 0 01-.27-.31c-.27-.34-.61-.91-.5-1.57.06-.31.23-.58.4-.8a5.68 5.68 0 01.7-.7c.15-.14.28-.25.39-.37a.9.9 0 00.2-.26c.07-.23-.02-.4-.13-.5-.1-.06-.3-.13-.6.07l-.33.19c-.09.04-.2.1-.34.12a.6.6 0 01-.54-.18.73.73 0 01-.18-.37 2.58 2.58 0 01-.03-.28v-.07l-.02-.23c-.02-.22-.06-.5-.15-.83-.12-.49-.44-.89-.76-1.3l-.14-.18c-.16-.2-.37-.48-.44-.77a.9.9 0 01.03-.55c.07-.19.2-.33.35-.44a18.6 18.6 0 001.74-1.66c.3-.31.58-.6.77-.82h.01A6.97 6.97 0 0010 3z"></path></svg>`,
	4,
)

function EarthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$js = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 .34l-.64-.16a9.52 9.52 0 00-3.3-.17c-.6.08-1.16.21-1.67.4a5 5 0 00-.1-.54c-.13-.49-.45-.89-.77-1.3l-.14-.18c-.16-.2-.37-.48-.44-.77a.9.9 0 01.38-1 18.6 18.6 0 001.74-1.65l.78-.82A6.97 6.97 0 009.74 3c.12.23.26.5.38.83.28.74.52 1.82.08 2.76-.4.86-1.1 1.08-1.63 1.22l-.1.02c-.5.13-.75.2-.93.46-.17.26-.12.58.04 1.12l.04.12c.07.21.14.46.18.69.05.28.06.63-.11.97-.18.34-.41.57-.69.72-.26.14-.53.2-.75.24l-.08.01c-.41.07-.65.12-.87.35-.18.2-.28.51-.34.94l-.05.54v.1c-.02.2-.04.41-.09.6v.02a7 7 0 003.87 2.17c-.18.3-.35.6-.51.91A8 8 0 012 10zm16.93 1.74a.5.5 0 00-.43-.24h-.03l-.1-.02a6.16 6.16 0 01-.3-.08l-.09-.03c-.23-.06-.51-.14-.84-.21a8.52 8.52 0 00-2.95-.16c-1.2.15-2.12.56-2.75 1.15a2.85 2.85 0 00-.9 2.62 13.17 13.17 0 013.77-2.23.5.5 0 11.38.92c-.8.32-1.54.7-2.2 1.1a8.47 8.47 0 00-3.44 3.72.5.5 0 00.9.44c.38-.76.84-1.45 1.44-2.06a3.71 3.71 0 00.59.8 3.07 3.07 0 003.9.58c.45-.28.77-.67 1-1.08.37-.63.58-1.38.74-1.94l.1-.37a7.5 7.5 0 011-2.03v-.02c.1-.14.18-.27.23-.38a.5.5 0 00-.02-.48z"></path></svg>`,
	4,
)

function EarthLeafIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$js.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.92 2.87a2.97 2.97 0 014.2 4.21l-.66.67-4.2-4.2.66-.68zm-1.38 1.38l-8 8c-.32.33-.55.74-.65 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68L8.2 16A5.5 5.5 0 0115 9.2l.75-.74-4.2-4.21zM13.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0116 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function EditArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.92 2.87a2.97 2.97 0 014.2 4.21l-.66.67-4.2-4.2.66-.68zm-1.38 1.38l-8 8c-.32.33-.55.74-.65 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68l7.98-7.98-4.2-4.21z"></path></svg>`,
	4,
)

function EditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l5.4 5.4-4 4c-.33.33-.56.74-.66 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68l3.98-3.98 5.4 5.4a.5.5 0 00.7-.71l-15-15zm12.9 6.3l-2.59 2.6-4.2-4.21 2.58-2.6 4.21 4.22zm-2.83-5.58a2.97 2.97 0 014.2 4.21l-.66.67-4.2-4.2.66-.68z"></path></svg>`,
	4,
)

function EditOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.92 2.87a2.97 2.97 0 014.2 4.21l-.66.67-4.2-4.2.66-.68zm-1.38 1.38l-8 8c-.32.33-.55.74-.65 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68L8.2 16A5.5 5.5 0 0115 9.2l.75-.74-4.2-4.21zM9 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zm3.5 3.5c-.79 0-1.51-.26-2.1-.7l4.9-4.9a3.5 3.5 0 01-2.8 5.6z"></path></svg>`,
	4,
)

function EditProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.92 2.87a2.97 2.97 0 014.2 4.21l-.66.67-4.2-4.2.66-.68zm-1.38 1.38l-8 8c-.32.33-.55.74-.65 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68L8.2 16A5.5 5.5 0 0115 9.2l.75-.74-4.2-4.21zm-.47 7.2a2 2 0 01-1.43 2.47l-.46.12a4.7 4.7 0 000 1.02l.35.08A2 2 0 0111 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0116 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.29.13-.57.3-.82.5l.16.55zm2.43 4.05a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function EditSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 1a8 8 0 017.98 8.59 5.48 5.48 0 00-7.64 3 4 4 0 01-3.19-1.16.5.5 0 10-.7.7 5 5 0 003.62 1.48 5.54 5.54 0 00.52 3.37L9 17A8 8 0 119 1zm2.5 5.5a1 1 0 100 2 1 1 0 000-2zm-5 0a1 1 0 100 2 1 1 0 000-2zm12.5 8a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function EmojiAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.5-1.5a.5.5 0 00.26-.93l-2.5-1.5a.5.5 0 00-.52.86l1.22.73a1 1 0 101.54.84zm5 0a1 1 0 00-.46-.84l1.22-.73a.5.5 0 00-.52-.86l-2.5 1.5a.5.5 0 00.26.93 1 1 0 102 0zm.06 4.89c.34-.3.07-.72.06-.73a2.05 2.05 0 00-.23-.23 4.06 4.06 0 00-.67-.49 5.3 5.3 0 00-2.72-.69 5.3 5.3 0 00-2.72.7 4.08 4.08 0 00-.9.7c-.18.23-.17.55.06.74a.5.5 0 00.7-.07l.02-.03c.03-.03.06-.07.12-.11.1-.1.27-.24.5-.37a4.31 4.31 0 012.22-.56 4.3 4.3 0 012.22.56 3.07 3.07 0 01.64.5c.18.22.5.27.7.08z"></path></svg>`,
	4,
)

function EmojiAngryIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 017.95 7.12 2.87 2.87 0 00-2.85.72l-3.38 3.39c-1.5.7-3.33.44-4.57-.8a.5.5 0 10-.7.7 5 5 0 003.9 1.47l-.08.07c-.4.41-.7.92-.84 1.49l-.37 1.5c-.03.09-.04.18-.05.28A8 8 0 0110 2zm2.5 5.5a1 1 0 100 2 1 1 0 000-2zm-5 0a1 1 0 100 2 1 1 0 000-2zm3.48 7.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function EmojiEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 1c.28 0 .5.22.5.5v5a.5.5 0 001 0v-4a.5.5 0 011 0v4.25l.31-.06c.32-.04.7-.02 1.07.14.38.16.74.44 1.04.9a.5.5 0 01-.22.73 5.26 5.26 0 00-2.71 2.37C6.94 11.86 5.89 13 4.5 13h-.26A2.5 2.5 0 012 11.62l-.63-1.26A3.5 3.5 0 011 8.79V2.5a.5.5 0 011 0v4a.5.5 0 001 0v-5a.5.5 0 011 0v5a.5.5 0 001 0v-5c0-.28.22-.5.5-.5zm2.87 10.3c-.28.54-.74 1.18-1.35 1.7a5.5 5.5 0 104.21-5.85l.02.02a1.5 1.5 0 01-.66 2.2 4.27 4.27 0 00-2.22 1.92zm2.38 1.2a.75.75 0 110-1.5.75.75 0 010 1.5zm4.25-.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-4.05 2.53c.08.17.55.72 1.55.72s1.47-.55 1.55-.72a.5.5 0 11.9.44c-.25.5-1.05 1.28-2.45 1.28-1.4 0-2.2-.78-2.45-1.28a.5.5 0 11.9-.44z"></path></svg>`,
	4,
)

function EmojiHandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ji = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zM7.15 12.43a.5.5 0 10-.7.7 5.01 5.01 0 006.9.2l.2-.2.06-.07a.5.5 0 00-.7-.7l-.06.07-.18.17a4.01 4.01 0 01-5.52-.17zM12.5 7.5a1 1 0 100 2 1 1 0 000-2zm-5 0a1 1 0 100 2 1 1 0 000-2z"></path></svg>`,
	4,
)

function EmojiIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ji.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16zM6.5 8.08a.5.5 0 11-1-.16c.13-.83.9-1.42 1.75-1.42s1.61.59 1.74 1.42a.5.5 0 11-.99.16c-.04-.3-.34-.58-.75-.58-.42 0-.71.28-.76.58zm5.5 0a.5.5 0 01-1-.16c.13-.83.9-1.42 1.75-1.42s1.61.59 1.74 1.42a.5.5 0 01-.99.16c-.04-.3-.34-.58-.75-.58-.42 0-.71.28-.76.58zM5.5 10.5h9c-.22 2.2-1.93 4-4.5 4a4.36 4.36 0 01-4.5-4z"></path></svg>`,
	4,
)

function EmojiLaughIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.5-1.5a1 1 0 10-2 0 1 1 0 002 0zm4 1a1 1 0 100-2 1 1 0 000 2zm-6.5 3c0 .28.22.5.5.5h7a.5.5 0 000-1h-7a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function EmojiMehIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7a5 5 0 004.03 4.9 6.48 6.48 0 011.66-3.78 2 2 0 00-2.21.58.5.5 0 11-.76-.65 3 3 0 013.76-.66 6.47 6.47 0 013.43-1.36A5 5 0 002 7zm4.25-1.5a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm8.75 7a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0zm-6.75-1a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm3.86 2.57a.5.5 0 00-.71.05 2.5 2.5 0 01-3.8 0 .5.5 0 10-.76.66 3.5 3.5 0 005.32 0 .5.5 0 00-.05-.71zm-.61-1.82a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function EmojiMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$je = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm5.5-.5a1 1 0 100-2 1 1 0 000 2zm6-1a1 1 0 10-2 0 1 1 0 002 0zm.06 4.89c.38-.35.07-.72.06-.73a2.02 2.02 0 00-.23-.23 4.06 4.06 0 00-.67-.49 5.3 5.3 0 00-2.72-.69 5.3 5.3 0 00-2.72.7 4.08 4.08 0 00-.9.7l-.01.03h-.01l.39.32-.39-.31a.5.5 0 00.78.63l.02-.03c.03-.03.06-.07.12-.11.1-.1.27-.24.5-.37a4.31 4.31 0 012.22-.56 4.3 4.3 0 012.22.56 3.07 3.07 0 01.64.5.5.5 0 00.7.08z"></path></svg>`,
	4,
)

function EmojiSadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$je.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16zM8.5 8.5a1 1 0 11-2 0 1 1 0 012 0zm4-1a1 1 0 110 2 1 1 0 010-2zm.3 4.5h.8a.5.5 0 010 1h-.8c-1.07 0-2.13.32-3.02.92a.5.5 0 11-.56-.84A6.45 6.45 0 0112.8 12z"></path></svg>`,
	4,
)

function EmojiSadSlightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16zM8.5 8.5a1 1 0 11-2 0 1 1 0 012 0zm4-1a1 1 0 110 2 1 1 0 010-2zm-4.03 5.55c.42.21.97.32 1.53.32a3.5 3.5 0 001.53-.32.5.5 0 11.44.9c-.58.29-1.28.43-1.97.43s-1.39-.14-1.97-.43a.5.5 0 11.44-.9z"></path></svg>`,
	4,
)

function EmojiSmileSlightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$jb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.88.28l.35 1.07a2.2 2.2 0 001.4 1.4l1.07.35h.02a.42.42 0 010 .8l-1.07.35a2.2 2.2 0 00-1.4 1.4l-.01.04-.01.01-.23.7-.1.32a.42.42 0 01-.16.2.42.42 0 01-.64-.2l-.35-1.07a2.23 2.23 0 00-1.4-1.4l-.64-.22-.43-.13a.42.42 0 01-.28-.4.42.42 0 01.28-.4l1.07-.35a2.2 2.2 0 001.38-1.4l.35-1.07a.42.42 0 01.8 0zm4.9 7.93l-.76-.25a1.58 1.58 0 01-1-1l-.25-.76a.3.3 0 00-.57 0l-.25.77a1.58 1.58 0 01-.98 1l-.77.24a.3.3 0 00-.15.11.3.3 0 00.15.46l.77.25a1.58 1.58 0 011 1l.24.77a.3.3 0 00.58 0l.24-.77a1.58 1.58 0 011-1l.77-.24a.3.3 0 000-.57h-.02zM10 18a8 8 0 007.75-6.02 1.3 1.3 0 01-1.48-.87l-.25-.76a.57.57 0 00-.36-.36l-.79-.26a1.3 1.3 0 01-.75-1.78 1.4 1.4 0 01-.44-.21l-.04-.03-.03-.02c-.21-.17-.37-.4-.46-.66l-.34-1.07a1.2 1.2 0 00-.76-.76l-1.1-.36a1.42 1.42 0 01.02-2.7l.2-.06A8 8 0 1010 18zm-3.55-5.57c.2-.2.51-.2.7 0a4.01 4.01 0 005.52.17l.18-.17.06-.06a.5.5 0 01.7.7l-.06.06-.2.2a5.01 5.01 0 01-6.9-.2.5.5 0 010-.7zM11.5 8.5a1 1 0 112 0 1 1 0 01-2 0zm-5 0a1 1 0 112 0 1 1 0 01-2 0z"></path></svg>`,
	4,
)

function EmojiSparkleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$jb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ja = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm5.5-.5a1 1 0 100-2 1 1 0 000 2zm4.25 3a1.75 1.75 0 10-3.5 0 1.75 1.75 0 003.5 0zm.75-3a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function EmojiSurpriseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ja.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2.5c.28 0 .5.22.5.5v1h2V3a.5.5 0 011 0v1h2.2a1 1 0 01.89.55L14.8 6H16a2 2 0 012 2v5a2 2 0 01-2 2h-1.2l-.71 1.45a1 1 0 01-.9.55H7.71a1 1 0 01-.71-.3l-2.41-2.4A2 2 0 014 12.87V10H3v2.5a.5.5 0 01-1 0v-6a.5.5 0 011 0V9h1V6c0-1.1.9-2 2-2h1V3c0-.28.22-.5.5-.5zm0 4.5a.5.5 0 00-.5.5V10c0 1.1.9 2 2 2h5.5a.5.5 0 000-1H11V7.5a.5.5 0 00-1 0V11H9a1 1 0 01-1-1V7.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function EngineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zm3.5 7a.5.5 0 000-1h-7a.5.5 0 000 1h7zm0 3a.5.5 0 000-1h-7a.5.5 0 000 1h7z"></path></svg>`,
	4,
)

function EqualCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L5.79 6.5H3.75a.75.75 0 000 1.5h3.54l3.5 3.5H3.75a.75.75 0 000 1.5h8.54l4.86 4.85a.5.5 0 00.7-.7l-15-15zm10.77 9.35l1.5 1.5h1.13a.75.75 0 000-1.5h-2.63zm-5-5l1.5 1.5h6.13a.75.75 0 000-1.5H8.62z"></path></svg>`,
	4,
)

function EqualOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.2 2.44a1.5 1.5 0 012.12 0l4.24 4.24a1.5 1.5 0 010 2.12L9.36 17h5.14a.5.5 0 010 1H7.82a1.5 1.5 0 01-1.14-.44l-4.24-4.24a1.5 1.5 0 010-2.12l8.76-8.76zM9.78 15.17l-4.95-4.95-1.69 1.69a.5.5 0 000 .7l4.25 4.25c.2.2.5.2.7 0l1.7-1.7z"></path></svg>`,
	4,
)

function EraserIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.44 11.2a1.5 1.5 0 000 2.12l4.24 4.24a1.5 1.5 0 002.12 0l.72-.72a5.46 5.46 0 01-.37-1.04L8.1 16.86a.5.5 0 01-.71 0L3.15 12.6a.5.5 0 010-.7l1.69-1.7L9 14.39a5.5 5.5 0 017.84-4.86l.72-.72a1.5 1.5 0 000-2.12l-4.24-4.24a1.5 1.5 0 00-2.12 0L2.44 11.2zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9z"></path></svg>`,
	4,
)

function EraserMediumIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.32 2.44a1.5 1.5 0 00-2.12 0L2.44 11.2a1.5 1.5 0 000 2.12l4.24 4.24c.31.32.73.46 1.14.44h6.27a1.5 1.5 0 100-1H9.36l8.2-8.2a1.5 1.5 0 000-2.12l-4.24-4.24zm-8.49 7.78l4.95 4.95-1.69 1.69a.5.5 0 01-.7 0L3.14 12.6a.5.5 0 010-.7l1.7-1.7z"></path></svg>`,
	4,
)

function EraserSegmentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.44 11.2a1.5 1.5 0 000 2.12l4.24 4.24a1.5 1.5 0 002.12 0l2.22-2.2a4 4 0 014.34-4.34l2.2-2.22a1.5 1.5 0 000-2.12l-4.24-4.24a1.5 1.5 0 00-2.12 0L2.44 11.2zm.7 1.41a.5.5 0 010-.7l1.7-1.7 4.95 4.96-1.7 1.69a.5.5 0 01-.7 0L3.15 12.6zM15 18a3 3 0 100-6 3 3 0 000 6z"></path></svg>`,
	4,
)

function EraserSmallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2.5a.5.5 0 00-1 0v12A3.5 3.5 0 006.5 18h7a3.5 3.5 0 003.5-3.5v-12a.5.5 0 00-1 0V6H4V2.5zM4 10V7h12v3H4z"></path></svg>`,
	4,
)

function EraserToolIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zm0 10.5a.75.75 0 100 1.5.75.75 0 000-1.5zM10 6a.5.5 0 00-.5.41v4.68a.5.5 0 001 0V6.41A.5.5 0 0010 6z"></path></svg>`,
	4,
)

function ErrorCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 10-7.41 7.98 5.48 5.48 0 01-.37-4.01.75.75 0 11.44-1.08 5.5 5.5 0 017.32-2.3L18 10zM9.5 6.41a.5.5 0 011 0v4.68a.5.5 0 01-1 0V6.41zm2.14 8.51a2 2 0 001.43-2.48l-.16-.55c.25-.2.53-.37.82-.5l.34.36a2 2 0 002.9 0l.33-.35c.3.14.58.32.84.52l-.13.42a2 2 0 001.46 2.52l.35.09a4.7 4.7 0 010 1.01l-.45.12a2 2 0 00-1.43 2.48l.15.55c-.25.2-.53.37-.82.5l-.34-.36a2 2 0 00-2.9 0l-.33.35c-.3-.14-.58-.32-.84-.52l.13-.42a2 2 0 00-1.46-2.52l-.35-.09a4.71 4.71 0 010-1.01l.46-.12zm4.86.58a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function ErrorCircleSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 4a2 2 0 012 2v4h-4a2 2 0 00-2 2v4H6a2 2 0 01-2-2v-2.5a.5.5 0 00-1 0V14a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3h-2.5a.5.5 0 000 1H14zm-5-.5a.5.5 0 00-.5-.5h-5a.5.5 0 00-.5.5v5a.5.5 0 001 0V4.7l4.15 4.15a.5.5 0 10.7-.7L4.71 4H8.5a.5.5 0 00.5-.5z"></path></svg>`,
	4,
)

function ExpandUpLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4a2 2 0 00-2 2v4h4a2 2 0 012 2v4h4a2 2 0 002-2v-2.5a.5.5 0 011 0V14a3 3 0 01-3 3H6a3 3 0 01-3-3V6a3 3 0 013-3h2.5a.5.5 0 010 1H6zm5-.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5v5a.5.5 0 01-1 0V4.7l-4.15 4.15a.5.5 0 01-.7-.7L15.29 4H11.5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ExpandUpRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.35 4.15a.5.5 0 00-.7 0l-3 3a.5.5 0 10.7.7L10 5.21l2.65 2.64a.5.5 0 00.7-.7l-3-3zM3 10c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5H3zm6 0c-.83 0-1.5.67-1.5 1.5v2c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-2c0-.83-.67-1.5-1.5-1.5H9zm4.5 1.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v2c0 .83-.67 1.5-1.5 1.5h-2a1.5 1.5 0 01-1.5-1.5v-2z"></path></svg>`,
	4,
)

function ExtendedDockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.25 2.75a2.62 2.62 0 00-3.71 0L12.5 3.8l-.35-.35a1.5 1.5 0 00-2.12 0l-.59.59a1.5 1.5 0 000 2.12l.35.35-6.35 6.35A1.5 1.5 0 003 13.91v.5l-.96 2.26a1 1 0 001.32 1.31L5.6 17h.49c.4 0 .78-.16 1.06-.44l6.35-6.35.35.35a1.5 1.5 0 002.12 0l.59-.58a1.5 1.5 0 000-2.13l-.35-.35 1.04-1.04a2.62 2.62 0 000-3.7zM10.5 7.21l2.3 2.3-6.36 6.34a.5.5 0 01-.35.15H5.5a.5.5 0 00-.2.04l-2.34 1.03 1-2.36a.5.5 0 00.04-.2v-.6a.5.5 0 01.15-.35l6.35-6.35z"></path></svg>`,
	4,
)

function EyedropperIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.8 8.5L2.14 2.85a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-5.65-5.64-4.35 4.35a1.5 1.5 0 01-1.06.44H5.6l-2.25.98a1 1 0 01-1.32-1.3L3 14.41v-.5c0-.4.16-.79.44-1.07L7.79 8.5zm3 3L8.5 9.2l-4.35 4.36a.5.5 0 00-.15.35v.6a.5.5 0 01-.04.2l-1 2.36 2.34-1.03a.5.5 0 01.2-.04h.59a.5.5 0 00.35-.15l4.35-4.35zm2-2l-.6.59.72.7.58-.58.35.35a1.5 1.5 0 002.13 0l.58-.59a1.5 1.5 0 000-2.12l-.35-.35 1.04-1.04a2.62 2.62 0 10-3.71-3.7L12.5 3.78l-.35-.35a1.5 1.5 0 00-2.12 0l-.59.59a1.5 1.5 0 000 2.12l.35.35-.58.59.7.7.6-.58 2.28 2.29zm1.45-6.04a1.62 1.62 0 112.29 2.3l-1.4 1.39a.5.5 0 000 .7l.71.71c.2.2.2.51 0 .7l-.58.6a.5.5 0 01-.7 0l-4.42-4.42a.5.5 0 010-.7l.59-.6c.2-.19.5-.19.7 0l.7.71a.5.5 0 00.71 0l1.4-1.39z"></path></svg>`,
	4,
)

function EyedropperOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.26 11.6A6.97 6.97 0 0110 6c3.2 0 6.06 2.33 6.74 5.6a.5.5 0 00.98-.2A7.97 7.97 0 0010 5a7.97 7.97 0 00-7.72 6.4.5.5 0 00.98.2zM9.99 8a3.5 3.5 0 110 7 3.5 3.5 0 010-7z"></path></svg>`,
	4,
)

function EyeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l3.5 3.5a8.1 8.1 0 00-3.37 5.05.5.5 0 10.98.2 7.09 7.09 0 013.1-4.53l1.59 1.59a3.5 3.5 0 104.88 4.88l4.32 4.31a.5.5 0 00.7-.7l-15-15zM10.12 8l3.37 3.37A3.5 3.5 0 0010.12 8zM7.53 5.41l.8.8C8.87 6.07 9.43 6 10 6c3.2 0 6.06 2.33 6.74 5.6a.5.5 0 10.98-.2A7.97 7.97 0 0010 5c-.86 0-1.69.14-2.47.41z"></path></svg>`,
	4,
)

function EyeOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 3C3.67 3 3 3.67 3 4.5v3a.5.5 0 01-1 0v-3A2.5 2.5 0 014.5 2h3a.5.5 0 010 1h-3zm0 14A1.5 1.5 0 013 15.5v-3a.5.5 0 00-1 0v3A2.5 2.5 0 004.5 18h3a.5.5 0 000-1h-3zM17 4.5c0-.83-.67-1.5-1.5-1.5h-3a.5.5 0 010-1h3A2.5 2.5 0 0118 4.5v3a.5.5 0 01-1 0v-3zM15.5 17c.83 0 1.5-.67 1.5-1.5v-3a.5.5 0 011 0v3a2.5 2.5 0 01-2.5 2.5h-3a.5.5 0 010-1h3zM7 11.5a3 3 0 116 0 3 3 0 01-6 0zM4.95 9.72a.5.5 0 01-.9-.44l.45.22-.45-.22v-.01l.01-.01a2.1 2.1 0 01.08-.14l.25-.38A6.85 6.85 0 0110 6a6.85 6.85 0 015.62 2.74 5.13 5.13 0 01.33.52v.01l-.44.23.45-.22a.5.5 0 01-.9.45V9.7a2.5 2.5 0 00-.25-.39A5.86 5.86 0 0010 7a5.86 5.86 0 00-4.8 2.32 4.14 4.14 0 00-.24.39l-.01.01z"></path></svg>`,
	4,
)

function EyeTrackingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.41 3.12C2.15 3.52 2 4 2 4.5v3a.5.5 0 001 0v-3c0-.23.05-.45.15-.65L6.29 7a6.6 6.6 0 00-2.23 2.27v.01l.44.23-.45-.22a.5.5 0 00.9.44v-.01a2.39 2.39 0 01.25-.39 5.49 5.49 0 011.82-1.6l1.3 1.3a3 3 0 104.16 4.17l3.67 3.66c-.2.1-.42.15-.65.15h-3a.5.5 0 000 1h3c.5 0 .98-.15 1.38-.41l.27.26a.5.5 0 00.7-.7l-.26-.27-.74-.73-3.93-3.94-3.63-3.63L8.01 7.3l-.78-.78-3.38-3.37-.73-.74-.27-.26a.5.5 0 10-.7.7l.26.27zm15.57 12.73l.02-.35v-3a.5.5 0 00-1 0v2.38l.98.97zm-8.81-8.8A7 7 0 0110 7a5.86 5.86 0 014.8 2.32 4.13 4.13 0 01.24.39l.01.01a.5.5 0 00.9-.44v-.01l-.01-.01a1.7 1.7 0 00-.08-.14l-.25-.38A6.85 6.85 0 0010 6c-.63 0-1.2.07-1.7.18l.86.87zm6.78 2.23l-.06.03-.39.19.45-.22zM5.12 3H7.5a.5.5 0 000-1h-3c-.12 0-.24 0-.35.02l.97.98zM3 15.5c0 .83.67 1.5 1.5 1.5h3a.5.5 0 010 1h-3A2.5 2.5 0 012 15.5v-3a.5.5 0 011 0v3zm14-11c0-.83-.67-1.5-1.5-1.5h-3a.5.5 0 010-1h3A2.5 2.5 0 0118 4.5v3a.5.5 0 01-1 0v-3z"></path></svg>`,
	4,
)

function EyeTrackingOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.9 7.2a3.48 3.48 0 014.2 0l-1.08 1.08a2 2 0 00-2.04 0L8.9 7.2zM13 10a2 2 0 00-.28-1.02L13.8 7.9a3.48 3.48 0 010 4.2l-1.08-1.08A2 2 0 0013 10zm-2 2a2 2 0 001.02-.28l1.08 1.08a3.48 3.48 0 01-4.2 0l1.08-1.08A2 2 0 0011 12zm-2-2c0 .37.1.72.28 1.02L8.2 12.1a3.48 3.48 0 010-4.2l1.08 1.08A2 2 0 009 10zM6.1 5a6.98 6.98 0 00-1.43 8H3.5a.5.5 0 000 1h1.75c.26.36.54.7.85 1H1.5a.5.5 0 000 1h5.9a7 7 0 100-12H2.5a.5.5 0 000 1h3.6zM11 9a1 1 0 110 2 1 1 0 010-2z"></path></svg>`,
	4,
)

function FastAccelerationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.02 5.49a1 1 0 011.59-.81l5.88 4.31c.68.5.68 1.52 0 2.02l-5.88 4.3a1 1 0 01-1.6-.8v-3.16l-5.4 3.97a1 1 0 01-1.6-.8V5.48a1 1 0 011.6-.81l5.4 3.97V5.49z"></path></svg>`,
	4,
)

function FastForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4.5C5 3.67 5.67 3 6.5 3h7c.83 0 1.5.67 1.5 1.5V7h-1V4.5a.5.5 0 00-.5-.5h-7a.5.5 0 00-.5.5V8h5.5c-.31.42-.5.94-.5 1.5v6c0 .56.19 1.08.5 1.5h-7A1.5 1.5 0 013 15.5V10c0-1.1.9-2 2-2V4.5zm1.25 6.13a.62.62 0 10-1.25 0 .62.62 0 001.25 0zm0 2.24a.62.62 0 10-1.25 0 .62.62 0 001.25 0zm1.63-.5a.62.62 0 100 1.25.62.62 0 000-1.24zm.62-1.74a.62.62 0 10-1.25 0 .62.62 0 001.25 0zm5-2.63c-.83 0-1.5.67-1.5 1.5v6c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5h-2z"></path></svg>`,
	4,
)

function FaxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.47 17H4a2 2 0 01-2-2V4.5C2 3.67 2.67 3 3.5 3h7c.83 0 1.5.67 1.5 1.5V6h4.48c.77.02 1.52.6 1.52 1.58v4.92c0 .83-.67 1.5-1.5 1.5h-2.1l-.43 1.82c-.19.82-.85 1.2-1.5 1.18zM15 7H12v8.48c0 .6.86.7 1 .12l1.94-8.37.07-.23zM5.5 7a.5.5 0 100-1 .5.5 0 000 1zM5 10c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5zm0 3.5c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function FeedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zM3 6a1 1 0 011-1h1v2H3V6zm0 7h2v2H4a1 1 0 01-1-1v-1zm2-1H3v-1.5h2V12zm0-2.5H3V8h2v1.5zM16 15h-1v-2h2v1a1 1 0 01-1 1zm1-4.5V12h-2v-1.5h2zM17 8v1.5h-2V8h2zm0-2v1h-2V5h1a1 1 0 011 1z"></path></svg>`,
	4,
)

function FilmstripIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 9.24a4.5 4.5 0 11-5-7.48 4.5 4.5 0 015 7.48zm-2.15-6.1a.5.5 0 00-.85.36V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5a.5.5 0 00-.15-.35zM9.02 5a5.57 5.57 0 00.07 1.5H3.75a.75.75 0 010-1.5h5.27zm1.46 4.25a5.5 5.5 0 002.38 1.5H5.75a.75.75 0 010-1.5h4.73zm1.77 4.25a.75.75 0 010 1.5h-4.5a.75.75 0 010-1.5h4.5z"></path></svg>`,
	4,
)

function FilterAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.73 10.25A5.46 5.46 0 0014 11c0 .41-.34.75-.75.75h-8.5a.75.75 0 010-1.5h6.98zM9.03 6c.04.52.16 1.03.34 1.5H2.75a.75.75 0 010-1.5h6.27zM12 15.25a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zM14.5 10a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm1.85-6.35c.2.2.2.5 0 .7L15.21 5.5l1.14 1.15a.5.5 0 01-.7.7L14.5 6.21l-1.15 1.14a.5.5 0 01-.7-.7l1.14-1.15-1.14-1.15a.5.5 0 01.7-.7l1.15 1.14 1.15-1.14c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function FilterDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.25 13.5a.75.75 0 010 1.5h-4.5a.75.75 0 010-1.5h4.5zm2-4.25a.75.75 0 010 1.5h-8.5a.75.75 0 010-1.5h8.5zm2-4.25a.75.75 0 010 1.5H3.75a.75.75 0 010-1.5h12.5z"></path></svg>`,
	4,
)

function FilterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.98 1.98 0 00-1.72-.1 2 2 0 00-.66.44.5.5 0 11-.71-.71A3 3 0 0116 3.15V3c0-.28.22-.5.5-.5zm-.88 5.53A3 3 0 0113 7.85V8a.5.5 0 01-1 0V6.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.98 1.98 0 001.72.1 2 2 0 00.66-.44.5.5 0 11.71.71 3 3 0 01-1 .66zM14 10.98a5.46 5.46 0 01-2.27-.73H4.75a.75.75 0 000 1.5h8.5a.75.75 0 00.75-.77zM9.37 7.5c-.18-.47-.3-.98-.35-1.5H2.75a.75.75 0 000 1.5h6.62zm1.88 7a.75.75 0 010 1.5h-4.5a.75.75 0 010-1.5h4.5z"></path></svg>`,
	4,
)

function FilterSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.83 4.18c1.47-.72 4.65-1.4 8.26.95a.75.75 0 00.82-1.26C11.79 1.2 8.03 1.93 6.17 2.82a.75.75 0 10.66 1.36zm-1.71.27c.23.35.13.82-.22 1.04a5.1 5.1 0 00-1.25 1.39.75.75 0 11-1.3-.76c.28-.48.99-1.4 1.73-1.88a.75.75 0 011.04.21zm5.38-.16a.75.75 0 000 1.5c1.55 0 5.3 1.3 6.26 6.35a.75.75 0 101.48-.28C17.1 6 12.67 4.29 10.5 4.29zm-1.51.78a.75.75 0 01-.45.96C4.6 7.46 3.61 11.23 4 13.89a.75.75 0 11-1.48.22c-.44-3.1.69-7.74 5.52-9.5.39-.13.82.07.96.46zm-.87 3.92c-1.6 1.24-2.58 3.92-.95 7.17a.75.75 0 01-1.34.68c-1.92-3.82-.87-7.3 1.37-9.04a5.07 5.07 0 013.92-1.05 5.72 5.72 0 013.81 2.67.75.75 0 01-1.25.83 4.23 4.23 0 00-2.8-2.02A3.57 3.57 0 008.12 9zm7.63 2.97a.75.75 0 10-1.5.08c.1 1.91 1.29 2.94 2.02 3.17a.75.75 0 10.45-1.43 1.72 1.72 0 01-.5-.43 2.46 2.46 0 01-.47-1.4zm-4.5.54a.75.75 0 00-1.5 0c0 1.07.13 1.9.45 2.73.32.8.8 1.55 1.44 2.45a.75.75 0 101.22-.86 10.4 10.4 0 01-1.26-2.14 5.69 5.69 0 01-.35-2.18zm-1.13 4.64C8.05 13.4 8.78 11.58 9.5 11a1.43 1.43 0 012.3.72c.06.2.12.44.18.77l.04.17c.08.38.18.84.33 1.3.3.95.84 1.99 1.93 2.79a.75.75 0 00.89-1.21 3.93 3.93 0 01-1.4-2.04c-.12-.39-.2-.77-.28-1.15l-.04-.16c-.06-.3-.13-.64-.21-.91a2.93 2.93 0 00-4.68-1.45c-1.62 1.31-1.92 4.12.25 8.03a.75.75 0 001.31-.72z"></path></svg>`,
	4,
)

function FingerprintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 3c.28 0 .5.22.5.5V5h5.5V3.5a.5.5 0 011 0V5H16V3.5a.5.5 0 011 0v4a.5.5 0 01-1 0V6h-5.5v1.5a.5.5 0 01-1 0V6H4v1.5a.5.5 0 01-1 0v-4c0-.28.22-.5.5-.5zm6 6H5a2 2 0 00-2 2v4c0 1.1.9 2 2 2h4.5V9zm1 8H15a2 2 0 002-2v-4a2 2 0 00-2-2h-4.5v8z"></path></svg>`,
	4,
)

function FixedWidthIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 13h11a.5.5 0 00.42-.78L13.1 8l2.82-4.22A.5.5 0 0015.5 3H4a.5.5 0 00-.5.5v14a.5.5 0 001 0V13z"></path></svg>`,
	4,
)

function FlagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.5 4.21V17.5a.5.5 0 001 0V13h7.8l4.85 4.85a.5.5 0 00.7-.7L3.77 3.05l-.92-.9zM15.5 13h-.38l-10-10H15.5c.4 0 .64.45.42.78L13.1 8l2.82 4.22a.5.5 0 01-.42.78z"></path></svg>`,
	4,
)

function FlagOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path fill="#745125" d="M4 4h12v1H4z"></path><path fill="#E62C46" d="M4 5h12v1H4z"></path><path fill="#F36D38" d="M4 6h12v1H4z"></path><path fill="#FFD23E" d="M4 7h12v1H4z"></path><path fill="#61BC51" d="M4 8h12v1H4z"></path><path fill="#1793E8" d="M4 9h12v1H4z"></path><path fill="#B73FBB" d="M4 10h12v1H4z"></path><path d="M3.5 3h13c.28 0 .5.22.5.5v8a.5.5 0 01-.5.5H4v5.5a.5.5 0 01-1 0v-14c0-.28.22-.5.5-.5zM4 4v7h12V4H4z"></path></svg>`,
	18,
)

function FlagPrideIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l2.21-2.27a5.5 5.5 0 016.22-6.35l.24-.24c.65-.68.19-1.82-.76-1.82h-2.56l1.26-3.6c.23-.69-.28-1.4-1-1.4H7.2zM17 18.24a4.5 4.5 0 11-5-7.48 4.5 4.5 0 015 7.48zm-2.15-6.1a.5.5 0 00-.85.36V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5a.5.5 0 00-.15-.35z"></path></svg>`,
	4,
)

function FlashAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l4.82-4.93 1.42-3.78a1.5 1.5 0 012.6-.37c.38-.68-.08-1.6-.93-1.6H12.2l1.26-3.6c.23-.69-.28-1.4-1-1.4H7.2zm7.29 7c.2 0 .4.13.47.32l3 8a.5.5 0 11-.94.36l-1-2.68h-3.06l-1 2.68a.5.5 0 01-.94-.36l3-8A.5.5 0 0114.5 9zm1.15 5l-1.15-3.08L13.35 14h2.3z"></path></svg>`,
	4,
)

function FlashAutoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l2.21-2.27a5.5 5.5 0 016.22-6.35l.24-.24c.65-.68.18-1.82-.76-1.82H12.2l1.27-3.6c.23-.69-.28-1.4-1.01-1.4H7.21zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function FlashCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l4.81-4.92-.25-.76h-.18a3 3 0 11.59-3A2.5 2.5 0 0114 10.37l1.52-1.55c.65-.68.19-1.82-.76-1.82h-2.56l1.26-3.6c.23-.69-.28-1.4-1-1.4H7.2zm10.72 13.77A2.01 2.01 0 0019 14a2 2 0 00-3.73-1h-1.05a.5.5 0 01-.47-.34l-.55-1.63A1.5 1.5 0 0011.78 10H11a2 2 0 10-.27 1h1.05c.21 0 .4.14.47.34l.55 1.63V13a1.5 1.5 0 001.42 1H15a2 2 0 002.93 1.77zm-.44-.9a1 1 0 01-1.49-.86V14a1 1 0 012-.01V14a1 1 0 01-.51.87zM10 10a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function FlashFlowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l8.67-8.86c.65-.68.19-1.82-.76-1.82H12.2l1.26-3.6c.23-.69-.28-1.4-1-1.4H7.2z"></path></svg>`,
	4,
)

function FlashIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.96 1.17c.27 0 .5.22.5.5v.83a.5.5 0 11-1 0v-.83c0-.28.22-.5.5-.5zm3.9.98c.19.2.19.5 0 .7l-1.5 1.5a.5.5 0 11-.71-.7l1.5-1.5c.2-.2.5-.2.7 0zM7 5.2v2.58l5.2 5.2h2.6L7 5.22zm8.7 7.29l1.1-1.09a2 2 0 000-2.82L11.4 3.2a2 2 0 00-2.82 0L7.5 4.29l8.2 8.2zm-4.7.7L6.8 9l-4.1 4.09a2 2 0 000 2.82L4.1 17.3a2 2 0 002.82 0L11 13.21zm-3.15-.35l-1 1a.5.5 0 01-.7-.7l1-1a.5.5 0 11.7.7zM17 6.05c0-.29.22-.5.5-.5h.83a.5.5 0 110 1h-.83a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function FlashlightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l15 15a.5.5 0 00.7-.7l-15-15zM16.8 11.4l-1.08 1.09L7.5 4.3l1.09-1.1a2 2 0 012.82 0L16.8 8.6a2 2 0 010 2.82zM6.8 9L11 13.2l-4.09 4.1a2 2 0 01-2.82 0L2.7 15.9a2 2 0 010-2.82L6.79 9zm.06 4.85l1-1a.5.5 0 10-.7-.7l-1 1a.5.5 0 10.7.7z"></path></svg>`,
	4,
)

function FlashlightOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ix = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.86 12.56l5.29 5.3a.5.5 0 00.7-.71l-15-15a.5.5 0 10-.7.7l3.12 3.13-1.33 4.66c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l5-5.12zm3.67-3.74l-2.27 2.32L5.9 3.78l.29-1C6.32 2.3 6.74 2 7.21 2h5.25c.73 0 1.24.71 1 1.4L12.2 7h2.57c.94 0 1.4 1.14.76 1.81z"></path></svg>`,
	4,
)

function FlashOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ix.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l2.21-2.27a5.5 5.5 0 016.22-6.35l.24-.24c.65-.68.19-1.82-.76-1.82h-2.56l1.26-3.6c.23-.69-.28-1.4-1-1.4H7.2zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.29-.44l-2.97-1.65a.5.5 0 00-.74.44v3.3c0 .38.41.62.74.44l2.97-1.65a.5.5 0 000-.88z"></path></svg>`,
	4,
)

function FlashPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.21 2c-.47 0-.89.31-1.02.77l-2.25 7.87c-.2.68.32 1.36 1.02 1.36h1.27l-1.17 4.68c-.26 1.05 1.04 1.78 1.8 1l2.21-2.27a5.5 5.5 0 016.22-6.35l.24-.24c.65-.68.18-1.82-.76-1.82H12.2l1.27-3.6c.23-.69-.28-1.4-1.01-1.4H7.21zm4.86 9.44a2 2 0 01-1.43 2.48l-.46.12a4.7 4.7 0 000 1.02l.35.08A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.29.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function FlashSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.88 15.66a.75.75 0 01-.63.34h-5.5a.75.75 0 01-.75-.75V2.75a.75.75 0 011.44-.3l5.5 12.5c.1.23.08.5-.06.71zM12.5 6.32v8.18h3.6l-3.6-8.18zM2.5 16a.5.5 0 01-.45-.71l6-13A.5.5 0 019 2.5v13a.5.5 0 01-.5.5h-6z"></path></svg>`,
	4,
)

function FlipHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$it = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.66 2.12c.21.14.34.38.34.63v5.5c0 .41-.34.75-.75.75H2.75a.75.75 0 01-.3-1.44l12.5-5.5c.23-.1.5-.08.71.06zM6.32 7.5h8.18V3.9L6.32 7.5zm9.68 10a.5.5 0 01-.71.45l-13-6A.5.5 0 012.5 11h13c.28 0 .5.22.5.5v6z"></path></svg>`,
	4,
)

function FlipVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$it.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$is = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm4-3.5v2c0 .28.22.5.5.5H7v1.8l-1.35 1.35a.5.5 0 000 .7l1.5 1.5c.2.2.5.2.7 0L9.21 13H11v.5c0 .28.22.5.5.5h2a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5v.5H9.2L8 10.8V9h.5a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function FlowchartCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$is.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ir = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4.5C3 3.67 3.67 3 4.5 3h2C7.33 3 8 3.67 8 4.5v2C8 7.33 7.33 8 6.5 8H6v3.84a1 1 0 01.2.16L8 13.8a1 1 0 01.16.2H12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v2c0 .83-.67 1.5-1.5 1.5h-2a1.5 1.5 0 01-1.5-1.5V15H8.16a1 1 0 01-.16.2L6.2 17a1 1 0 01-1.4 0L3 15.2a1 1 0 010-1.4L4.8 12a1 1 0 01.2-.16V8h-.5A1.5 1.5 0 013 6.5v-2z"></path></svg>`,
	4,
)

function FlowchartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ir.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$iq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 4a3 3 0 00-2.96 2.5A2.5 2.5 0 009.73 8.6l-.44 2.66a1.5 1.5 0 01-1.33 1.24 3 3 0 100 1 2.5 2.5 0 002.31-2.08l.44-2.66a1.5 1.5 0 011.33-1.24A3 3 0 1015 4z"></path></svg>`,
	4,
)

function FlowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$iq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ip = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.05a.5.5 0 01.44 0l5 2.5a.5.5 0 010 .9l-4.1 2.05 4.1 2.05a.5.5 0 010 .9L11 12.8v4.69a.5.5 0 01-.76.43l-5-3A.5.5 0 015 14.5V5c0-.19.1-.36.28-.45l5-2.5z"></path></svg>`,
	4,
)

function FluentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ip.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$io = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3.5C2 2.67 2.67 2 3.5 2h2C6.33 2 7 2.67 7 3.5v2.04c0 .83-.67 1.5-1.5 1.5h-2A1.5 1.5 0 012 5.54V3.5zM8 4h5.5c.83 0 1.5.67 1.5 1.5V9h-1V5.5a.5.5 0 00-.5-.5H8V4zM5 8v5.5c0 .28.22.5.5.5H9v1H5.5A1.5 1.5 0 014 13.5V8h1zm6.5 2c-.82 0-1.5.67-1.5 1.5v5c0 .83.68 1.5 1.5 1.5h5c.83 0 1.5-.67 1.5-1.5v-5c0-.83-.67-1.5-1.5-1.5h-5z"></path></svg>`,
	4,
)

function FluidIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$io.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$in = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29L8.07 3.3a1.5 1.5 0 00-.9-.3H4.5A2.5 2.5 0 002 5.5v1h5.07a.5.5 0 00.36-.16L9.4 4.3zm1.17.21l-2.4 2.53c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h5.1a5.5 5.5 0 018.4-6.74V6.84a2.5 2.5 0 00-2.5-2.34h-4.94zm8.44 10a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function FolderAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$in.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$im = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.07 3.3l1.32.99-1.96 2.05a.5.5 0 01-.36.16H2v-1A2.5 2.5 0 014.5 3h2.67c.32 0 .64.1.9.3zm.09 3.73c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h5.1a5.5 5.5 0 018.4-6.74V6.84a2.5 2.5 0 00-2.5-2.34h-4.94l-2.4 2.53zM14.5 19a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm-2.35-4.85a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function FolderArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$im.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$il = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29L8.07 3.3a1.5 1.5 0 00-.9-.3H4.5A2.5 2.5 0 002 5.5v1h5.07a.5.5 0 00.36-.16L9.4 4.3zm1.17.21l-2.4 2.53c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h5.1a5.5 5.5 0 018.4-6.74V6.84a2.5 2.5 0 00-2.5-2.34h-4.94zM14.5 10a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function FolderArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$il.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ik = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.07 3.3l1.32.99-1.96 2.05a.5.5 0 01-.36.16H2v-1A2.5 2.5 0 014.5 3h2.67c.32 0 .64.1.9.3zm.09 3.73l2.4-2.53h4.94A2.5 2.5 0 0118 6.84v3.42A5.5 5.5 0 009.6 17H4.5A2.5 2.5 0 012 14.5v-7h5.07c.41 0 .8-.17 1.09-.47zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.15-2.35a.5.5 0 00-.35-.15.5.5 0 00-.35.15l-2 2a.5.5 0 00.7.7L14 13.71v2.79a.5.5 0 101 0v-2.8l1.15 1.15a.5.5 0 10.7-.7l-2-2z"></path></svg>`,
	4,
)

function FolderArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ik.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ij = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.07 3.3l1.32.99-1.96 2.05a.5.5 0 01-.36.16H2v-1A2.5 2.5 0 014.5 3h2.67c.32 0 .64.1.9.3zm.09 3.73l2.4-2.53h4.94A2.5 2.5 0 0118 6.84v4.33a3 3 0 00-1-.17v-1a1 1 0 00-1-1h-4a1 1 0 00-1 1v1a3 3 0 00-3 3v3H4.5A2.5 2.5 0 012 14.5v-7h5.07c.41 0 .8-.17 1.09-.47zM11 12a2 2 0 00-2 2v3c0 1.1.9 2 2 2h6a2 2 0 002-2v-3a2 2 0 00-2-2h-1v-1.5a.5.5 0 00-.5-.5h-3a.5.5 0 00-.5.5V12h-1zm2 0v-1h2v1h-2z"></path></svg>`,
	4,
)

function FolderBriefcaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ij.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ii = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29L8.07 3.3a1.5 1.5 0 00-.9-.3H4.5A2.5 2.5 0 002 5.5v1h5.07a.5.5 0 00.36-.16L9.4 4.3zm1.17.21l-2.4 2.53c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h5.1a5.5 5.5 0 018.4-6.74V6.84a2.5 2.5 0 00-2.5-2.34h-4.94zm2.45 9.5a8.9 8.9 0 01.54-2.85c.17-.42.35-.72.53-.91.19-.2.33-.24.42-.24.1 0 .23.05.42.24.18.19.36.5.53.91.3.73.5 1.72.54 2.85h-2.98zm-.39-3.22l.2-.46a4.5 4.5 0 00-2.8 3.68h1.99c.05-1.23.27-2.36.61-3.22zm3.76 0a5.29 5.29 0 00-.21-.46c1.51.6 2.62 2 2.8 3.68H17a9.92 9.92 0 00-.61-3.22zm.61 4.22h1.98a4.5 4.5 0 01-2.8 3.68 9.92 9.92 0 00.82-3.68zm-2.07 3.76c-.19.2-.33.24-.42.24-.1 0-.23-.05-.42-.24-.18-.19-.36-.5-.53-.91a8.9 8.9 0 01-.54-2.85h2.98a8.9 8.9 0 01-.54 2.85c-.17.42-.35.72-.53.91zM10.02 15a4.5 4.5 0 002.8 3.68l-.2-.46a9.92 9.92 0 01-.61-3.22h-1.98z"></path></svg>`,
	4,
)

function FolderGlobeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ii.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ih = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.56 4.5h4.94a2.5 2.5 0 012.48 2.17l.01.17L18 7v7.5a2.5 2.5 0 01-2.34 2.5H4.5A2.5 2.5 0 012 14.66V7.5H7.22c.3-.04.6-.16.83-.36l.1-.1 2.41-2.54zM7.16 3c.28 0 .54.07.77.21l.14.09 1.31.99-1.95 2.05-.06.06a.5.5 0 01-.22.1H2v-1A2.5 2.5 0 014.34 3h2.83z"></path></svg>`,
	4,
)

function FolderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ih.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ig = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29L8.07 3.3a1.5 1.5 0 00-.9-.3H4.5A2.5 2.5 0 002 5.5v1h5.07a.5.5 0 00.36-.16L9.4 4.3zm1.17.21l-2.4 2.53c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h2.26a4.5 4.5 0 013.74-7h5c.93 0 1.79.28 2.5.76V6.84a2.5 2.5 0 00-2.5-2.34h-4.94zM8 14.5a2.5 2.5 0 012.5-2.5h1a.5.5 0 000-1h-1a3.5 3.5 0 100 7h1a.5.5 0 000-1h-1A2.5 2.5 0 018 14.5zm10 0a2.5 2.5 0 00-2.5-2.5h-1a.5.5 0 010-1h1a3.5 3.5 0 110 7h-1a.5.5 0 010-1h1a2.5 2.5 0 002.5-2.5zm-8 0c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function FolderLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ig.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$if = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 4.5h-4.94l-2.4 2.53-.11.1c-.23.2-.52.33-.83.36l-.15.01H2v7.16A2.5 2.5 0 004.5 17H9v-3.5a2.5 2.5 0 012.5-2.5h6c.17 0 .34.02.5.05V6.84l-.02-.17A2.5 2.5 0 0015.5 4.5zM7.93 3.21A1.5 1.5 0 007.17 3H4.34A2.5 2.5 0 002 5.5v1h5.15a.5.5 0 00.22-.1l.06-.06L9.4 4.3 8.06 3.3l-.14-.09zm6.58 12.72l-4.5-2.63c.1-.73.73-1.3 1.49-1.3h6c.83 0 1.5.67 1.5 1.5l-4.49 2.43zm.23 1.01l4.26-2.3v2.86c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5v-3.05l4.25 2.48c.15.09.33.1.49.01z"></path></svg>`,
	4,
)

function FolderMailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$if.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ie = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5A2.5 2.5 0 014.5 3h2.66c.33 0 .64.1.9.3l1.6 1.2h4.84A2.5 2.5 0 0117 7H5.82c-.71 0-1.33.51-1.47 1.22L2.77 16.3A2.5 2.5 0 012 14.5v-9zm1.77 10.9c-.06.32.18.6.5.6h10.91c.72 0 1.34-.5 1.47-1.21l1.4-7.2a.5.5 0 00-.5-.59H5.83a.5.5 0 00-.49.4l-1.56 8z"></path></svg>`,
	4,
)

function FolderOpenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ie.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$id = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.14 2.87c-.1.2-.14.4-.14.63v10.63a2.5 2.5 0 001.6 2.33l4.36 1.68c.35.14.72.13 1.04.02V6.56a1.5 1.5 0 00-.96-1.39l-5.9-2.3zm.8-.76l5.47 2.13A2.5 2.5 0 0112 6.57V16h1.5c.83 0 1.5-.67 1.5-1.5v-2.94l.96-3.82c.02-.12.04-.24.04-.36V3.5c0-.83-.67-1.5-1.5-1.5h-9c-.2 0-.4.04-.57.11z"></path></svg>`,
	4,
)

function FolderOpenVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$id.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ic = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.56 4.5h4.94a2.5 2.5 0 012.48 2.17l.01.17L18 7v4.38a2.24 2.24 0 00-2.76.2 2.75 2.75 0 10-4.54 3A2.31 2.31 0 009 17H4.5A2.5 2.5 0 012 14.66V7.5H7.22c.3-.04.6-.16.83-.36l.1-.1 2.41-2.54zM7.16 3c.28 0 .54.07.77.21l.14.09 1.31.99-1.95 2.05-.06.06a.5.5 0 01-.22.1H2v-1A2.5 2.5 0 014.34 3h2.83zm7.72 11.5zm-2.13 0a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM13 19c2.14 0 3-1.1 3-2.19a1.3 1.3 0 00-1.29-1.31H11.3A1.3 1.3 0 0010 16.81c0 1.1.86 2.19 3 2.19zm3.5-.5h-.02c.35-.51.52-1.1.52-1.69 0-.48-.15-.93-.4-1.31h1.33c.6 0 1.07.5 1.07 1.13 0 .93-.71 1.87-2.5 1.87zm.25-4a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function FolderPeopleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ic.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ib = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 4.5h-4.94l-2.4 2.53-.11.1c-.23.2-.52.33-.83.36l-.15.01H2v7.16A2.5 2.5 0 004.5 17h6.54a2.5 2.5 0 012.23-2.99A2.99 2.99 0 0115.5 9a3 3 0 012.5 1.34v-3.5l-.02-.17A2.5 2.5 0 0015.5 4.5zM7.93 3.21A1.5 1.5 0 007.17 3H4.34A2.5 2.5 0 002 5.5v1h5.15a.5.5 0 00.22-.1l.06-.06L9.4 4.3 8.06 3.3l-.14-.09zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function FolderPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ib.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ia = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29L8.07 3.3a1.5 1.5 0 00-.9-.3H4.5A2.5 2.5 0 002 5.5v1h5.07a.5.5 0 00.36-.16L9.4 4.3zm1.17.21l-2.4 2.53c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h5.1a5.5 5.5 0 018.4-6.74V6.84a2.5 2.5 0 00-2.5-2.34h-4.94zm-.56 10a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm4.5-3.5a3.5 3.5 0 00-2.8 5.6l4.9-4.9a3.48 3.48 0 00-2.1-.7zm0 7a3.5 3.5 0 002.8-5.6l-4.9 4.9c.59.44 1.31.7 2.1.7z"></path></svg>`,
	4,
)

function FolderProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ia.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.56 4.5h4.94a2.5 2.5 0 012.48 2.17l.01.17L18 7v6.88l-1.44-1.44A1.5 1.5 0 0014.08 14h-1.16a1.5 1.5 0 00-2.48-1.56l-2 2a1.5 1.5 0 000 2.13l.44.43H4.5A2.5 2.5 0 012 14.66V7.5H7.22c.3-.04.6-.16.83-.36l.1-.1 2.41-2.54zM7.16 3c.28 0 .54.07.77.21l.14.09 1.31.99-1.95 2.05-.06.06a.5.5 0 01-.22.1H2v-1A2.5 2.5 0 014.34 3h2.83zm4.7 10.86a.5.5 0 00-.71-.7l-2 1.99a.5.5 0 000 .7l2 2a.5.5 0 10.7-.7L10.72 16h5.58l-1.14 1.15a.5.5 0 10.7.7l2-2a.5.5 0 000-.7l-2-2a.5.5 0 10-.7.7L16.29 15h-5.58l1.15-1.14z"></path></svg>`,
	4,
)

function FolderSwapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29L8.07 3.3a1.5 1.5 0 00-.9-.3H4.5A2.5 2.5 0 002 5.5v1h5.07a.5.5 0 00.36-.16L9.4 4.3zm1.17.21l-2.4 2.53c-.29.3-.68.47-1.09.47H2v7A2.5 2.5 0 004.5 17h5.1a5.5 5.5 0 018.4-6.74V6.84a2.5 2.5 0 00-2.5-2.34h-4.94zM14.5 19a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm1.5-7v.15a3.01 3.01 0 00-3.62.48.5.5 0 00.7.7 2 2 0 012.39-.33H15a.5.5 0 000 1h1.5a.5.5 0 00.5-.5V12a.5.5 0 00-1 0zm-1.55 5.25a3 3 0 002.17-.88.5.5 0 00-.7-.7 2 2 0 01-2.39.33H14a.5.5 0 000-1h-1.5a.5.5 0 00-.5.5V17a.5.5 0 001 0v-.15a3.01 3.01 0 001.45.4z"></path></svg>`,
	4,
)

function FolderSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 4.5h-1.44l-2.4 2.53-.11.1c-.23.2-.52.33-.83.36l-.15.01H2v7.16A2.5 2.5 0 004.5 17H13v-1.94a.52.52 0 010-.12V14h-.5a.5.5 0 010-1h.5v-2h-.5a.5.5 0 010-1h.5V9h-.5a.5.5 0 01-.5-.5v-4zm2 0h-1V8h1V4.5zm1 0h.5a2.5 2.5 0 012.48 2.17l.01.17L18 7v7.5a2.5 2.5 0 01-2.34 2.5H14v-1.5h.5a.5.5 0 000-1H14v-.96a.48.48 0 000-.09v-.95h.5a.5.5 0 100-1H14V9h.5a.5.5 0 00.5-.5v-4zM7.93 3.21A1.5 1.5 0 007.17 3H4.34A2.5 2.5 0 002 5.5v1h5.15a.5.5 0 00.22-.1l.06-.06L9.4 4.3 8.06 3.3l-.14-.09z"></path></svg>`,
	4,
)

function FolderZipIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.24 2.18a.75.75 0 00-.98 1.14l1.75 1.5c.28.24.7.24.98 0l1.75-1.5a.75.75 0 10-.98-1.14L15.5 3.26l-1.26-1.08zM10 4c-.3 0-.58.19-.7.47l-4.25 10.5a.75.75 0 101.4.56L7.87 12h4.26l1.42 3.53a.75.75 0 101.4-.56L10.7 4.47A.75.75 0 0010 4zm0 2.75l1.52 3.75H8.48L10 6.75z"></path></svg>`,
	4,
)

function FontDecreaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.24 4.82a.75.75 0 01-.98-1.14l1.75-1.5c.28-.24.7-.24.98 0l1.75 1.5a.75.75 0 11-.98 1.14L15.5 3.74l-1.26 1.08zM10 3.75c-.3 0-.58.18-.7.47l-4.5 11a.75.75 0 001.4.56l1.44-3.53h4.72l1.45 3.53a.75.75 0 101.38-.56l-4.5-11a.75.75 0 00-.69-.47zm0 2.73l1.75 4.27h-3.5L10 6.48z"></path></svg>`,
	4,
)

function FontIncreaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.7 2.48a.75.75 0 00-1.4 0l-3.25 8.5a.75.75 0 001.4.53l.77-2.01h3.56l.77 2.01a.75.75 0 001.4-.53L7.7 2.48zM8.2 8H5.8L7 4.85 8.2 8zm-1.46 5.19a.75.75 0 10-.99 1.12l.5.44h-2.5a.75.75 0 000 1.5h2.5l-.5.44a.75.75 0 101 1.12l2-1.75a.75.75 0 000-1.13l-2-1.74zM13 12c.31 0 .59-.2.7-.48l3.25-8.5a.75.75 0 10-1.4-.53L13 9.15 10.45 2.5a.75.75 0 00-1.4.53l3.25 8.5c.11.29.39.48.7.48zm1.31 5.74a.75.75 0 01-1.05.07l-2-1.74a.75.75 0 010-1.13l2-1.75a.75.75 0 11.98 1.12l-.5.44h2.51a.75.75 0 010 1.5h-2.5l.5.44c.3.27.34.74.06 1.05z"></path></svg>`,
	4,
)

function FontSpaceTrackingInIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2c.31 0 .59.2.7.48l3.25 8.5a.75.75 0 01-1.4.53L7.78 9.5H4.22l-.77 2.01a.75.75 0 01-1.4-.53l3.25-8.5A.75.75 0 016 2zM4.8 8h2.4L6 4.85 4.8 8zm9.88 5.26a.75.75 0 011.06-.07l2 1.74a.75.75 0 010 1.13l-2 1.75a.75.75 0 11-.99-1.12l.5-.44H4.75l.5.44a.75.75 0 11-1 1.12l-2-1.74a.75.75 0 010-1.13l2-1.75a.75.75 0 011 1.12l-.5.44h10.5l-.5-.44a.75.75 0 01-.07-1.05zm.02-1.74a.75.75 0 01-1.4 0l-3.25-8.5a.75.75 0 011.4-.53L14 9.15l2.55-6.66a.75.75 0 011.4.53l-3.25 8.5z"></path></svg>`,
	4,
)

function FontSpaceTrackingOutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.16 2.97a.5.5 0 00-.32-.94 3.18 3.18 0 00-1.86 1.9c-.05.11-.1.23-.13.34A4 4 0 006.2 2.14c-.58.01-1.05.48-1.06 1.06A3.99 3.99 0 006.3 6.14l.03.03A4 4 0 003.2 9.76v.07a8.5 8.5 0 001 4.75l.36.66a.5.5 0 00.03.05l1 1.4a2.69 2.69 0 004.09.34.46.46 0 01.64 0 2.69 2.69 0 004.09-.34l1-1.4a.51.51 0 00.03-.05l.36-.66a8.5 8.5 0 001-4.75v-.07a4 4 0 00-4.64-3.63l-1.66.28c.01-.68.13-1.45.4-2.1.28-.67.7-1.15 1.26-1.34zm-5.25 6c-.28.1-.54.27-.72.6-.18.36-.31.93-.2 1.87a.5.5 0 01-.99.12c-.13-1.06 0-1.86.31-2.45.32-.6.8-.93 1.28-1.08a.5.5 0 01.32.94z"></path></svg>`,
	4,
)

function FoodAppleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c-.77 0-1.28.53-1.57 1.02-.3.5-.45 1.07-.47 1.44-.04.74.07 1.39.44 1.86.38.49.96.67 1.6.67.64 0 1.22-.2 1.6-.7.37-.47.49-1.11.44-1.83a3.56 3.56 0 00-.47-1.43C11.28 2.55 10.77 2 10 2zM3 9.78l3.2 2.94a1 1 0 001.43-.07l.86-.98a2 2 0 013 0l.86.98a1 1 0 001.43.07l3.2-2.94A2 2 0 0015 8H5a2 2 0 00-1.99 1.79zM17 11.14l-2.54 2.33a2 2 0 01-2.85-.15l-.86-.97a1 1 0 00-1.5 0l-.86.97a2 2 0 01-2.85.15L3 11.14V16h-.5a.5.5 0 000 1h15a.5.5 0 000-1H17v-4.86z"></path></svg>`,
	4,
)

function FoodCakeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.85 2.85a.5.5 0 00-.7-.7L14 5.29V2.5a.5.5 0 10-1 0v2.88a3.66 3.66 0 00-4.64 1.2l-6.09 8.95c-.42.63-.34 1.47.2 2 .55.55 1.42.62 2.05.18l8.93-6.18A3.57 3.57 0 0014.63 7h2.87a.5.5 0 100-1h-2.8l3.15-3.15z"></path></svg>`,
	4,
)

function FoodCarrotIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 7a5 5 0 00-9.93-.87c-.42 1.5-.83 2.29-1.04 2.63l-1.88 1.89a.5.5 0 00.35.85h.39l-2 2a2 2 0 00-1.15 3.55c.08.06.15.13.2.21A2 2 0 006.5 16.1l2-2v.4a.5.5 0 00.85.35l1.88-1.87c.34-.21 1.15-.63 2.7-1.07A4.97 4.97 0 0018 7zM7.3 11.5h1.2v1.19l-2.78 2.78a.75.75 0 00-.22.53 1 1 0 01-1.78.63c-.1-.13-.22-.25-.35-.35A1 1 0 014 14.5c.18 0 .37-.06.51-.21l2.8-2.79z"></path></svg>`,
	4,
)

function FoodChickenLegIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.47 9.6a.5.5 0 00.14-.98 2.14 2.14 0 00-2.35 2.16.5.5 0 001 0c0-.8.7-1.24 1.2-1.17zM3.99 7.14c-2.41 1.91-2.48 5.15-1.34 7.32a4.89 4.89 0 004.42 2.77c.54 0 .94-.01 1.24-.03.94-.03 1.11-.04 2.42.48a5.6 5.6 0 005.12-.47c1.39-.87 2.19-2.88 2.05-4.52-.08-.98 0-1.36.09-1.86.06-.33.13-.7.17-1.34a7.1 7.1 0 00-1.05-3.81 7.63 7.63 0 00-2.72-2.85 6.18 6.18 0 00-5.86-.15 7.15 7.15 0 00-3.07 3 5.1 5.1 0 01-1.47 1.46zm10.91 3.33a4.5 4.5 0 11-8.99 0 4.5 4.5 0 018.99 0z"></path></svg>`,
	4,
)

function FoodEggIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.63 3.7c-1.5 1.5-1.76 3.87-1.72 5.67a.4.4 0 01-.37.41c-1.52.1-3.39.41-4.92 1.23-.52.27-.7.8-.58 1.27.12.45.5.83 1.02.92.7.14 1.5.3 2.18.52.35.1.65.21.9.33.26.12.42.22.5.3.09.09.2.25.31.5.12.26.23.57.33.91.21.69.38 1.48.51 2.18.1.52.47.9.93 1.02.47.13 1-.06 1.27-.57.82-1.54 1.12-3.4 1.23-4.93a.4.4 0 01.4-.37c1.8.05 4.19-.22 5.69-1.72.89-.9 1.33-2.08 1.54-3.25.2-1.17.17-2.37.08-3.32a3 3 0 00-2.73-2.73 12.7 12.7 0 00-3.32.08c-1.17.2-2.35.65-3.25 1.54zm4.62.8a.75.75 0 110 1.5.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function FoodFishIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.43 2.21a.65.65 0 00-.86 0 5.72 5.72 0 00-1.92 4.35c0 .18.1.34.24.43A7.4 7.4 0 019.63 8.4a.5.5 0 00.74 0 7.4 7.4 0 011.74-1.42.5.5 0 00.24-.43c.02-1.59-.62-3.2-1.92-4.35zm-7.41 10a.66.66 0 01.6-.72A6.36 6.36 0 0110 15.33a6.36 6.36 0 016.38-3.84c.36.03.64.35.6.72A6.37 6.37 0 0110.64 18h-.46c-.06 0-.12 0-.18-.02a.66.66 0 01-.18.02h-.46a6.37 6.37 0 01-6.34-5.8zM10 10.83a6.36 6.36 0 00-6.38-3.84.66.66 0 00-.6.72c.08.9.35 1.75.76 2.5a.5.5 0 00.44.26c2.1.01 4.02.92 5.36 2.39.11.12.27.18.42.16a.5.5 0 00.42-.16 7.36 7.36 0 015.36-2.4.5.5 0 00.44-.25c.41-.75.68-1.6.76-2.5a.66.66 0 00-.6-.72A6.36 6.36 0 0010 10.83z"></path></svg>`,
	4,
)

function FoodGrainsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 3a.5.5 0 01.5.41V6.5a2.5 2.5 0 01-2 2.45v7.55a.5.5 0 01-1 .09V8.95a2.5 2.5 0 01-2-2.28V3.5a.5.5 0 011-.09V6.5c0 .65.42 1.2 1 1.41V3.5a.5.5 0 011-.09v4.5a1.5 1.5 0 001-1.26V3.5c0-.28.22-.5.5-.5zm5 0a.5.5 0 01.5.41V16.5a.5.5 0 01-1 .09V11h-1.5a.5.5 0 01-.5-.41V5.5A2.5 2.5 0 0114.5 3z"></path></svg>`,
	4,
)

function FoodIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.96c0-1.1.9-2.03 2.03-1.96 4.45.28 8.35 1.77 11.4 4.7.87.82.7 2.17-.2 2.86l-.25.19-.4-.44V9.3A16.37 16.37 0 004.88 4.5H4v-.55zM4 5.5V16.5a1.5 1.5 0 002.4 1.2L8 16.5a1 1 0 002 0v-2a.5.5 0 011-.06V15a1 1 0 002 0v-2.24c.82-.6 2.09-1.56 3.19-2.4l-.33-.37A15.37 15.37 0 004.87 5.5H4zm4.25 2.74a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.97 2a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-2.96 2.5a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"></path></svg>`,
	4,
)

function FoodPizzaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.78 7.45a.5.5 0 00-.5.5v4.1c0 .27.22.5.5.5h4.34a.5.5 0 00.5-.5v-4.1a.5.5 0 00-.5-.5H6.78zm.5 1h3.34v3.1H7.28v-3.1zM5.45 2.5c-1.63 0-3 1.1-3.6 2.48-.6 1.33-.49 3 .81 4.22v5.98c0 .3-.01.87.28 1.36.36.6 1.08.96 2.26.96h10.18c.41 0 .78-.02 1.1-.07.3-.06.6-.17.85-.39.5-.43.59-1.13.59-1.95 0-.88-.04-1.92-.07-2.93a66.88 66.88 0 01-.07-2.97 4.68 4.68 0 001.28-3 3.73 3.73 0 00-3.68-3.69H5.45zm7.38 1c.63 0 1.39.3 2 .82.6.51.99 1.18 1 1.85-.05.75-.21 1.24-.41 1.58-.16.27-.35.48-.56.69l-.16.15a13.81 13.81 0 00-.31.3l-.14.13v.2c-.04 1-.03 2.44-.02 3.84v.01l.01 2.02c0 .4-.02.7-.06.9-.04.2-.1.28-.14.32-.04.04-.12.1-.32.13a9.84 9.84 0 01-.89.06H5.2c-1 0-1.29-.29-1.4-.47-.14-.23-.14-.51-.14-.84V8.99a.5.5 0 00-.18-.39 2.65 2.65 0 01-.72-3.22 3.05 3.05 0 012.7-1.88h7.37z"></path></svg>`,
	4,
)

function FoodToastIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 10a.5.5 0 100-1 .5.5 0 000 1zm.5 3.5a.5.5 0 11-1 0 .5.5 0 011 0zM3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm2.5-1a.5.5 0 000 1h9a.5.5 0 000-1h-9zm1 6a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM8 13.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zm1-4c0 .28.22.5.5.5h5a.5.5 0 000-1h-5a.5.5 0 00-.5.5zm.5 3.5a.5.5 0 000 1h5a.5.5 0 000-1h-5z"></path></svg>`,
	4,
)

function FormIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 11a.5.5 0 100-1 .5.5 0 000 1z"></path><path d="M6 3h6a3 3 0 013 3v6a2.99 2.99 0 01-3 3H6a2.99 2.99 0 01-3-3V6a3 3 0 013-3zm-.5 3a.5.5 0 000 1h7a.5.5 0 000-1h-7zm1 6a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm3-2a.5.5 0 000 1h3a.5.5 0 000-1h-3z"></path><path d="M5.76 16A3 3 0 008 17h4.5a4.5 4.5 0 004.5-4.5V8a3 3 0 00-1-2.24v6.74c0 .12 0 .24-.02.36A3.5 3.5 0 0112.5 16H5.76z"></path></svg>`,
	8,
)

function FormMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 9.5a.5.5 0 11-1 0 .5.5 0 011 0zM6.5 14a.5.5 0 100-1 .5.5 0 000 1zM3 6a3 3 0 013-3h8a3 3 0 013 3v3.6c-.75-.38-1.6-.6-2.5-.6h-5a.5.5 0 000 1h1.84a5.5 5.5 0 00-1.74 7H6a3 3 0 01-3-3V6zm2.5-1a.5.5 0 000 1h9a.5.5 0 000-1h-9zm1 6a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM8 13.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zm11 1a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function FormNewIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2.75a.75.75 0 00-1.4-.39 1.71 1.71 0 01-.1.16l-.33.41c-.3.33-.72.68-1.2.87a.75.75 0 00.56 1.4c.36-.15.69-.34.97-.55v4.6a.75.75 0 001.5 0v-6.5zm8 1.75a2.5 2.5 0 115 0v3a2.5 2.5 0 01-5 0v-3zm3.5 0a1 1 0 10-2 0v3a1 1 0 102 0v-3zM3 12.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1H4v2h1.5a.5.5 0 010 1H4v1.5a.5.5 0 01-1 0v-5zm5 0c0-.28.22-.5.5-.5H10a2 2 0 010 4H9v1.5a.5.5 0 01-1 0v-5zM9 15h1a1 1 0 100-2H9v2zm5.75-3a1.75 1.75 0 000 3.5h.5a.75.75 0 010 1.5h-.76a.49.49 0 01-.49-.49v-.01a.5.5 0 00-1 0v.01c0 .82.67 1.49 1.49 1.49h.76a1.75 1.75 0 100-3.5h-.5a.75.75 0 010-1.5h.76c.27 0 .49.22.49.49v.01a.5.5 0 101 0v-.01c0-.82-.67-1.49-1.49-1.49h-.76zM7.99 4.37v.01a.75.75 0 01-1.48-.25c-.07.41 0 0 0 0a1.71 1.71 0 01.1-.37A2.7 2.7 0 019.25 2c.96 0 1.73.38 2.22 1 .48.61.65 1.4.52 2.13-.14.81-.6 1.3-1.15 1.63a6.7 6.7 0 01-1.48.59c-.45.16-.76.33-.98.57-.11.13-.22.3-.3.58h3.17a.75.75 0 010 1.5h-4a.75.75 0 01-.75-.75c0-1.01.27-1.77.76-2.33.48-.53 1.09-.8 1.59-.98l.45-.16c.32-.1.56-.2.79-.32.24-.14.37-.3.42-.59a1.2 1.2 0 00-.22-.94c-.18-.23-.5-.43-1.04-.43-.62 0-.9.25-1.06.45a1.25 1.25 0 00-.2.43z"></path></svg>`,
	4,
)

function Fps120Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.99 4.38a.75.75 0 01-1.48-.25v-.05a1.92 1.92 0 01.1-.32A2.7 2.7 0 014.25 2c.96 0 1.73.38 2.22 1 .48.61.65 1.4.52 2.13-.14.81-.6 1.3-1.15 1.63a6.71 6.71 0 01-1.48.59c-.45.16-.76.33-.98.57-.11.13-.22.3-.3.58h3.17a.75.75 0 010 1.5h-4a.75.75 0 01-.75-.75c0-1.01.27-1.77.76-2.33.48-.53 1.09-.8 1.59-.98l.45-.16c.32-.1.56-.2.79-.32.24-.14.37-.3.42-.59a1.2 1.2 0 00-.22-.94c-.18-.23-.5-.43-1.04-.43-.62 0-.9.25-1.06.45a1.25 1.25 0 00-.2.43zm0 0zm0 0zM16.5 2A2.5 2.5 0 0014 4.5v3a2.5 2.5 0 005 0v-3A2.5 2.5 0 0016.5 2zm1 5.5a1 1 0 11-2 0v-3a1 1 0 112 0v3zM3.5 12a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1.5a.5.5 0 000-1H4v-2h2.5a.5.5 0 000-1h-3zm5 0a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1a2 2 0 100-4H8.5zm.5 3v-2h1a1 1 0 110 2H9zm4-1.25c0-.97.78-1.75 1.75-1.75h.76c.82 0 1.49.67 1.49 1.49v.01a.5.5 0 01-1 0v-.01a.49.49 0 00-.49-.49h-.76a.75.75 0 000 1.5h.5a1.75 1.75 0 110 3.5h-.76c-.82 0-1.49-.67-1.49-1.49v-.01a.5.5 0 011 0v.01c0 .27.22.49.49.49h.76a.75.75 0 000-1.5h-.5c-.97 0-1.75-.78-1.75-1.75zM8.75 2c.41 0 .75.34.75.75V5.5H11V2.75a.75.75 0 011.5 0V9.5a.75.75 0 01-1.5 0V7H8.75A.75.75 0 018 6.25v-3.5c0-.41.34-.75.75-.75zM2.99 4.38z"></path></svg>`,
	4,
)

function Fps240Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 2A2.5 2.5 0 0010 4.5v3a2.5 2.5 0 005 0v-3A2.5 2.5 0 0012.5 2zm0 6.5a1 1 0 01-1-1v-3a1 1 0 112 0v3a1 1 0 01-1 1zm-9 3.5a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1.5a.5.5 0 000-1H4v-2h2.5a.5.5 0 000-1h-3zm5 0a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1a2 2 0 100-4H8.5zm1.5 3H9v-2h1a1 1 0 110 2zm3-1.25c0-.97.78-1.75 1.75-1.75h.76c.82 0 1.49.67 1.49 1.49v.01a.5.5 0 01-1 0v-.01a.49.49 0 00-.49-.49h-.76a.75.75 0 000 1.5h.5a1.75 1.75 0 110 3.5h-.76c-.82 0-1.49-.67-1.49-1.49v-.01a.5.5 0 011 0v.01c0 .27.22.49.49.49h.76a.75.75 0 000-1.5h-.5c-.97 0-1.75-.78-1.75-1.75zm-6.5-8.5c.63 0 1-.46 1-.88 0-.4-.37-.87-1-.87-.26 0-.48.08-.64.2-.2.15-.41.3-.65.3-.62 0-1.09-.58-.7-1.06A2.54 2.54 0 016.5 2C7.88 2 9 3.06 9 4.38a2.3 2.3 0 01-.66 1.6A2.37 2.37 0 016.62 10h-.25c-.78 0-1.47-.38-1.9-.96-.36-.48.1-1.04.7-1.04.25 0 .47.16.67.32.15.11.33.18.53.18h.25a.87.87 0 100-1.75H6.5a.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function Fps30Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2A2.5 2.5 0 004 4.5v3A2.5 2.5 0 106.5 5h-.1c-.32 0-.62.06-.9.17V4.5a1 1 0 011-1h.25c.41 0 .75.34.75.75a.75.75 0 001.5 0C9 3.01 8 2 6.75 2H6.5zm-1 5.5v-.1c0-.5.4-.9.9-.9h.1a1 1 0 11-1 1zm6-3a1 1 0 112 0v3a1 1 0 11-2 0v-3zm1-2.5A2.5 2.5 0 0010 4.5v3a2.5 2.5 0 005 0v-3A2.5 2.5 0 0012.5 2zm-9 10a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1.5a.5.5 0 000-1H4v-2h2.5a.5.5 0 000-1h-3zm5 0a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1a2 2 0 100-4H8.5zm1.5 3H9v-2h1a1 1 0 110 2zm3-1.25c0-.97.78-1.75 1.75-1.75h.75c.83 0 1.5.67 1.5 1.5a.5.5 0 01-1 0 .5.5 0 00-.5-.5h-.75a.75.75 0 000 1.5h.5a1.75 1.75 0 110 3.5h-.75a1.5 1.5 0 01-1.5-1.5.5.5 0 011 0c0 .28.22.5.5.5h.75a.75.75 0 000-1.5h-.5c-.97 0-1.75-.78-1.75-1.75z"></path></svg>`,
	4,
)

function Fps60Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 10A2.5 2.5 0 007 7.5v-3A2.5 2.5 0 104.5 7h.1c.32 0 .62-.06.9-.17v.67a1 1 0 01-1 1h-.25a.75.75 0 01-.75-.75.75.75 0 00-1.5 0C2 8.99 3 10 4.25 10h.25zm1-5.5v.1c0 .5-.4.9-.9.9h-.1a1 1 0 111-1zm5-2.5A2.5 2.5 0 008 4.5v3A2.5 2.5 0 1010.5 5h-.1c-.32 0-.62.06-.9.17V4.5a1 1 0 011-1h.25c.41 0 .75.34.75.75a.75.75 0 001.5 0C13 3.01 12 2 10.75 2h-.25zm-1 5.5v-.1c0-.5.4-.9.9-.9h.1a1 1 0 11-1 1zm6-3a1 1 0 112 0v3a1 1 0 11-2 0v-3zm1-2.5A2.5 2.5 0 0014 4.5v3a2.5 2.5 0 005 0v-3A2.5 2.5 0 0016.5 2zm-13 10a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1.5a.5.5 0 000-1H4v-2h2.5a.5.5 0 000-1h-3zm5 0a.5.5 0 00-.5.5v5a.5.5 0 001 0V16h1a2 2 0 100-4H8.5zm2.5 2a1 1 0 01-1 1H9v-2h1a1 1 0 011 1zm2-.25c0-.97.78-1.75 1.75-1.75h.75c.83 0 1.5.67 1.5 1.5a.5.5 0 01-1 0 .5.5 0 00-.5-.5h-.75a.75.75 0 000 1.5h.5a1.75 1.75 0 110 3.5h-.75a1.5 1.5 0 01-1.5-1.5.5.5 0 011 0c0 .28.22.5.5.5h.75a.75.75 0 000-1.5h-.5c-.97 0-1.75-.78-1.75-1.75z"></path></svg>`,
	4,
)

function Fps960Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.08 5.68c.28-1.63 2-2.58 3.53-1.95l.36.14a.75.75 0 10.56-1.38l-.36-.15A4.08 4.08 0 009.6 5.43L9 9H5.74a.75.75 0 000 1.5h2.98l-.5 2.96a2.58 2.58 0 01-3.92 1.75l-.16-.1a.75.75 0 00-.8 1.27l.16.1c2.46 1.55 5.7.1 6.2-2.77l.55-3.21h2.99a.75.75 0 100-1.5h-2.74l.57-3.32z"></path></svg>`,
	4,
)

function FStopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.25C3 4.01 4 3 5.25 3h1.87a.75.75 0 110 1.5H5.25a.75.75 0 00-.75.75v1.87a.75.75 0 11-1.5 0V5.25zm9.13-1.5c0-.41.34-.75.75-.75h1.87C15.99 3 17 4 17 5.25v1.87a.75.75 0 01-1.5 0V5.25a.75.75 0 00-.75-.75h-1.87a.75.75 0 01-.75-.75zm-8.38 8.38c.41 0 .75.34.75.75v1.87c0 .41.34.75.75.75h1.87a.75.75 0 010 1.5H5.25C4.01 17 3 16 3 14.75v-1.87c0-.41.34-.75.75-.75zm12.5 0c.41 0 .75.34.75.75v1.87c0 1.24-1 2.25-2.25 2.25h-1.87a.75.75 0 010-1.5h1.87c.41 0 .75-.34.75-.75v-1.87c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function FullScreenMaximizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 5.5a.5.5 0 01-.5-.5V2.75a.75.75 0 00-1.5 0V5c0 1.1.9 2 2 2h2.25a.75.75 0 000-1.5H15zM5.5 15a.5.5 0 00-.5-.5H2.75a.75.75 0 010-1.5H5a2 2 0 012 2v2.25a.75.75 0 01-1.5 0V15zm9 0c0-.28.22-.5.5-.5h2.25a.75.75 0 000-1.5H15a2 2 0 00-2 2v2.25a.75.75 0 001.5 0V15zm-9-10a.5.5 0 01-.5.5H2.75a.75.75 0 000 1.5H5a2 2 0 002-2V2.75a.75.75 0 00-1.5 0V5z"></path></svg>`,
	4,
)

function FullScreenMinimizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 4a5.5 5.5 0 100 11h5a5.5 5.5 0 100-11h-5zM6 7.5a.5.5 0 011 0V9h1.5a.5.5 0 010 1H7v1.5a.5.5 0 01-1 0V10H4.5a.5.5 0 010-1H6V7.5zm9 .5a1 1 0 11-2 0 1 1 0 012 0zm-3 4a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function GamesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.5A2.5 2.5 0 014.5 4H7v2H4.5a1.5 1.5 0 100 3H7v7H4.5A2.5 2.5 0 012 13.5v-7zM8 16V9.5c0 .83.67 1.5 1.5 1.5H11v.5c0 .65.42 1.2 1 1.41V16H8zm2-8h2V4H8v2h.5c.83 0 1.5.67 1.5 1.5V8zm5.5 5H13v3h2.5a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 4H13v4h.5c.83 0 1.5.67 1.5 1.5v.5h.5a1.5 1.5 0 010 3zm-11-6a.5.5 0 000 1h4a.5.5 0 000-1h-4zM9 9.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm3.5 1.5a.5.5 0 000 1h3a.5.5 0 000-1h-3z"></path></svg>`,
	4,
)

function GanttChartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.08 2.22A.5.5 0 0111.5 2h3c.28 0 .5.22.5.5v3c.6.46 1 1.18 1 2v7a2.5 2.5 0 01-2.5 2.5h-7A2.5 2.5 0 014 14.5v-7A2.5 2.5 0 016.5 5h.41c-.2-.58-.76-1-1.41-1h-1a.5.5 0 010-1h1c1.2 0 2.22.86 2.45 2h1.28l1.85-2.78zM14 3h-2.23l-1.34 2h3.07c.17 0 .34.02.5.05V3zm-1.15 5.15a.5.5 0 00-.7 0L10 10.29 7.85 8.15a.5.5 0 10-.7.7L9.29 11l-2.14 2.15a.5.5 0 00.7.7L10 11.71l2.15 2.14a.5.5 0 00.7-.7L10.71 11l2.14-2.15a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function GasIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 17V4.5A2.5 2.5 0 016.5 2h5A2.5 2.5 0 0114 4.5v9a1.5 1.5 0 003 0V9.17c0-.33-.1-.64-.3-.9L15.6 6.8a.5.5 0 01.8-.6l1.1 1.47c.32.43.5.96.5 1.5v4.33a2.5 2.5 0 01-4 2V17h.5a.5.5 0 010 1h-11a.5.5 0 010-1H4zM6.5 4a.5.5 0 00-.5.5v3c0 .28.22.5.5.5h5a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-5z"></path></svg>`,
	4,
)

function GasPumpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 8v4H2V8h4zm-3.85 8.85A.5.5 0 012 16.5V13h4v2a2 2 0 01-2 2H2.5a.5.5 0 01-.35-.15zM2.5 3H4a2 2 0 012 2v2H2V3.5a.5.5 0 01.5-.5zM18 6.5V10h-4V8a2 2 0 012-2h1.5a.5.5 0 01.5.5zm0 8V11h-4v2a2 2 0 002 2h1.5a.5.5 0 00.5-.5zm-7.85-3.35a.5.5 0 10.7.7l1.5-1.5a.5.5 0 000-.7l-1.5-1.5a.5.5 0 10-.7.7l.64.65H8a.5.5 0 100 1h2.8l-.65.65z"></path></svg>`,
	4,
)

function GatherIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 10-8-7.75c.6-.48 1.3-.85 2.05-1.06a6 6 0 018.13-4.78.5.5 0 01-.36.93A5 5 0 005.1 9.01a5.58 5.58 0 013.57 1c.06-.17.15-.34.28-.48.07-.09.2-.2.34-.33l.56-.48a125.12 125.12 0 012.96-2.4l.27-.22.37-.3a.5.5 0 01.75.64l-.11.2a323.59 323.59 0 01-.69 1.2l-.23.4-.3.53a184.46 184.46 0 01-1.48 2.48 4.28 4.28 0 01-.16.23 1.5 1.5 0 01-.84.5A5.48 5.48 0 019.75 18H10zm5.6-10.18a6 6 0 01-1.36 6.42.5.5 0 11-.7-.7 5 5 0 001.12-5.36.5.5 0 01.93-.36zM8 18.24a4.5 4.5 0 11-5-7.48 4.5 4.5 0 015 7.48zm-2.15-6.1a.5.5 0 00-.85.36V14H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H6v-1.5a.5.5 0 00-.15-.35z"></path></svg>`,
	4,
)

function GaugeAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zm1.82-12.66a5 5 0 00-5.36 8.2.5.5 0 01-.7.7 6 6 0 016.42-9.83.5.5 0 01-.36.93zm3.77 2.48a6 6 0 01-1.35 6.42.5.5 0 11-.7-.7 5 5 0 001.12-5.36.5.5 0 01.93-.36zm-1.5-2a.5.5 0 01.1.62l-.1.2a323.59 323.59 0 01-.69 1.2l-.23.4-.3.53a184.46 184.46 0 01-1.48 2.48 4.28 4.28 0 01-.16.23 1.5 1.5 0 11-2.28-1.95c.07-.09.2-.2.34-.33l.56-.48a125.12 125.12 0 012.96-2.4l.27-.22.37-.3a.5.5 0 01.64.02z"></path></svg>`,
	4,
)

function GaugeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.67 7.59a1.5 1.5 0 01-.23-2.3l2.84-2.85a1.5 1.5 0 012.28.19l.47.65L7.3 8.01l-.63-.42zm1.48 1l4.47-4.49 1.33 1.84a.5.5 0 00.1.11l1.85 1.33-4.48 4.47-1.26-1.87a.5.5 0 00-.14-.14L8.15 8.58zm3.84 4.11l4.73-4.73.65.47c.75.54.84 1.63.19 2.28l-2.84 2.84a1.5 1.5 0 01-2.31-.22l-.42-.64zm-3.8-2.89L2.4 15.6a1.41 1.41 0 102 2l5.78-5.78-.8-1.2-1.2-.8zM12 16.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h2a.5.5 0 010 1h-7a.5.5 0 010-1h2a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function GavelIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM3.5 16.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM5.75 4a.75.75 0 00-.3 1.43l9.06 4.1-9.6 4.8a.75.75 0 10.68 1.34l11-5.5a.75.75 0 00-.03-1.35L9.23 5.5h5.52a.75.75 0 000-1.5h-9z"></path></svg>`,
	4,
)

function GestureIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.4 3c1.39 0 2.52 1.19 2.6 2.68v8.48c0 1.51-1.09 2.75-2.45 2.84H4.6c-1.39 0-2.52-1.19-2.6-2.68V5.84C2 4.33 3.09 3.1 4.45 3H15.4zM6.85 7C5.18 7 4 8.32 4 10c0 1.64 1.26 3 2.85 3 1.2 0 2.07-.8 2.14-1.63l.01-.12V9.9a.52.52 0 00-.44-.4h-.1l-.92-.01h-.1A.51.51 0 007 10c0 .25.2.45.44.5h.48v.83c-.07.32-.47.67-1.07.67-.96 0-1.77-.88-1.77-2 0-1.17.74-2 1.77-2 .46 0 .83.07 1.1.2.26.12.59.02.72-.23.14-.24.03-.55-.24-.67C8 7.1 7.47 7 6.85 7zM11 7a.5.5 0 00-.5.41v5.18a.5.5 0 001 0V7.41A.5.5 0 0011 7zm4.5 0h-2a.5.5 0 00-.5.41v5.18a.5.5 0 001 0V11h1.59a.5.5 0 000-1H14V8h1.59a.5.5 0 000-1h-.09z"></path></svg>`,
	4,
)

function GifIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2H4.75A2.75 2.75 0 002 4.75V7h2.27A2 2 0 017 4.27V2zM2 8v3.25A2.75 2.75 0 004.75 14H7V8.7l-1.65 1.65a.5.5 0 01-.7-.7L6.29 8H2zm7.02 6H8V8.7l1.65 1.65a.5.5 0 00.7-.7L8.71 8H18v2.26A5.5 5.5 0 009.02 14zM18 7h-7.27A2 2 0 008 4.27V2h7.25A2.75 2.75 0 0118 4.75V7zM8 6v1h1a1 1 0 10-1-1zM7 7H6a1 1 0 111-1v1zm12 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function GiftCardAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2H4.75A2.75 2.75 0 002 4.75V7h2.27A2 2 0 017 4.27V2zM2 8v3.25A2.75 2.75 0 004.75 14H7V8.7l-1.65 1.65a.5.5 0 01-.7-.7L6.29 8H2zm6 6h1.02A5.5 5.5 0 0118 10.26V8H8.7l1.65 1.65a.5.5 0 01-.7.7L8 8.71V14zm10-7h-7.27A2 2 0 008 4.27V2h7.25A2.75 2.75 0 0118 4.75V7zM8 7V6a1 1 0 111 1H8zM7 7H6a1 1 0 111-1v1zm12 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function GiftCardArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 4H4.75A2.75 2.75 0 002 6.75V9h2.27A2 2 0 017 6.27V4zm1 4v1h1a1 1 0 10-1-1zm2.73 1A2 2 0 008 6.27V4h7.25A2.75 2.75 0 0118 6.75V9h-7.27zm-2.02 1l1.64 1.65a.5.5 0 01-.7.7L8 10.71V16h7.25A2.75 2.75 0 0018 13.25V10H8.7zM7 16v-5.3l-1.65 1.65a.5.5 0 01-.7-.7L6.29 10H2v3.25A2.75 2.75 0 004.75 16H7zm0-8a1 1 0 10-1 1h1V8z"></path></svg>`,
	4,
)

function GiftCardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2H4.75A2.75 2.75 0 002 4.75V7h2.27A2 2 0 017 4.27V2zm1 4v1h1a1 1 0 10-1-1zm2.73 1A2 2 0 008 4.27V2h7.25A2.75 2.75 0 0118 4.75V7h-7.27zM8.71 8l1.64 1.65a.5.5 0 01-.7.7L8 8.71V14h1v-.5a2.5 2.5 0 012.5-2.5h6c.17 0 .34.02.5.05V8H8.7zM7 14V8.7l-1.65 1.65a.5.5 0 01-.7-.7L6.29 8H2v3.25A2.75 2.75 0 004.75 14H7zm0-8a1 1 0 10-1 1h1V6zm12 7.5v3c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5v-3c0-.83.67-1.5 1.5-1.5h6c.83 0 1.5.67 1.5 1.5zm-1 3v-1c-.83 0-1.5.67-1.5 1.5h1c0-.28.22-.5.5-.5zm-.5-3.5h-1c0 .83.67 1.5 1.5 1.5v-1a.5.5 0 01-.5-.5zm-6 0a.5.5 0 01-.5.5v1c.83 0 1.5-.67 1.5-1.5h-1zm-.5 3.5c.28 0 .5.22.5.5h1c0-.83-.67-1.5-1.5-1.5v1zm3.5-3a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"></path></svg>`,
	4,
)

function GiftCardMoneyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 4H7v2.27A2 2 0 004.27 9H2V6.75A2.75 2.75 0 014.75 4zM2 12.25V10h4.3l-1.65 1.65a.5.5 0 00.7.7L7 10.71V15H4.75A2.75 2.75 0 012 12.25zM8 15h5.25A2.75 2.75 0 0016 12.25V10H8.7l1.65 1.65a.5.5 0 01-.7.7L8 10.71V15zm2.73-6H16V6.75A2.75 2.75 0 0013.25 4H8v2.27A2 2 0 0110.73 9zM8 9V8a1 1 0 111 1H8zM6 9h1V8a1 1 0 10-1 1zm.75 8c-.85 0-1.62-.39-2.12-1h8.62A3.75 3.75 0 0017 12.25v-5.5-.12c.61.5 1 1.27 1 2.12v3.5A4.75 4.75 0 0113.25 17h-6.5z"></path></svg>`,
	4,
)

function GiftCardMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 11v7h-3A2.5 2.5 0 014 15.66V11h5.5zm6.5 0v4.5a2.5 2.5 0 01-2.34 2.5H10.5v-7H16zm-4-9a2.5 2.5 0 012 4h2a1 1 0 011 1v2a1 1 0 01-1 1h-5.5V6h-1v4H4a1 1 0 01-1-1V7a1 1 0 011-1h2a2.5 2.5 0 114-3c.46-.6 1.18-1 2-1zm0 1c-.83 0-1.5.67-1.5 1.5V6H12a1.5 1.5 0 000-3zM8 3a1.5 1.5 0 00-.14 3H9.5V4.36A1.5 1.5 0 008 3z"></path></svg>`,
	4,
)

function GiftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ht = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 9.5c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-2C6.67 5 6 5.67 6 6.5v3zm-5-4C1 6.33 1.67 7 2.5 7h1C4.33 7 5 6.33 5 5.5v-3C5 1.67 4.33 1 3.5 1h-1C1.67 1 1 1.67 1 2.5v3zM7.5 4a1.5 1.5 0 110-3h2a1.5 1.5 0 010 3h-2zM1 9.5c0 .83.67 1.5 1.5 1.5h1a1.5 1.5 0 000-3h-1C1.67 8 1 8.67 1 9.5z"></path></svg>`,
	4,
)

function GlanceDefaultIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ht.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3h1c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 0113 7.5v-3c0-.83.67-1.5 1.5-1.5zm-10 0h5c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 013 7.5v-3C3 3.67 3.67 3 4.5 3zm0 8h1c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 013 15.5v-3c0-.83.67-1.5 1.5-1.5zM9 12.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 019 15.5v-3z"></path></svg>`,
	4,
)

function GlanceHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 14.5v1c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-3c-.83 0-1.5.67-1.5 1.5zm0-10v5c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-5C9 3.67 8.33 3 7.5 3h-3C3.67 3 3 3.67 3 4.5zm8 0v1c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-3c-.83 0-1.5.67-1.5 1.5zM12.5 9c-.83 0-1.5.67-1.5 1.5v5c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-5c0-.83-.67-1.5-1.5-1.5h-3z"></path></svg>`,
	4,
)

function GlanceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.19 4a2 2 0 00-1.52.7L2.37 8.5A1.5 1.5 0 002 9.5v3A2.5 2.5 0 004.5 15h2A2.5 2.5 0 009 12.5V11h2v1.5a2.5 2.5 0 002.5 2.5h2a2.5 2.5 0 002.5-2.5v-3c0-.43-.18-.82-.47-1.09l-3.2-3.72A2 2 0 0012.8 4H12a.5.5 0 100 1h.81a1 1 0 01.76.35L15.86 8H12.5c-.83 0-1.5.67-1.5 1.5v.5H9v-.5C9 8.67 8.33 8 7.5 8H4.14l2.29-2.65A1 1 0 017.19 5H8a.5.5 0 000-1h-.81z"></path></svg>`,
	4,
)

function GlassesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L4.89 5.6 2.36 8.52c-.22.27-.36.6-.36.98v3A2.5 2.5 0 004.5 15h2A2.5 2.5 0 009 12.5V11h1.3l.7.7v.8a2.5 2.5 0 002.5 2.5h.8l2.85 2.85a.5.5 0 00.7-.7l-15-15zM7.3 8H4.14L5.6 6.3 7.3 8zm9.48 6.65L11.1 8.97A1.5 1.5 0 0112.5 8h3.36l-2.29-2.65a1 1 0 00-.76-.35H12a.5.5 0 010-1h.81a2 2 0 011.52.7l3.2 3.71c.29.28.47.66.47 1.09v3c0 .92-.5 1.72-1.23 2.15zM6.32 4.2l.8.8a1 1 0 01.07 0H8a.5.5 0 000-1h-.81a2 2 0 00-.87.2z"></path></svg>`,
	4,
)

function GlassesOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ho = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76c.06.5.1 1 .13 1.52A5.57 5.57 0 0118 10.25a7.93 7.93 0 00-.4-2.75zm-4.77 0a19 19 0 01.14 1.71 5.51 5.51 0 00-3.6 3.29H7.15a19.44 19.44 0 010-5h5.68zm-5.52 6h1.77a5.53 5.53 0 001.14 4.47.99.99 0 01-.23.03c-.3 0-.65-.15-1-.52-.36-.37-.71-.93-1.01-1.66-.28-.66-.5-1.45-.67-2.32zm.57 4.22A8.02 8.02 0 012.8 13.5h3.5c.18 1 .44 1.92.76 2.7.24.58.52 1.1.83 1.52zM2.4 12.5h3.76a20.52 20.52 0 010-5H2.4a8 8 0 000 5zm16.61 2a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function GlobeAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ho.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76c.06.5.1 1 .13 1.52A5.57 5.57 0 0118 10.25a7.93 7.93 0 00-.4-2.75zm-4.77 0a19 19 0 01.14 1.71 5.51 5.51 0 00-3.6 3.29H7.15a19.44 19.44 0 010-5h5.68zm-5.52 6h1.77a5.53 5.53 0 001.14 4.47.99.99 0 01-.23.03c-.3 0-.65-.15-1-.52-.36-.37-.71-.93-1.01-1.66-.28-.66-.5-1.45-.67-2.32zm.57 4.22A8.02 8.02 0 012.8 13.5h3.5c.18 1 .44 1.92.76 2.7.24.58.52 1.1.83 1.52zM2.4 12.5h3.76a20.52 20.52 0 010-5H2.4a8 8 0 000 5zm16.61 2a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1v-1.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function GlobeClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76c.1.8.15 1.63.15 2.5h4a8 8 0 00-.4-2.5zm-4.77 0c.1.79.16 1.63.16 2.5h-2a2 2 0 00-2 2v.5H7.16a19.44 19.44 0 010-5h5.68zm-5.52 6H9V16a2 2 0 001.41 1.91c-.14.06-.28.09-.41.09-.3 0-.65-.15-1-.52-.36-.37-.71-.93-1.01-1.66-.28-.66-.5-1.45-.67-2.32zm.57 4.22A8.02 8.02 0 012.8 13.5h3.5c.18 1 .44 1.92.76 2.7.24.58.52 1.1.83 1.52zM2.4 12.5h3.76a20.52 20.52 0 010-5H2.4a8 8 0 000 5zM10 12a1 1 0 011-1h7a1 1 0 011 1v4a1 1 0 01-1 1h-2v1h.5a.5.5 0 010 1h-4a.5.5 0 010-1h.5v-1h-2a1 1 0 01-1-1v-4z"></path></svg>`,
	4,
)

function GlobeDesktopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76a20.52 20.52 0 010 5h3.75a8 8 0 000-5zm-.41 6h-3.5c-.18 1-.44 1.92-.76 2.7-.24.58-.52 1.1-.83 1.52a8.02 8.02 0 005.09-4.22zM10 18c.3 0 .65-.15 1-.52.36-.37.71-.93 1.01-1.66.28-.66.5-1.45.67-2.32H7.32c.17.87.4 1.66.67 2.32.3.73.65 1.3 1 1.66.36.37.7.52 1.01.52zm-2.1-.28a8.02 8.02 0 01-5.1-4.22h3.5c.18 1 .44 1.92.76 2.7.24.58.52 1.1.83 1.52zM2.4 12.5h3.75a20.52 20.52 0 010-5H2.4a8 8 0 000 5zM7 10c0-.87.06-1.71.16-2.5h5.68a19.44 19.44 0 010 5H7.16C7.06 11.71 7 10.87 7 10z"></path></svg>`,
	4,
)

function GlobeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.32 6.5c.17-.87.4-1.66.67-2.32.3-.73.65-1.3 1-1.66C9.36 2.15 9.7 2 10 2c.3 0 .65.15 1 .52.36.37.71.93 1.01 1.66.28.66.5 1.45.67 2.32H7.32zm-.26-2.7c.24-.58.52-1.1.83-1.52A8.02 8.02 0 002.8 6.5h3.5c.18-1 .44-1.92.76-2.7zm5.88 0a7.19 7.19 0 00-.83-1.52A8.02 8.02 0 0117.2 6.5h-3.5c-.18-1-.44-1.92-.76-2.7zm.91 3.7h3.75c.24.71.37 1.47.4 2.25a4.52 4.52 0 00-4-.5c-.03-.6-.08-1.18-.15-1.75zM13 9.76c-.01-.79-.07-1.55-.16-2.26H7.16a19.44 19.44 0 000 5h3.98c.27-1.13.93-2.1 1.86-2.74zm-2 3.74H7.32c.17.87.4 1.66.67 2.32.3.73.65 1.3 1 1.66.36.37.7.52 1.01.52.3 0 .65-.15 1-.52.26-.26.5-.61.74-1.06A5.94 5.94 0 0111 13.5zm-8.2 0c1 2.05 2.85 3.6 5.1 4.22a7.19 7.19 0 01-.84-1.52c-.32-.78-.58-1.7-.76-2.7H2.8zm3.35-1H2.4a8 8 0 010-5h3.75a20.52 20.52 0 000 5zM19 13.68c0-2.03-1.47-3.68-3.5-3.68-2.03 0-3.5 1.65-3.5 3.68 0 1.53.98 3.53 3.26 5.24.14.1.34.1.49 0 2.27-1.7 3.25-3.71 3.25-5.24zm-2-.18a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"></path></svg>`,
	4,
)

function GlobeLocationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76c.08.61.12 1.25.14 1.9a2.99 2.99 0 014 .93 8.26 8.26 0 00-.39-2.83zM13 10v.35a2.99 2.99 0 00-.46 2.15H7.16a19.44 19.44 0 010-5h5.68c.1.79.16 1.63.16 2.5zm-.32 3.5c-.04.24-.1.47-.15.7A2.5 2.5 0 0011 16.5c0 .29.04.58.12.86l-.12.12c-.35.37-.7.52-1 .52-.3 0-.65-.15-1-.52-.36-.37-.71-.93-1.01-1.66-.28-.66-.5-1.45-.67-2.32h5.36zM7.9 17.72A8.02 8.02 0 012.8 13.5h3.5c.18 1 .44 1.92.76 2.7.24.58.52 1.1.83 1.52zM2.4 12.5h3.76a20.52 20.52 0 010-5H2.4a8 8 0 000 5zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function GlobePersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.32 6.5c.17-.87.4-1.66.67-2.32.3-.73.65-1.3 1-1.66C9.36 2.15 9.7 2 10 2c.3 0 .65.15 1 .52.36.37.71.93 1.01 1.66.28.66.5 1.45.67 2.32H7.32zm-.26-2.7c.24-.58.52-1.1.83-1.52A8.02 8.02 0 002.8 6.5h3.5c.18-1 .44-1.92.76-2.7zm5.88 0a7.19 7.19 0 00-.83-1.52A8.02 8.02 0 0117.2 6.5h-3.5c-.18-1-.44-1.92-.76-2.7zm.91 3.7h3.75a8 8 0 01.4 2.75 5.48 5.48 0 00-4.02-1.23c-.03-.52-.07-1.03-.13-1.52zm-.87 1.71a19 19 0 00-.14-1.71H7.16a19.44 19.44 0 000 5h2.21a5.51 5.51 0 013.61-3.29zM9.1 13.5H7.32c.17.87.4 1.66.67 2.32.3.73.65 1.3 1 1.66.36.37.7.52 1.01.52.08 0 .15 0 .23-.03A5.48 5.48 0 019.1 13.5zm-6.29 0c1 2.05 2.85 3.6 5.1 4.22a7.19 7.19 0 01-.84-1.52c-.32-.78-.58-1.7-.76-2.7H2.8zm3.35-1H2.4a8 8 0 010-5h3.75a20.52 20.52 0 000 5zm3.85 2a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm2.4 2.8l4.9-4.9a3.5 3.5 0 01-4.9 4.9zm-.7-.7a3.5 3.5 0 014.9-4.9l-4.9 4.9z"></path></svg>`,
	4,
)

function GlobeProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm5.05 1.52a7.18 7.18 0 00-.83-1.52A8.02 8.02 0 0117.2 6.5h-3.5c-.18-1-.44-1.92-.76-2.7zm4.66 3.7h-3.75a20.54 20.54 0 010 5h3.75a7.99 7.99 0 000-5zm-3.9 6h3.5a8.02 8.02 0 01-5.09 4.22c.31-.43.59-.94.83-1.52.32-.78.58-1.7.76-2.7zm-4.14.44c.07-.14.13-.29.18-.44h2.94a12.22 12.22 0 01-.87 2.77 1.5 1.5 0 00-.25-.33l-2-2zm.41-1.44h2.87a19.44 19.44 0 000-5H7.16l-.04.3a4.5 4.5 0 012.85 4.7zm-3.82-5v.05a4.54 4.54 0 00-.65-.05h.65zm-3.75 0h3.1c-1.39 0-2.63.63-3.45 1.61.06-.55.18-1.1.35-1.61zm3.1 8c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L8.3 14.1a3.5 3.5 0 10-2.8 1.4zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function GlobeSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76l.1.95a1.63 1.63 0 012.2.09c.42.43 1.08.98 1.85 1.27a7.98 7.98 0 00-.4-2.31zm-4.77 0c.08.57.13 1.16.15 1.78-.47.33-1.03.61-1.63.7-.68.09-1.36.66-1.36 1.52v1H7.16a19.44 19.44 0 010-5h5.68zm-5.52 6H10v.5c0 1.42.45 2.55 1.07 3.4l-.07.08c-.35.37-.7.52-1 .52-.3 0-.65-.15-1-.52-.36-.37-.71-.93-1.01-1.66-.28-.66-.5-1.45-.67-2.32zm.57 4.22A8.02 8.02 0 012.8 13.5h3.5c.18 1 .44 1.92.76 2.7.24.58.52 1.1.83 1.52zM2.4 12.5h3.76a20.52 20.52 0 010-5H2.4a8 8 0 000 5zm16.11-1.54a5.69 5.69 0 01-3.06-1.72.62.62 0 00-.88 0 5.7 5.7 0 01-3.06 1.72c-.27.04-.5.26-.5.54V14c0 3.47 3.18 4.73 3.87 4.96a.4.4 0 00.26 0c.69-.23 3.87-1.5 3.87-4.96v-2.5c0-.28-.23-.5-.5-.54z"></path></svg>`,
	4,
)

function GlobeShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.32 6.5c.17-.87.4-1.66.67-2.32.3-.73.65-1.3 1-1.66C9.36 2.15 9.7 2 10 2c.3 0 .65.15 1 .52.36.37.71.93 1.01 1.66.28.66.5 1.45.67 2.32H7.32zm-.26-2.7c.24-.58.52-1.1.83-1.52A8.02 8.02 0 002.8 6.5h3.5c.18-1 .44-1.92.76-2.7zm5.88 0a7.19 7.19 0 00-.83-1.52A8.02 8.02 0 0117.2 6.5h-3.5c-.18-1-.44-1.92-.76-2.7zm.91 3.7h3.75a8 8 0 01.4 2.75 5.48 5.48 0 00-4.02-1.23c-.03-.52-.07-1.03-.13-1.52zm-.87 1.71a19 19 0 00-.14-1.71H7.16a19.44 19.44 0 000 5h2.21a5.51 5.51 0 013.61-3.29zM9.1 13.5H7.32c.17.87.4 1.66.67 2.32.3.73.65 1.3 1 1.66.36.37.7.52 1.01.52.08 0 .15 0 .23-.03A5.48 5.48 0 019.1 13.5zm-6.29 0c1 2.05 2.85 3.6 5.1 4.22a7.19 7.19 0 01-.84-1.52c-.32-.78-.58-1.7-.76-2.7H2.8zm3.35-1H2.4a8 8 0 010-5h3.75a20.52 20.52 0 000 5zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm.95-5.6H17c.48 0 .68.64.3.94l-1.26.94.48 1.53c.15.49-.38.89-.77.59l-1.25-.95-1.25.95c-.4.3-.92-.1-.77-.59l.48-1.53-1.25-.94c-.4-.3-.2-.95.3-.95h1.54l.47-1.53a.5.5 0 01.96 0l.47 1.53z"></path></svg>`,
	4,
)

function GlobeStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$he = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.12 7c.12-.93.32-1.76.58-2.42.21-.55.45-.97.7-1.23.24-.27.44-.35.6-.35.16 0 .36.08.6.35.25.26.49.68.7 1.23.26.66.46 1.49.58 2.42H8.12zm-.35-2.78c.13-.34.28-.67.45-.95A6.02 6.02 0 004.34 7h2.78c.12-1.05.35-2 .65-2.78zm4.46 0a6.18 6.18 0 00-.45-.95A6.02 6.02 0 0115.66 7h-2.78c-.12-1.05-.35-2-.65-2.78zM12.97 8h2.95a6.04 6.04 0 010 2h-2.95a17.34 17.34 0 000-2zm-.09 3h2.78a6.02 6.02 0 01-3.88 3.73c.17-.28.32-.6.45-.95.3-.78.53-1.73.65-2.78zm-2.28 3.65c-.24.27-.44.35-.6.35-.16 0-.36-.08-.6-.35a3.99 3.99 0 01-.7-1.23c-.26-.66-.46-1.49-.58-2.42h3.76c-.12.93-.32 1.76-.58 2.42-.21.55-.45.97-.7 1.23zM4.34 11a6.02 6.02 0 003.88 3.73c-.17-.28-.32-.6-.45-.95-.3-.78-.53-1.73-.65-2.78H4.34zm2.69-1H4.08a6.04 6.04 0 010-2h2.95a17.4 17.4 0 000 2zm1-2a16.36 16.36 0 000 2h3.94a16.37 16.37 0 000-2H8.03zM3.5 13h.75c.25.36.53.69.84 1A.5.5 0 015 14H3.89l-.75 3h13.72l-.75-3H15a.5.5 0 01-.1 0c.32-.31.6-.64.85-1h.75a.5.5 0 01.49.38l1 4a.5.5 0 01-.49.62h-15a.5.5 0 01-.49-.62l1-4A.5.5 0 013.5 13z"></path></svg>`,
	4,
)

function GlobeSurfaceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$he.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.99 4.18c-.28.66-.5 1.45-.67 2.32h5.36c-.17-.87-.4-1.66-.67-2.32-.3-.73-.65-1.3-1-1.66C10.64 2.15 10.3 2 10 2c-.3 0-.65.15-1 .52-.36.37-.71.93-1.01 1.66zm-.1-1.9c-.31.43-.59.94-.83 1.52-.32.78-.58 1.7-.76 2.7H2.8c1-2.05 2.85-3.6 5.1-4.22zm4.22 0c.31.43.59.94.83 1.52.32.78.58 1.7.76 2.7h3.5a8.02 8.02 0 00-5.09-4.22zm5.5 5.22h-3.76c.06.48.1.99.13 1.5h.52c.96 0 1.79.54 2.2 1.33l.97-.64c.1-.07.2-.13.32-.17a7.97 7.97 0 00-.39-2.02zm-4.77 0c.06.48.11.98.14 1.5H9.5a2.5 2.5 0 00-2.47 2.11 20.2 20.2 0 01.13-3.61h5.68zm-6.54 6c.17.94.4 1.8.7 2.54v1.38a8.03 8.03 0 01-4.2-3.92h3.5zm-3.9-1h3.75a20.52 20.52 0 010-5H2.4a8 8 0 000 5zm5.6-1c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5v.5l2.22-1.48a.5.5 0 01.78.41v7.14a.5.5 0 01-.78.41L16 17v.5c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 018 17.5v-6z"></path></svg>`,
	4,
)

function GlobeVideoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.75 4a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zm0 6a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zM4 17.75a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM11.75 4a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zM10 11.75a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM11.75 16a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zM16 5.75a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM17.75 10a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zM16 17.75a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5z"></path></svg>`,
	4,
)

function GridDotsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$hb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 11c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5h-4A1.5 1.5 0 012 16.5v-4c0-.83.67-1.5 1.5-1.5h4zm9 0c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5h-4a1.5 1.5 0 01-1.5-1.5v-4c0-.83.67-1.5 1.5-1.5h4zm-9-9C8.33 2 9 2.67 9 3.5v4C9 8.33 8.33 9 7.5 9h-4A1.5 1.5 0 012 7.5v-4C2 2.67 2.67 2 3.5 2h4zm9 0c.83 0 1.5.67 1.5 1.5v4c0 .83-.67 1.5-1.5 1.5h-4A1.5 1.5 0 0111 7.5v-4c0-.83.67-1.5 1.5-1.5h4z"></path></svg>`,
	4,
)

function GridIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$hb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ha = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 2a1 1 0 00-1 1v2a1 1 0 001 1h5a1 1 0 001-1V3a1 1 0 00-1-1H3zm0 6a1 1 0 00-1 1v2a1 1 0 001 1h5a1 1 0 001-1V9a1 1 0 00-1-1H3zm0 6a1 1 0 00-1 1v2a1 1 0 001 1h5a1 1 0 001-1v-2a1 1 0 00-1-1H3zm9-12a1 1 0 00-1 1v2a1 1 0 001 1h5a1 1 0 001-1V3a1 1 0 00-1-1h-5zm0 6a1 1 0 00-1 1v2a1 1 0 001 1h5a1 1 0 001-1V9a1 1 0 00-1-1h-5z"></path></svg>`,
	4,
)

function GridKanbanIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ha.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 4.5c0 .36-.07.7-.2 1H10c.28 0 .5.22.5.5v2H10a2 2 0 00-2 2v.5H6a.5.5 0 01-.5-.5V6.8a2.5 2.5 0 01-1.5.15V10c0 1.1.9 2 2 2h2v2a2 2 0 001.16 1.81 5.51 5.51 0 01.34-3.6V10c0-.28.22-.5.5-.5h2.2a5.48 5.48 0 013.61-.34A2 2 0 0014 8h-2V6a2 2 0 00-2-2H6.95c.03.16.05.33.05.5zm-1 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm11 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 11a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm13-1a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function GroupDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 4.5c0 .36-.07.7-.2 1H10c.28 0 .5.22.5.5v2H10a2 2 0 00-2 2v.5H6a.5.5 0 01-.5-.5V6.8a2.5 2.5 0 01-1.5.15V10c0 1.1.9 2 2 2h2v2c0 1.1.9 2 2 2h3.05a2.51 2.51 0 01.16-1.5H10a.5.5 0 01-.5-.5v-2h.5a2 2 0 002-2v-.5h2c.28 0 .5.22.5.5v3.2a2.5 2.5 0 011.5-.15V10a2 2 0 00-2-2h-2V6a2 2 0 00-2-2H6.95c.03.16.05.33.05.5zm3.5 5v.5a.5.5 0 01-.5.5h-.5V10c0-.28.22-.5.5-.5h.5zM6 4.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm11 11a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-11a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 11a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"></path></svg>`,
	4,
)

function GroupIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 2a.75.75 0 00-.75.75v6c0 .41.34.75.75.75h2.5a.75.75 0 000-1.5H3.5V3.5h1.75a.75.75 0 000-1.5h-2.5zm0 8.5a.75.75 0 00-.75.75v6c0 .41.34.75.75.75h2.5a.75.75 0 000-1.5H3.5V12h1.75a.75.75 0 000-1.5h-2.5zm5 1.5a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5zM7 15.75c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5a.75.75 0 01-.75-.75zm0-11.5c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 4.25zm.75 2.25a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5z"></path></svg>`,
	4,
)

function GroupListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 4.5c0 .36-.07.7-.2 1H10c.28 0 .5.22.5.5v2H10a2 2 0 00-2 2v.5H6a.5.5 0 01-.5-.5V6.8a2.5 2.5 0 01-1.5.15V10c0 1.1.9 2 2 2h2v2a2 2 0 001.16 1.81 5.51 5.51 0 01.34-3.6V10c0-.28.22-.5.5-.5h2.2a5.48 5.48 0 013.61-.34A2 2 0 0014 8h-2V6a2 2 0 00-2-2H6.95c.03.16.05.33.05.5zm-1 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm11 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 11a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm8.5 3.5a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function GroupReturnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 4.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10.73 9A2 2 0 009 8H4a2 2 0 00-2 2v2.5a1 1 0 102 0v4.25a1.25 1.25 0 102.5 0 1.25 1.25 0 102.5 0V12.5a1 1 0 102 0V10a2 2 0 00-.27-1zM14 8a2 2 0 100-4 2 2 0 000 4zm-3 6.23a2 2 0 001-1.73V10a3 3 0 00-.17-1H16a2 2 0 012 2v2a1 1 0 11-2 0v3.75a1.25 1.25 0 11-2.5 0 1.25 1.25 0 11-2.5 0v-2.52z"></path></svg>`,
	4,
)

function GuardianIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 4H5.5a.5.5 0 00-.5.5v12c0 .28.22.5.5.5h4.1c.18.36.4.7.66 1H5.5A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1h1.59c.83 0 1.5.67 1.5 1.5v4.7c-.32-.08-.66-.15-1-.18V4.5a.5.5 0 00-.5-.5h-1.59c-.2.58-.76 1-1.41 1h-3a1.5 1.5 0 01-1.41-1zM9 14.5c0-1.33.47-2.55 1.26-3.5H7.75c-.66 0-1.3.55-1.22 1.3.06.56.24 1.26.79 1.8.4.4.95.7 1.7.82A5.58 5.58 0 019 14.5zm-1-11c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5zM10 6a2 2 0 100 4 2 2 0 000-4zm9 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function GuestAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.09 4H5.5a.5.5 0 00-.5.5v12c0 .28.22.5.5.5h9a.5.5 0 00.5-.5v-12a.5.5 0 00-.5-.5h-1.59c-.2.58-.76 1-1.41 1h-3a1.5 1.5 0 01-1.41-1zm5.82-1h1.59c.83 0 1.5.67 1.5 1.5v12c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-12C4 3.67 4.67 3 5.5 3h1.59c.2-.58.76-1 1.41-1h3c.65 0 1.2.42 1.41 1zM8 3.5c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5zM10 6a2 2 0 100 4 2 2 0 000-4zm-2.25 5c-.66 0-1.3.55-1.22 1.3.06.56.24 1.26.79 1.8.55.57 1.41.9 2.68.9 1.27 0 2.13-.33 2.68-.9.55-.54.73-1.24.79-1.8.08-.75-.56-1.3-1.22-1.3h-4.5z"></path></svg>`,
	4,
)

function GuestIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3.78l1.11-1.12c.23-.23.6-.23.83 0l.9.9c.22.23.22.6 0 .83L16.22 5.5l-1.73-1.73zm-.72.71l-2.53 2.53-.13-.13a2.13 2.13 0 00-3.4.55l-.34.68a.6.6 0 01-.66.32h-.06a3.72 3.72 0 00-3.7 1.4 4.8 4.8 0 00.44 6.27l.49.49a4.8 4.8 0 006.26.44 3.72 3.72 0 001.42-3.7l-.01-.06a.6.6 0 01.32-.66l.68-.34a2.13 2.13 0 00.55-3.4l-.13-.13 2.53-2.53-1.73-1.73zm-5.41 7.14a1.25 1.25 0 111.76-1.76 1.25 1.25 0 01-1.76 1.76z"></path></svg>`,
	4,
)

function GuitarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 3c0-.61-.37-1.04-.84-1.3a5.15 5.15 0 00-1.74-.5A37.9 37.9 0 009.53 1H9.5a.5.5 0 000 1c1.8 0 3.52 0 4.77.18.64.1 1.1.22 1.4.39.27.15.33.3.33.43 0 .15-.06.29-.31.44-.28.16-.7.29-1.3.38C13.22 4 11.64 4 10 4h-.03c-1.6 0-3.26 0-4.51.2-.63.09-1.22.24-1.66.5-.46.28-.8.7-.8 1.3 0 .8.65 1.27 1.32 1.52.7.27 1.65.4 2.68.4v-1c-.97 0-1.78-.12-2.32-.33C4.1 6.37 4 6.14 4 6c0-.15.06-.29.31-.44.28-.16.7-.29 1.3-.38C6.78 5 8.36 5 10 5h.03c1.6 0 3.26 0 4.51-.2.63-.09 1.22-.24 1.66-.5.46-.28.8-.7.8-1.3zM9.5 6C8.67 6 8 6.67 8 7.5v4.24l-1.35-.58a1.94 1.94 0 00-2.61 1.2c-.12.39.04.8.38 1l3.97 2.36h.02c.52.29.82.69 1 1.07.17.35.44.68.78.9.34.23.77.37 1.23.28l2-.38a1.5 1.5 0 001.17-1.11l.83-3.33a2.5 2.5 0 00-1.93-3.05L11 9.6V7.5c0-.83-.67-1.5-1.5-1.5z"></path></svg>`,
	4,
)

function HandDrawIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 8.5V2.75a.75.75 0 00-1.5 0V8.5a.5.5 0 01-1 0V3.75a.75.75 0 00-1.5 0v6.5a4.06 4.06 0 00-2-.75c-.97 0-1.79.32-1.98 1.12a.6.6 0 00-.02.14c0 .15.07.3.2.38l1.3.99c1.07.8 2.07 1.86 2.76 2.99.38.6.72 1.23 1.06 1.86.24.45.42.75.83.9l.34-1.1a5.48 5.48 0 014.02-7.7.5.5 0 01-.01-.08V3.75a.75.75 0 00-1.5 0V8.5a.5.5 0 01-1 0zm5-3.25v3.96A5.5 5.5 0 0014.5 9V5.25a.75.75 0 011.5 0zm3 9.25a4.5 4.5 0 01-6.68 3.94l-1.8.54a.4.4 0 01-.5-.5l.54-1.8A4.5 4.5 0 1119 14.5zM12.5 13a.5.5 0 000 1h4a.5.5 0 000-1h-4zm-.5 2.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function HandLeftChatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 8.5V2.75a.75.75 0 00-1.5 0V8.5a.5.5 0 01-1 0V3.75a.75.75 0 00-1.5 0v6.5a4.06 4.06 0 00-2-.75c-.97 0-1.79.32-1.98 1.12a.6.6 0 00-.02.14c0 .15.07.3.2.38l1.3.99c1.07.8 2.07 1.86 2.76 2.99.38.6.72 1.23 1.06 1.86.36.68.59 1.02 1.68 1.02h3.05c.95 0 1.31-.53 1.95-2 .64-1.47 1-2.94 1-3.5V5.25a.75.75 0 00-1.5 0V9a.5.5 0 01-1 0V3.75a.75.75 0 00-1.5 0V8.5a.5.5 0 01-1 0z"></path></svg>`,
	4,
)

function HandLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.4 10.52l-3.36-3.67a.6.6 0 01-.87.01L5.28 2.97a.75.75 0 10-1.06 1.06l3.86 3.86a.58.58 0 11-.81.82L3.28 4.72a.75.75 0 00-1.06 1.06l4.05 4.05a.49.49 0 01-.69.7l-2.3-2.31a.75.75 0 00-1.06 1.06l3.82 3.82-.5.12c-.78.21-1.78.65-2.38 1.6A1 1 0 003.22 16c.23.3.6.48 1 .47 2.15-.01 4.77.39 6.85 1.24 1.2.5 2.69.43 3.71-.52l1.25-1.15a3 3 0 00.77-3.3l-.97-2.46-.22.25a1.5 1.5 0 01-2.22 0zm-3.68 3.43a.5.5 0 01-.44-.9c.6-.3 1.46-.43 2.3-.3.86.15 1.74.58 2.34 1.47a.5.5 0 01-.84.56 2.42 2.42 0 00-1.66-1.04c-.66-.1-1.3 0-1.7.2zM9.34 2.92a3.4 3.4 0 00-.3 2.04L7.23 3.03a.75.75 0 111.06-1.06c.29.29.65.6 1.06.95zM14.5 3l-.63-.49a2.4 2.4 0 00-3.24 3.5l3.5 3.83c.2.22.54.22.74 0l3.5-3.83a2.4 2.4 0 00-3.24-3.5l-.63.5z"></path></svg>`,
	4,
)

function HandOpenHeartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 8.5V2.75a.75.75 0 011.5 0V8.5a.5.5 0 001 0V3.75a.75.75 0 011.5 0v6.5c.66-.43 1.4-.75 2-.75.97 0 1.79.32 1.98 1.12.02.04.02.1.02.14 0 .15-.07.3-.2.38l-1.3.99c-1.07.8-2.07 1.86-2.76 2.99-.38.6-.72 1.23-1.06 1.86-.36.68-.59 1.02-1.68 1.02H6.95C6 18 5.64 17.47 5 16a11.7 11.7 0 01-1-3.5V5.25a.75.75 0 011.5 0V9a.5.5 0 001 0V3.75a.75.75 0 011.5 0V8.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function HandRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5.25c0-.15.05-.3.13-.42L2.15 2.85a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-3.72-3.71c-.25.31-.49.64-.7.98-.37.6-.71 1.23-1.05 1.86-.36.68-.59 1.02-1.68 1.02H6.95C6 18 5.64 17.47 5 16a11.7 11.7 0 01-1-3.5V5.25zm2.5 1.96l-1-1V9a.5.5 0 001 0V7.2zM8 3.75v2.13l-1.5-1.5v-.63a.75.75 0 011.5 0zm3.1 5.24l3.71 3.7c.22-.2.45-.39.69-.56l1.3-.99c.13-.09.2-.23.2-.38 0-.05 0-.1-.02-.14-.2-.8-1-1.12-1.98-1.12-.6 0-1.34.32-2 .75v-6.5a.75.75 0 00-1.5 0V8.5a.5.5 0 01-.4.49zM9 6.88l1.5 1.5V2.75a.75.75 0 00-1.5 0v4.13z"></path></svg>`,
	4,
)

function HandRightOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.63 3.01a.5.5 0 00.06 0H12a2.5 2.5 0 012 .31 3.7 3.7 0 011.71 5.1L12.5 5.18a.5.5 0 00-.36-.15H10.8a.5.5 0 00-.3.1L8.35 6.76a1.12 1.12 0 01-1.67-.4A1.1 1.1 0 017 5l2.63-1.99zm-4 8.85l-.01.02-.77.76v.01a.6.6 0 01-.84-.01.6.6 0 010-.84l.76-.76a.6.6 0 01.85 0c.23.22.23.6.01.82zm-.08 1.5a.6.6 0 00.01.82.6.6 0 00.85 0l.76-.76a.6.6 0 00-.09-.91.6.6 0 00-.74.06l-.01.01-.77.76v.02zM3.75 9.8a.6.6 0 010 .84l-.77.76a.6.6 0 01-.84 0 .6.6 0 010-.84l.76-.76a.6.6 0 01.85 0zm4.98 4.33a.6.6 0 010 .84l-.76.76a.6.6 0 01-.85 0 .6.6 0 01-.09-.73.6.6 0 01.09-.11l.76-.76a.6.6 0 01.85 0zM3.53 4.4a4.76 4.76 0 014.3-1.29L6.4 4.21A2.1 2.1 0 006 7.14c.7.92 2.03 1.1 2.95.4l2.02-1.53h.9l1.95 1.93 1.6 1.62.03.03.87.86a1.02 1.02 0 01-1.37 1.51l-.07-.07a.5.5 0 00-.06-.05l-.85-.85a.5.5 0 10-.7.71l.9.9.1.1.03.03a.7.7 0 01-.98.98l-.13-.14a.5.5 0 00-.85.37c0 .13.05.26.15.36l.17.17a.63.63 0 11-.9.9l-.08-.1a1.63 1.63 0 00-.1-.1l-.16-.16a.5.5 0 00-.7.7l.11.13a.5.5 0 00.06.06l.04.05a.65.65 0 01-.96.86L9.11 16l.33-.32a1.58 1.58 0 00-1.09-2.72c0-.4-.16-.78-.47-1.08-.3-.3-.69-.46-1.08-.47A1.6 1.6 0 004.9 9.9 1.61 1.61 0 002.31 9 4.7 4.7 0 013.52 4.4z"></path></svg>`,
	4,
)

function HandshakeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 21" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.85 1.15a.5.5 0 00-.7 0 .5.5 0 000 .71 6.57 6.57 0 011.86 5.57.5.5 0 00.42.57.5.5 0 00.56-.42 7.6 7.6 0 00-2.14-6.43zm-10.4.35a.75.75 0 10-1.4.5l2.1 5.93a.53.53 0 11-1 .36L3.45 3.5a.75.75 0 00-1.41.5l2.55 7.18c-2.12-.57-2.85.58-3.07 1.1-.06.12.02.25.15.3.82.24 3.67 1.26 6.85 4.3.6.59 1.49.79 2.26.47l2.16-.9a2 2 0 001.21-1.58l.27-2.01a8 8 0 00-.34-3.63L13 6h-.01l-1.15-3.49a.75.75 0 00-1.42.49l.96 2.93a.63.63 0 01-1.2.42L8.68 2a.75.75 0 00-1.42.5l1.5 4.34a.66.66 0 01-1.24.45L5.45 1.5zm8.79 1.57a.5.5 0 01.69.18l.3.5c.49.83.76 1.78.77 2.75a.5.5 0 11-1 0c-.01-.79-.23-1.56-.64-2.24l-.3-.5a.5.5 0 01.18-.69z"></path></svg>`,
	4,
)

function HandWaveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.49 4a2 2 0 00-1.84 1.21l-2 4.7c.38-.26.85-.41 1.35-.41h12c.56 0 1.08.18 1.5.5a57.37 57.37 0 00-2.14-4.91A1.96 1.96 0 0013.59 4H6.5zM2.5 12c0-.83.67-1.5 1.5-1.5h12c.83 0 1.5.67 1.5 1.5v2c0 .83-.67 1.5-1.5 1.5H4A1.5 1.5 0 012.5 14v-2zm12.5.75a.75.75 0 10-1.5 0 .75.75 0 001.5 0z"></path></svg>`,
	4,
)

function HardDriveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 14.5v-3.33l4 2.3a4 4 0 004 0l4-2.3v3.33a.5.5 0 01-.15.35v.01l-.03.03a3.66 3.66 0 01-.38.32A9.1 9.1 0 0110 17a9.1 9.1 0 01-5.74-2.05 3.6 3.6 0 01-.08-.07l-.02-.03A.51.51 0 014 14.5zm14.75-6.07l-7.26 4.17a3 3 0 01-2.98 0L2 8.86v4.64a.5.5 0 01-1 0V8c0-.19.1-.36.26-.44L8.51 3.4a3 3 0 012.98 0l7.26 4.17a.5.5 0 010 .86z"></path></svg>`,
	4,
)

function HatGraduationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.42 12h-.92V8h.92c.87 0 1.58.7 1.58 1.58v.84c0 .87-.7 1.58-1.58 1.58zM6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zm-.5 4c.28 0 .5.22.5.5V10h2.5V7.5a.5.5 0 011 0v5a.5.5 0 01-1 0V11H6v1.5a.5.5 0 01-1 0v-5c0-.28.22-.5.5-.5zM11 7h1.42A2.58 2.58 0 0115 9.58v.84A2.58 2.58 0 0112.42 13H11a.5.5 0 01-.5-.5v-5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function HdIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 4A2.75 2.75 0 002 6.75v6.5A2.75 2.75 0 004.75 16h10.5A2.75 2.75 0 0018 13.25v-6.5A2.75 2.75 0 0015.25 4H4.75zM4.5 7.5c.28 0 .5.22.5.5v1.5h2V8a.5.5 0 011 0v4a.5.5 0 01-1 0v-1.5H5V12a.5.5 0 01-1 0V8c0-.28.22-.5.5-.5zM9 8c0-.28.22-.5.5-.5h.25c1.24 0 2.25 1 2.25 2.25v.5c0 1.24-1 2.25-2.25 2.25H9.5A.5.5 0 019 12V8zm1 3.47c.57-.11 1-.62 1-1.22v-.5c0-.6-.43-1.1-1-1.22v2.95zM13 8c0-.28.22-.5.5-.5h1a1.5 1.5 0 01.87 2.72l.6 1.6a.5.5 0 01-.94.36l-.63-1.68H14V12a.5.5 0 01-1 0V8zm1 1.5h.5a.5.5 0 000-1H14v1z"></path></svg>`,
	4,
)

function HdrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l1.41 1.42A2.75 2.75 0 002 6.75v6.5A2.75 2.75 0 004.75 16h10.54l1.86 1.85a.5.5 0 00.7-.7l-15-15zm8.38 9.8c-.4.34-.91.55-1.48.55H9.5A.5.5 0 019 12V9.7l1 1v.78c.2-.04.37-.13.52-.25l.71.71zM8 8.7V12a.5.5 0 01-1 0v-1.5H5V12a.5.5 0 01-1 0V8a.5.5 0 011 0v1.5h2V8a.5.5 0 01.06-.23L8 8.7zm4 1.04v.13l1 1V8c0-.28.22-.5.5-.5h1a1.5 1.5 0 01.87 2.72l.6 1.6a.5.5 0 01-.94.36l-.63-1.68H14v1.38l3.25 3.25c.47-.49.75-1.15.75-1.88v-6.5A2.75 2.75 0 0015.25 4H6.12l3.5 3.5h.13c1.24 0 2.25 1 2.25 2.25zm2-.25h.5a.5.5 0 000-1H14v1z"></path></svg>`,
	4,
)

function HdrOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 10a7 7 0 0114 0v1h-3.5a.5.5 0 00-.5.5v6c0 .28.22.5.5.5H16a2 2 0 002-2v-6a8 8 0 10-16 0v6c0 1.1.9 2 2 2h2.5a.5.5 0 00.5-.5v-6a.5.5 0 00-.5-.5H3v-1z"></path></svg>`,
	4,
)

function HeadphonesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3a7 7 0 00-7 7v1h1.5c.28 0 .5.22.5.5v6a.5.5 0 01-.5.5H4a2 2 0 01-2-2v-6a8 8 0 1116 0v6a2 2 0 01-2 2h-.5a.5.5 0 01-.5-.5v-6c0-.28.22-.5.5-.5H17v-1a7 7 0 00-7-7zm.5 7.5a.5.5 0 00-1 0v7a.5.5 0 001 0v-7zm-3 1.5c.28 0 .5.22.5.5v4a.5.5 0 01-1 0v-4c0-.28.22-.5.5-.5zm5.5.5a.5.5 0 00-1 0v4a.5.5 0 001 0v-4z"></path></svg>`,
	4,
)

function HeadphonesSoundWaveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5a5.5 5.5 0 001.5-.2v.2a2 2 0 01-2 2h-1a1 1 0 01-1-1v-1.6c.75.38 1.6.6 2.5.6zm-4.25-9a5.5 5.5 0 00-.66 1.02A5 5 0 005 8h2a1 1 0 011 1v3a1 1 0 01-1 1H5v1c0 1.1.9 2 2 2h1a2 2 0 11.27 1H7a3 3 0 01-3-3V8a6 6 0 016.25-6z"></path></svg>`,
	4,
)

function HeadsetAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a6 6 0 00-6 6v6a3 3 0 003 3h1.27A2 2 0 108 16H7a2 2 0 01-2-2v-1h2a1 1 0 001-1V9a1 1 0 00-1-1H5a5 5 0 0110 0h-2a1 1 0 00-1 1v3a1 1 0 001 1h1a2 2 0 002-2V8a6 6 0 00-6-6z"></path></svg>`,
	4,
)

function HeadsetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 3.5c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5V5h2.75a3.25 3.25 0 013.24 3h.51c.28 0 .5.22.5.5v3a.5.5 0 01-.5.5H18v1.75c0 1.8-1.46 3.25-3.25 3.25h-1.61c-.86 0-1.7-.34-2.3-.95l-.6-.6a.35.35 0 00-.49 0l-.6.6c-.6.6-1.43.95-2.3.95h-1.6A3.25 3.25 0 012 13.75V12h-.5a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5H2c.14-1.68 1.54-3 3.25-3H8V3.5zm2 5.25a.75.75 0 100-1.5.75.75 0 000 1.5zM5 10.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5zm7.5-.5a.5.5 0 000 1h2a.5.5 0 000-1h-2z"></path></svg>`,
	4,
)

function HeadsetVrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.27 4.18a4.3 4.3 0 00-6 .1 4.4 4.4 0 000 6.18l6.28 6.34c.26.27.69.27.95 0l6.24-6.3a4.4 4.4 0 00-.02-6.19 4.3 4.3 0 00-6.13-.01l-.59.59-1.34 2.06 3 2.53a.5.5 0 01.03.73l-2 2a.5.5 0 11-.71-.7l1.62-1.62-2.92-2.46a.5.5 0 01-.1-.66l1.7-2.6z"></path></svg>`,
	4,
)

function HeartBrokenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1016 0 8 8 0 00-16 0zm7.6-2.39l.39.4.4-.4a2.12 2.12 0 013.03 2.96l-3.05 3.27a.5.5 0 01-.74 0l-3.06-3.28A2.11 2.11 0 019.6 7.61z"></path></svg>`,
	4,
)

function HeartCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29a4.3 4.3 0 00-6.13-.02 4.4 4.4 0 00.02 6.2l6.27 6.33c.26.27.69.27.95 0l6.24-6.3a4.4 4.4 0 00-.02-6.19 4.3 4.3 0 00-6.13-.01l-.6.6-.6-.61z"></path></svg>`,
	4,
)

function HeartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.39 4.29a4.3 4.3 0 00-6.13-.02 4.4 4.4 0 00-.94 4.74L2.5 9h2.3l1.32-3.09a1.5 1.5 0 012.76.01l1.39 3.32.96-1.54a1.5 1.5 0 012.4-.19L14.93 9h2.57l.2.01c.61-1.57.29-3.42-.98-4.7a4.3 4.3 0 00-6.13-.01l-.6.6-.6-.61zm.16 12.51L4.8 12h1c.6 0 1.15-.36 1.38-.91l.3-.72 1.14 2.7a1.5 1.5 0 002.65.22l1.43-2.28.42.48c.29.32.7.51 1.13.51h1l-4.75 4.8a.66.66 0 01-.95 0zM7.96 6.3a.5.5 0 00-.92 0L5.47 10H2.5a.5.5 0 000 1h3.3a.5.5 0 00.46-.3L7.5 7.79l2.04 4.9a.5.5 0 00.88.08l2.15-3.43 1.3 1.49c.1.1.24.17.38.17h3.25a.5.5 0 000-1h-3.02l-1.6-1.83a.5.5 0 00-.8.06l-2 3.18-2.12-5.1z"></path></svg>`,
	4,
)

function HeartPulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.5 3v4a.5.5 0 01-.5.5H4a.5.5 0 01-.5-.5V3h13zm-10 7.5v7l6.45-3.1a1 1 0 00.55-.9v-3h-7z"></path></svg>`,
	4,
)

function HighlightAccentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2C3.67 2 3 2.67 3 3.5v3C3 7.33 3.67 8 4.5 8h11c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-11zM6 11a2 2 0 01-2-2h12a2 2 0 01-2 2H6zm0 1h8v1.07a2 2 0 01-1.1 1.8l-6.18 3.08A.5.5 0 016 17.5V12z"></path></svg>`,
	4,
)

function HighlightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2C3.67 2 3 2.67 3 3.5v3C3 7.33 3.67 8 4.5 8h11c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-11zM6 11a2 2 0 01-2-2h12a2 2 0 01-2 2H6zm0 1h6.5a3.5 3.5 0 00-3.29 4.7l-2.49 1.25A.5.5 0 016 17.5V12zm6.5 1a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function HighlightLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.37 2.03A8 8 0 0118 10.25a5.5 5.5 0 00-1.53-.89 6.5 6.5 0 00-11.4-3.6l-.2.24h1.88l.1.01a.75.75 0 010 1.49h-3.7a.75.75 0 01-.64-.64V2.66c.04-.34.3-.6.64-.65h.2c.34.05.6.3.65.64v2.06a7.98 7.98 0 015.37-2.68zm0 14.44c.2.56.51 1.07.88 1.53A8 8 0 012 9.74a.75.75 0 111.5.04 6.5 6.5 0 005.86 6.69zm.89-5.47a5.52 5.52 0 011.95-1.5H10.5V6.65a.75.75 0 00-.65-.64h-.2c-.34.05-.6.3-.64.64l-.01.1v3.6c.05.33.31.6.65.64l.1.01h.5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function HistoryDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.37 2.02A8 8 0 112 9.74a.75.75 0 011.5.04 6.5 6.5 0 101.57-4.03l-.2.25h1.88l.1.01a.75.75 0 010 1.49h-3.7a.75.75 0 01-.64-.64V2.66c.04-.34.3-.6.64-.65h.2c.34.05.6.3.65.64v2.06a7.98 7.98 0 015.37-2.69zM9.75 6l.1.01c.33.05.6.3.64.64l.01.1V10h1.85a.75.75 0 010 1.5h-2.7a.75.75 0 01-.64-.65l-.01-.1v-4.1c.05-.33.32-.6.65-.64h.1z"></path></svg>`,
	4,
)

function HistoryIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2.39a1.5 1.5 0 00-2 0L3.5 7.33c-.32.28-.5.69-.5 1.12v7.05c0 .83.67 1.5 1.5 1.5h5.1A5.5 5.5 0 0117 9.6V8.45c0-.43-.18-.84-.5-1.12L11 2.39zm8 12.11a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function HomeAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2.38a1.5 1.5 0 012 0l5.5 4.95c.32.28.5.69.5 1.11v7.06c0 .83-.67 1.5-1.5 1.5h-11A1.5 1.5 0 013 15.5V8.44c0-.42.18-.83.5-1.11L9 2.38zm4.35 6.47a.5.5 0 00-.7-.7L9 11.78l-1.65-1.65a.5.5 0 10-.7.71l2 2c.2.2.5.2.7 0l4-4z"></path></svg>`,
	4,
)

function HomeCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2.39a1.5 1.5 0 00-2 0L3.5 7.33c-.32.28-.5.69-.5 1.12v7.05c0 .83.67 1.5 1.5 1.5h4.55a2.46 2.46 0 01-.05-.5v-6c0-1.22.88-2.11 1.83-2.64A7.68 7.68 0 0114.5 7c.64 0 1.27.07 1.85.2L11 2.38zm6 6.03A7.25 7.25 0 0014.5 8C12.01 8 10 9.12 10 10.5s2.02 2.5 4.5 2.5c2.49 0 4.5-1.12 4.5-2.5 0-.87-.8-1.63-2-2.08zM14.5 14c1.38 0 2.68-.3 3.67-.86.29-.16.58-.36.83-.59v3.95c0 1.38-2.01 2.5-4.5 2.5S10 17.88 10 16.5v-3.95c.25.23.54.43.83.6 1 .54 2.29.85 3.67.85z"></path></svg>`,
	4,
)

function HomeDatabaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2.39a1.5 1.5 0 00-2 0L3.5 7.33c-.32.28-.5.69-.5 1.12v7.05c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5v-4c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5v4c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5V8.45c0-.43-.18-.84-.5-1.12L11 2.39z"></path></svg>`,
	4,
)

function HomeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2.38a1.5 1.5 0 00-2 0L3.5 7.33c-.32.28-.5.69-.5 1.11v7.06c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5V8.44c0-.42-.18-.83-.5-1.11L11 2.38zM7 11a1 1 0 110-2 1 1 0 010 2zm4-1a1 1 0 11-2 0 1 1 0 012 0zm2 1a1 1 0 110-2 1 1 0 010 2zm-5 2a1 1 0 11-2 0 1 1 0 012 0zm2 1a1 1 0 110-2 1 1 0 010 2zm4-1a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function HomeMoreIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2.39a1.5 1.5 0 012 0l5.5 4.94c.32.28.5.69.5 1.12v.95a2.99 2.99 0 00-4.33 1.6H8.5a.5.5 0 00-.5.5v4c0 .83-.67 1.5-1.5 1.5h-2A1.5 1.5 0 013 15.5V8.45c0-.43.18-.84.5-1.12L9 2.39zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function HomePersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 00-3.46 6H3.42C2.64 8 2 8.64 2 9.42 2 12.5 4.5 15 7.58 15h1.27a4.55 4.55 0 01-.35-1.75c0-1.2.67-2.21 1.46-2.9a5.91 5.91 0 013.99-1.4 3.01 3.01 0 00-.74-.57 4 4 0 00.25-.38h1.7C16.19 8 17 7.18 17 6.17 17 5.52 16.48 5 15.83 5h-1.96A4 4 0 0010 2zm7.5 8.5a.5.5 0 01.45.72l-.22.38-.02.02-.32.54a7.5 7.5 0 00-.77 1.86c-.16.56-.37 1.31-.74 1.94a2.94 2.94 0 01-2.63 1.54c-1.06 0-1.8-.53-2.27-1.03a4.1 4.1 0 01-.59-.81c-.6.6-1.06 1.3-1.44 2.06a.5.5 0 11-.9-.44 8.47 8.47 0 013.44-3.71c.66-.42 1.4-.79 2.2-1.1a.5.5 0 10-.38-.93 13.17 13.17 0 00-3.77 2.23 2.85 2.85 0 01.9-2.62c.63-.59 1.55-1 2.75-1.15a8.52 8.52 0 013.8.37l.09.03a6.17 6.17 0 00.41.1h.01z"></path></svg>`,
	4,
)

function IconsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H6V3.5zM5.5 11a5.5 5.5 0 004.9-8H14a3 3 0 013 3v8c0 .65-.2 1.25-.56 1.74l-5.39-5.3a1.5 1.5 0 00-2.1 0l-5.4 5.3C3.22 15.25 3 14.64 3 14v-3.6c.75.38 1.6.6 2.5.6zm7-3a.5.5 0 100-1 .5.5 0 000 1zm0 1a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-8.23 7.45c.49.35 1.08.55 1.73.55h8c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.7 0l-5.38 5.3z"></path></svg>`,
	4,
)

function ImageAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1 3c0-1.1.9-2 2-2h5a2 2 0 012 2v4a2 2 0 01-2 2H3a2 2 0 01-2-2V3zm2 3.5c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5zM3.5 3a.5.5 0 000 1h4a.5.5 0 000-1h-4zm9 5a.5.5 0 100-1 .5.5 0 000 1zM3 10h5a3 3 0 003-3V3h3a3 3 0 013 3v8c0 .65-.2 1.25-.56 1.74l-5.39-5.3a1.5 1.5 0 00-2.1 0l-5.4 5.3C3.22 15.25 3 14.64 3 14v-4zm9.5-1a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-8.23 7.45c.49.35 1.08.55 1.73.55h8c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.7 0l-5.38 5.3z"></path></svg>`,
	4,
)

function ImageAltTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 10a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 018 7.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75H3.71l.9.9a.5.5 0 11-.71.7L2.14 5.35a.5.5 0 010-.7L3.9 2.9a.5.5 0 11.7.7zM11 5.5a5.5 5.5 0 01-8 4.9V14c0 .65.2 1.25.56 1.74l5.39-5.3a1.5 1.5 0 012.1 0l5.4 5.3c.34-.49.55-1.1.55-1.74V6a3 3 0 00-3-3h-3.6c.38.75.6 1.6.6 2.5zM12.5 8a.5.5 0 100-1 .5.5 0 000 1zm0 1a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm-8.23 7.45c.49.35 1.08.55 1.73.55h8c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.7 0l-5.38 5.3z"></path></svg>`,
	4,
)

function ImageArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 10a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-2-5a.5.5 0 01-.5-.63V3a.5.5 0 011 0v.2a2.75 2.75 0 11-.55 4.14.5.5 0 01.75-.67A1.74 1.74 0 007.25 5.5 1.75 1.75 0 004.6 4H5a.5.5 0 010 1H3.5zm2 6c-.9 0-1.75-.22-2.5-.6V14c0 .65.2 1.25.56 1.74l5.39-5.3a1.5 1.5 0 012.1 0l5.4 5.3c.34-.49.55-1.1.55-1.74V6a3 3 0 00-3-3h-3.6a5.5 5.5 0 01-4.9 8zm7-3a.5.5 0 100-1 .5.5 0 000 1zm0 1a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm-8.23 7.45c.49.35 1.08.55 1.73.55h8c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.7 0l-5.38 5.3z"></path></svg>`,
	4,
)

function ImageArrowCounterclockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 10a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm.9-6.4l.9.9H5.74A2.75 2.75 0 003 7.25v.25a.5.5 0 001 0v-.25c0-.97.78-1.75 1.75-1.75h1.54l-.9.9a.5.5 0 10.71.7l1.76-1.75a.5.5 0 000-.7L7.1 2.9a.5.5 0 10-.7.7zM11 5.5a5.5 5.5 0 01-8 4.9V14c0 .65.2 1.25.56 1.74l5.39-5.3a1.5 1.5 0 012.1 0l5.4 5.3c.34-.49.55-1.1.55-1.74V6a3 3 0 00-3-3h-3.6c.38.75.6 1.6.6 2.5zM12.5 8a.5.5 0 100-1 .5.5 0 000 1zm0 1a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm-8.23 7.45c.49.35 1.08.55 1.73.55h8c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.7 0l-5.38 5.3z"></path></svg>`,
	4,
)

function ImageArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a3 3 0 013-3h6a3 3 0 013 3v6c0 .65-.2 1.25-.55 1.74L12.2 9.5a1.71 1.71 0 00-2.42 0l-4.24 4.24A2.99 2.99 0 015 12V6zm3.5 1.5a1 1 0 100-2 1 1 0 000 2zm3 2.7l4.24 4.25c-.5.34-1.1.55-1.74.55H8c-.65 0-1.25-.2-1.74-.55l4.24-4.24a.71.71 0 011 0zm2.74 5.8A3 3 0 0112 17H7.5A4.5 4.5 0 013 12.5V8a3 3 0 011-2.24v6.74A3.5 3.5 0 007.5 16h6.74z"></path></svg>`,
	4,
)

function ImageCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 8a.5.5 0 100-1 .5.5 0 000 1zM3 6a3 3 0 013-3h8a3 3 0 013 3v3c-.7.03-1.37.31-1.9.84l-2.3 2.3-1.75-1.7a1.5 1.5 0 00-2.1 0l-5.4 5.3C3.22 15.24 3 14.64 3 14V6zm9.5 3a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-2.23 5.67l1.82-1.81-1.74-1.71a.5.5 0 00-.7 0l-5.38 5.3c.48.34 1.08.55 1.73.55h3.22l.21-.85a3.2 3.2 0 01.84-1.48zm.7.7l4.84-4.82a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.08l.37-1.5c.1-.38.3-.73.58-1.01z"></path></svg>`,
	4,
)

function ImageEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$go = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.55 2.15A8.9 8.9 0 004.01 5h2.98a8.9 8.9 0 00-.54-2.85 2.93 2.93 0 00-.53-.91C5.73 1.04 5.59 1 5.5 1c-.1 0-.23.05-.42.24-.18.19-.36.5-.53.91zm-.72-.83A9.92 9.92 0 003 5H1.03a4.5 4.5 0 012.8-3.68zm3.34 0A9.92 9.92 0 017.99 5h1.98a4.5 4.5 0 00-2.8-3.68zM9.97 6H8a9.92 9.92 0 01-.82 3.68A4.5 4.5 0 009.97 6zM5.5 10c.1 0 .23-.05.42-.24.18-.19.36-.5.53-.91.3-.73.5-1.72.54-2.85H4.01a8.9 8.9 0 00.54 2.85c.17.42.35.72.53.91.19.2.33.24.42.24zm-1.67-.32A4.5 4.5 0 011.03 6H3a9.92 9.92 0 00.82 3.68zM5.5 11a5.5 5.5 0 004.9-8H14a3 3 0 013 3v8c0 .65-.2 1.25-.56 1.74l-5.39-5.3a1.5 1.5 0 00-2.1 0l-5.4 5.3C3.22 15.25 3 14.64 3 14v-3.6c.75.38 1.6.6 2.5.6zm7-3a.5.5 0 100-1 .5.5 0 000 1zm0 1a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-8.23 7.45c.49.35 1.08.55 1.73.55h8c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.7 0l-5.38 5.3z"></path></svg>`,
	4,
)

function ImageGlobeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$go.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8c0 .65.2 1.25.56 1.74l5.39-5.3a1.5 1.5 0 012.1 0l5.4 5.3c.34-.49.55-1.1.55-1.74V6a3 3 0 00-3-3H6zm0 14c-.65 0-1.24-.2-1.73-.55l5.38-5.3c.2-.2.5-.2.7 0l5.38 5.3c-.49.35-1.08.55-1.73.55H6zm6.5-8.25a1.25 1.25 0 110-2.5 1.25 1.25 0 010 2.5z"></path></svg>`,
	4,
)

function ImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v6c0 .65.2 1.25.55 1.74L7.6 9.7a2 2 0 012.82 0l4.04 4.03c.34-.5.55-1.1.55-1.74V6a3 3 0 00-3-3H6zm6.5 3.5a1 1 0 11-2 0 1 1 0 012 0zm1.24 7.95L9.7 10.4a1 1 0 00-1.42 0l-4.03 4.04c.5.34 1.1.55 1.74.55h6c.65 0 1.25-.2 1.74-.55zM5.76 16A3 3 0 008 17h4.5a4.5 4.5 0 004.5-4.5V8a3 3 0 00-1-2.24v6.74c0 .12 0 .24-.02.36A3.5 3.5 0 0112.5 16H5.76z"></path></svg>`,
	4,
)

function ImageMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l1.4 1.41A2.99 2.99 0 003 6v6c0 .65.2 1.25.55 1.74L7.6 9.7a2 2 0 01.9-.52l6.1 6.11c-.58.44-1.3.7-2.09.7H5.76A3 3 0 008 17h4.5c1.06 0 2.04-.37 2.8-.98l1.85 1.83a.5.5 0 00.7-.7l-15-15zM15.8 13.68l.76.76c.28-.59.44-1.25.44-1.94V8a3 3 0 00-1-2.24v6.74a3.56 3.56 0 01-.2 1.18zM5.22 3.1l9.68 9.68A3 3 0 0015 12V6a3 3 0 00-3-3H6a3 3 0 00-.78.1zm7.28 3.4a1 1 0 11-2 0 1 1 0 012 0zm1.24 7.95L9.7 10.4a1 1 0 00-1.42 0l-4.03 4.04c.5.34 1.1.55 1.74.55h6c.65 0 1.25-.2 1.74-.55z"></path></svg>`,
	4,
)

function ImageMultipleOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l1.4 1.41A2.99 2.99 0 003 6v8c0 .65.2 1.25.56 1.74l5.39-5.3c.14-.14.3-.25.46-.32l.64.63-.36.36a.51.51 0 00-.04.04l-5.38 5.3c.49.35 1.08.55 1.73.55h8c.6 0 1.15-.17 1.62-.47l.01-.01.1-.07 1.42 1.4a.5.5 0 00.7-.7l-15-15zM13 7.5a.5.5 0 11-1 0 .5.5 0 011 0zM5.22 3.1L16.9 14.78A3 3 0 0017 14V6a3 3 0 00-3-3H6a3 3 0 00-.78.1zM14 7.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"></path></svg>`,
	4,
)

function ImageOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 10a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-1c-.79 0-1.51-.26-2.1-.7l4.9-4.9A3.5 3.5 0 015.5 9zM2.7 7.6a3.5 3.5 0 014.9-4.9L2.7 7.6zM13 7.5a.5.5 0 11-1 0 .5.5 0 011 0zM5.5 11a5.5 5.5 0 004.9-8H14a3 3 0 013 3v8c0 .65-.2 1.25-.56 1.74l-5.39-5.3a1.5 1.5 0 00-2.1 0l-5.4 5.3C3.22 15.25 3 14.64 3 14v-3.6c.75.38 1.6.6 2.5.6zM14 7.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM6 17c-.65 0-1.24-.2-1.73-.55l5.38-5.3c.2-.2.5-.2.7 0l5.38 5.3c-.49.35-1.08.55-1.73.55H6z"></path></svg>`,
	4,
)

function ImageProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 6a3 3 0 013-3h6a3 3 0 013 3v6a3 3 0 01-1.34 2.5A3 3 0 0116 17a.5.5 0 01-1 0 2 2 0 00-2-2 .5.5 0 010-1h-2.5a.5.5 0 010 1h-1a.5.5 0 010-1H7a.5.5 0 010 1 2 2 0 00-2 2 .5.5 0 01-1 0 3 3 0 011.34-2.5A3 3 0 014 12V6zm1.98 7.72l3.53-3.52a.7.7 0 01.98 0l3.53 3.52c.29-.17.53-.41.7-.7L11.2 9.49a1.7 1.7 0 00-2.4 0l-3.52 3.53c.17.29.41.53.7.7zM13 7a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function ImageReflectionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 8a.5.5 0 100-1 .5.5 0 000 1zM3 6a3 3 0 013-3h8a3 3 0 013 3v8c0 .65-.2 1.25-.56 1.74l-5.39-5.3a1.5 1.5 0 00-1.7-.28A4.5 4.5 0 003 8.76V6zm9.5 3a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-.59 8H14c.65 0 1.24-.2 1.73-.55l-5.38-5.3a.5.5 0 00-.58-.09 4.5 4.5 0 01-.2 3.38l2 2c.15.16.27.36.34.56zm-3.6-2.4a3.5 3.5 0 10-.7.7l2.54 2.55a.5.5 0 00.7-.7L8.3 14.6zM5.5 15a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function ImageSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a3 3 0 00-3 3v6c0 .65.2 1.25.55 1.74L6.8 8.49a1.7 1.7 0 012.4 0l4.25 4.25c.34-.5.55-1.1.55-1.74V5a3 3 0 00-3-3H5zm0 12c-.65 0-1.25-.2-1.74-.55L7.51 9.2a.7.7 0 01.98 0l4.25 4.25c-.5.34-1.1.55-1.74.55H5zm6-8a1 1 0 11-2 0 1 1 0 012 0zm-5 9a3 3 0 003 3h3a6 6 0 006-6V9a3 3 0 00-3-3v5a4 4 0 01-4 4H6z"></path></svg>`,
	4,
)

function ImageShadowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.75v5.45a1.5 1.5 0 00-1.5 0V4.75a.25.25 0 00-.25-.25H12c-.69 0-1.25.56-1.25 1.25V12h-.25c-.52 0-.98.27-1.25.67V5.75c0-.69-.56-1.25-1.25-1.25H3.75a.25.25 0 00-.25.25v10.5c0 .14.11.25.25.25H8c.4 0 .77-.2 1-.5v.5c0 .42.18.8.46 1.08-.42.27-.92.42-1.46.42H3.75C2.78 17 2 16.22 2 15.25V4.75C2 3.78 2.78 3 3.75 3H8c.79 0 1.5.33 2 .86.5-.53 1.21-.86 2-.86h4.25c.97 0 1.75.78 1.75 1.75zm.13 6.45c.12.16.29.45.45.87.25.68.4 1.5.4 2.43 0 .94-.15 1.75-.4 2.43-.16.42-.33.7-.45.87a.5.5 0 01-.84-.52l.11-.19a5.9 5.9 0 00.58-2.6 5.9 5.9 0 00-.58-2.58l-.07-.11a.5.5 0 11.8-.6zm-4.44-.16c.19.08.31.26.31.46v6a.5.5 0 01-.85.35L11.29 16h-.79a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5h.8l1.85-1.85a.5.5 0 01.54-.11zm3.02 1.93c-.1-.3-.2-.55-.28-.7a.5.5 0 00-.9.45 4.6 4.6 0 01.45 1.78 3.94 3.94 0 01-.37 1.6l-.07.18a.5.5 0 00.89.44 5.53 5.53 0 00.55-2.22c0-.5-.1-1.02-.27-1.53z"></path></svg>`,
	4,
)

function ImmersiveReaderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ge = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a3 3 0 00-3 3c0 2.23.79 5.2 1.22 6.69.24.79.97 1.31 1.78 1.31s1.54-.52 1.78-1.31C12.2 10.2 13 7.25 13 5a3 3 0 00-3-3zm0 12a2 2 0 100 4 2 2 0 000-4z"></path></svg>`,
	4,
)

function ImportantIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ge.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.08 8.75a34.9 34.9 0 0111.86 0l1.48.24a.5.5 0 10.16-.98l-1.13-.19a1.42 1.42 0 00-.08-.22l-1.65-3.7a1.5 1.5 0 00-1.37-.9h-6.7c-.6 0-1.13.35-1.37.9L3.63 7.6l-.09.23L2.42 8a.5.5 0 00.16.98 90.9 90.9 0 011.5-.24zM3 13.5a2.5 2.5 0 115 0 2.5 2.5 0 01-5 0zM5.5 10a3.5 3.5 0 103.46 4h2.08a3.5 3.5 0 100-1H8.96a3.5 3.5 0 00-3.46-3zm6.5 3.5a2.5 2.5 0 115 0 2.5 2.5 0 01-5 0z"></path></svg>`,
	4,
)

function IncognitoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 10-16 0 8 8 0 0016 0zM9.5 8.91a.5.5 0 011 0V13.6a.5.5 0 01-1 0V8.9zm-.25-2.16a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path></svg>`,
	4,
)

function InfoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$gb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 9a8 8 0 10-6.28 7.81 7.05 7.05 0 01-.72-2.93v-2.79c0-.75.59-1.42 1.4-1.42.9 0 1.76-.37 2.6-1.24a1.39 1.39 0 012 0 5.06 5.06 0 001 .8V9zM8.5 7.91a.5.5 0 011 0V12.6a.5.5 0 01-1 0V7.9zm-.25-2.16a.75.75 0 111.5 0 .75.75 0 01-1.5 0zm8.75 4.6a4.63 4.63 0 01-1-.59c-.24-.18-.48-.4-.72-.64a.39.39 0 00-.56 0 4.5 4.5 0 01-3.32 1.55.4.4 0 00-.4.41v2.77c.03.8.18 1.51.44 2.15A4.81 4.81 0 0013 18c.52.4 1.15.73 1.87.98.09.03.17.03.26 0 2.56-.89 3.87-2.71 3.87-5.4V11a.4.4 0 00-.4-.33 4.24 4.24 0 01-1.6-.32z"></path></svg>`,
	4,
)

function InfoShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$gb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ga = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 6V3H3v3c0 .28.22.5.5.5h13A.5.5 0 0017 6zm-4.55 1l-2.4 4.78a.5.5 0 10.9.44L13.56 7 13 6.5l-.55.5zM10 17.5c.55 0 1-.67 1-1.5s-.45-1.5-1-1.5-1 .67-1 1.5.45 1.5 1 1.5z"></path></svg>`,
	4,
)

function InkingToolAccentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ga.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.52 15a6.2 6.2 0 00-.02.5c0 .58.07 1.16.27 1.62.21.47.6.88 1.23.88s1.02-.41 1.23-.88c.2-.46.27-1.04.27-1.62 0-.17 0-.34-.02-.5H8.52zM2.5 5.5v-3c0-.28.22-.5.5-.5h14c.28 0 .5.22.5.5v3c0 .83-.67 1.5-1.5 1.5H4a1.5 1.5 0 01-1.5-1.5zM4.75 8l2.72 5.45a1 1 0 00.9.55h3.26a1 1 0 00.9-.55L15.25 8H4.75z"></path></svg>`,
	4,
)

function InkingToolIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 2.93c.04-.4.4-.71.82-.68l3.04.28c2.16.2 4.22.45 5.92.73 1.66.27 3.08.6 3.85.98.2.1.4.23.57.41.18.2.36.51.28.9-.06.36-.3.6-.48.73a3 3 0 01-.7.37c-1.02.4-2.95.8-5.98 1.17-1.44.18-2.5.36-3.22.52a42.44 42.44 0 004.24.57c1.02.09 2.1.23 3.02.4.46.09.9.19 1.26.3.36.1.71.23.97.4.13.1.3.23.42.45.14.25.17.56.03.85-.11.24-.3.4-.45.5-.16.1-.35.18-.54.25-.77.29-2.15.55-4.29.8-2.12.23-3.4.54-4.11.85-.3.13-.45.24-.51.3.03.04.07.1.16.17.15.14.36.3.64.45.56.32 1.29.61 1.98.84l2.64.81a.75.75 0 11-.44 1.44L9.2 16.9c-.75-.25-1.58-.58-2.25-.96-.34-.2-.67-.41-.93-.65a2.03 2.03 0 01-.62-.94c-.12-.44-.01-.88.28-1.24.26-.33.65-.58 1.1-.77.93-.4 2.4-.73 4.55-.98 1.37-.15 2.36-.31 3.04-.46l-.55-.12c-.86-.16-1.89-.29-2.86-.37a43.94 43.94 0 01-3.7-.46c-.53-.09-1-.2-1.4-.3-.37-.11-.75-.24-1.02-.43a1.19 1.19 0 01-.43-.49.93.93 0 01.06-.87c.13-.22.32-.36.47-.44.17-.1.36-.18.56-.26.8-.28 2.22-.56 4.37-.83 2.7-.33 4.38-.66 5.3-.96-.64-.2-1.63-.42-2.9-.63a88.96 88.96 0 00-5.8-.72l-3.05-.27a.75.75 0 01-.68-.82z"></path></svg>`,
	4,
)

function InkStrokeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 103.12 6.5H10v-1h3.7c.14-.32.23-.65.27-1H10v-1h3.97a3.97 3.97 0 00-.26-1H10v-1h3.12A4 4 0 0010 2zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 0010 18c1.7 0 3.28-.32 4.52-1H10v-1h5.84c.28-.3.52-.64.7-1H10v-1h6.9c.06-.32.1-.65.1-1h-7v-1h6.73A2 2 0 0015 11H5z"></path></svg>`,
	4,
)

function InprivateAccountIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm0 12c0 1.1.9 2 2 2h8a2 2 0 002-2v-2a2 2 0 00-2-2H6a2 2 0 00-2 2v2zM2.5 9.5a.5.5 0 000 1h15a.5.5 0 000-1h-15z"></path></svg>`,
	4,
)

function InsertIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.73 3.69a1 1 0 00-1.46-1.38l-8.5 9a1 1 0 000 1.38l8.5 9a1 1 0 101.46-1.38L4.88 12l7.85-8.31z"></path></svg>`,
	4,
)

function IosArrowLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.27 3.69a1 1 0 111.46-1.38l8.5 9a1 1 0 010 1.38l-8.5 9a1 1 0 11-1.46-1.38L19.12 12l-7.85-8.31z"></path></svg>`,
	4,
)

function IosArrowRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.22 6.03a.75.75 0 011.06-1.06l4.5 4.5c.3.3.3.77 0 1.06l-4.5 4.5a.75.75 0 11-1.06-1.06L16.19 10l-3.97-3.97z"></path></svg>`,
	4,
)

function IosChevronRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 4a2 2 0 01-2.65 1.88l-1.28 1.95A3 3 0 0113 9.99l1.17.2a2 2 0 11-.16.99l-1.17-.2a3 3 0 01-1.43 1.67l.45 1.35H12a2 2 0 11-1.1.32l-.44-1.36a3.02 3.02 0 01-2.87-1.18l-1.64.8A2 2 0 014 15a2 2 0 111.5-3.32l1.64-.79A3 3 0 017.77 8l-.93-1.17a2 2 0 11.77-.63l.95 1.18a2.99 2.99 0 012.68-.1l1.28-1.94A2 2 0 1116 4z"></path></svg>`,
	4,
)

function IotIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm7.25 1.5a.75.75 0 00-.75.75v5c0 .14-.11.25-.25.25h-1a.75.75 0 000 1.5h1c.97 0 1.75-.78 1.75-1.75v-5a.75.75 0 00-.75-.75zm1.25 1.75v1c0 .97.78 1.75 1.75 1.75h.5c.14 0 .25.11.25.25v1c0 .14-.11.25-.25.25h-1.5a.75.75 0 000 1.5h1.5c.97 0 1.75-.78 1.75-1.75v-1c0-.97-.78-1.75-1.75-1.75h-.5a.25.25 0 01-.25-.25v-1c0-.14.11-.25.25-.25h1.5a.75.75 0 000-1.5h-1.5c-.97 0-1.75.78-1.75 1.75z"></path></svg>`,
	4,
)

function JavascriptIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 7.96a3 3 0 10-1 0V11h-2c-.83 0-1.5.67-1.5 1.5v.5h8v-.5c0-.83-.67-1.5-1.5-1.5h-2V7.96zM3 16c0-1.1.9-2 2-2h10a2 2 0 012 2v1.5a.5.5 0 01-.5.5h-13a.5.5 0 01-.5-.5V16z"></path></svg>`,
	4,
)

function JoystickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.88 3.6c.38-.44.76-.58 1.05-.6.3-.01.58.1.78.3.2.19.3.43.28.63-.01.2-.12.44-.49.65a5.8 5.8 0 00-2.2 1.93 2.25 2.25 0 00-.3.92v.12a.5.5 0 00.5.45h3a.5.5 0 000-1H5.18C5.4 6.64 5.9 6.1 7 5.45c.62-.36.95-.88.99-1.45a1.84 1.84 0 00-.59-1.43c-.38-.36-.92-.6-1.52-.57-.61.04-1.22.34-1.76.95a.5.5 0 10.76.65zM2.76 2.07c.15.1.24.26.24.43v5a.5.5 0 01-1 0V3.3l-.78.4a.5.5 0 01-.45-.9l1.5-.75a.5.5 0 01.5.02zm8.28.93c-.33 0-.75.14-1.17.6a.5.5 0 11-.74-.66 2.57 2.57 0 011.9-.94c.64 0 1.2.28 1.57.7a1.5 1.5 0 01-.32 2.3c.27.2.47.42.6.69.26.59.08 1.2-.28 1.61-.36.42-.93.7-1.56.7-.65 0-1.33-.29-1.91-.94a.5.5 0 11.74-.66c.42.46.84.6 1.17.6.34 0 .63-.15.8-.35.17-.2.2-.4.12-.55-.07-.17-.33-.44-1.07-.61a.5.5 0 010-.98c.74-.17 1-.44 1.07-.61.07-.15.05-.35-.12-.55-.17-.2-.46-.35-.8-.35zM2 14.5V8.91a1.5 1.5 0 001.5-.3c.27.25.62.4 1 .4h3c.59 0 1.1-.35 1.34-.84.66.55 1.42.83 2.2.83.92 0 1.77-.4 2.32-1.05A2.5 2.5 0 0013.64 5h2.86c.83 0 1.5.67 1.5 1.5v8c0 .83-.67 1.5-1.5 1.5h-13A1.5 1.5 0 012 14.5zM5.5 13a.5.5 0 000 1h9a.5.5 0 000-1h-9zm8.25-4.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zm-7.5 2.5a.75.75 0 101.5 0 .75.75 0 00-1.5 0zm3.75.75a.75.75 0 100-1.5.75.75 0 000 1.5zm2.25-.75a.75.75 0 101.51 0 .75.75 0 00-1.5 0z"></path></svg>`,
	4,
)

function Keyboard123Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3.5C2 2.67 2.67 2 3.5 2h13c.83 0 1.5.67 1.5 1.5v8c0 .83-.67 1.5-1.5 1.5h-6v3.3l1.15-1.15a.5.5 0 01.7.7l-2 2a.5.5 0 01-.7 0l-2-2a.5.5 0 01.7-.7l1.15 1.14V13h-6A1.5 1.5 0 012 11.5v-8zM5.5 6a.75.75 0 100-1.5.75.75 0 000 1.5zm6 0a.75.75 0 100-1.5.75.75 0 000 1.5zm-6 4a.5.5 0 000 1h9a.5.5 0 000-1h-9zm8.25-4.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zm-7.5 2.5a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM10 8.5A.75.75 0 1010 7a.75.75 0 000 1.5zm2.25-.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM8.5 6a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function KeyboardDockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v8c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5v-8c0-.83-.67-1.5-1.5-1.5h-13zm2.75 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm6 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM5 12.5c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9a.5.5 0 01-.5-.5zM14.5 8a.75.75 0 110-1.5.75.75 0 010 1.5zM7 10.5A.75.75 0 117 9a.75.75 0 010 1.5zm3.75-.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.26.75A.75.75 0 1113 9a.75.75 0 010 1.5zM9.25 7.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"></path></svg>`,
	4,
)

function KeyboardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5C2 3.67 2.67 3 3.5 3h13c.83 0 1.5.67 1.5 1.5v8c0 .83-.67 1.5-1.5 1.5H11a1 1 0 11-2 0H3.5A1.5 1.5 0 012 12.5v-8zM5.5 7a.75.75 0 100-1.5.75.75 0 000 1.5zm6 0a.75.75 0 100-1.5.75.75 0 000 1.5zm-6 4a.5.5 0 000 1h9a.5.5 0 000-1h-9zm8.25-4.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zm-7.5 2.5a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM10 9.5A.75.75 0 1010 8a.75.75 0 000 1.5zm2.25-.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM8.5 7a.75.75 0 100-1.5.75.75 0 000 1.5zM2 16.5c0-.28.22-.5.5-.5h15a.5.5 0 010 1h-15a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function KeyboardLayoutFloatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v8c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5v-8c0-.83-.67-1.5-1.5-1.5h-13zm2 8h3a.5.5 0 010 1h-3a.5.5 0 010-1zm0-4.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM7.75 8a.75.75 0 110-1.5.75.75 0 010 1.5zM6 9.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.25.75a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function KeyboardLayoutOneHandedLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3.5c0-.28.22-.5.5-.5h7a.5.5 0 000-1h-7C2.67 2 2 2.67 2 3.5v4a.5.5 0 001 0v-4zM3.5 9C2.67 9 2 9.67 2 10.5v6c0 .83.67 1.5 1.5 1.5h8c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5h-8zm2 6h4a.5.5 0 010 1h-4a.5.5 0 010-1zm0-2.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2 .75a.75.75 0 110-1.5.75.75 0 010 1.5zm3.5-.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM17.5 9c.28 0 .5.22.5.5v7c0 .83-.67 1.5-1.5 1.5h-2a.5.5 0 010-1h2a.5.5 0 00.5-.5v-7c0-.28.22-.5.5-.5zm-4-7a.5.5 0 000 1h2.8l-4.15 4.15a.5.5 0 00.7.7L17 3.71V6.5a.5.5 0 001 0v-4a.5.5 0 00-.5-.5h-4z"></path></svg>`,
	4,
)

function KeyboardLayoutResizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5C2 4.67 2.67 4 3.5 4h13c.83 0 1.5.67 1.5 1.5v8c0 .83-.67 1.5-1.5 1.5h-13A1.5 1.5 0 012 13.5v-8zm3 7c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5zM4.75 8a.75.75 0 100-1.5.75.75 0 000 1.5zm3.75-.75a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM5.25 10.5a.75.75 0 100-1.5.75.75 0 000 1.5zM9 9.75a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM14.5 12h-3a.5.5 0 000 1h3a.5.5 0 000-1zm0-4.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM12.25 8a.75.75 0 100-1.5.75.75 0 000 1.5zM14 9.75a.75.75 0 101.5 0 .75.75 0 00-1.5 0zm-2.25.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function KeyboardLayoutSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.14 2.53a1.5 1.5 0 00-2.28 0l-6.62 7.8A1 1 0 003 11.98h3V17a1 1 0 001 1h6a1 1 0 001-1v-5.02h3a1 1 0 00.76-1.65l-6.62-7.8z"></path></svg>`,
	4,
)

function KeyboardShiftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.14 2.53a1.5 1.5 0 00-2.28 0l-6.62 7.8A1 1 0 003 11.98h3V15a1 1 0 001 1h6a1 1 0 001-1v-3.02h3a1 1 0 00.76-1.65l-6.62-7.8zM6.5 17a.5.5 0 000 1h7a.5.5 0 000-1h-7z"></path></svg>`,
	4,
)

function KeyboardShiftUppercaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 4.75a.75.75 0 00-1.5 0v10.5a.75.75 0 001.5 0V4.75zm-8.47-.53a.75.75 0 00-1.06 1.06l3.97 3.97H2.75a.75.75 0 000 1.5h8.69l-3.97 3.97a.75.75 0 101.06 1.06l5.25-5.25c.3-.3.3-.77 0-1.06L8.53 4.22z"></path></svg>`,
	4,
)

function KeyboardTabIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.75 4.5C6.44 4.5 7 5.06 7 5.75V7H5.75a1.25 1.25 0 110-2.5zM8.5 7V5.75A2.75 2.75 0 105.75 8.5H7v3H5.75a2.75 2.75 0 102.75 2.75V13h3v1.25a2.75 2.75 0 102.75-2.75H13v-3h1.25a2.75 2.75 0 10-2.75-2.75V7h-3zm0 1.5h3v3h-3v-3zM13 7V5.75A1.25 1.25 0 1114.25 7H13zm0 6h1.25A1.25 1.25 0 1113 14.25V13zm-6 0v1.25A1.25 1.25 0 115.75 13H7z"></path></svg>`,
	4,
)

function KeyCommandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 7.5C7 4.42 9.42 2 12.5 2S18 4.42 18 7.5 15.58 13 12.5 13c-.5 0-1-.05-1.5-.18V13a1 1 0 01-1 1H9v1a1 1 0 01-1 1H7v.5c0 .83-.67 1.5-1.5 1.5h-2A1.5 1.5 0 012 16.5v-1.59c0-.4.16-.78.44-1.06l4.54-4.54c.13-.13.2-.37.14-.64A5.62 5.62 0 017 7.5zM15 6a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function KeyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2l.32.01a5.5 5.5 0 00-1.09 7.96l-.73.74v1.69a.6.6 0 01-.6.6H6v1.4a.6.6 0 01-.6.6H2.6a.6.6 0 01-.6-.6v-2.86a.6.6 0 01.18-.42l3.98-3.99A4 4 0 0110 2zM9 6.5a4.5 4.5 0 117 3.74v2.05l.78.79a.6.6 0 010 .84L15.71 15l1.06 1.07a.6.6 0 01-.04.89l-2.36 1.88a.6.6 0 01-.74 0l-2.4-1.92a.6.6 0 01-.23-.47v-6.2A4.5 4.5 0 019 6.5zm5.25-1a.75.75 0 10-1.5 0 .75.75 0 001.5 0z"></path></svg>`,
	4,
)

function KeyMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 2a5.45 5.45 0 00-5.38 6.67c.06.27 0 .5-.14.64l-4.54 4.54A1.5 1.5 0 002 14.91v1.59c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5V16h1a1 1 0 001-1v-1c0-.51.26-.96.65-1.23l-1.21-1.2a1.5 1.5 0 010-2.13l2-2A1.5 1.5 0 0112.9 9H14a5 5 0 013.3 1.24A5.54 5.54 0 0012.5 2zM14 5a1 1 0 110 2 1 1 0 010-2zm-2.15 3.85a.5.5 0 00-.7-.7l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L10.71 11H14a3 3 0 11-3 3 .5.5 0 10-1 0 4 4 0 104-4h-3.3l1.15-1.15z"></path></svg>`,
	4,
)

function KeyResetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 5.5a5.5 5.5 0 01-8 4.9v2.1c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5h-4.52l.02.5zm-9 10c0-.28.22-.5.5-.5h15a.5.5 0 010 1h-15a.5.5 0 01-.5-.5zM5.5 10a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm1.85-6.35c.2.2.2.5 0 .7L6.21 5.5l1.14 1.15a.5.5 0 11-.7.7L5.5 6.21 4.35 7.35a.5.5 0 11-.7-.7L4.79 5.5 3.65 4.35a.5.5 0 11.7-.7L5.5 4.79l1.15-1.14c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function LaptopDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 5C3.67 5 3 5.67 3 6.5v6c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5h-11zm-2 10a.5.5 0 000 1h15a.5.5 0 000-1h-15z"></path></svg>`,
	4,
)

function LaptopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2a.5.5 0 00-.5.5V5a2 2 0 002 2h10a2 2 0 002-2V2.5a.5.5 0 00-.5-.5h-13z"></path><path d="M10.5 10h4c.83 0 1.5-.67 1.5-1.5V8H4v.5c0 .83.67 1.5 1.5 1.5h4v2.5a.5.5 0 001 0V10z"></path><path d="M5 14.5c0-.28.22-.5.5-.5H7a.5.5 0 010 1H5.5a.5.5 0 01-.5-.5z"></path><path d="M13 14a.5.5 0 000 1h1.5a.5.5 0 000-1H13z"></path><path d="M10.5 14.5a.5.5 0 11-1 0 .5.5 0 011 0z"></path><path d="M10.5 16.5a.5.5 0 00-1 0v2a.5.5 0 001 0v-2z"></path><path d="M8.85 15.15c.2.2.2.5 0 .7l-1.5 1.5a.5.5 0 01-.7-.7l1.5-1.5c.2-.2.5-.2.7 0z"></path><path d="M11.15 15.85a.5.5 0 01.7-.7l1.5 1.5a.5.5 0 01-.7.7l-1.5-1.5z"></path></svg>`,
	18,
)

function LaserToolIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.16 2.21a8.02 8.02 0 013.68 0 .75.75 0 01-.35 1.46 6.52 6.52 0 00-2.98 0 .75.75 0 01-.35-1.46zM6.83 3.44c.21.35.1.81-.25 1.03a6.54 6.54 0 00-2.11 2.11.75.75 0 01-1.28-.79 8.04 8.04 0 012.6-2.6.75.75 0 011.04.25zm6.34 0a.75.75 0 011.04-.25 8.04 8.04 0 012.6 2.6.75.75 0 01-1.28.8 6.54 6.54 0 00-2.11-2.12.75.75 0 01-.25-1.03zM3.11 7.6c.4.1.66.5.56.9a6.52 6.52 0 000 3 .75.75 0 01-1.46.34 8.02 8.02 0 010-3.68c.1-.4.5-.65.9-.56zm13.78 0c.4-.1.8.16.9.56a8.02 8.02 0 010 3.68.75.75 0 01-1.46-.35 6.52 6.52 0 000-2.98c-.1-.4.15-.81.56-.9zM3.44 13.17a.75.75 0 011.03.25 6.54 6.54 0 002.11 2.11.75.75 0 11-.79 1.28 8.04 8.04 0 01-2.6-2.6.75.75 0 01.25-1.04zm13.67 1.27a.75.75 0 00-1.22-.88l-.02.03a4.79 4.79 0 01-.38.46c-.24.28-.6.64-1.02 1.01a6.73 6.73 0 00-3.97-1.31 2.6 2.6 0 00-1.84.68 2.17 2.17 0 000 3.14 2.6 2.6 0 001.84.68c1.53 0 2.87-.58 3.91-1.27a9.4 9.4 0 011.1 1.31 7.02 7.02 0 01.3.52l.02.02c-.15-.26 0 0 0 0a.75.75 0 001.34-.67c.19.38 0 0 0 0l-.01-.02-.02-.04a5.61 5.61 0 00-.4-.64 9.9 9.9 0 00-1.13-1.4 11.79 11.79 0 001.46-1.57l.03-.04v-.01h.01zm-6.61.81c1.03 0 1.91.3 2.65.74a5.4 5.4 0 01-2.65.76c-.42 0-.67-.13-.8-.26a.67.67 0 010-.98c.13-.13.38-.26.8-.26z"></path></svg>`,
	4,
)

function LassoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1.91 7.38A8.5 8.5 0 013.7 4.3a.5.5 0 01.54-.13l1.92.68a1 1 0 001.32-.76l.36-2a.5.5 0 01.4-.4 8.53 8.53 0 013.55 0c.2.04.35.2.38.4l.37 2a1 1 0 001.32.76l1.92-.68a.5.5 0 01.54.13 8.5 8.5 0 011.78 3.08c.06.2 0 .4-.15.54l-1.56 1.32a1 1 0 000 1.52l1.56 1.32a.5.5 0 01.15.54 8.5 8.5 0 01-1.78 3.08.5.5 0 01-.54.13l-1.92-.68a1 1 0 00-1.32.76l-.37 2a.5.5 0 01-.38.4 8.53 8.53 0 01-3.56 0 .5.5 0 01-.39-.4l-.36-2a1 1 0 00-1.32-.76l-1.92.68a.5.5 0 01-.54-.13 8.5 8.5 0 01-1.78-3.08.5.5 0 01.15-.54l1.56-1.32a1 1 0 000-1.52L2.06 7.92a.5.5 0 01-.15-.54zm6.19.4l-1.58 1.9a.5.5 0 000 .64l1.39 1.67c.1.12.28.12.38 0l.93-1.11a.25.25 0 000-.32L8.75 10l.6-.72-1.25-1.5zM8.75 7l2.5 3-2.16 2.59a.25.25 0 00.2.41h1.84c.08 0 .15-.03.2-.09l2.15-2.59a.5.5 0 000-.64L11.25 7h-2.5z"></path></svg>`,
	4,
)

function LauncherSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 3.12a1 1 0 00-1 0L3.47 6.64a1 1 0 000 1.72l6.02 3.5a1 1 0 001 0l6.01-3.5a1 1 0 000-1.72l-6-3.52zM3.07 9.65l6.44 3.62a1 1 0 00.98 0l6.44-3.62a1 1 0 01-.42 1.26l-6 3.5a1 1 0 01-1.01 0l-6.01-3.5a1 1 0 01-.42-1.26zm0 2.45l6.44 3.63a1 1 0 00.98 0l6.44-3.63a1 1 0 01-.42 1.26l-6 3.5a1 1 0 01-1.01 0l-6.01-3.5a1 1 0 01-.42-1.26z"></path></svg>`,
	4,
)

function LayerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.07 2.46a1.5 1.5 0 00-2.14 0l-3.24 3.3a6.03 6.03 0 00.06 8.5v.01a5.98 5.98 0 003.75 1.74v1.49a.5.5 0 101 0V16c1.36-.1 2.7-.68 3.74-1.73h.01l.01-.02a6.03 6.03 0 00.05-8.48l-3.24-3.3zM10.5 15c-.33.03-.67.03-1 0V9.5a.5.5 0 111 0V15z"></path></svg>`,
	4,
)

function LeafOneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2a5 5 0 00-4 2 6 6 0 015.23 3.05c.25-.03.5-.05.77-.05h3V3.34C16 2.6 15.4 2 14.66 2H11zM7.34 14.99L7 15a5 5 0 01-5-5V6.34C2 5.6 2.6 5 3.34 5H7a5 5 0 014.2 2.28 6.02 6.02 0 00-3.43 2.78L6.35 8.65a.5.5 0 10-.7.7l1.68 1.69a6 6 0 000 3.95zM8 13a5 5 0 015-5h3.66C17.4 8 18 8.6 18 9.34V13a5 5 0 01-8.16 3.87l-.99.98a.5.5 0 01-.7-.7l.98-.99A4.98 4.98 0 018 13zm2.55 3.16l3.3-3.3a.5.5 0 00-.7-.71l-3.31 3.3c.2.27.44.5.7.71z"></path></svg>`,
	4,
)

function LeafThreeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.32 3C2.59 3 2 3.59 2 4.32V8a5 5 0 004.49 4.97 6.48 6.48 0 01-.05-4.82l-1.3-1.3a.5.5 0 11.71-.7L6.9 7.19a6.52 6.52 0 013.51-2.85A4.98 4.98 0 007 3H3.32zm4.95 11.02l-2.13 2.14a.5.5 0 10.7.7l2.14-2.13A5.5 5.5 0 0018 10.5V6.4c0-.77-.63-1.4-1.4-1.4h-4.1a5.5 5.5 0 00-4.23 9.02zm4.58-3.17L9.7 14.02c-.26-.21-.5-.45-.7-.71l3.16-3.16a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function LeafTwoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h4.26a5.5 5.5 0 01-.66-1H6a1 1 0 01-1-1h4.2A5.5 5.5 0 0116 9.2V4a2 2 0 00-2-2H6zm.75 2.5h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 010-1.5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.98-1.97a.45.45 0 00-.45-.03.49.49 0 00-.15.1.51.51 0 00-.14.36v3.08a.5.5 0 00.14.35.45.45 0 00.48.13.52.52 0 00.13-.06l2.3-1.57c.06-.04.12-.1.16-.18a.54.54 0 000-.49.49.49 0 00-.17-.18l-2.3-1.5z"></path></svg>`,
	4,
)

function LearningAppIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2C2.67 2 2 2.67 2 3.5v12.98c0 .83.67 1.5 1.5 1.5h1c.83 0 1.5-.67 1.5-1.5V3.5C6 2.67 5.33 2 4.5 2h-1zm5 0C7.67 2 7 2.67 7 3.5v12.98c0 .83.67 1.5 1.5 1.5h1c.83 0 1.5-.67 1.5-1.5V3.5c0-.83-.67-1.5-1.5-1.5h-1zm7.22 4.16a1.5 1.5 0 00-1.87-1.1l-.75.2A1.5 1.5 0 0012.04 7l2 9.8c.18.84 1.02 1.36 1.84 1.15l.99-.25c.79-.2 1.27-1 1.1-1.78l-2.25-9.76z"></path></svg>`,
	4,
)

function LibraryIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zM6.5 8.5a3.5 3.5 0 115.59 2.81c-.19.14-.29.29-.31.43l-.05.26H8.27l-.05-.26c-.02-.14-.12-.3-.3-.43A3.5 3.5 0 016.5 8.5zm2.18 5.68L8.46 13h3.08l-.22 1.18a1 1 0 01-.98.82h-.68a1 1 0 01-.98-.82z"></path></svg>`,
	4,
)

function LightbulbCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.07 15l-.38 1.6a1.84 1.84 0 01-1.67 1.4H9.13c-.82 0-1.54-.52-1.78-1.26l-.04-.14-.38-1.6h6.14zM10 2c3.31 0 6 2.6 6 5.8 0 1.68-.75 3.22-2.2 4.6a.6.6 0 00-.15.2l-.02.09L13.3 14H10.5V9.5a.5.5 0 10-1 0V14H6.69l-.31-1.31a.6.6 0 00-.17-.3A6.32 6.32 0 014 8.04L4 7.8v-.2A5.91 5.91 0 0110 2zm-.5 4.5v1a.5.5 0 001 0v-1a.5.5 0 00-1 0zm3.35.94a.5.5 0 00-.7 0l-.71.71a.5.5 0 00.7.7l.71-.7a.5.5 0 000-.7zm-5 0a.5.5 0 10-.7.71l.7.7a.5.5 0 10.71-.7l-.7-.7z"></path></svg>`,
	4,
)

function LightbulbFilamentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.07 15l-.38 1.6a1.84 1.84 0 01-1.67 1.4H9.13c-.82 0-1.54-.52-1.78-1.26l-.04-.14-.38-1.6h6.14zM10 2c3.31 0 6 2.6 6 5.8 0 1.68-.75 3.22-2.2 4.6a.6.6 0 00-.15.2l-.02.09L13.3 14H6.7l-.31-1.31a.6.6 0 00-.17-.3A6.32 6.32 0 014 8.04L4 7.8v-.2A5.91 5.91 0 0110 2z"></path></svg>`,
	4,
)

function LightbulbIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 16v-5.5H2V13a3 3 0 003 3h1zm1 0h8a3 3 0 003-3v-2.5H7V16zm2-2a.75.75 0 110-1.5.75.75 0 010 1.5zm2.25 0a.75.75 0 110-1.5.75.75 0 010 1.5zm2.25 0a.75.75 0 110-1.5.75.75 0 010 1.5zm2.25 0a.75.75 0 110-1.5.75.75 0 010 1.5zM18 9.5V7a3 3 0 00-3-3H7v5.5h11zM9.75 6.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.25 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.25 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.25 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM6 4H5a3 3 0 00-3 3v2.5h4V4z"></path></svg>`,
	4,
)

function LikertIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.78 4.28a.75.75 0 00-1.06-1.06l-.5.5a.75.75 0 001.06 1.06l.5-.5zm-3 1.94c.3.3.3.77 0 1.06l-.5.5a.75.75 0 11-1.06-1.06l.5-.5c.3-.3.77-.3 1.06 0zm-3 3c.3.3.3.77 0 1.06l-.5.5a.75.75 0 11-1.06-1.06l.5-.5c.3-.3.77-.3 1.06 0zm-3 3c.3.3.3.77 0 1.06l-.5.5a.75.75 0 01-1.06-1.06l.5-.5c.3-.3.77-.3 1.06 0zm-3 4.06a.75.75 0 10-1.06-1.06l-.5.5a.75.75 0 101.06 1.06l.5-.5z"></path></svg>`,
	4,
)

function LineDashesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 9.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.75z"></path></svg>`,
	4,
)

function LineHorizontal1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.75zM2.75 14a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function LineHorizontal3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zm0 6a.75.75 0 000 1.5h7.14c.38-.59.87-1.1 1.45-1.5H2.75zm0 3h6.46c-.14.48-.21.98-.21 1.5H2.75a.75.75 0 010-1.5zm0 3h6.46c.15.54.38 1.04.68 1.5H2.75a.75.75 0 010-1.5zm0-9a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM19 13.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 11a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function LineHorizontal5ErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zm0 6c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.75zM2.75 12a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2 6.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 6.75zM2.75 15a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function LineHorizontal5Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ft = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 2.22c.3.3.3.77 0 1.06l-14.5 14.5a.75.75 0 01-1.06-1.06l14.5-14.5c.3-.3.77-.3 1.06 0z"></path></svg>`,
	4,
)

function LineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ft.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.75c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 012 4.75zm6 0c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 018 4.75zm6 0c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm-12 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.75zM3.25 14a1.25 1.25 0 100 2.5h13.5a1.25 1.25 0 100-2.5H3.25z"></path></svg>`,
	4,
)

function LineStyleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 4a4 4 0 013.52 5.9c-.42-.27-.87-.5-1.36-.64a2.5 2.5 0 00-2-3.75L14 5.5h-2a.75.75 0 01-.1-1.5H14zM8 4a.75.75 0 01.1 1.5H6a2.5 2.5 0 00-.16 5H8a.75.75 0 01.1 1.5H6a4 4 0 01-.2-8H8zM6.25 7.25h7.5a.75.75 0 01.1 1.5h-7.6a.75.75 0 01-.1-1.5h.1zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.73-1.06a.5.5 0 00-.7-.7l-1.07 1.05-1.06-1.06a.5.5 0 00-.7.7l1.05 1.07-1.06 1.06a.5.5 0 00.7.7l1.07-1.05 1.06 1.06a.5.5 0 00.7-.7l-1.05-1.07 1.06-1.06z"></path></svg>`,
	4,
)

function LinkDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 8a4 4 0 00-4-4h-2.1a.75.75 0 00.1 1.5h2.16A2.5 2.5 0 0116.5 8v.02c.52.07 1.02.28 1.45.63.03-.21.05-.43.05-.65zM8.75 4.75A.75.75 0 008 4H5.8a4 4 0 00.2 8h2.1a.75.75 0 00-.1-1.5H5.84a2.5 2.5 0 01.16-5h2.1a.75.75 0 00.65-.75zm5 2.5h-7.6a.75.75 0 00.1 1.5h7.6a.75.75 0 00-.1-1.5zm-3.77 7.13l4.83-4.83a1.87 1.87 0 012.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.08l.37-1.5c.1-.38.3-.73.58-1.01z"></path></svg>`,
	4,
)

function LinkEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 6a4 4 0 01.2 8H12a.75.75 0 01-.1-1.5H14a2.5 2.5 0 00.16-5H12a.75.75 0 01-.1-1.5H14zM8 6a.75.75 0 01.1 1.5H6a2.5 2.5 0 00-.16 5H8a.75.75 0 01.1 1.5H6a4 4 0 01-.2-8H8zM6.25 9.25h7.5a.75.75 0 01.1 1.5h-7.6a.75.75 0 01-.1-1.5h7.6-7.5z"></path></svg>`,
	4,
)

function LinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 3.5c-.69 0-1.25.56-1.25 1.25v5.5c0 .69.56 1.25 1.25 1.25H6V13H4.75A2.75 2.75 0 012 10.25v-5.5A2.75 2.75 0 014.75 2h5.5A2.75 2.75 0 0113 4.75v5.5A2.75 2.75 0 0110.25 13H9.5v-1.5h.75c.69 0 1.25-.56 1.25-1.25v-5.5c0-.69-.56-1.25-1.25-1.25h-5.5zM7 9.75A2.75 2.75 0 019.75 7h1v1.5h-1c-.69 0-1.25.56-1.25 1.25v5.5c0 .69.56 1.25 1.25 1.25h5.5c.69 0 1.25-.56 1.25-1.25v-5.5c0-.69-.56-1.25-1.25-1.25h-1.5V7h1.5A2.75 2.75 0 0118 9.75v5.5A2.75 2.75 0 0115.25 18h-5.5A2.75 2.75 0 017 15.25v-5.5z"></path></svg>`,
	4,
)

function LinkSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.75 4.75A.75.75 0 008 4H5.8a4 4 0 00.2 8h2.1a.75.75 0 00-.1-1.5H5.84a2.5 2.5 0 01.16-5h2.1a.75.75 0 00.65-.75zM18 8a4 4 0 00-4-4h-2.1a.75.75 0 00.1 1.5h2.16a2.5 2.5 0 012.08 3.61c.5.16.93.46 1.24.86.33-.58.52-1.25.52-1.97zM6.25 7.25h7.5a.75.75 0 01.1 1.5h-7.6a.75.75 0 01-.1-1.5h.1zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function LinkToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.26 15.02a.75.75 0 01.1 1.49H2.83a.75.75 0 01-.1-1.49h9.53zm5.02-5.52a.75.75 0 01.1 1.49H2.83a.75.75 0 01-.1-1.49H17.27zm-4.02-6.05a.75.75 0 01.1 1.5H2.83a.75.75 0 01-.1-1.5h10.53z"></path></svg>`,
	4,
)

function ListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.45 4.17a.73.73 0 00-1.02-.01 8.23 8.23 0 00.17 11.86c.3.27.74.24 1.01-.03a.78.78 0 00-.02-1.11 6.73 6.73 0 01-.15-9.62c.3-.3.32-.78.01-1.1zm1.76 1.76a.71.71 0 00-1-.02 5.73 5.73 0 00.18 8.35c.3.27.73.23.99-.03.32-.33.26-.85-.04-1.14a4.24 4.24 0 01-.14-6.05c.29-.3.33-.8.01-1.11zm5.58 0a.71.71 0 011-.02 5.73 5.73 0 01-.18 8.35.71.71 0 01-.99-.03c-.32-.33-.26-.85.04-1.14a4.24 4.24 0 00.14-6.05c-.29-.3-.33-.8-.01-1.11zm1.76-1.76a.73.73 0 011.02-.01 8.23 8.23 0 01-.17 11.86.73.73 0 01-1.01-.03.78.78 0 01.02-1.11 6.73 6.73 0 00.15-9.62.78.78 0 01-.01-1.1zM10 8.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"></path></svg>`,
	4,
)

function LiveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l1.8 1.81a8.22 8.22 0 00.65 11.36c.3.27.74.24 1.01-.03a.78.78 0 00-.02-1.11 6.73 6.73 0 01-.57-9.15l.71.71a5.73 5.73 0 00.66 7.82c.3.27.73.23.99-.03.32-.33.26-.85-.04-1.14a4.24 4.24 0 01-.54-5.58l1.85 1.84a1.5 1.5 0 002 2l6.5 6.5a.5.5 0 00.7-.7l-1.8-1.81-1.07-1.07-.71-.71-1.07-1.07-1.85-1.84-2-2L7.4 6.69l-.94-.94-.82-.82L4.7 4 2.85 2.15zm13.8 12.38a8.21 8.21 0 00-1.08-10.37.73.73 0 00-1.02 0c-.31.32-.28.8 0 1.1a6.73 6.73 0 011.01 8.18l1.09 1.09zm-1.82-1.83a5.73 5.73 0 00-1.04-6.79.71.71 0 00-1 .02c-.32.32-.28.82.01 1.11a4.24 4.24 0 01.9 4.54l1.13 1.12z"></path></svg>`,
	4,
)

function LiveOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.74 1.99a.75.75 0 100 1.5h2.76v1.26c0 .55-.2.98-.48 1.27-.29.29-.71.48-1.27.48a.75.75 0 000 1.5c.92 0 1.74-.32 2.33-.92.6-.6.92-1.42.92-2.33v-2a.75.75 0 00-.75-.75l-3.5-.01zM8.2 5.46a.75.75 0 00-1.38 0l-3.3 7.98-.01.03-1.44 3.5a.75.75 0 001.38.57l1.26-3.05h5.6l1.26 3.04a.75.75 0 001.38-.57L8.2 5.46zM9.7 13H5.31L7.5 7.71 9.68 13zM15.74 2c.42 0 .75.34.75.75V6h.76a.75.75 0 010 1.5h-.76v5.75a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function LocalLanguageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.95 4.05a7 7 0 010 9.9l-1.13 1.12-2.43 2.37a2 2 0 01-2.64.12l-.14-.12-2.04-1.99-1.52-1.5a7 7 0 019.9-9.9zM10 5a.5.5 0 00-.5.5V8H7a.5.5 0 000 1h2.5v2.5a.5.5 0 001 0V9H13a.5.5 0 000-1h-2.5V5.5A.5.5 0 0010 5z"></path></svg>`,
	4,
)

function LocationAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.95 13.96a7 7 0 10-9.9 0l1.52 1.5 2.04 1.98.14.12a2 2 0 002.64-.12l2.43-2.37 1.13-1.12zm-5.1-7.6L8.21 8H13a.5.5 0 010 1H8.2l1.65 1.65a.5.5 0 01-.7.7l-2.5-2.5a.5.5 0 010-.7l2.5-2.5a.5.5 0 11.7.7z"></path></svg>`,
	4,
)

function LocationAddLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.95 13.96a7 7 0 10-9.9 0l1.52 1.5 2.04 1.98.14.12a2 2 0 002.64-.12l2.43-2.37 1.13-1.12zm-4.8-7.6a.5.5 0 01.7-.71l2.5 2.5a.5.5 0 010 .7l-2.5 2.5a.5.5 0 01-.7-.7L11.79 9H7a.5.5 0 010-1h4.8l-1.65-1.65z"></path></svg>`,
	4,
)

function LocationAddRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ff = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.95 13.96a7 7 0 10-9.9 0l1.52 1.5 2.04 1.98.14.12a2 2 0 002.64-.12l2.43-2.37 1.13-1.12zm-2.8-5.6L10.5 6.7v4.79a.5.5 0 01-1 0V6.7L7.85 8.36a.5.5 0 11-.7-.7l2.5-2.5a.5.5 0 01.7 0l2.5 2.5a.5.5 0 01-.7.7z"></path></svg>`,
	4,
)

function LocationAddUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ff.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fe = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M37 32L26.91 42.7a4 4 0 01-5.82 0L11 32h.04l-.02-.02-.02-.03A17.05 17.05 0 017 21a17 17 0 1130 10.95l-.02.03-.02.02H37zM22.88 16.88a1.25 1.25 0 00-1.76-1.76l-5 5a1.25 1.25 0 000 1.76l5 5a1.25 1.25 0 001.76-1.76l-2.86-2.87H31a1.25 1.25 0 100-2.5H20.02l2.86-2.87z"></path></svg>`,
	4,
)

function LocationArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fe.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M37 32L26.91 42.7a4 4 0 01-5.82 0L11 32h.04l-.02-.02-.02-.03A17.05 17.05 0 017 21a17 17 0 1130 10.95l-.02.03-.02.02H37zM25.12 16.88l2.86 2.87H17a1.25 1.25 0 100 2.5h10.98l-2.86 2.87a1.25 1.25 0 001.76 1.76l5-5c.5-.48.5-1.28 0-1.76l-5-5a1.25 1.25 0 00-1.76 1.76z"></path></svg>`,
	4,
)

function LocationArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M37 32L26.91 42.7a4 4 0 01-5.82 0L11 32h.04l-.02-.02-.02-.03A17.05 17.05 0 017 21a17 17 0 1130 10.95l-.02.03-.02.02H37zm-8.88-12.12a1.25 1.25 0 001.76-1.76l-5-5a1.25 1.25 0 00-1.76 0l-5 5a1.25 1.25 0 001.76 1.76l2.87-2.86V28a1.25 1.25 0 102.5 0V17.02l2.87 2.86z"></path></svg>`,
	4,
)

function LocationArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.95 4.05a7 7 0 010 9.9l-1.13 1.12-2.43 2.37a2 2 0 01-2.64.12l-.14-.12-2.04-1.99-1.52-1.5a7 7 0 019.9-9.9zm-7.8 2.1a.5.5 0 000 .7L9.29 9l-2.14 2.15a.5.5 0 00.7.7L10 9.71l2.15 2.14a.5.5 0 00.7-.7L10.71 9l2.14-2.15a.5.5 0 00-.7-.7L10 8.29 7.85 6.15a.5.5 0 00-.7 0z"></path></svg>`,
	4,
)

function LocationDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$fa = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.95 13.96a7 7 0 10-9.9 0l1.52 1.5 2.04 1.98.14.12a2 2 0 002.64-.12l2.43-2.37 1.13-1.12zM10 12a3 3 0 110-6 3 3 0 010 6z"></path></svg>`,
	4,
)

function LocationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$fa.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.53 3.01L9 3a7 7 0 016.98 7.47.5.5 0 101 .07L17 10A8 8 0 008.46 2a.5.5 0 10.07 1zM8 4.98a.5.5 0 01.52-.47 6.25 6.25 0 015.97 5.97.5.5 0 11-1 .04A5.25 5.25 0 008.49 5.5.5.5 0 018 4.98zM6.04 16.4l1.1 1.1c.2.2.52.2.71 0L9 16.37l1.7-1.69a4.5 4.5 0 10-6.37 0l1.72 1.72zm1.46-3.78a1.13 1.13 0 110-2.25 1.13 1.13 0 010 2.25z"></path></svg>`,
	4,
)

function LocationLiveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l2.12 2.13a7 7 0 00.78 8.98l1.52 1.5 2.04 1.98.14.12a2 2 0 002.64-.12l2.43-2.37.27-.27 3.06 3.05a.5.5 0 00.7-.7l-15-15zm8.23 9.63A2.98 2.98 0 017 9c0-.38.07-.74.2-1.07l3.87 3.86zM12.99 9c0 .54-.14 1.05-.4 1.49l2.9 2.88a7 7 0 00-9.85-9.84L8.52 6.4A3 3 0 0113 9z"></path></svg>`,
	4,
)

function LocationOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a3 3 0 013 3v1h1a2 2 0 012 2v7a2 2 0 01-2 2H6a2 2 0 01-2-2V8c0-1.1.9-2 2-2h1V5a3 3 0 013-3zm0 8.5a1 1 0 100 2 1 1 0 000-2zM10 4a1 1 0 00-1 1v1h2V5a1 1 0 00-1-1z"></path></svg>`,
	4,
)

function LockClosedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 3a2 2 0 012 2v1H7V5c0-1.1.9-2 2-2zm3 3V5a3 3 0 10-6 0v1h-.5C4.67 6 4 6.67 4 7.5v6c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5H12zM6.09 16c.2.58.76 1 1.41 1h5a3.5 3.5 0 003.5-3.5v-4c0-.65-.42-1.2-1-1.41v5.41a2.5 2.5 0 01-2.5 2.5H6.1zM10 10.5a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function LockMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c1.3 0 2.42.8 2.84 2a.75.75 0 01-1.38.59l-.04-.1c-.2-.59-.77-.99-1.42-.99-.78 0-1.42.6-1.5 1.36V7H14a2 2 0 012 2v7a2 2 0 01-2 2H6a2 2 0 01-2-2V9c0-1.1.9-2 2-2h1V5a3 3 0 013-3zm0 9.5a1 1 0 100 2 1 1 0 000-2z"></path></svg>`,
	4,
)

function LockOpenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a3 3 0 013 3v1h1a2 2 0 012 2v1.23c-.33-.19-.66-.45-1-.8a1.39 1.39 0 00-2 0 3.5 3.5 0 01-2.6 1.24c-.81 0-1.4.67-1.4 1.41v2.8c.04 1.16.3 2.2.82 3.12H6a2 2 0 01-2-2V8c0-1.1.9-2 2-2h1V5a3 3 0 013-3zm0 2a1 1 0 00-1 1v1h2V5a1 1 0 00-1-1zm4.28 5.12c.54.57 1.11.97 1.72 1.23a4.06 4.06 0 001.6.32c.2 0 .35.14.4.33v2.58c0 2.69-1.31 4.51-3.87 5.4a.39.39 0 01-.26 0A6.66 6.66 0 0112 18c-.39-.3-.72-.63-.99-1a5.5 5.5 0 01-1-3.15l-.01-.27v-2.5a.4.4 0 01.4-.41 4.5 4.5 0 003.32-1.55.39.39 0 01.56 0z"></path></svg>`,
	4,
)

function LockShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.44 3.25c-.98.32-1.83.94-2.44 1.75a5.01 5.01 0 00-2.44-1.75 3 3 0 014.88 0zm-8.81 7.97a6.5 6.5 0 015.85-5.2 4 4 0 10-5.85 5.2zm12.74 0a4 4 0 10-5.85-5.2 6.5 6.5 0 015.85 5.2zm-.87 1.28a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0zm-7.5-2c0 .28.22.5.5.5h2.24l-.32.48a7.65 7.65 0 00-1.17 2.96.5.5 0 101 .12c.1-.9.56-1.82 1.02-2.54a11.1 11.1 0 01.84-1.17l.01-.02a.5.5 0 00-.37-.83H8.5a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function LotteryIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2a.5.5 0 000 1H7v1h-.5A2.5 2.5 0 004 6.5v8a2.5 2.5 0 002 2.45v.55a.5.5 0 001 0V17h6v.5a.5.5 0 001 0v-.55a2.5 2.5 0 002-2.45v-8A2.5 2.5 0 0013.5 4H13V3h.5a.5.5 0 000-1h-7zM12 3v1H8V3h4zM6.5 8.5c0-.28.22-.5.5-.5h6a.5.5 0 010 1H7a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function LuggageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4z"></path></svg>`,
	4,
)

function MailAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 4a3 3 0 016 0v2l1.32 1.12a.5.5 0 01-.33.88H10.5a.5.5 0 01-.32-.88L11.5 6V4zm3 6a1.5 1.5 0 01-1.42-1h2.83c-.2.58-.76 1-1.41 1zm-4-4.46l-.97.82A1.5 1.5 0 0010.5 9h1.52l.12.33.11.27L10 10.92l-7.98-4.7A2.5 2.5 0 014.5 4h6v1.54zm-.25 6.4l2.62-1.55a2.49 2.49 0 003.99-1.06l.11-.33H18v5.5a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0z"></path></svg>`,
	4,
)

function MailAlertIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 17a2.5 2.5 0 01-2-1h9a3.5 3.5 0 003.5-3.5v-6c.6.46 1 1.18 1 2v4a4.5 4.5 0 01-4.5 4.5h-7zM9.24 2.06a.5.5 0 00-.48 0l-5.7 3.07a2 2 0 00-.76.71l.42.2L9 8.95l6.28-2.89.41-.22a2 2 0 00-.74-.7L9.24 2.06zM16 6.8l-.26.14a.5.5 0 01-.03.01l-6.5 3a.5.5 0 01-.42 0l-6.5-3h-.01L2 6.8V12.5A2.5 2.5 0 004.5 15h9a2.5 2.5 0 002.5-2.5V6.9v-.1z"></path></svg>`,
	4,
)

function MailAllReadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm-3.16-4H4.5a2.5 2.5 0 00-2.48 2.22L9 8.92l3.26-1.73A3.5 3.5 0 0111.34 3zm1.97 4.8L9.25 9.92a.5.5 0 01-.5 0L2 6.37v6.13A2.5 2.5 0 004.5 15h9a2.5 2.5 0 002.5-2.5V7.66a3.49 3.49 0 01-2.7.13zM6.5 17a2.5 2.5 0 01-2-1h9a3.5 3.5 0 003.5-3.5v-5c.6.46 1 1.18 1 2v3a4.5 4.5 0 01-4.5 4.5h-7z"></path></svg>`,
	4,
)

function MailAllUnreadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4zm10 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-1.15-6.35c.2.2.2.5 0 .7L12.21 5.5l1.14 1.15a.5.5 0 01-.7.7l-1.5-1.5a.5.5 0 010-.7l1.5-1.5c.2-.2.5-.2.7 0zm2.5.7l-.64.65H17a1 1 0 011 1v.5a.5.5 0 01-1 0V6h-1.8l.65.65a.5.5 0 01-.7.7l-1.5-1.5a.5.5 0 010-.7l1.5-1.5a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function MailArrowDoubleBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4zm10 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-2.35-4.15a.5.5 0 01.7-.7L14 6.29V3.5a.5.5 0 011 0v2.8l1.15-1.15a.5.5 0 01.7.7l-2 2a.5.5 0 01-.35.15.5.5 0 01-.35-.14l-2-2z"></path></svg>`,
	4,
)

function MailArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4zM10 5.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm5.4-2.6c.2-.2.5-.2.7 0l1.75 1.75a.5.5 0 010 .7L16.1 7.1a.5.5 0 01-.7-.7l.9-.9h-1.55c-.97 0-1.75.78-1.75 1.75v.25a.5.5 0 01-1 0v-.25a2.75 2.75 0 012.75-2.75h1.54l-.9-.9a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function MailArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.15-2.35A.5.5 0 0014.5 3a.5.5 0 00-.35.15l-2 2a.5.5 0 00.7.7L14 4.71V7.5a.5.5 0 101 0V4.7l1.15 1.15a.5.5 0 10.7-.7l-2-2zM14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4z"></path></svg>`,
	4,
)

function MailArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.3 8.7c.2.2.44.32.7.39-.21.43-.29.91-.23 1.38l-.77.45-7.98-4.7A2.5 2.5 0 014.5 4h8.37L10.3 6.58a1.5 1.5 0 000 2.12zm.78 2.74a2.57 2.57 0 004.04.55L18 9.12v5.38a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l.83-.49zm4.15-6.96a1.62 1.62 0 012.3 2.3h-.02l-3.85 3.85h-.01a.56.56 0 11-.78-.8l3.48-3.48a.5.5 0 10-.7-.7l-3.5 3.49-.02.02a1.56 1.56 0 002.21 2.2l.01-.01 3.88-3.87.01-.01a2.63 2.63 0 00-3.72-3.7l-3.57 3.57a.5.5 0 00.7.7l3.58-3.56z"></path></svg>`,
	4,
)

function MailAttachIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4zm10 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm2.35-5.65l-3 3a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64 2.65-2.64a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function MailCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 3a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1V3.5a.5.5 0 00-.5-.5zm0 8c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4z"></path></svg>`,
	4,
)

function MailClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 12.5V6.37l6.75 3.56c.15.1.35.1.5 0L18 6.37v6.13a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 014 12.5zm.02-7.28A2.5 2.5 0 016.5 3h9a2.5 2.5 0 012.48 2.22L11 8.92l-6.98-3.7zM13.5 17c.82 0 1.54-.4 2-1h-9A3.5 3.5 0 013 12.5v-7c-.6.46-1 1.18-1 2v5A4.5 4.5 0 006.5 17h7z"></path></svg>`,
	4,
)

function MailCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7L14.5 4.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L15.21 5.5l1.14-1.15zM14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4z"></path></svg>`,
	4,
)

function MailDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 6.37v2.76a2.87 2.87 0 00-2.9.71l-4.83 4.83a3.2 3.2 0 00-.8 1.33H4.5A2.5 2.5 0 012 13.5V6.37l7.75 4.56c.15.1.35.1.5 0L18 6.37zM15.5 3a2.5 2.5 0 012.48 2.22L10 9.92l-7.98-4.7A2.5 2.5 0 014.5 3h11zm-4.52 12.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function MailEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 3a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.25zm0 2.87c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4z"></path></svg>`,
	4,
)

function MailErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 7.37v7.13a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0L18 7.37zM15.5 4a2.5 2.5 0 012.48 2.22L10 10.92l-7.98-4.7A2.5 2.5 0 014.5 4h11z"></path></svg>`,
	4,
)

function MailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H13v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H14V3.5zm2 7.5v-.6c.36-.18.7-.4 1-.66V15a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h2.2c-.08.32-.15.66-.18 1H6a2 2 0 00-2 2v4h3.5c.28 0 .5.22.5.5v.01a1.64 1.64 0 00.03.3c.04.2.1.46.23.72.13.25.3.49.57.66.26.18.63.31 1.17.31.54 0 .9-.13 1.17-.3.26-.18.44-.42.57-.67A2.57 2.57 0 0012 11.5v-.01c0-.28.22-.5.5-.5H16z"></path></svg>`,
	4,
)

function MailInboxAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 5.5c0-.28.22-.5.5-.5h7a.5.5 0 010 1h-7a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h7a.5.5 0 010 1h-7a.5.5 0 01-.5-.5zM3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm1 4h3.5c.28 0 .5.22.5.5v.01a1.64 1.64 0 00.03.3c.04.2.1.46.23.72.13.25.3.49.57.66.26.18.63.31 1.17.31.54 0 .9-.13 1.17-.3.26-.18.44-.42.57-.67A2.57 2.57 0 0012 10.5v-.01c0-.28.22-.5.5-.5H16V6a2 2 0 00-2-2H6a2 2 0 00-2 2v4zm4 .5z"></path></svg>`,
	4,
)

function MailInboxAllIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 10.4v.6h-3.5a.5.5 0 00-.5.5v.01a1.75 1.75 0 01-.03.3c-.04.2-.1.46-.23.72-.13.25-.3.49-.57.66-.26.18-.63.31-1.17.31-.54 0-.9-.13-1.17-.3a1.7 1.7 0 01-.57-.67A2.57 2.57 0 018 11.5v-.01a.5.5 0 00-.5-.5H4V7c0-1.1.9-2 2-2h2.02c.03-.34.1-.68.19-1H6a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V9.74c-.3.26-.64.48-1 .66zm-2.5-.4a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-2.35-4.15a.5.5 0 01.7-.7L13 6.29V3.5a.5.5 0 011 0v2.8l1.15-1.15a.5.5 0 01.7.7l-2 2a.5.5 0 01-.35.15.5.5 0 01-.35-.14l-2-2z"></path></svg>`,
	4,
)

function MailInboxArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 11v-.6c.36-.18.7-.4 1-.66V15a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h2.2c-.08.32-.15.66-.18 1H6a2 2 0 00-2 2v4h3.5c.28 0 .5.22.5.5v.01a1.64 1.64 0 00.03.3c.04.2.1.46.23.72.13.25.3.49.57.66.26.18.63.31 1.17.31.54 0 .9-.13 1.17-.3.26-.18.44-.42.57-.67A2.57 2.57 0 0012 11.5v-.01c0-.28.22-.5.5-.5H16zm2-5.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-4.15 2.35a.5.5 0 01-.7-.7L14.29 6H11.5a.5.5 0 010-1h2.8l-1.15-1.15a.5.5 0 01.7-.7l2 2a.5.5 0 01.15.35.5.5 0 01-.14.35l-2 2z"></path></svg>`,
	4,
)

function MailInboxArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.15-2.35A.5.5 0 0013.5 3a.5.5 0 00-.35.15l-2 2a.5.5 0 00.7.7L13 4.71V7.5a.5.5 0 101 0V4.7l1.15 1.15a.5.5 0 10.7-.7l-2-2zM16 10.4v.6h-3.5a.5.5 0 00-.5.5v.01a1.75 1.75 0 01-.03.3c-.04.2-.1.46-.23.72-.13.25-.3.49-.57.66-.26.18-.63.31-1.17.31-.54 0-.9-.13-1.17-.3a1.7 1.7 0 01-.57-.67A2.57 2.57 0 018 11.5v-.01a.5.5 0 00-.5-.5H4V7c0-1.1.9-2 2-2h2.02c.03-.34.1-.68.19-1H6a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V9.74c-.3.26-.64.48-1 .66z"></path></svg>`,
	4,
)

function MailInboxArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.85-1.85L12.5 6.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 00-.7-.7zM16 10.4v.6h-3.5a.5.5 0 00-.5.5v.01a1.75 1.75 0 01-.03.3c-.04.2-.1.46-.23.72-.13.25-.3.49-.57.66-.26.18-.63.31-1.17.31-.54 0-.9-.13-1.17-.3a1.7 1.7 0 01-.57-.67A2.57 2.57 0 018 11.5v-.01a.5.5 0 00-.5-.5H4V7c0-1.1.9-2 2-2h2.02c.03-.34.1-.68.19-1H6a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V9.74c-.3.26-.64.48-1 .66z"></path></svg>`,
	4,
)

function MailInboxCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7L13.5 4.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L14.21 5.5l1.14-1.15zM16 11v-.6c.36-.18.7-.4 1-.66V15a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h2.2c-.08.32-.15.66-.18 1H6a2 2 0 00-2 2v4h3.5c.28 0 .5.22.5.5v.01a1.64 1.64 0 00.03.3c.04.2.1.46.23.72.13.25.3.49.57.66.26.18.63.31 1.17.31.54 0 .9-.13 1.17-.3.26-.18.44-.42.57-.67A2.57 2.57 0 0012 11.5v-.01c0-.28.22-.5.5-.5H16z"></path></svg>`,
	4,
)

function MailInboxDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm1 4h3.5c.28 0 .5.22.5.5v.01a1.64 1.64 0 00.03.3c.04.2.1.46.23.72.13.25.3.49.57.66.26.18.63.31 1.17.31.54 0 .9-.13 1.17-.3.26-.18.44-.42.57-.67A2.57 2.57 0 0012 10.5v-.01c0-.28.22-.5.5-.5H16V6a2 2 0 00-2-2H6a2 2 0 00-2 2v4zm4 .5z"></path></svg>`,
	4,
)

function MailInboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 3a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zM16 3a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zm-4 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm-3 0c0-.54.12-1.05.34-1.5H4.5a2.5 2.5 0 00-2.48 2.22l7.98 4.7L13.26 9h-.76A3.5 3.5 0 019 5.5zM16.5 9h-1.27l-4.98 2.93a.5.5 0 01-.5 0L2 7.37v7.13A2.5 2.5 0 004.5 17h11a2.5 2.5 0 002.5-2.5V8.66c-.45.22-.96.34-1.5.34z"></path></svg>`,
	4,
)

function MailLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 2a.5.5 0 000 1h6a.5.5 0 000-1h-6zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6zm-7-2h5.59a1.5 1.5 0 00.3 1.5A1.5 1.5 0 0011.5 8h3.45L10 10.92l-7.98-4.7A2.5 2.5 0 014.5 4zm5.75 7.93L16.93 8h.57c.18 0 .34-.03.5-.09v6.59a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0z"></path></svg>`,
	4,
)

function MailListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 12.5V6.37L9.25 9.93a.5.5 0 01-.5 0L2 6.37v6.13A2.5 2.5 0 004.5 15h9a2.5 2.5 0 002.5-2.5zm-.02-7.28A2.5 2.5 0 0013.5 3h-9a2.5 2.5 0 00-2.48 2.22L9 8.92l6.98-3.7zM6.5 17a2.5 2.5 0 01-2-1h9a3.5 3.5 0 003.5-3.5v-7c.6.46 1 1.18 1 2v5a4.5 4.5 0 01-4.5 4.5h-7z"></path></svg>`,
	4,
)

function MailMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.5 4.21a2.5 2.5 0 00-1.48 2.01l7.98 4.7.13-.08.73.73-.6.36a.5.5 0 01-.51 0L2 7.37v7.13A2.5 2.5 0 004.5 17h11c.24 0 .47-.03.7-.1l.95.95a.5.5 0 00.7-.7l-15-15zm9.8 8.37l5.09 5.1c.17-.34.26-.72.26-1.12V7.37l-5.35 3.15zM6.12 4l5.8 5.8 6.06-3.58A2.5 2.5 0 0015.5 4H6.12z"></path></svg>`,
	4,
)

function MailOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.74 2.07a.5.5 0 01.52 0l6.77 4.06a2 2 0 01.7.71L10 10.94l-7.73-4.1a2 2 0 01.7-.7l6.77-4.07zm3.14 8.47l-2.65 1.4a.5.5 0 01-.46 0L2 7.83v5.67A2.5 2.5 0 004.5 16h6.55a2.5 2.5 0 012.22-1.99 2.99 2.99 0 01-.4-3.47zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function MailOpenPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4zm10 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-1-6.5v4a.5.5 0 01-1 0v-4a.5.5 0 011 0zm3 0v4a.5.5 0 01-1 0v-4a.5.5 0 011 0z"></path></svg>`,
	4,
)

function MailPauseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ez = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zM14.5 9c-.79 0-1.51-.26-2.1-.7l4.9-4.9A3.5 3.5 0 0114.5 9zm0 2c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4z"></path></svg>`,
	4,
)

function MailProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ez.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ey = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.26 3.07a.5.5 0 00-.52 0L2.97 7.13a2 2 0 00-.7.71l7.73 4.1 7.73-4.1a2 2 0 00-.7-.7l-6.77-4.07zM18 8.83l-7.77 4.11a.5.5 0 01-.46 0L2 8.84v5.66A2.5 2.5 0 004.5 17h11a2.5 2.5 0 002.5-2.5V8.85v-.02z"></path></svg>`,
	4,
)

function MailReadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ey.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ex = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.74 2.07a.5.5 0 01.52 0l6.03 3.71.2.14-6.49 4-6.48-4c.06-.05.12-.1.2-.14l6.02-3.7zm7.24 4.72l.02.27v5.44a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 012 12.5V7.06c0-.1 0-.18.02-.27l6.72 4.14c.16.1.36.1.52 0l6.72-4.14zM4.5 16c.46.6 1.18 1 2 1H14a4 4 0 004-4V8.06c0-.52-.27-1-.71-1.28l-.34-.2c.03.15.05.32.05.48V13a3 3 0 01-3 3H4.5z"></path></svg>`,
	4,
)

function MailReadMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ex.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ew = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 11c1.33 0 2.55-.47 3.5-1.26v4.76a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.23-1.31c.63.24 1.3.38 2.02.38zm-10-7h4.7a5.5 5.5 0 002.24 6.07l-1.44.85-7.98-4.7A2.5 2.5 0 014.5 4zm6.14.92a2 2 0 001.43-2.48l-.16-.55c.25-.2.53-.37.82-.5l.34.36a2 2 0 002.9 0l.33-.35c.3.14.58.32.84.52l-.13.42a2 2 0 001.46 2.52l.35.09a4.7 4.7 0 010 1.01l-.45.12a2 2 0 00-1.43 2.48l.15.55c-.25.2-.53.37-.82.5l-.34-.36a2 2 0 00-2.9 0l-.33.35c-.3-.14-.58-.32-.84-.52l.13-.42a2 2 0 00-1.46-2.52l-.35-.09a4.71 4.71 0 010-1.01l.46-.12zm4.86.58a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function MailSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ew.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ev = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 2.62a4.06 4.06 0 01-1-.27 5.16 5.16 0 01-1.72-1.23.39.39 0 00-.56 0 4.5 4.5 0 01-3.32 1.55.4.4 0 00-.4.41v2.77A5.5 5.5 0 0012.01 9c.27.37.6.7.99 1 .52.4 1.15.73 1.87.98.09.03.17.03.26 0 2.56-.89 3.87-2.71 3.87-5.4V3a.4.4 0 00-.4-.33c-.2 0-.4-.02-.6-.05zm-5.7 8.1l.1.07c.61.48 1.34.85 2.15 1.13.29.1.61.1.9 0A7.36 7.36 0 0018 10.47v4.03a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 14.5V7.37l7.75 4.56c.15.1.35.1.5 0l2.05-1.2zM10 4V5.88a6.49 6.49 0 001.54 4.13l-1.54.91-7.98-4.7A2.5 2.5 0 014.5 4H10z"></path></svg>`,
	4,
)

function MailShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ev.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5v9A2.5 2.5 0 004.5 16h1.54a3.53 3.53 0 01-.04-.5v-4A3.5 3.5 0 019.5 8h6c.17 0 .34.01.5.04V4.5A2.5 2.5 0 0013.5 2h-9zM5 4.5c0-.28.22-.5.5-.5h7a.5.5 0 010 1h-7a.5.5 0 01-.5-.5zm2 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm5.5 7.2l-5.3-3.17A2.5 2.5 0 019.5 9h6a2.5 2.5 0 012.3 1.53l-5.3 3.17zm.26 1L18 11.59v3.92a2.5 2.5 0 01-2.5 2.5h-6A2.5 2.5 0 017 15.5v-3.92l5.24 3.13c.16.1.36.1.52 0z"></path></svg>`,
	4,
)

function MailTemplateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$et = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.32 9h.36l.24-.03H17v3.83c0 1.1-.12 1.51-.33 1.92-.22.4-.54.73-.95.95-.4.21-.81.33-1.92.33H5.2c-1.1 0-1.51-.12-1.92-.33-.4-.22-.73-.54-.95-.95-.2-.38-.31-.76-.33-1.71V7.3l7.28 3.64c.14.07.3.07.44 0l4.94-2.47c.33.2.7.36 1.1.44l.24.04.13.02.2.02zM5 4h8.35l-.05.11-.07.17-.1.3-.05.22-.02.1-.01.1a3.54 3.54 0 00.66 2.6l.14.17L9.5 9.94 2.22 6.3a.5.5 0 00-.18-.05c.06-.45.15-.7.3-.97.21-.4.53-.73.94-.95.38-.2.76-.31 1.71-.33zM16.5 3a2.5 2.5 0 110 5 2.5 2.5 0 010-5z"></path></svg>`,
	4,
)

function MailUnreadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$et.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$es = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.6 1.55l-3.5 7A1 1 0 0011 10h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM15 3.5v3a.5.5 0 11-1 0v-3a.5.5 0 111 0zM14.5 9a.5.5 0 110-1 .5.5 0 010 1zm3.5 2h-6.16l-1.59.93a.5.5 0 01-.5 0L2 7.37v7.13A2.5 2.5 0 004.5 17h11a2.5 2.5 0 002.5-2.5V11zM9.22 8.1L11.27 4H4.5a2.5 2.5 0 00-2.48 2.22l7.98 4.7.17-.1a2 2 0 01-.95-2.72z"></path></svg>`,
	4,
)

function MailWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$es.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$er = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5c0-1.1.9-2 2-2h12a2 2 0 012 2v3.5a.5.5 0 01-.5.5h-7v2h1c.28 0 .5.22.5.5V13h1.5c.27 0 .5.22.5.5v1h3.5a.5.5 0 010 1H14v1a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5v-1H2.5a.5.5 0 010-1H6v-1c0-.28.23-.5.5-.5H8v-1.5a.5.5 0 01.5-.5h1V9h-7a.5.5 0 01-.5-.5V5zm12.75 1.74a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function MapDriveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$er.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 16.8l-4-2.23V3.24l4 2.8V16.8zm1-.02l4.76-2.85a.5.5 0 00.24-.43v-10a.5.5 0 00-.79-.41L13 6.04v10.74zM2.22 6.59L7 3.24v11.33l-4.26 2.37A.5.5 0 012 16.5V7a.5.5 0 01.21-.41z"></path></svg>`,
	4,
)

function MapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ep = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 4.05c.29-.11.62-.03.82.21L7 8.6l3.68-4.33a.75.75 0 011.32.49v9.5a.75.75 0 01-1.5 0V6.79l-2.93 3.45a.75.75 0 01-1.14 0L3.5 6.79v7.46a.75.75 0 01-1.5 0v-9.5c0-.31.2-.6.5-.7zm10.72 7.67c.3-.3.77-.3 1.06 0l.72.72V4.75a.75.75 0 011.5 0v7.69l.72-.72a.75.75 0 111.06 1.06l-2 2c-.3.3-.77.3-1.06 0l-2-2a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function MarkdownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ep.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 7C2.67 7 2 7.67 2 8.5v3c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-3C9 7.67 8.33 7 7.5 7h-4zm9 0c-.83 0-1.5.67-1.5 1.5v3c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-4z"></path></svg>`,
	4,
)

function MatchAppLayoutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$en = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.01 3.18c.28-.24.7-.24.98 0l1.75 1.5a.75.75 0 11-.98 1.14L9.5 4.74 8.24 5.82a.75.75 0 01-.98-1.14l1.75-1.5zm2.3 5.7c.36-.4.54-.38.56-.38.05 0 .15.05.26.2l1.32 2.05-3.21 2.98a.75.75 0 101.02 1.1l3-2.8 1.36 2.1v.02a1.92 1.92 0 003.27.01.75.75 0 10-1.28-.77.42.42 0 01-.51.14.59.59 0 01-.22-.21L15.38 11l2.88-2.67a.75.75 0 00-1.02-1.1L14.56 9.7l-1.18-1.84A1.93 1.93 0 0012.02 7c-.67-.07-1.3.27-1.84.9a.75.75 0 101.14.98zM7.68 7.86a2.11 2.11 0 00-1.52-.83c-.6-.07-1.26.03-1.92.3-1.33.56-2.6 1.86-3.12 4.08-.23.97-.1 1.84.35 2.54A3.32 3.32 0 003.3 15.3a4.5 4.5 0 004.47-1.09.75.75 0 10-1.07-1.04 3 3 0 01-2.95.7c-.47-.15-.82-.4-1.02-.73a1.5 1.5 0 01-.23-.7c2.13.26 3.63-.3 4.54-1.22.5-.52.8-1.12.91-1.7.1-.57.04-1.2-.28-1.67zm-1.7 2.31c-.49.5-1.46.99-3.17.8a3.77 3.77 0 012-2.26c.45-.18.86-.23 1.17-.19.32.04.44.16.46.18.04.06.1.25.05.55-.06.29-.21.62-.5.92z"></path></svg>`,
	4,
)

function MathFormatLinearIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$en.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$em = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.25 3.6c.44-.33 1-.65 1.65-.65l.12.01c.43.07.77.23 1.06.5.25.23.44.52.62.78l1.07-1.07a.75.75 0 111.06 1.06L14.5 5.57l.38.7c.08.16.18.24.38.3h.19l.1-.07a5 5 0 00.23-.23.75.75 0 011.06 1.06l-.03.03c-.17.17-.4.4-.69.55a1.78 1.78 0 01-1.2.12 2.02 2.02 0 01-1.38-1.1l-.14-.26-1.06 1.06a.75.75 0 11-1.06-1.06l1.35-1.35a3.01 3.01 0 00-.14-.2 3.34 3.34 0 00-.42-.56.42.42 0 00-.22-.1c-.15.01-.37.1-.7.34a.75.75 0 11-.9-1.2zM5.4 16.3H6c1.4-.1 2.8-.7 3.9-2 .3-.4.2-.8-.1-1.1-.3-.2-.8-.2-1.2.1-.9.7-1.9 1.4-3.1 1.4-.6 0-1.2-.5-1.3-1.1-.1-.5 0-1.1.2-1.6 1.6.1 3.8-.1 4.8-1.3.8-.9 1-2.4 0-3.3-.4-.4-.9-.5-1.4-.5-.9 0-1.8.5-2.6 1.3-1.3 1.3-2.6 3.5-2.4 5.6.1 1.5 1.4 2.4 2.6 2.5zm.8-7.1c.6-.5 1.1-.8 1.6-.8.2 0 .5.1.6.3.2.3 0 .8-.2 1-.5.5-1.8.8-3 .8.3-.5.6-.9 1-1.3z"></path></svg>`,
	4,
)

function MathFormatProfessionalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$em.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$el = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.91 3.54c.3-.04.48-.03.62 0 .14.02.28.08.48.2a.75.75 0 10.78-1.28c-.3-.18-.6-.32-.97-.4a3.3 3.3 0 00-1.13 0h-.01c-.8.13-1.43.55-1.86 1.16a4.23 4.23 0 00-.67 2.18v.03a8.55 8.55 0 01-.02.36c0 .22-.02.52-.04.87v.09H4.8a.75.75 0 000 1.5H6a865.92 865.92 0 01-.35 5.49c-.1 1.28-.22 2.14-1.03 2.61-.4.23-1.01.21-1.68-.12a.75.75 0 00-.68 1.34c.93.46 2.11.65 3.11.08 1.54-.9 1.68-2.55 1.77-3.67v-.12c.07-.77.23-3.46.36-5.61h1.8a.75.75 0 000-1.5H7.58l.07-1.32c.04-.6.2-1.05.4-1.35.2-.28.47-.47.86-.54zm7.87 6.74a.75.75 0 10-1.06-1.06l-2.58 2.58a36.19 36.19 0 01-.76-1.36l-.07-.11c-.15-.25-.38-.61-.66-.87a1.6 1.6 0 00-.74-.4 1.55 1.55 0 00-1.1.18l-.03.02c-.08.06-.18.13-.28.23l-.13.15-.02.03-.17.19a.75.75 0 001.14.98l.17-.2.02-.03.07-.07.01-.01.04.03a7.8 7.8 0 01.47.66c.12.24.49.9.94 1.67l-2.82 2.83a.75.75 0 101.06 1.06l2.66-2.66a38.56 38.56 0 01.87 1.54c.13.22.35.6.64.87.18.17.42.34.73.42a1.6 1.6 0 001.06-.1c.35-.17.57-.4.8-.77a.75.75 0 00-1.28-.79.95.95 0 01-.13.18l-.03.02-.03.01-.03-.01a.39.39 0 01-.06-.05 6.01 6.01 0 01-.36-.52l-.06-.1c-.12-.23-.53-.96-1.02-1.8l2.74-2.74zm-6.18.24zm0 0z"></path></svg>`,
	4,
)

function MathFormulaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$el.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ek = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 5.25v2a.75.75 0 001.5 0v-2h2a.75.75 0 000-1.5h-2v-2a.75.75 0 00-1.5 0v2h-2a.75.75 0 000 1.5h2zM11 4.5c0-.41.34-.75.75-.75h5.5a.75.75 0 010 1.5h-5.5A.75.75 0 0111 4.5zm-8.78 6.78l2.22 2.22-2.22 2.22a.75.75 0 101.06 1.06l2.22-2.22 2.22 2.22a.75.75 0 001.06-1.06L6.56 13.5l2.22-2.22a.75.75 0 10-1.06-1.06L5.5 12.44l-2.22-2.22a.75.75 0 10-1.06 1.06zm9.53 1.47a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zM15.5 11a1 1 0 11-2 0 1 1 0 012 0zm-1 6a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function MathSymbolsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ek.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ej = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.25C3 4.01 4 3 5.25 3h9.5C15.99 3 17 4 17 5.25v9.5c0 1.24-1 2.25-2.25 2.25h-9.5C4.01 17 3 16 3 14.75v-9.5zm2.25-.75a.75.75 0 00-.75.75v9.5c0 .41.34.75.75.75h9.5c.41 0 .75-.34.75-.75v-9.5a.75.75 0 00-.75-.75h-9.5z"></path></svg>`,
	4,
)

function MaximizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ej.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ei = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.9 2.03a7.07 7.07 0 00-1.15.54h-.02v.01L6 3l-.28-.42a.5.5 0 00.56.84 1.87 1.87 0 01.22-.13A8.1 8.1 0 0110 2.5a8.1 8.1 0 013.5.79 3.69 3.69 0 01.22.12l.26-.39-.26.4a.5.5 0 10.56-.84L14 3l.28-.42h-.01l-.02-.01a2.83 2.83 0 00-.3-.17A9.1 9.1 0 0010 1.5a9.1 9.1 0 00-3.1.53zm-.62 1.39zm7.44 0zM6.9 17.97c.73.27 1.8.53 3.11.53a9.1 9.1 0 003.96-.9 4.63 4.63 0 00.29-.17h.02v-.01L14 17l.28.42a.5.5 0 00-.56-.84l.26.4-.26-.4a1.74 1.74 0 01-.22.13 8.1 8.1 0 01-3.5.79 8.1 8.1 0 01-3.5-.79 3.66 3.66 0 01-.22-.12.5.5 0 00-.56.83L6 17l-.28.42h.01l.02.01a2.64 2.64 0 00.3.17c.19.1.48.24.84.37zm-.61-1.39zm7.44 0zM2.5 7v6c0 1.1.9 2 2 2h6a2 2 0 002-2V7a2 2 0 00-2-2h-6a2 2 0 00-2 2zm11 4.55l2.78 2.26a.75.75 0 001.22-.59V6.78a.75.75 0 00-1.22-.59L13.5 8.45v3.1z"></path></svg>`,
	4,
)

function MeetNowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ei.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.11 3.35A1.5 1.5 0 0118 4.8v10.31c0 1.03-1 1.75-1.97 1.43l-4.76-1.59A3.25 3.25 0 015 13.75v-.89l-1.97-.66A1.5 1.5 0 012 10.78V8.27c0-.68.46-1.28 1.11-1.45l13-3.47zM6 13.2v.56a2.25 2.25 0 004.32.88L6 13.2z"></path></svg>`,
	4,
)

function MegaphoneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.16 1.03c.26.08.4.37.31.63l-.5 1.5a.5.5 0 01-.94-.32l.5-1.5a.5.5 0 01.63-.31zm3.7 1.82a.5.5 0 10-.71-.7l-2 2a.5.5 0 00.7.7l2-2zm-10.25.3a2 2 0 013.26-.52l6.58 6.98a2 2 0 01-.64 3.2l-3.94 1.74a3.5 3.5 0 01-6.34 2.8l-1.2.52a1.5 1.5 0 01-1.67-.3l-1.22-1.22a1.5 1.5 0 01-.3-1.7l5.47-11.5zm-.16 13.78a2.5 2.5 0 004.5-1.97l-4.5 1.97zM17 6a.5.5 0 000 1h1.5a.5.5 0 100-1H17z"></path></svg>`,
	4,
)

function MegaphoneLoudIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ef = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L5.48 6.2l-2.37.63A1.5 1.5 0 002 8.27v2.5c0 .65.41 1.23 1.03 1.43l1.97.66v.89a3.25 3.25 0 006.27 1.2l4.46 1.49 1.42 1.41a.5.5 0 00.7-.7l-15-15zM6 13.19l4.32 1.44A2.25 2.25 0 016 13.75v-.56zm12 1.92c0 .23-.05.44-.14.63L7.71 5.6l8.4-2.24A1.5 1.5 0 0118 4.8v10.31z"></path></svg>`,
	4,
)

function MegaphoneOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ef.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ee = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM5.15 7.85A.5.5 0 005.5 8a.5.5 0 00.35-.15l2-2a.5.5 0 10-.7-.7L6 6.29V3.5a.5.5 0 00-1 0v2.8L3.85 5.14a.5.5 0 10-.7.7l2 2zm7.6-.38a3.51 3.51 0 00-1.9-.7 5.46 5.46 0 01-.6 1.5c.09-.02.17-.02.25-.02 1.42 0 2.25 1.05 2.25 2.75 0 1.67-.87 2.75-2.25 2.75S8.25 12.67 8.25 11c0-.28.02-.53.06-.77-.47.28-1 .5-1.56.63V11c0 2.43 1.46 4.25 3.75 4.25 1.2 0 2.17-.5 2.83-1.32.55 1.14 1.47 1.82 2.67 1.82 2.03 0 3.25-1.92 3.25-4.75a8.25 8.25 0 00-8.97-8.22c.26.45.46.95.58 1.47H11A6.75 6.75 0 0117.75 11c0 2.1-.73 3.25-1.75 3.25S14.25 13.1 14.25 11V7.4a.75.75 0 00-1.5.07zm-9.97 2.81c.45.26.95.46 1.47.58V11a6.75 6.75 0 009.05 6.35.75.75 0 01.5 1.4A8.23 8.23 0 012.76 11l.03-.72z"></path></svg>`,
	4,
)

function MentionArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ee.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ed = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 2A2.75 2.75 0 002 4.75v10.5A2.75 2.75 0 004.75 18h1.5a.75.75 0 000-1.5h-1.5c-.69 0-1.25-.56-1.25-1.25V4.75c0-.69.56-1.25 1.25-1.25h1.5a.75.75 0 000-1.5h-1.5zm7 5.25c.41 0 .75.34.75.75v2.75a.75.75 0 001.5 0V10a4 4 0 10-4.24 4 4.1 4.1 0 001.29-.13c.35-.1.75.05.89.39.17.43-.03.93-.47 1.05A5.5 5.5 0 1115.5 10v.74c0 .46-.14.88-.37 1.24l-.13.3v-.13a2.25 2.25 0 01-3.58-.1 2.5 2.5 0 11-.37-4.33c.1-.28.38-.48.7-.48zM10 9a1 1 0 100 2 1 1 0 000-2zm8-4.25A2.75 2.75 0 0015.25 2h-1.5a.75.75 0 000 1.5h1.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25h-1.5a.75.75 0 000 1.5h1.5A2.75 2.75 0 0018 15.25V4.75z"></path></svg>`,
	4,
)

function MentionBracketsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ed.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ec = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 1.75c4.56 0 8.25 3.7 8.25 8.25 0 2.83-1.22 4.75-3.25 4.75-1.2 0-2.12-.68-2.67-1.82a3.5 3.5 0 01-2.83 1.32c-2.3 0-3.75-1.82-3.75-4.25 0-2.46 1.41-4.25 3.75-4.25.9 0 1.66.26 2.25.72a.75.75 0 011.49-.08l.01.11V10c0 2.1.73 3.25 1.75 3.25s1.75-1.15 1.75-3.25a6.75 6.75 0 10-4.45 6.35.75.75 0 01.5 1.4A8.23 8.23 0 011.76 10c0-4.56 3.7-8.25 8.25-8.25zm-.5 5.5C8.08 7.25 7.25 8.3 7.25 10c0 1.67.87 2.75 2.25 2.75s2.25-1.08 2.25-2.75c0-1.7-.83-2.75-2.25-2.75z"></path></svg>`,
	4,
)

function MentionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ec.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$eb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.75c0-.41.34-.75.75-.75h1.76c1 0 1.95.4 2.65 1.1l2.5 2.5c.41.41.99.65 1.58.65h3.2l-2.97-2.97a.75.75 0 011.06-1.06l4.25 4.25c.3.3.3.77 0 1.06l-4.25 4.25a.75.75 0 11-1.06-1.06l2.97-2.97h-3.2c-.6 0-1.17.24-1.59.66l-2.5 2.5C7.46 14.6 6.5 15 5.52 15H3.75a.75.75 0 010-1.5h1.76c.6 0 1.17-.24 1.59-.66l2.5-2.5c.12-.12.25-.23.4-.34-.15-.1-.28-.22-.4-.35l-2.5-2.5c-.42-.41-1-.65-1.6-.65H3.76A.75.75 0 013 5.75z"></path></svg>`,
	4,
)

function MergeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$eb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ea = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 10a.5.5 0 00-1 0 5.5 5.5 0 005 5.48v2.02a.5.5 0 001 0v-2.02c2.8-.26 5-2.61 5-5.48a.5.5 0 00-1 0 4.5 4.5 0 11-9 0zm7.5 0a3 3 0 01-6 0V5a3 3 0 016 0v5z"></path></svg>`,
	4,
)

function MicIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ea.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 10a3 3 0 01-.1.78L7 4.88A3 3 0 0113 5v5zM7 7.7V10a3 3 0 004.74 2.45l1.07 1.07A4.5 4.5 0 015.5 10a.5.5 0 00-1.01 0 5.5 5.5 0 005 5.48v2.02a.5.5 0 001 0v-2.02a5.48 5.48 0 003.02-1.25l3.63 3.62a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7L7 7.71zm7.8 4.98c.45-.8.7-1.7.7-2.68a.5.5 0 00-1 0c0 .7-.16 1.35-.44 1.94l.74.74z"></path></svg>`,
	4,
)

function MicOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.2 13A5.51 5.51 0 0112 9.6V5a3 3 0 10-6 0v5a3 3 0 003.2 3zm.3 4.5v-.7c-.32-.7-.5-1.48-.5-2.3A4.5 4.5 0 014.5 10a.5.5 0 00-1 0 5.5 5.5 0 005 5.48v2.02a.5.5 0 001 0zm5 1.5a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm0-8a3.5 3.5 0 00-2.8 5.6l4.9-4.9a3.48 3.48 0 00-2.1-.7zm-2.1 6.3a3.5 3.5 0 004.9-4.9l-4.9 4.9z"></path></svg>`,
	4,
)

function MicProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 10a.5.5 0 00-1 0 5.5 5.5 0 005 5.48v2.02a.5.5 0 001 0v-.7c-.32-.7-.5-1.48-.5-2.3A4.5 4.5 0 014.5 10zM12 5v4.6A5.51 5.51 0 009.2 13 3.02 3.02 0 016 10V5a3 3 0 016 0zm7 9.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-5.56-2c.21 0 .39.14.46.33l.63 1.76.58-1.44a.5.5 0 01.9-.05l.58 1.07H17a.5.5 0 110 1h-.71a.5.5 0 01-.44-.27l-.21-.39-.68 1.68a.5.5 0 01-.93-.02l-.64-1.8-.22.5a.5.5 0 01-.46.3H12a.5.5 0 010-1h.38l.59-1.37a.5.5 0 01.47-.3z"></path></svg>`,
	4,
)

function MicPulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6.7V10a3 3 0 003.2 3c.22-.76.59-1.44 1.07-2.02l.71.71a4.5 4.5 0 006.37 6.29.5.5 0 00.5-.83l-15-15a.5.5 0 10-.7.7L6 6.71zm9.11 9.12l-.15.37a.5.5 0 01-.93-.02l-.64-1.8-.22.5a.5.5 0 01-.46.3H12a.5.5 0 010-1h.38l.33-.76 2.4 2.4zm3.45.62a4.5 4.5 0 00-6-6l6 6zM6.16 4.04l5.66 5.66.18-.1V5a3 3 0 00-5.84-.96zM4.5 10a.5.5 0 00-1 0 5.5 5.5 0 005 5.48v2.02a.5.5 0 001 0v-.7c-.32-.7-.5-1.48-.5-2.3A4.5 4.5 0 014.5 10z"></path></svg>`,
	4,
)

function MicPulseOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5c0-.28.22-.5.5-.5h2c.28 0 .5.22.5.5V3h.5c.28 0 .5.22.5.5v1.53A6.5 6.5 0 0113.96 17h2.54a.5.5 0 010 1h-13a.5.5 0 010-1h7A5.5 5.5 0 0011 6.02v5.48a.5.5 0 01-.5.5H10v.5a1.5 1.5 0 01-3 0V12h-.5a.5.5 0 01-.5-.5v-8c0-.28.22-.5.5-.5H7v-.5zM8 12v.5a.5.5 0 001 0V12H8zm-2.5 3a.5.5 0 000 1h6a.5.5 0 000-1h-6z"></path></svg>`,
	4,
)

function MicroscopeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 13h.2A5.51 5.51 0 0112 9.6V5a3 3 0 10-6 0v5a3 3 0 003 3zm-4.5-3A4.5 4.5 0 009 14.5c0 .82.18 1.6.5 2.3v.7a.5.5 0 01-1 0v-2.02a5.5 5.5 0 01-5-5.48.5.5 0 011 0zm7.56 1.44a2 2 0 01-1.43 2.48l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zm2.44 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function MicSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 9.5c.28 0 .5.22.5.5a4.5 4.5 0 005.78 4.31 1.42 1.42 0 001.04.68c-.56.26-1.18.43-1.82.49v2.02a.5.5 0 01-1 0v-2.02a5.5 5.5 0 01-5-5.48c0-.28.22-.5.5-.5zm7.1 4.22a.42.42 0 00.8 0l.35-1.07a2.2 2.2 0 011.4-1.4l1.07-.35a.42.42 0 000-.8h-.02l-1.08-.35a2.2 2.2 0 01-1.4-1.4l-.34-1.07a.42.42 0 00-.8 0l-.35 1.07a2.2 2.2 0 01-1.38 1.4l-1.07.35a.42.42 0 000 .8l1.07.34a2.2 2.2 0 011.4 1.4l.35 1.08zM12.48 6c.18 0 .35.03.52.1V5a3 3 0 10-6 0v5a3 3 0 003.78 2.9 1.2 1.2 0 00-.74-.7l-1.08-.36h-.01a1.42 1.42 0 010-2.68h.01l1.08-.36a1.2 1.2 0 00.74-.76l.35-1.08v-.01A1.42 1.42 0 0112.49 6zm5.54 8.96l.76.25h.02a.3.3 0 01.14.47.3.3 0 01-.14.1l-.77.26a1.58 1.58 0 00-1 1l-.24.76a.3.3 0 01-.58 0l-.24-.77a1.57 1.57 0 00-1-1l-.77-.25a.3.3 0 01-.14-.46.3.3 0 01.14-.1l.77-.26a1.58 1.58 0 00.98-1l.25-.76a.3.3 0 01.57 0l.25.77a1.58 1.58 0 001 1z"></path></svg>`,
	4,
)

function MicSparkleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 10a.5.5 0 00-1 0 5.5 5.5 0 005 5.48v2.02a.5.5 0 001 0v-.7c-.32-.7-.5-1.48-.5-2.3A4.5 4.5 0 014.5 10zM12 5v4.6A5.51 5.51 0 009.2 13 3.02 3.02 0 016 10V5a3 3 0 016 0zm-2 9.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function MicSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.5 4a.5.5 0 00-.5.5v11c0 .28.22.5.5.5h15a.5.5 0 00.5-.5v-11a.5.5 0 00-.5-.5h-15zm.5 6h2v3.5a.5.5 0 001 0V10h2v3.5a.5.5 0 001 0V10h2v3.5a.5.5 0 001 0V10h2v3.5a.5.5 0 001 0V10h2v5H3v-5zm2.75-2.5a.75.75 0 110-1.5.75.75 0 010 1.5zm6.25-1c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm-3 .25a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"></path></svg>`,
	4,
)

function MidiIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2a.5.5 0 010-1H4V2.5c0-.28.22-.5.5-.5zm11 0c.28 0 .5.22.5.5V4h1.5a.5.5 0 010 1h-2a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5zm-11 16a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2a.5.5 0 000 1H4v1.5c0 .28.22.5.5.5zm11 0a.5.5 0 00.5-.5V16h1.5a.5.5 0 000-1h-2a.5.5 0 00-.5.5v2c0 .28.22.5.5.5zM6 6a1 1 0 011-1h6a1 1 0 011 1v8a1 1 0 01-1 1H7a1 1 0 01-1-1V6zm2 2.5c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5zm0 2c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function MobileOptimizedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 6a4 4 0 01-7.33 2.22l-1.66.84a3.49 3.49 0 01.82 3.5l2.7 1.4a2.5 2.5 0 11-.44.89l-2.7-1.38A3.5 3.5 0 117.1 8.39l2.13-1.06A4 4 0 1117 6z"></path></svg>`,
	4,
)

function MoleculeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5C2 3.67 2.67 3 3.5 3h11c.83 0 1.5.67 1.5 1.5V8h-3a2 2 0 00-2 2v3H3.5A1.5 1.5 0 012 11.5v-7zM4 7a2 2 0 002-2V4H5v1a1 1 0 01-1 1H3v1h1zm3.25 1a1.75 1.75 0 103.5 0 1.75 1.75 0 00-3.5 0zM3 9v1h1a1 1 0 011 1v1h1v-1a2 2 0 00-2-2H3zm12-2V6h-1a1 1 0 01-1-1V4h-1v1c0 1.1.9 2 2 2h1zm2 1V5.09c.58.2 1 .76 1 1.41V8h-1zm-6 6v1H5.5a1.5 1.5 0 01-1.41-1H11zm2.5-5c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5h-4zm0 4h1a.5.5 0 010 1h-1a.5.5 0 010-1zm3 0h1a.5.5 0 010 1h-1a.5.5 0 010-1zm-3 2h1a.5.5 0 010 1h-1a.5.5 0 010-1zm3 0h1a.5.5 0 010 1h-1a.5.5 0 010-1zm-3 2h1a.5.5 0 010 1h-1a.5.5 0 010-1zm3 0h1a.5.5 0 010 1h-1a.5.5 0 010-1zM13 10.5c0-.28.22-.5.5-.5h4c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-4a.5.5 0 01-.5-.5v-1z"></path></svg>`,
	4,
)

function MoneyCalculatorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v7c0 .83.67 1.5 1.5 1.5h5.52A5.5 5.5 0 0116 9.2V5.5c0-.83-.67-1.5-1.5-1.5h-11zM6 6a2 2 0 01-2 2H3V7h1a1 1 0 001-1V5h1v1zm3 4.75a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM3 11v-1h1a2 2 0 012 2v1H5v-1a1 1 0 00-1-1H3zm10-5a1 1 0 001 1h1v1h-1a2 2 0 01-2-2V5h1v1zm-8.91 9h4.93c.03.34.1.68.19 1H5.5a1.5 1.5 0 01-1.41-1zM18 7.5v2.76a5.5 5.5 0 00-1-.66V6.09c.58.2 1 .76 1 1.41zm1 7a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-3.8 0l1.15-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15z"></path></svg>`,
	4,
)

function MoneyDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3.5C3 2.67 3.67 2 4.5 2h7c.83 0 1.5.67 1.5 1.5v1.8l3.27 3.26c.47.47.73 1.1.73 1.77v7.17a.5.5 0 01-1 0v-7.17c0-.4-.16-.78-.44-1.06L13 6.7v3.08l.85.86a.5.5 0 01-.7.7l-3-3c-.43-.42-.66-.4-.76-.38-.18.05-.33.19-.54.4-.1.09-.15.18-.13.32.03.18.17.49.63.96.98.97 1.1 1.1 1.22 1.2l.28.3c.1.09.15.22.15.35 0 .77 0 1.55.22 2.14.1.28.24.49.42.62.18.14.45.24.86.24.28 0 .5.22.5.5v1.5c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 013 16.5v-13zm5 4a2.5 2.5 0 101.9 4.12l-.04-.05-1.21-1.22a2.85 2.85 0 01-.91-1.51c-.08-.52.13-.93.41-1.2l.04-.04.1-.08L8 7.5zm2 9v.5h1v-.5c0-.28.22-.5.5-.5h.5v-.54c-.37-.06-.68-.2-.95-.4-.6.2-1.05.77-1.05 1.44zM4 5h.5C5.33 5 6 4.33 6 3.5V3H5v.5a.5.5 0 01-.5.5H4v1zm6-1.5c0 .83.67 1.5 1.5 1.5h.5V4h-.5a.5.5 0 01-.5-.5V3h-1v.5zm-4 13c0-.83-.67-1.5-1.5-1.5H4v1h.5c.28 0 .5.22.5.5v.5h1v-.5z"></path></svg>`,
	4,
)

function MoneyHandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v7c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5h-11zM6 5v1a2 2 0 01-2 2H3V7h1a1 1 0 001-1V5h1zm3 5.75a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM3 11v-1h1a2 2 0 012 2v1H5v-1a1 1 0 00-1-1H3zm11 0a1 1 0 00-1 1v1h-1v-1c0-1.1.9-2 2-2h1v1h-1zm0-4h1v1h-1a2 2 0 01-2-2V5h1v1a1 1 0 001 1zm3 5.5a2.5 2.5 0 01-2.5 2.5H4.09c.2.58.76 1 1.41 1h9a3.5 3.5 0 003.5-3.5v-5c0-.65-.42-1.2-1-1.41v6.41z"></path></svg>`,
	4,
)

function MoneyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.3 4.01C2.57 4.11 2 4.74 2 5.5v7c0 .83.67 1.5 1.5 1.5h9.8l1 1H4.08c.2.58.76 1 1.41 1h9c.25 0 .49-.03.72-.07l1.93 1.92a.5.5 0 00.7-.7l-15-15zm6.98 8.39a1.75 1.75 0 01-2.37-2.37l2.37 2.37zM5.9 6.61A2 2 0 014 8H3V7h1a1 1 0 001-1v-.3l.9.91zM3 11v-1h1a2 2 0 012 2v1H5v-1a1 1 0 00-1-1H3zm6.42-3.7l1.28 1.28 1.95 1.95A2 2 0 0114 10h1v1h-1a1 1 0 00-.65.24l2.27 2.26c.24-.27.38-.62.38-1v-7c0-.83-.67-1.5-1.5-1.5H6.12l3.3 3.3zM15 7v1h-1a2 2 0 01-2-2V5h1v1a1 1 0 001 1h1zm1.33 7.2l.7.72c.6-.63.97-1.48.97-2.42v-5c0-.65-.42-1.2-1-1.41v6.41a2.5 2.5 0 01-.67 1.7z"></path></svg>`,
	4,
)

function MoneyOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4C2.67 4 2 4.67 2 5.5v7c0 .83.67 1.5 1.5 1.5h5.52A5.5 5.5 0 0116 9.2V5.5c0-.83-.67-1.5-1.5-1.5h-11zM6 6a2 2 0 01-2 2H3V7h1a1 1 0 001-1V5h1v1zm3 4.75a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM3 11v-1h1a2 2 0 012 2v1H5v-1a1 1 0 00-1-1H3zm10-5a1 1 0 001 1h1v1h-1a2 2 0 01-2-2V5h1v1zm-8.91 9h4.93c.03.34.1.68.19 1H5.5a1.5 1.5 0 01-1.41-1zM18 7.5v2.76a5.5 5.5 0 00-1-.66V6.09c.58.2 1 .76 1 1.41zm-5.94 3.94a2 2 0 01-1.43 2.48l-.46.12a4.73 4.73 0 00.01 1.02l.35.08A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zm2.44 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function MoneySettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16zm-3 8a1 1 0 11-2 0 1 1 0 012 0zm4 0a1 1 0 11-2 0 1 1 0 012 0zm4 0a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function MoreCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 10a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zm5 0a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zM15 11.75a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5z"></path></svg>`,
	4,
)

function MoreHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5A1.75 1.75 0 1110 3a1.75 1.75 0 010 3.5zM10 17a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zm-1.75-7a1.75 1.75 0 103.5 0 1.75 1.75 0 00-3.5 0z"></path></svg>`,
	4,
)

function MoreVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.13 5.38L7.03 8h9.47c.28 0 .5.22.5.5v7a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 15.5V8.57l-.26-.9a2.5 2.5 0 011.71-3.09L13.1 2.1a2.5 2.5 0 013.1 1.7l.27.97a.5.5 0 01-.34.62zM3.84 7.88l.6-.17L5.9 5.2l-1.16.33A1.5 1.5 0 003.7 7.4l.14.48zm2-.57l2.11-.61L9.4 4.2l-2.13.61-.02.04-1.42 2.46zm5.62-1.63l1.44-2.5-2.12.62-.03.05L9.34 6.3l2.12-.62zm2.68-2.65c0 .02 0 .03-.02.04l-1.27 2.22 2.52-.73-.14-.48a1.5 1.5 0 00-1.09-1.05z"></path></svg>`,
	4,
)

function MoviesAndTvIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.7 8.75a.75.75 0 00.8-.7l.02-.1c.02-.08.06-.19.13-.3.1-.16.34-.4.95-.4.58 0 .86.19 1 .38.16.22.27.61.16 1.24a.78.78 0 01-.4.6c-.2.13-.42.2-.72.31l-.43.17c-.47.18-1.06.45-1.5 1-.47.55-.71 1.3-.71 2.3a.75.75 0 00.75.75h3.75a.75.75 0 000-1.5H9.58c.07-.28.17-.47.28-.6.2-.24.48-.4.9-.56l.27-.1c.34-.12.77-.28 1.12-.5.52-.32.95-.82 1.09-1.61.15-.87.06-1.73-.43-2.38-.5-.69-1.29-1-2.21-1-1.14 0-1.83.5-2.21 1.1A2.53 2.53 0 008 7.92v.01c0 .01-.02.36 0 .01-.03.41.29.77.7.8zm6.58 1.47a.75.75 0 10-1.06 1.06l.72.72-.72.72a.75.75 0 101.06 1.06l.72-.72.72.72a.75.75 0 101.06-1.06l-.72-.72.72-.72a.75.75 0 10-1.06-1.06l-.72.72-.72-.72zM7 13.5a.5.5 0 11-1 0 .5.5 0 011 0zM4.46 6.03c.32.1.54.39.54.72v6.5a.75.75 0 01-1.5 0V8.8c-.24.2-.52.39-.86.6a.75.75 0 01-.78-1.3c.58-.34.9-.61 1.13-.86.22-.24.36-.47.58-.81l.04-.08a.75.75 0 01.85-.32z"></path></svg>`,
	4,
)

function Multiplier12xIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.46 6.03c.32.1.54.39.54.72v6.5a.75.75 0 01-1.5 0V8.81c-.24.19-.52.38-.86.58a.75.75 0 01-.78-1.28c.58-.35.9-.62 1.13-.87.22-.24.36-.47.58-.81l.04-.08a.75.75 0 01.85-.32zM9 6c-.39 0-.71.3-.75.68L8 9.43a.75.75 0 00.85.81l1.37-.18a1.35 1.35 0 11.16 2.69c-.36 0-.72-.15-.97-.4l-.38-.38a.75.75 0 00-1.06 1.06l.38.38a2.86 2.86 0 004.9-2.01 2.85 2.85 0 00-3.23-2.83l-.44.06.1-1.13h2.57a.75.75 0 000-1.5H9zm-2.5 8a.5.5 0 100-1 .5.5 0 000 1zm7.72-3.78c.3-.3.77-.3 1.06 0l.72.72.72-.72a.75.75 0 111.06 1.06l-.72.72.72.72a.75.75 0 11-1.06 1.06l-.72-.72-.72.72a.75.75 0 11-1.06-1.06l.72-.72-.72-.72a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function Multiplier15xIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.46 6.03c.32.1.54.39.54.72v6.5a.75.75 0 01-1.5 0V8.81c-.24.19-.52.38-.86.58a.75.75 0 01-.78-1.28c.58-.35.9-.62 1.13-.87.22-.24.36-.47.58-.81l.04-.08a.75.75 0 01.85-.32zm8.79 2.22c0 .58-.23 1.07-.59 1.45.51.44.84 1.07.84 1.8 0 1.47-1.33 2.5-2.75 2.5S8 12.97 8 11.5c0-.73.33-1.36.84-1.8a2.08 2.08 0 01-.59-1.45C8.25 6.9 9.48 6 10.75 6s2.5.9 2.5 2.25zm-2.5-.75c-.66 0-1 .44-1 .75s.34.75 1 .75c.66 0 1-.44 1-.75s-.34-.75-1-.75zm-1.25 4c0 .46.46 1 1.25 1s1.25-.54 1.25-1c0-.46-.46-1-1.25-1s-1.25.54-1.25 1zm4.72-1.28c.3-.3.77-.3 1.06 0l.72.72.72-.72a.75.75 0 111.06 1.06l-.72.72.72.72a.75.75 0 11-1.06 1.06l-.72-.72-.72.72a.75.75 0 11-1.06-1.06l.72-.72-.72-.72a.75.75 0 010-1.06zM7 13.5a.5.5 0 11-1 0 .5.5 0 011 0z"></path></svg>`,
	4,
)

function Multiplier18xIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 6.75a.75.75 0 00-1.39-.4l-.04.08a5.3 5.3 0 01-.58.8 4.8 4.8 0 01-1.13.88.75.75 0 10.78 1.28c.34-.2.62-.4.86-.58v4.44a.75.75 0 001.5 0v-6.5zm2.78 3.47a.75.75 0 10-1.06 1.06l.72.72-.72.72a.75.75 0 101.06 1.06l.72-.72.72.72a.75.75 0 101.06-1.06l-.72-.72.72-.72a.75.75 0 00-1.06-1.06l-.72.72-.72-.72z"></path></svg>`,
	4,
)

function Multiplier1xIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.7 8.75a.75.75 0 00.8-.7l.02-.1c.02-.08.06-.19.13-.3.1-.16.34-.4.95-.4.58 0 .86.19 1 .38.16.22.27.61.16 1.24a.78.78 0 01-.4.6c-.2.13-.42.2-.72.31l-.43.17c-.47.18-1.06.45-1.5 1-.46.55-.7 1.3-.7 2.3a.75.75 0 00.74.75H9.5a.75.75 0 000-1.5H6.58c.07-.28.17-.47.28-.6.2-.24.48-.4.9-.56l.27-.1c.34-.12.77-.28 1.12-.5.52-.32.95-.82 1.09-1.61a3.1 3.1 0 00-.42-2.38c-.5-.69-1.3-1-2.22-1-1.13 0-1.83.5-2.2 1.1A2.53 2.53 0 005 7.92v.02c-.02.41.29.77.7.8zm6.58 1.47a.75.75 0 10-1.06 1.06l.72.72-.72.72a.75.75 0 001.06 1.06l.72-.72.72.72a.75.75 0 101.06-1.06l-.72-.72.72-.72a.75.75 0 00-1.06-1.06l-.72.72-.72-.72z"></path></svg>`,
	4,
)

function Multiplier2xIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 6.68A.75.75 0 017 6h3.25a.75.75 0 010 1.5H7.68l-.1 1.13.44-.06a2.85 2.85 0 11.36 5.68c-.75 0-1.5-.3-2.03-.84l-.38-.38a.75.75 0 111.06-1.06l.38.38a1.36 1.36 0 002.34-.95c0-.82-.72-1.45-1.53-1.34l-1.37.18a.75.75 0 01-.85-.8l.25-2.76zM5 13.5a.5.5 0 11-1 0 .5.5 0 011 0zm8.28-3.28a.75.75 0 10-1.06 1.06l.72.72-.72.72a.75.75 0 101.06 1.06l.72-.72.72.72a.75.75 0 101.06-1.06l-.72-.72.72-.72a.75.75 0 10-1.06-1.06l-.72.72-.72-.72z"></path></svg>`,
	4,
)

function Multiplier5xIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 3.2c.31.27.33.74.06 1.05l-2.25 2.5a.75.75 0 01-1.09.03L1.72 5.53a.75.75 0 011.06-1.06l.7.7 1.71-1.92a.75.75 0 011.06-.06zM8 5.24c0-.41.34-.75.75-.75h8.5a.75.75 0 010 1.5h-8.5A.75.75 0 018 5.25zm0 5c0-.41.34-.75.75-.75h8.5a.75.75 0 010 1.5h-8.5a.75.75 0 01-.75-.75zm.75 4.25a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm-2.44-.25a.75.75 0 10-1.12-1l-1.72 1.91-.69-.69a.75.75 0 00-1.06 1.06l1.25 1.25a.75.75 0 001.09-.03l2.25-2.5z"></path></svg>`,
	4,
)

function MultiselectLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.25c0-.41.34-.75.75-.75h8.5a.75.75 0 010 1.5h-8.5A.75.75 0 012 5.25zm0 5c0-.41.34-.75.75-.75h8.5a.75.75 0 010 1.5h-8.5a.75.75 0 01-.75-.75zm.75 4.25a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM18.31 4.25a.75.75 0 10-1.12-1l-1.72 1.91-.69-.69a.75.75 0 10-1.06 1.06l1.25 1.25a.75.75 0 001.09-.03l2.25-2.5zm-.06 8.94c.31.28.33.75.06 1.06l-2.25 2.5a.75.75 0 01-1.09.03l-1.25-1.25a.75.75 0 111.06-1.06l.7.7 1.71-1.92a.75.75 0 011.06-.06z"></path></svg>`,
	4,
)

function MultiselectRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.15 2.02a.5.5 0 00-.65.48v9.9A3.24 3.24 0 004 14.75a3.25 3.25 0 106.5-.25V7.18l5.85 1.8A.5.5 0 0017 8.5V5.98a2.5 2.5 0 00-1.76-2.4l-5.1-1.56z"></path></svg>`,
	4,
)

function MusicNote1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.99 3.02a1 1 0 00-1.29-.8l-7 2.2a1 1 0 00-.7.95v8.13a2.5 2.5 0 101 2V8.37l7-2.19v5.32a2.5 2.5 0 101 2V3.18l-.01-.16z"></path></svg>`,
	4,
)

function MusicNote2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.99 3.02a1 1 0 00-1.29-.8l-7 2.2a1 1 0 00-.7.95v8.13a2.5 2.5 0 101 2V8.37l7-2.19v2.84c.34.03.68.1 1 .19V3.18l-.01-.16zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.26-.44l-3-1.65a.5.5 0 00-.74.44v3.3c0 .38.4.62.74.44l3-1.65a.5.5 0 000-.88z"></path></svg>`,
	4,
)

function MusicNote2PlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l7.35 7.36v2.2A3.24 3.24 0 004 14.74a3.25 3.25 0 106.5-.25v-3.3l6.65 6.65a.5.5 0 00.7-.7l-15-15zm7.65 5.03v1.2l-1-1V2.5a.5.5 0 01.65-.48l5.09 1.57A2.5 2.5 0 0117 5.98V8.5a.5.5 0 01-.65.48l-5.85-1.8z"></path></svg>`,
	4,
)

function MusicNoteOff1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L7 7.71v5.79a2.5 2.5 0 101 2V8.7l3.41 3.42a2.5 2.5 0 003.46 3.46l2.28 2.27a.5.5 0 00.7-.7l-15-15zM13.5 11c-.12 0-.24 0-.35.02l2.83 2.83.02-.35V3.18l-.01-.16a1 1 0 00-1.29-.8l-7 2.2a1 1 0 00-.61.54l2.8 2.82L15 6.18v5.32c-.42-.31-.94-.5-1.5-.5z"></path></svg>`,
	4,
)

function MusicNoteOff2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 13a3 3 0 100-6 3 3 0 000 6zm.75-10.25a.75.75 0 00-1.5 0v1.3a6 6 0 00-5.2 5.2h-1.3a.75.75 0 000 1.5h1.3a6 6 0 005.2 5.2v1.3a.75.75 0 001.5 0v-1.3a6 6 0 005.2-5.2h1.3a.75.75 0 000-1.5h-1.3a6 6 0 00-5.2-5.2v-1.3zM10 14.5a4.5 4.5 0 110-9 4.5 4.5 0 010 9z"></path></svg>`,
	4,
)

function MyLocationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.75zM2.75 14a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function NavigationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2 10.75c0-.41.34-.75.75-.75h11.34a1.5 1.5 0 00-.07.27 4.47 4.47 0 00-1.85 1.23H2.75a.75.75 0 01-.75-.75zM2.75 15h7.34a1.5 1.5 0 001.18.98c.06.18.13.35.22.52H2.75a.75.75 0 010-1.5zm13.3.33a1 1 0 11-1.1-1.66 1 1 0 011.1 1.66zm2.9-1.33h.55a.5.5 0 010 1h-.55A3.49 3.49 0 0116 17.95v.55a.5.5 0 01-1 0v-.55A3.49 3.49 0 0112.05 15h-.55a.5.5 0 010-1h.55A3.49 3.49 0 0115 11.05v-.55a.5.5 0 011 0v.55A3.49 3.49 0 0118.95 14zm-3.2 2.99a2.5 2.5 0 10-.5-4.98 2.5 2.5 0 00.5 4.98z"></path></svg>`,
	4,
)

function NavigationLocationTargetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2 10.75c0-.41.34-.75.75-.75h9.59c-.58.4-1.07.91-1.45 1.5H2.75a.75.75 0 01-.75-.75zM2.75 15h7.27c.05.52.17 1.03.35 1.5H2.75a.75.75 0 010-1.5zM20 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.29-.44l-2.97-1.65a.5.5 0 00-.74.44v3.3c0 .38.41.62.74.44l2.97-1.65a.5.5 0 000-.88z"></path></svg>`,
	4,
)

function NavigationPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.98 4.57l.02-.32a2.25 2.25 0 10-.28 1.08c.13-.24.22-.5.26-.76zM2.75 4h9.76a3.28 3.28 0 00.24 1.5h-10a.75.75 0 010-1.5zM2 9.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.75zM2.75 14a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function NavigationUnreadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.51 10.18a8 8 0 0110.37-4.65l.57-.72.08-.1a9 9 0 00-11.95 5.1.5.5 0 10.93.37zm13.5-3.87a9.02 9.02 0 012.41 3.51.5.5 0 01-.93.36 8 8 0 00-1.87-2.88l.26-.66.14-.33zM10 6.5c.66 0 1.3.1 1.9.28l-.67.86a5.52 5.52 0 00-6.56 3.98.5.5 0 11-.96-.24A6.5 6.5 0 0110 6.5zm5 2.35l-.44 1.08c.35.51.6 1.08.77 1.7a.5.5 0 10.97-.25c-.25-.95-.7-1.8-1.3-2.53zM10 9h.16l-.83 1.08A3 3 0 007 13a.5.5 0 01-1 0 4 4 0 014-4zm3.17 4.35v.02c.08.08.2.13.33.13a.5.5 0 00.5-.5 4 4 0 00-.19-1.21l-.64 1.56zm.22-6.85l.61-.78.23-.29.04-.04a.5.5 0 01.86.37l-.04.16-.14.35a1207.08 1207.08 0 01-2.7 6.7 77.26 77.26 0 01-.73 1.66 1.75 1.75 0 01-3.04-1.75l.38-.54.7-.92a341.32 341.32 0 013.83-4.92zm1.74-.74a.5.5 0 01-.04.16z"></path></svg>`,
	4,
)

function NetworkCheckIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 2.75c.41 0 .75.34.75.75v8a.75.75 0 01-1.5 0v-8c0-.41.34-.75.75-.75zM5.97 5.97c.3-.3.77-.3 1.06 0l6 6a.75.75 0 11-1.06 1.06l-6-6a.75.75 0 010-1.06zM3.5 14.75a.75.75 0 000 1.5h8a.75.75 0 000-1.5h-8z"></path></svg>`,
	4,
)

function NewIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 12v-2h2v2H5zm10-7.5c0-.83-.67-1.5-1.5-1.5H3.42c-.83 0-1.5.67-1.5 1.5v9a2.5 2.5 0 002.5 2.5h11.16a2.5 2.5 0 002.5-2.5v-6c0-.83-.67-1.5-1.5-1.5H16v7.23a.5.5 0 01-1 0V4.5zm-11 2c0-.28.22-.5.5-.5h8a.5.5 0 010 1h-8a.5.5 0 01-.5-.5zM9.5 9h3a.5.5 0 010 1h-3a.5.5 0 010-1zM9 12.5c0-.28.22-.5.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM4.5 9h3c.28 0 .5.22.5.5v3a.5.5 0 01-.5.5h-3a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function NewsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4.25c0-1 1.12-1.6 1.95-1.04l8.5 5.71c.73.5.73 1.57 0 2.07l-8.5 5.8A1.25 1.25 0 013 15.75V4.25zm14-.75a.5.5 0 00-1 0v13a.5.5 0 101 0v-13z"></path></svg>`,
	4,
)

function NextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$du = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H6V3.5zM5.5 11a5.5 5.5 0 004.9-8H14a3 3 0 013 2.82V10h-4.18a3 3 0 00-2.81 2.82L10 13v4H6a3 3 0 01-3-2.82V10.4c.75.38 1.6.6 2.5.6zm11.4 0a2 2 0 01-.36.65l-.13.14-4.62 4.62a2 2 0 01-.79.5V12.84a2 2 0 011.84-1.84L13 11h3.9z"></path></svg>`,
	4,
)

function NoteAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$du.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v5.6A5.5 5.5 0 019.74 18H13a2 2 0 002-2V4a2 2 0 00-2-2H5zm0 3c0-.28.22-.5.5-.5h7c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-7A.5.5 0 015 7V5zm11 1h.5c.28 0 .5.22.5.5V8a.5.5 0 01-.5.5H16V6zm.5 3.5H16V12h.5a.5.5 0 00.5-.5V10a.5.5 0 00-.5-.5zM16 13h.5c.28 0 .5.22.5.5V15a.5.5 0 01-.5.5H16V13zm-6 1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H6v-1.5z"></path></svg>`,
	4,
)

function NotebookAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ds = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm6.4.9l-.9.9V5.74A2.75 2.75 0 004.75 3H4.5a.5.5 0 100 1h.25c.96 0 1.75.78 1.75 1.75v1.54l-.9-.9a.5.5 0 00-.7.71l1.75 1.76a.5.5 0 00.7 0L9.1 7.1a.5.5 0 10-.7-.7zm3.6-.9a5.5 5.5 0 01-8 4.9V16c0 1.1.89 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2h-3.26A5.48 5.48 0 0112 5.5zm5 .5h.5c.27 0 .5.22.5.5V8a.5.5 0 01-.5.5H17V6zm0 3.5h.5c.27 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H17V9.5zm0 3.5h.5c.27 0 .5.22.5.5V15a.5.5 0 01-.5.5H17V13z"></path></svg>`,
	4,
)

function NotebookArrowCurveDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ds.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4c0-1.1.9-2 2-2h8a2 2 0 012 2v12a2 2 0 01-2 2H9.74A5.5 5.5 0 003 9.6V4zm2.5 1a.5.5 0 00-.5.5v1c0 .28.22.5.5.5h7a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-7zm11 1H16v2.5h.5A.5.5 0 0017 8V6.5a.5.5 0 00-.5-.5zM16 9.5h.5c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H16V9.5zm.5 3.5H16v2.5h.5a.5.5 0 00.5-.5v-1.5a.5.5 0 00-.5-.5zm-11 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zM5 12.5a.5.5 0 011 0v2a.5.5 0 01-1 0v-2zm1.13 4a.62.62 0 11-1.25 0 .62.62 0 011.25 0z"></path></svg>`,
	4,
)

function NotebookErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v7.57a5.8 5.8 0 016.47 1c.88.82 1.53 1.94 1.53 2.93a3.3 3.3 0 01-.43 1.52c-.18.33-.41.66-.7.98H13a2 2 0 002-2V4a2 2 0 00-2-2H5zm0 3.5c0-.28.22-.5.5-.5h7c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5v-1zM16 6h.5c.28 0 .5.22.5.5V8a.5.5 0 01-.5.5H16V6zm0 3.5h.5c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H16V9.5zm0 3.5h.5c.28 0 .5.22.5.5V15a.5.5 0 01-.5.5H16V13zM1 15.5C1 14.32 2.74 12 5.5 12s4.5 2.3 4.5 3.5c0 1.18-1.74 3.5-4.5 3.5S1 16.7 1 15.5zm3.11 2.08a2.5 2.5 0 102.78-4.16 2.5 2.5 0 00-2.78 4.16zm2.64-1.25a1.5 1.5 0 10-2.5-1.66 1.5 1.5 0 002.5 1.66z"></path></svg>`,
	4,
)

function NotebookEyeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2H5zm0 3.5c0-.28.22-.5.5-.5h7c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5v-1zM16 6h.5c.28 0 .5.22.5.5V8a.5.5 0 01-.5.5H16V6zm0 3.5h.5c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H16V9.5zm0 3.5h.5c.28 0 .5.22.5.5V15a.5.5 0 01-.5.5H16V13z"></path></svg>`,
	4,
)

function NotebookIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$do = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4c0-1.1.9-2 2-2h8a2 2 0 012 2v12a2 2 0 01-2 2H9.74A5.5 5.5 0 003 9.6V4zm2.5 1a.5.5 0 00-.5.5v1c0 .28.22.5.5.5h7a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-7zm11 1H16v2.5h.5A.5.5 0 0017 8V6.5a.5.5 0 00-.5-.5zM16 9.5h.5c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H16V9.5zm.5 3.5H16v2.5h.5a.5.5 0 00.5-.5v-1.5a.5.5 0 00-.5-.5zm-11 6a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-1.13-3.66h-.6c-.2 0-.32-.2-.25-.39l1.1-2.78c.04-.1.13-.17.24-.17h1.83c.18 0 .3.19.25.37l-.31.97c-.05.17.07.33.24.33h.23c.36 0 .54.46.27.72l-2.56 2.53c-.2.2-.5 0-.44-.27l.24-1a.25.25 0 00-.24-.31z"></path></svg>`,
	4,
)

function NotebookLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$do.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v5.6A5.5 5.5 0 019.74 18H13a2 2 0 002-2V4a2 2 0 00-2-2H5zm0 3.5c0-.28.22-.5.5-.5h7c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5v-1zM16 6h.5c.28 0 .5.22.5.5V8a.5.5 0 01-.5.5H16V6zm.5 3.5H16V12h.5a.5.5 0 00.5-.5V10a.5.5 0 00-.5-.5zM16 13h.5c.28 0 .5.22.5.5V15a.5.5 0 01-.5.5H16V13zm-6 1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.5 1.88a.62.62 0 100 1.25.62.62 0 000-1.25zm0-4.88c-1.05 0-1.86.82-1.85 1.96a.5.5 0 101-.01c0-.58.36-.95.85-.95.47 0 .85.4.85.95 0 .2-.07.32-.36.55l-.27.21c-.51.4-.72.72-.72 1.29a.5.5 0 001 .09v-.16c.02-.14.1-.25.35-.44l.28-.22c.5-.4.72-.73.72-1.32 0-1.1-.82-1.95-1.85-1.95z"></path></svg>`,
	4,
)

function NotebookQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.65 2h.1c.38 0 .7.28.74.65l.01.1v8.33a6.5 6.5 0 00-5 8.92H9.25C8.01 20 7 18.99 7 17.75V6.25C7 5.01 8 4 9.25 4H15V2.75c0-.38.28-.7.65-.74z"></path><path d="M23 17.5a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0zm-8.5-.5a.5.5 0 000 1h4.8l-1.65 1.65a.5.5 0 00.7.7l2.5-2.5a.5.5 0 000-.7l-2.5-2.5a.5.5 0 00-.7.7L19.29 17H14.5z"></path></svg>`,
	6,
)

function NotebookSectionArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 2.5a.5.5 0 00-1 0V3H8a2 2 0 00-2 2v10c0 1.1.9 2 2 2h1.6A5.5 5.5 0 0114 9.02V2.5zm.5 7.5a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function NotebookSectionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5.5A3.5 3.5 0 017.5 2H10c.82 0 1.54.4 2 1H7.5A2.5 2.5 0 005 5.5V15a2.5 2.5 0 01-1-2V5.5zM13.5 2h-.07c-.24.05-.43.3-.43.6V4H7.5C6.67 4 6 4.67 6 5.5v10c0 .83.67 1.5 1.5 1.5H13V17.48c.04.3.25.52.5.52.28 0 .5-.27.5-.6V2.52c-.04-.3-.25-.52-.5-.52z"></path></svg>`,
	4,
)

function NotebookSubsectionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v5.6A5.5 5.5 0 019.74 18H13a2 2 0 002-2V4a2 2 0 00-2-2H5zm0 3c0-.28.22-.5.5-.5h7c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-7A.5.5 0 015 7V5zm11 1h.5c.28 0 .5.22.5.5V8a.5.5 0 01-.5.5H16V6zm0 3.5h.5c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H16V9.5zm0 3.5h.5c.28 0 .5.22.5.5V15a.5.5 0 01-.5.5H16V13zM1 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H6a.5.5 0 010-1h.47a1.99 1.99 0 00-2.38.34.5.5 0 01-.71-.71A3 3 0 017 12.15V12c0-.28.22-.5.5-.5zm-.88 5.53A3 3 0 014 16.85V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H5a.5.5 0 010 1h-.47a1.99 1.99 0 002.38-.34.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function NotebookSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$di = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 14.18A3 3 0 006 17h2l.06-.35.37-1.5a3.2 3.2 0 01.84-1.48l4.83-4.83a2.87 2.87 0 012.9-.7V5.81A3 3 0 0014 3h-4v4.18a3 3 0 01-2.82 2.81L7 10H3v4.18zm.46-5.83A2 2 0 003.1 9h4.06a2 2 0 001.83-1.85L9 7V3.1a2 2 0 00-.8.49L3.6 8.2l-.13.14zm6.52 6.03l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function NoteEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$di.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 3a3 3 0 013 2.82V10h-4.18a3 3 0 00-2.81 2.82L10 13v4H6a3 3 0 01-3-2.82V6a3 3 0 012.82-3H14zm2.9 8a2 2 0 01-.36.65l-.13.14-4.62 4.62a2 2 0 01-.79.5V12.84a2 2 0 011.84-1.84L13 11h3.9z"></path></svg>`,
	4,
)

function NoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.8 10.55l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64zM7 2.5a.5.5 0 00-1 0V3h-.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5H9l.06-.35.37-1.5a3.2 3.2 0 01.84-1.48l4.83-4.83c.27-.27.57-.47.9-.6V4.5c0-.83-.67-1.5-1.5-1.5H14v-.5a.5.5 0 00-1 0V3h-2.5v-.5a.5.5 0 00-1 0V3H7v-.5zM7.5 7h5a.5.5 0 010 1h-5a.5.5 0 010-1zm5.5 3.5a.5.5 0 01-.5.5h-5a.5.5 0 010-1h5c.28 0 .5.22.5.5zM7.5 13h2a.5.5 0 010 1h-2a.5.5 0 010-1z"></path></svg>`,
	4,
)

function NotepadEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$df = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5a.5.5 0 00-1 0V3h-.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5H11v-3.5c0-.83.67-1.5 1.5-1.5H16V4.5c0-.83-.67-1.5-1.5-1.5H14v-.5a.5.5 0 00-1 0V3h-2.5v-.5a.5.5 0 00-1 0V3H7v-.5zm0 5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm.5 2.5h5a.5.5 0 010 1h-5a.5.5 0 010-1zM7 13.5c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm8.69.5H12.5a.5.5 0 00-.5.5v3.19l.15-.13 3.41-3.41.13-.15z"></path></svg>`,
	4,
)

function NotepadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$df.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$de = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5a.5.5 0 00-1 0V3h-.5C4.67 3 4 3.67 4 4.5v12c0 .83.67 1.5 1.5 1.5h5.87a3.21 3.21 0 01-.37-1.5c0-1.3 1-2.38 2.27-2.49A2.99 2.99 0 0115.5 9c.17 0 .34.01.5.04V4.5c0-.83-.67-1.5-1.5-1.5H14v-.5a.5.5 0 00-1 0V3h-2.5v-.5a.5.5 0 00-1 0V3H7v-.5zm0 5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm0 6c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm0-3c0-.28.22-.5.5-.5H11a.5.5 0 010 1H7.5a.5.5 0 01-.5-.5zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function NotepadPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$de.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 9.02v5.16A3 3 0 006 17h4v-4.18a3 3 0 012.82-2.81L13 10h4V5.82A3 3 0 0014 3H9.46c.95 1.12.6 2.85-.74 3.51l-1.89.92-.44 1.28a1.82 1.82 0 01-3 .7L3 9zm13.54 2.63a2 2 0 00.36-.65h-4.06a2 2 0 00-1.83 1.85L11 13v3.9a2 2 0 00.8-.49l4.61-4.62.13-.14zm-8-8.26L6.6 1.46a1.5 1.5 0 00-2.4.4L3.4 3.51a1 1 0 01-.57.5l-1.1.39a1 1 0 00-.39 1.65L2.3 7 1 8.3V9h.7L3 7.7l.95.95a1 1 0 001.65-.38l.38-1.1a1 1 0 01.5-.57l1.65-.8a1.5 1.5 0 00.4-2.41z"></path></svg>`,
	4,
)

function NotePinIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$dc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11.5v7a.5.5 0 01-1 0V8.48c-.38.48-.82.92-1.22 1.19a.5.5 0 11-.56-.84c.32-.2.71-.6 1.07-1.07.35-.47.62-.97.73-1.38a.5.5 0 01.98.12z"></path></svg>`,
	4,
)

function NumberCircle1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$dc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$db = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h3a2 2 0 002-2V5a2 2 0 00-2-2H4zm1 3.5a.5.5 0 011 0v7a.5.5 0 01-1 0v-7zM13 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h3a2 2 0 002-2V5a2 2 0 00-2-2h-3zm.5 3h2c.28 0 .5.22.5.5V10a.5.5 0 01-.5.5H14V13h1.5a.5.5 0 010 1h-2a.5.5 0 01-.5-.5V10c0-.28.22-.5.5-.5H15V7h-1.5a.5.5 0 010-1z"></path></svg>`,
	4,
)

function NumberRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$db.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$da = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.99 2.88a.75.75 0 00-1.48-.26L6.84 6.5H3.75a.75.75 0 000 1.5h2.83l-.68 4H2.75a.75.75 0 000 1.5h2.89L5 17.12a.75.75 0 101.48.26l.67-3.88H9.1c.1-.53.27-1.04.51-1.5H7.42l.69-4h4.47l-.24 1.44c.5-.21 1.03-.35 1.59-.41L14.11 8h3.14a.75.75 0 100-1.5h-2.88l.62-3.62a.75.75 0 00-1.48-.26l-.67 3.88H8.37l.62-3.62zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function NumberSymbolDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$da.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.99 2.88a.75.75 0 00-1.48-.26L6.84 6.5H3.75a.75.75 0 000 1.5h2.83l-.68 4H2.75a.75.75 0 000 1.5h2.89L5 17.12a.75.75 0 101.48.26l.67-3.88h4.48L11 17.12a.75.75 0 101.48.26l.67-3.88h3.1a.75.75 0 000-1.5h-2.84l.69-4h3.14a.75.75 0 100-1.5h-2.88l.62-3.62a.75.75 0 00-1.48-.26l-.67 3.88H8.37l.62-3.62zM8.1 8h4.47l-.68 4H7.42l.69-4z"></path></svg>`,
	4,
)

function NumberSymbolIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.45 9l-.43 2H8.55l.43-2h2.47zM5.5 3A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3h-9zm3.6 3.01a.5.5 0 01.39.6L9.19 8h2.48L12 6.4a.5.5 0 01.98.2l-.3 1.4h.81a.5.5 0 010 1h-1.02l-.43 2H13a.5.5 0 010 1h-1.17l-.34 1.6a.5.5 0 11-.98-.2l.3-1.4H8.33L8 13.6a.5.5 0 11-.98-.2l.3-1.4H6.5a.5.5 0 010-1h1.02l.43-2H7a.5.5 0 010-1h1.17l.34-1.6a.5.5 0 01.6-.39z"></path></svg>`,
	4,
)

function NumberSymbolSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6.25C3 4.45 4.46 3 6.25 3H14c1.8 0 3.25 1.46 3.25 3.25v2a.75.75 0 01-1.5 0v-2c0-.97-.78-1.75-1.75-1.75H6.25c-.97 0-1.75.78-1.75 1.75v7.5c0 .97.78 1.75 1.75 1.75h4a.75.75 0 010 1.5h-4A3.25 3.25 0 013 13.75v-7.5zm5 2.5c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-2.69l5.22 5.22a.75.75 0 11-1.06 1.06L9.5 10.56v2.69a.75.75 0 01-1.5 0v-4.5z"></path></svg>`,
	4,
)

function OpenFolderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 4.5c-.97 0-1.75.78-1.75 1.75v7.5c0 .97.78 1.75 1.75 1.75h7.5c.97 0 1.75-.78 1.75-1.75v-2a.75.75 0 011.5 0v2c0 1.8-1.46 3.25-3.25 3.25h-7.5A3.25 3.25 0 013 13.75v-7.5C3 4.45 4.46 3 6.25 3h2a.75.75 0 010 1.5h-2zm4.25-.75c0-.41.34-.75.75-.75h5c.41 0 .75.34.75.75v5a.75.75 0 01-1.5 0V5.56l-3.72 3.72a.75.75 0 11-1.06-1.06l3.72-3.72h-3.19a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function OpenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15l15 15a.5.5 0 01-.7.7l-1.48-1.48c-.54.4-1.2.63-1.92.63h-7.5A3.25 3.25 0 013 13.75v-7.5c0-.72.23-1.38.63-1.92L2.15 2.85a.5.5 0 11.7-.7zm11.73 13.14L4.71 5.42c-.13.25-.21.53-.21.83v7.5c0 .97.78 1.75 1.75 1.75h7.5c.3 0 .59-.08.83-.21zm-4.01-6.85l.99 1a.75.75 0 00.22-.16l3.72-3.72v3.19a.75.75 0 001.5 0v-5a.75.75 0 00-.75-.75h-5a.75.75 0 000 1.5h3.19l-3.72 3.72a.75.75 0 00-.15.22zm6.28 6.29l-1.35-1.35v-1.63a.75.75 0 011.5 0v2c0 .34-.05.67-.15.98zM5.27 3.15L6.62 4.5h1.63a.75.75 0 000-1.5h-2c-.34 0-.67.05-.98.15z"></path></svg>`,
	4,
)

function OpenOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.25 5h-2.36a2.5 2.5 0 00-4.78 0H2.75a.75.75 0 000 1.5h7.36a2.5 2.5 0 004.78 0h2.36a.75.75 0 000-1.5zm-14.5 8.5a.75.75 0 000 1.5h2.36a2.5 2.5 0 004.78 0h7.36a.75.75 0 000-1.5H9.89a2.5 2.5 0 00-4.78 0H2.75z"></path></svg>`,
	4,
)

function OptionsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 13a3 3 0 112.96-3.5H9.5v-3c0-.83.67-1.5 1.5-1.5h1.04a3 3 0 110 1H11a.5.5 0 00-.5.5v7c0 .28.22.5.5.5h1.04a3 3 0 110 1H11a1.5 1.5 0 01-1.5-1.5v-3H7.96A3 3 0 015 13z"></path></svg>`,
	4,
)

function OrganizationHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 5a3 3 0 113.5 2.96V9.5h3c.83 0 1.5.67 1.5 1.5v1.04a3 3 0 11-1 0V11a.5.5 0 00-.5-.5h-7a.5.5 0 00-.5.5v1.04a3 3 0 11-1 0V11c0-.83.67-1.5 1.5-1.5h3V7.96A3 3 0 017 5z"></path></svg>`,
	4,
)

function OrganizationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 5a.25.25 0 00-.25.25v.25a.5.5 0 01-1 0v-.25C2 4.56 2.56 4 3.25 4h.25a.5.5 0 010 1h-.25z"></path><path d="M5 4.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5z"></path><path d="M8 4.5c0-.28.22-.5.5-.5h.25C9.44 4 10 4.56 10 5.25v.25a.5.5 0 01-1 0v-.25A.25.25 0 008.75 5H8.5a.5.5 0 01-.5-.5z"></path><path d="M14.85 5.85l-.15.16a3.5 3.5 0 01-.2 6.99.5.5 0 010-1 2.5 2.5 0 00.22-5l.13.15a.5.5 0 01-.7.7l-1-1a.5.5 0 010-.7l1-1a.5.5 0 01.7.7z"></path><path d="M3.5 9C2.67 9 2 9.67 2 10.5v4c0 .83.67 1.5 1.5 1.5h8c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-2a.5.5 0 00.5-.5v-1a.5.5 0 00-1 0v1c0 .28.22.5.5.5h-6z"></path><path d="M3 7.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1z"></path></svg>`,
	14,
)

function OrientationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a6 6 0 016-6h4a6 6 0 010 12H8a6 6 0 01-6-6z"></path></svg>`,
	4,
)

function OvalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 2.75c0 .41.34.75.75.75H15A.75.75 0 0015 2H4.5a.75.75 0 00-.75.75zm0 14.5c0 .41.34.75.75.75h1.31a.75.75 0 000-1.5H4.5a.75.75 0 00-.75.75zm3.94 0c0 .41.33.75.75.75h2.62a.75.75 0 000-1.5H8.44a.75.75 0 00-.75.75zm5.25 0c0 .41.33.75.75.75H15a.75.75 0 000-1.5h-1.31a.75.75 0 00-.75.75zm-2.66-1.97c-.3.3-.77.3-1.06 0l-4.25-4.25a.75.75 0 111.06-1.06L9 12.94V5.75a.75.75 0 011.5 0v7.19l2.97-2.97a.75.75 0 111.06 1.06l-4.25 4.25z"></path></svg>`,
	4,
)

function PaddingDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.75A.75.75 0 002 4.5v1.31a.75.75 0 001.5 0V4.5a.75.75 0 00-.75-.75zm0 3.94a.75.75 0 00-.75.75v2.62a.75.75 0 001.5 0V8.44a.75.75 0 00-.75-.75zm0 5.25a.75.75 0 00-.75.75V15a.75.75 0 001.5 0v-1.31a.75.75 0 00-.75-.75zm14.5-9.19a.75.75 0 00-.75.75V15a.75.75 0 001.5 0V4.5a.75.75 0 00-.75-.75zM4.72 10.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 111.06 1.06L7.06 9h7.19a.75.75 0 010 1.5H7.06l2.97 2.97a.75.75 0 11-1.06 1.06l-4.25-4.25z"></path></svg>`,
	4,
)

function PaddingLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.75c.41 0 .75.34.75.75V15A.75.75 0 012 15V4.5c0-.41.34-.75.75-.75zm14.5 0c.41 0 .75.34.75.75v1.31a.75.75 0 01-1.5 0V4.5c0-.41.34-.75.75-.75zm0 3.94c.41 0 .75.33.75.75v2.62a.75.75 0 01-1.5 0V8.44c0-.42.34-.75.75-.75zm0 5.25c.41 0 .75.33.75.75V15a.75.75 0 01-1.5 0v-1.31c0-.42.34-.75.75-.75zm-1.97-2.66c.3-.3.3-.77 0-1.06l-4.25-4.25a.75.75 0 10-1.06 1.06L12.94 9H5.75a.75.75 0 000 1.5h7.19l-2.97 2.97a.75.75 0 101.06 1.06l4.25-4.25z"></path></svg>`,
	4,
)

function PaddingRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 2.75c0-.41.34-.75.75-.75h1.31a.75.75 0 010 1.5H4.5a.75.75 0 01-.75-.75zm3.94 0c0-.41.33-.75.75-.75h2.62a.75.75 0 010 1.5H8.44a.75.75 0 01-.75-.75zm5.25 0c0-.41.33-.75.75-.75H15a.75.75 0 010 1.5h-1.31a.75.75 0 01-.75-.75zm-9.19 14.5c0-.41.34-.75.75-.75H15a.75.75 0 010 1.5H4.5a.75.75 0 01-.75-.75zm6.53-12.53a.75.75 0 00-1.06 0L4.97 8.97a.75.75 0 101.06 1.06L9 7.06v7.19a.75.75 0 001.5 0V7.06l2.97 2.97a.75.75 0 101.06-1.06l-4.25-4.25z"></path></svg>`,
	4,
)

function PaddingTopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm1.5 2h1a.5.5 0 010 1h-1a.5.5 0 00-.5.5v1a.5.5 0 01-1 0v-1C4 6.67 4.67 6 5.5 6zm8 0h1c.83 0 1.5.67 1.5 1.5v1a.5.5 0 01-1 0v-1a.5.5 0 00-.5-.5h-1a.5.5 0 010-1zM5 11.5v1c0 .28.22.5.5.5h1a.5.5 0 010 1h-1A1.5 1.5 0 014 12.5v-1a.5.5 0 011 0zm11 0v1c0 .83-.67 1.5-1.5 1.5h-1a.5.5 0 010-1h1a.5.5 0 00.5-.5v-1a.5.5 0 011 0z"></path></svg>`,
	4,
)

function PageFitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.57 17.24A.5.5 0 004 18h1.7l.02-.03c.26-.54.55-1.14.79-1.71.3-.73.49-1.35.49-1.76a.5.5 0 011 0c0 .63-.27 1.41-.57 2.14-.19.46-.4.92-.61 1.36H8c.2-.39.43-.8.61-1.21.24-.54.39-.99.39-1.29a.5.5 0 011 0c0 .53-.23 1.15-.48 1.7-.12.27-.25.54-.39.8h2.75l-.44-.44A1.5 1.5 0 0113 15.1V13.5a1.5 1.5 0 012-1.41V11H5v.5a12.57 12.57 0 01-1.42 5.72v.02zM5 10h10V9a2 2 0 00-2-2h-1V4a2 2 0 10-4 0v3H7a2 2 0 00-2 2v1zm10 3.5a.5.5 0 00-1 0v3.8l-1.15-1.15a.5.5 0 00-.7.7l2 2c.2.2.5.2.7 0l2-2a.5.5 0 00-.7-.7L15 17.29V13.5z"></path></svg>`,
	4,
)

function PaintBrushArrowDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.57 17.24A.5.5 0 004 18h1.7l.02-.03c.26-.54.55-1.14.79-1.71.3-.73.49-1.35.49-1.76a.5.5 0 011 0c0 .63-.27 1.41-.57 2.14-.19.46-.4.92-.61 1.36H8c.2-.39.43-.8.61-1.21.24-.54.39-.99.39-1.29a.5.5 0 011 0c0 .53-.23 1.15-.48 1.7-.12.27-.25.54-.39.8H13v-1.09a1.5 1.5 0 01-1.56-2.47l2-2a1.5 1.5 0 011.56-.35V11H5v.5a12.57 12.57 0 01-1.42 5.72v.02zM5 10h10V9a2 2 0 00-2-2h-1V4a2 2 0 10-4 0v3H7a2 2 0 00-2 2v1zm10 4.7v3.8a.5.5 0 01-1 0v-3.8l-1.15 1.15a.5.5 0 01-.7-.7l2-2c.2-.2.5-.2.7 0l2 2a.5.5 0 01-.7.7L15 14.71z"></path></svg>`,
	4,
)

function PaintBrushArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 4.5V2H5.5a.5.5 0 00-.5.5V9h10V2.5a.5.5 0 00-.5-.5H13v3.5a.5.5 0 01-1 0V2h-1v2.5a.5.5 0 01-1 0zm5 5.5H5v1c0 1.1.9 2 2 2h1.5v3.5a1.5 1.5 0 103 0V13H13a2 2 0 002-2v-1z"></path></svg>`,
	4,
)

function PaintBrushIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2.5a.5.5 0 00-1 0V4c-.2.07-.4.19-.56.35L2.35 9.44a1.5 1.5 0 000 2.12L6.7 15.9a1.5 1.5 0 002.12 0l5.09-5.09a1.5 1.5 0 000-2.12L9.56 4.35A1.5 1.5 0 009 4V2.5zm4.27 7.5H3.2L8 5.2v1.3a.5.5 0 001 0V5.2l4.19 4.2a.5.5 0 01.08.6zm2.75 1.4a.6.6 0 00-1.04 0l-1.65 2.82a2.51 2.51 0 104.34 0l-1.65-2.83z"></path></svg>`,
	4,
)

function PaintBucketIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3.5c0 .56.3 1.04.75 1.3v6.4a1.5 1.5 0 102.05 2.05h1.95v1.95a1.5 1.5 0 102.05 2.05h6.4a1.5 1.5 0 102.05-2.05V8.8a1.5 1.5 0 10-2.05-2.05h-1.95V4.8a1.5 1.5 0 10-2.05-2.05H4.8A1.5 1.5 0 002 3.5zm6.8 12.25a1.5 1.5 0 00-.55-.55v-1.95h2.95a1.5 1.5 0 102.05-2.05V8.25h1.95c.13.23.32.42.55.55v6.4a1.5 1.5 0 00-.55.55H8.8zM4.25 11.2V4.8c.23-.13.42-.32.55-.55h6.4c.13.23.32.42.55.55v1.95H8.8A1.5 1.5 0 106.75 8.8v2.95H4.8a1.5 1.5 0 00-.55-.55zm7.5 0a1.5 1.5 0 00-.55.55H8.25V8.8c.23-.13.42-.32.55-.55h2.95v2.95z"></path></svg>`,
	4,
)

function PairIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 11.17l.87-1a.5.5 0 01.76.66l-1.75 2a.5.5 0 01-.76 0l-1.75-2a.5.5 0 11.76-.65l.87 1V7.5a.5.5 0 111 0v3.67zM4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zM3 6a1 1 0 011-1h12a1 1 0 011 1v5h-3.83a1.5 1.5 0 01-.3.5l-1.74 2a1.5 1.5 0 01-2.26 0l-1.75-2a1.5 1.5 0 01-.29-.5H3V6z"></path></svg>`,
	4,
)

function PanelBottomContractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 8.83l.87 1a.5.5 0 00.76-.66l-1.75-2a.5.5 0 00-.76 0l-1.75 2a.5.5 0 00.76.65l.87-1v3.68a.5.5 0 001 0V8.83zM4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zM3 6a1 1 0 011-1h12a1 1 0 011 1v5h-5.5v1.5a1.5 1.5 0 11-3 0V11H3V6z"></path></svg>`,
	4,
)

function PanelBottomExpandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zM3 6a1 1 0 011-1h12a1 1 0 011 1v5H3V6z"></path></svg>`,
	4,
)

function PanelBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.82 10.5h3.68a.5.5 0 000-1h-3.68l1-.87a.5.5 0 10-.66-.76l-2 1.75a.5.5 0 000 .76l2 1.75a.5.5 0 10.66-.76l-1-.87zM4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm4 11V5h8a1 1 0 011 1v8a1 1 0 01-1 1H8z"></path></svg>`,
	4,
)

function PanelLeftContractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.18 10.5l-1 .87a.5.5 0 00.66.76l2-1.75a.5.5 0 000-.76l-2-1.75a.5.5 0 10-.66.76l1 .87H9.5a.5.5 0 000 1h3.68zM2 14c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v8zm6 1V5h8a1 1 0 011 1v8a1 1 0 01-1 1H8z"></path></svg>`,
	4,
)

function PanelLeftExpandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 16a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12zM7 5v10H4a1 1 0 01-1-1V6a1 1 0 011-1h3z"></path></svg>`,
	4,
)

function PanelLeftFocusRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm4 11V5h8a1 1 0 011 1v8a1 1 0 01-1 1H8z"></path></svg>`,
	4,
)

function PanelLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 6a2 2 0 00-2-2H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.2c-.08-.32-.15-.66-.18-1H4a1 1 0 01-1-1V6a1 1 0 011-1h8v4.6a5.48 5.48 0 016 .66V6zm-3.5 13a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V14h1.5a.5.5 0 010 1H15v1.5a.5.5 0 01-1 0V15h-1.5a.5.5 0 010-1H14v-1.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function PanelRightAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.18 10.5l-1 .87a.5.5 0 10.66.76l2-1.75a.5.5 0 000-.76l-2-1.75a.5.5 0 10-.66.76l1 .87H5.5a.5.5 0 000 1h3.68zM16 16a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12zM12 5v10H4a1 1 0 01-1-1V6a1 1 0 011-1h8z"></path></svg>`,
	4,
)

function PanelRightContractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.82 10.5l1 .87a.5.5 0 01-.66.76l-2-1.75a.5.5 0 010-.76l2-1.75a.5.5 0 01.66.76l-1 .87h3.68a.5.5 0 010 1H6.82zM18 14a2 2 0 01-2 2H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2h12a2 2 0 012 2v8zm-6 1V5H4a1 1 0 00-1 1v8a1 1 0 001 1h8z"></path></svg>`,
	4,
)

function PanelRightExpandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 4a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2h12zm-4 11V5H4a1 1 0 00-1 1v8a1 1 0 001 1h8z"></path></svg>`,
	4,
)

function PanelRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 2a2 2 0 00-2 2v4c0 1.1.9 2 2 2h8a2 2 0 002-2V4a2 2 0 00-2-2H3zm0 12v-3h1v3a1 1 0 001 1h12a1 1 0 001-1V6a1 1 0 00-1-1h-3V4h3a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"></path></svg>`,
	4,
)

function PanelSeparateWindowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 8.83l.87 1a.5.5 0 00.76-.66l-1.75-2a.5.5 0 00-.76 0l-1.75 2a.5.5 0 00.76.65l.87-1v3.68a.5.5 0 001 0V8.83zM4 16a2 2 0 01-2-2V6c0-1.1.9-2 2-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4zm-1-2a1 1 0 001 1h12a1 1 0 001-1V9h-3.83a1.5 1.5 0 00-.3-.5l-1.74-2a1.5 1.5 0 00-2.26 0l-1.75 2a1.5 1.5 0 00-.29.5H3v5z"></path></svg>`,
	4,
)

function PanelTopContractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 11.17l.87-1a.5.5 0 01.76.66l-1.75 2a.5.5 0 01-.76 0l-1.75-2a.5.5 0 11.76-.65l.87 1V7.5a.5.5 0 011 0v3.67zM4 16a2 2 0 01-2-2V6c0-1.1.9-2 2-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4zm-1-2a1 1 0 001 1h12a1 1 0 001-1V9h-5.5V7.5a1.5 1.5 0 10-3 0V9H3v5z"></path></svg>`,
	4,
)

function PanelTopExpandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v5.5A2.75 2.75 0 0115.25 15H4.75A2.75 2.75 0 012 12.25v-5.5zm5.15 1.4l-.65.64-.65-.64a.5.5 0 10-.7.7l.64.65-.64.65a.5.5 0 00.7.7l.65-.64.65.64a.5.5 0 00.7-.7l-.64-.65.64-.65a.5.5 0 10-.7-.7zm4 0l-.65.64-.65-.64a.5.5 0 10-.7.7l.64.65-.64.65a.5.5 0 00.7.7l.65-.64.65.64a.5.5 0 00.7-.7l-.64-.65.64-.65a.5.5 0 00-.7-.7zM13 10.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PasswordIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.27 3.06l1.02 1.03-5.2 5.2-1.03-1.02a2.5 2.5 0 010-3.54l1.67-1.67a2.5 2.5 0 013.54 0zm3.46 13.88l-1.02-1.03 5.2-5.2 1.03 1.02a2.5 2.5 0 010 3.54l-1.67 1.67a2.5 2.5 0 01-3.54 0zm-8.67-5.2a2.5 2.5 0 000 3.53l1.67 1.67a2.5 2.5 0 003.54 0l8.67-8.67a2.5 2.5 0 000-3.54l-1.67-1.67a2.5 2.5 0 00-3.54 0l-8.67 8.67zM10 8.5a.5.5 0 110-1 .5.5 0 010 1zm0 2a.5.5 0 110-1 .5.5 0 010 1zM8.5 10a.5.5 0 11-1 0 .5.5 0 011 0zm3.5.5a.5.5 0 110-1 .5.5 0 010 1zM10.5 12a.5.5 0 11-1 0 .5.5 0 011 0z"></path></svg>`,
	4,
)

function PatchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 4a2 2 0 100 4 2 2 0 000-4zM6.5 14.5a.5.5 0 000 1h7a.5.5 0 000-1h-7zM4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm10-1H6a1 1 0 00-1 1v8h2v-2a1 1 0 011-1h4a1 1 0 011 1v2h2V4a1 1 0 00-1-1zM5 13v3a1 1 0 001 1h8a1 1 0 001-1v-3H5z"></path></svg>`,
	4,
)

function PatientIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm7-2.5a.5.5 0 00-1 0v5a.5.5 0 001 0v-5zm3 0a.5.5 0 00-1 0v5a.5.5 0 001 0v-5z"></path></svg>`,
	4,
)

function PauseCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h2a2 2 0 002-2V4a2 2 0 00-2-2H5zm8 0a2 2 0 00-2 2v12c0 1.1.9 2 2 2h2a2 2 0 002-2V4a2 2 0 00-2-2h-2z"></path></svg>`,
	4,
)

function PauseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cy = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3.7v12.8c0 .83.67 1.5 1.5 1.5h2c.83 0 1.5-.67 1.5-1.5V8.7l4 4v3.8c0 .83.67 1.5 1.5 1.5h2c.49 0 .92-.23 1.2-.6l.45.45a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7l.85.86zm9 6.18l5 5V3.5c0-.83-.67-1.5-1.5-1.5h-2c-.83 0-1.5.67-1.5 1.5v6.38zM4.16 2.04L8 5.88V3.5C8 2.67 7.33 2 6.5 2h-2c-.12 0-.23.01-.34.04z"></path></svg>`,
	4,
)

function PauseOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cy.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v6.1a5.48 5.48 0 00-5 0V3.5zm-9 0C3 2.67 3.67 2 4.5 2h2C7.33 2 8 2.67 8 3.5v13c0 .83-.67 1.5-1.5 1.5h-2A1.5 1.5 0 013 16.5v-13zm9.07 7.94a2 2 0 01-1.44 2.48l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function PauseSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 4A2.75 2.75 0 002 6.75V8h16V6.75A2.75 2.75 0 0015.25 4H4.75zM18 9H2v4.25A2.75 2.75 0 004.75 16h10.5A2.75 2.75 0 0018 13.25V9zm-4.5 4h2a.5.5 0 010 1h-2a.5.5 0 010-1z"></path></svg>`,
	4,
)

function PaymentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.92 2.87a2.97 2.97 0 014.2 4.21l-.66.67.33.34a2 2 0 010 2.82l-.94.94a.5.5 0 01-.7-.7l.94-.94a1 1 0 000-1.42l-.34-.33-7.98 7.98c-.34.34-.77.57-1.24.68l-3.92.87a.5.5 0 01-.6-.6l.88-3.95c.1-.45.33-.86.66-1.2l9.37-9.37z"></path></svg>`,
	4,
)

function PenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l5.4 5.4-4 4c-.33.33-.56.74-.66 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68l3.98-3.98 5.4 5.4a.5.5 0 00.7-.71l-15-15zm12.9 6.3l-2.59 2.6-4.2-4.21 3.96-3.97a2.97 2.97 0 014.2 4.21l-.66.67.33.34a2 2 0 010 2.82l-.94.94a.5.5 0 01-.7-.7l.94-.94a1 1 0 000-1.42l-.34-.33z"></path></svg>`,
	4,
)

function PenOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ct = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.18 2.93a2.97 2.97 0 00-4.26-.06l-9.37 9.38c-.33.33-.56.74-.66 1.2l-.88 3.94a.5.5 0 00.6.6l3.92-.87c.47-.1.9-.34 1.24-.68L8.2 16A5.5 5.5 0 0115 9.2l2.13-2.12a2.97 2.97 0 00.05-4.15zM9 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zm3.5 3.5c-.79 0-1.51-.26-2.1-.7l4.9-4.9a3.5 3.5 0 01-2.8 5.6z"></path></svg>`,
	4,
)

function PenProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ct.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.76 1.66a2.5 2.5 0 00-3.37-.01L2.82 6.7a2.5 2.5 0 00-.67 2.7l2.15 5.95A2.5 2.5 0 006.65 17h6.83a2.5 2.5 0 002.36-1.7l2.03-6.02a2.5 2.5 0 00-.68-2.64l-5.43-4.98z"></path></svg>`,
	4,
)

function PentagonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cr = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM17 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-8 8c0-1.7.78-3.23 2-4.24a2 2 0 00-1-.26H3.5a2 2 0 00-2 2s0 4 5.25 4c.95 0 1.73-.13 2.37-.35A5.52 5.52 0 019 14.5zm10 0a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function PeopleAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cr.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.21 5.22a2.23 2.23 0 10-4.45 0 2.23 2.23 0 004.45 0zM2.51 12h3V8.83c.03-.3.12-.57.26-.82H3.02l-.12.01a1 1 0 00-.88 1v2.48c0 .28.22.5.5.5zM18 11.5a.5.5 0 01-.5.5h-3.02V8.87c-.02-.31-.12-.6-.26-.86h2.78a1 1 0 011 .89v2.6zm-4.52-2.6a1 1 0 00-1-.89H7.5l-.11.01a1 1 0 00-.89 1V12h6.97V8.9zm1.5-5.28a1.91 1.91 0 110 3.82 1.91 1.91 0 010-3.82zM6.93 5.53a1.91 1.91 0 10-3.83 0 1.91 1.91 0 003.83 0zM2.5 13a.5.5 0 00-.5.5v1A2.5 2.5 0 004.5 17h11a2.5 2.5 0 002.5-2.5v-1a.5.5 0 00-.5-.5h-15z"></path></svg>`,
	4,
)

function PeopleAudienceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.75a3.25 3.25 0 11-6.5 0 3.25 3.25 0 016.5 0zM14.5 9a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm-11 1a2 2 0 00-2 2s0 4 5.25 4S12 12 12 12a2 2 0 00-2-2H3.5zm12.23.32l-.4.94-.03.1c-.12.4-.02.82.27 1.1l.88.83-.03.22a4.03 4.03 0 01-1.53 2.47l-1.05-.36-.1-.03a.95.95 0 00-.98.41l-.58.84-.05.1c-.22.4-.15.92.17 1.25l.38.39.1.09c.37.3.86.41 1.32.27 1.18-.37 2.26-1.46 3.25-3.28 1-1.82 1.34-3.36 1.05-4.63-.12-.53-.5-.95-1-1.11l-.5-.16-.1-.03a.96.96 0 00-1.07.6z"></path></svg>`,
	4,
)

function PeopleCallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$co = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM17 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-8 8c0-1.7.78-3.23 2-4.24a2 2 0 00-1-.26H3.5a2 2 0 00-2 2s0 4 5.25 4c.95 0 1.73-.13 2.37-.35A5.52 5.52 0 019 14.5zm10 0a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function PeopleCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$co.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.5a2.74 2.74 0 00-.39 5.47 5.52 5.52 0 013.14-2.69v-.03A2.74 2.74 0 0010 6.5zm8.68 4.42a5.49 5.49 0 00-4.94-1.87 3.73 3.73 0 00-.42-1.55h4.18c.83 0 1.5.67 1.5 1.5v.5c0 .48-.11.96-.32 1.42zM9.2 13a5.5 5.5 0 001.98 5.9c-.37.06-.77.1-1.19.1-3.14 0-5-2.03-5-4v-.5A1.5 1.5 0 016.5 13h2.7zm-4.9.28C2.21 12.71 1 11.08 1 9.5V9c0-.83.67-1.5 1.5-1.5h4.18a3.73 3.73 0 00.77 4.5H6.5a2.5 2.5 0 00-2.19 1.28zM6 1a2.75 2.75 0 110 5.5A2.75 2.75 0 016 1zm8 0a2.75 2.75 0 110 5.5A2.75 2.75 0 0114 1zm.5 18a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V14h1.5a.5.5 0 010 1H15v1.5a.5.5 0 01-1 0V15h-1.5a.5.5 0 010-1H14v-1.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function PeopleCommunityAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.88 7.5a2.74 2.74 0 114.24 3.49A2.74 2.74 0 017.88 7.5zm5.87 1.75c0-.63-.16-1.23-.43-1.75h4.18c.83 0 1.5.67 1.5 1.5v.5c0 1.59-1.2 3.21-3.31 3.78A2.5 2.5 0 0013.5 12h-.95a3.74 3.74 0 001.2-2.75zM13.5 13a1.5 1.5 0 011.5 1.5v.5c0 1.97-1.86 4-5 4-3.14 0-5-2.03-5-4v-.5A1.5 1.5 0 016.5 13h7zM1 9.5c0 1.59 1.2 3.21 3.31 3.78A2.5 2.5 0 016.5 12h.95a3.74 3.74 0 01-.77-4.5H2.5C1.67 7.5 1 8.17 1 9v.5zm7.75-5.75a2.75 2.75 0 10-5.5 0 2.75 2.75 0 005.5 0zm8 0a2.75 2.75 0 10-5.5 0 2.75 2.75 0 005.5 0z"></path></svg>`,
	4,
)

function PeopleCommunityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM10 10a2 2 0 012 1.94l-1.73 1.73c-.4.41-.7.92-.84 1.49l-.1.42c-.68.26-1.52.42-2.58.42-5.25 0-5.25-4-5.25-4 0-1.1.9-2 2-2H10zm7-3.5A2.49 2.49 0 0114.5 9 2.5 2.5 0 1117 6.5zm-1.2 3.05l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function PeopleEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ck = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM17 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-8 8c0-1.7.78-3.23 2-4.24a2 2 0 00-1-.26H3.5a2 2 0 00-2 2s0 4 5.25 4c.95 0 1.73-.13 2.37-.35A5.52 5.52 0 019 14.5zm10 0a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function PeopleErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ck.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 10a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zm5.69 5.14c.53.22 1.2.36 2.06.36 4 0 4-3 4-3 0-.83-.67-1.5-1.5-1.5h-4.63c.4.48.63 1.09.63 1.75v.36a2.94 2.94 0 01-.02.25 4.62 4.62 0 01-.54 1.78zM17 7.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM1.5 13c0-1.1.9-2 2-2H10a2 2 0 012 2s0 4-5.25 4-5.25-4-5.25-4zm11.5.1v.07-.06z"></path></svg>`,
	4,
)

function PeopleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ci = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 10a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zm3.75 2.5c0-.48.23-.91.58-1.18A2 2 0 0010 11H3.5a2 2 0 00-2 2s0 4 5.25 4c1.95 0 3.18-.55 3.95-1.25.05-.09.11-.17.18-.25a1.5 1.5 0 010-2 1.5 1.5 0 01-.38-1zm6.5-5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM12 12a.5.5 0 000 1h6a.5.5 0 000-1h-6zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6zm0 2a.5.5 0 000 1h6a.5.5 0 000-1h-6z"></path></svg>`,
	4,
)

function PeopleListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ci.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ch = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.75a3.25 3.25 0 11-6.5 0 3.25 3.25 0 016.5 0zm1 8.7c-.74.83-2.02 1.55-4.25 1.55-5.25 0-5.25-4-5.25-4 0-1.1.9-2 2-2H10a2 2 0 012 2l-.02.28A2 2 0 0011 14v.45zM14.5 9a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm-1 3v1H13a1 1 0 00-1 1v4a1 1 0 001 1h5a1 1 0 001-1v-4a1 1 0 00-1-1h-.5v-1a2 2 0 10-4 0zm1 1v-1a1 1 0 112 0v1h-2zm1 2.25a.75.75 0 110 1.5.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function PeopleLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ch.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM9 12.5c0-1.1.71-2.04 1.7-2.37A2 2 0 0010 10H3.5a2 2 0 00-2 2s0 4 5.25 4c.9 0 1.64-.12 2.26-.31L9 15.5v-3zm8-6a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-7 6c0-.83.67-1.5 1.5-1.5h6c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5v-3zm1 0v1c.83 0 1.5-.67 1.5-1.5h-1a.5.5 0 01-.5.5zm7 1v-1a.5.5 0 01-.5-.5h-1c0 .83.67 1.5 1.5 1.5zM16.5 16h1c0-.28.22-.5.5-.5v-1c-.83 0-1.5.67-1.5 1.5zM11 14.5v1c.28 0 .5.22.5.5h1c0-.83-.67-1.5-1.5-1.5zm3.5 1a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path></svg>`,
	4,
)

function PeopleMoneyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM17 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-8 8c0-1.7.78-3.23 2-4.24a2 2 0 00-1-.26H3.5a2 2 0 00-2 2s0 4 5.25 4c.95 0 1.73-.13 2.37-.35A5.52 5.52 0 019 14.5zm1 0a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zm3.5 3.5c-.79 0-1.51-.26-2.1-.7l4.9-4.9a3.5 3.5 0 01-2.8 5.6z"></path></svg>`,
	4,
)

function PeopleProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ce = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.17 5.25a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zM4.42 8a1 1 0 00-1 1v4.5a3.5 3.5 0 107 0V9a1 1 0 00-1-1h-5zm5.75-2.75c0 .65-.2 1.26-.52 1.76a2 2 0 011.08.48l.19.01A2.25 2.25 0 109.6 3.42c.36.52.57 1.15.57 1.83zm-.25 11.6a4.49 4.49 0 001.5-3.35V9a2 2 0 00-.27-1h2.27a1 1 0 011 1v4.5a3.5 3.5 0 01-4.5 3.35zm4.25-11.6c0 .65-.2 1.26-.52 1.76a2 2 0 011.08.48l.19.01a2.25 2.25 0 10-1.32-4.08c.36.52.57 1.15.57 1.83zm-.25 11.6a4.49 4.49 0 001.5-3.35V9a2 2 0 00-.27-1h2.27a1 1 0 011 1v4.5a3.5 3.5 0 01-4.5 3.35z"></path></svg>`,
	4,
)

function PeopleQueueIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ce.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm4.87 14.8a8.53 8.53 0 01-3.97 1.17 1.5 1.5 0 00-.34-.53l-2-2A4.48 4.48 0 008.24 11H15a2 2 0 012 2c0 1.7-.83 2.97-2.13 3.8zM4.5 17c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L7.3 15.6A3.5 3.5 0 104.5 17zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function PeopleSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM17 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-8 8c0-1.7.78-3.23 2-4.24a2 2 0 00-1-.26H3.5a2 2 0 00-2 2s0 4 5.25 4c.95 0 1.73-.13 2.37-.35A5.52 5.52 0 019 14.5zm3.06-3.06a2 2 0 01-1.43 2.48l-.46.12a4.73 4.73 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zm2.44 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function PeopleSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$cb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6.75a3.25 3.25 0 11-6.5 0 3.25 3.25 0 016.5 0zm1.35 4.78l-1.91 1.9a1.5 1.5 0 000 2.13l.65.65a6.3 6.3 0 01-3.34.79C1.5 17 1.5 13 1.5 13c0-1.1.9-2 2-2H10a2 2 0 011.35.53zM14.5 10a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm-1.65 2.85a.5.5 0 00-.7-.7l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L11.71 15h5.58l-1.14 1.15a.5.5 0 00.7.7l2-2a.5.5 0 000-.7l-2-2a.5.5 0 00-.7.7L17.29 14h-5.58l1.14-1.15z"></path></svg>`,
	4,
)

function PeopleSwapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$cb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ca = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 9a3.25 3.25 0 100-6.5 3.25 3.25 0 000 6.5zM17 6.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm-8 8c0-1.7.78-3.23 2-4.24a2 2 0 00-1-.26H3.5a2 2 0 00-2 2s0 4 5.25 4c.95 0 1.73-.13 2.37-.35A5.52 5.52 0 019 14.5zm1 0a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function PeopleSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ca.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 4.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm5 .5a2 2 0 11-4 0 2 2 0 014 0zm-13 2a2 2 0 100-4 2 2 0 000 4zM6 9.25C6 8.56 6.56 8 7.25 8h5.5c.61 0 1.12.44 1.23 1.02A5.5 5.5 0 0010.25 18L10 18a4 4 0 01-4-4V9.25zm8.99-.23c1.14.1 2.18.55 3.01 1.24V9.25C18 8.56 17.44 8 16.75 8h-2.13c.2.3.33.65.37 1.02zM5 9.25c0-.46.14-.9.38-1.25H3.25C2.56 8 2 8.56 2 9.25V13a3 3 0 003.4 2.97C5.14 15.37 5 14.7 5 14V9.25zm14 5.25a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function PeopleTeamAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 4.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm5 .5a2 2 0 11-4 0 2 2 0 014 0zm-13 2a2 2 0 100-4 2 2 0 000 4zM6 9.25C6 8.56 6.56 8 7.25 8h5.5c.61 0 1.12.44 1.23 1.02A5.5 5.5 0 0010.25 18L10 18a4 4 0 01-4-4V9.25zm8.99-.23c1.14.1 2.18.55 3.01 1.24V9.25C18 8.56 17.44 8 16.75 8h-2.13c.2.3.33.65.37 1.02zM5 9.25c0-.46.14-.9.38-1.25H3.25C2.56 8 2 8.56 2 9.25V13a3 3 0 003.4 2.97C5.14 15.37 5 14.7 5 14V9.25zm14 5.25a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-3.8 0l1.15-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15z"></path></svg>`,
	4,
)

function PeopleTeamDeleteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 4.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm5 .5a2 2 0 11-4 0 2 2 0 014 0zm-13 2a2 2 0 100-4 2 2 0 000 4zM6 9.25C6 8.56 6.56 8 7.25 8h5.5c.69 0 1.25.56 1.25 1.25V14a4 4 0 01-8 0V9.25zm-1 0c0-.46.14-.9.38-1.25H3.25C2.56 8 2 8.56 2 9.25V13a3 3 0 003.4 2.97C5.14 15.37 5 14.7 5 14V9.25zM15 14c0 .7-.14 1.37-.4 1.97A3 3 0 0018 13V9.25C18 8.56 17.44 8 16.75 8h-2.13c.24.36.38.79.38 1.25V14z"></path></svg>`,
	4,
)

function PeopleTeamIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 4.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm5 .5a2 2 0 11-4 0 2 2 0 014 0zm-13 2a2 2 0 100-4 2 2 0 000 4zM6 9.25C6 8.56 6.56 8 7.25 8h5.5c.6 0 1.1.43 1.22 1h-.47a2.5 2.5 0 00-2.46 2.04A2.5 2.5 0 009 13.5v4c0 .13.01.26.03.38A4 4 0 016 14V9.25zm11.96 1.8H18v-1.8C18 8.56 17.44 8 16.75 8h-2.13c.2.3.33.63.37 1h.51a2.5 2.5 0 012.46 2.04zM5 9.24c0-.46.14-.9.38-1.25H3.25C2.56 8 2 8.56 2 9.25V13a3 3 0 003.4 2.97C5.14 15.37 5 14.7 5 14V9.25zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 5V16h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0z"></path></svg>`,
	4,
)

function PeopleTeamToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.75a3.25 3.25 0 11-6.5 0 3.25 3.25 0 016.5 0zM14.5 9a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm-3.26 1.43c-.1.2-.16.4-.2.61A2.5 2.5 0 009 13.5v2.2c-.62.18-1.36.3-2.25.3-5.25 0-5.25-4-5.25-4 0-1.1.9-2 2-2H10a2 2 0 011.24.43zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 4.5h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function PeopleToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h7.59l-.07.25-.5 3A1.5 1.5 0 0013.48 16a1.5 1.5 0 00-1.44 1.83c-.65.11-1.34.17-2.04.17a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 013 13zm11-2a.5.5 0 00-.5.42l-.5 3a.5.5 0 00.57.58l.08-.02.21-.02a130.74 130.74 0 011.74-.2l.02-.01a1.63 1.63 0 010 3.25c-.3 0-.66-.08-1-.23a1.6 1.6 0 01-.7-.54.5.5 0 00-.84.54c.26.41.7.71 1.13.91.45.2.96.32 1.41.32a2.63 2.63 0 10-.48-5.2 59.76 59.76 0 00-1.04.12l.32-1.92h3.08a.5.5 0 000-1H14z"></path></svg>`,
	4,
)

function Person5Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h9.05A3.49 3.49 0 0013 13.5v3c0 .37.06.73.16 1.06-.96.3-2.03.44-3.16.44a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 013 13zm12 .5a1.5 1.5 0 012.63-1 .5.5 0 00.74-.65A2.5 2.5 0 0014 13.5v3a2.5 2.5 0 101-2v-1zm1.5 4.5a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"></path></svg>`,
	4,
)

function Person6Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18h.05a2.51 2.51 0 01-.05-.5v-4a2.5 2.5 0 012.04-2.46l.01-.04H4.01zm8 .5v.5h-.5c-.83 0-1.5.67-1.5 1.5v4c0 .83.67 1.5 1.5 1.5h6c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5H17v-.5c0-.83-.67-1.5-1.5-1.5h-2c-.83 0-1.5.67-1.5 1.5zm1.5-.5h2c.28 0 .5.22.5.5v.5h-3v-.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function PersonAccountsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm10.5 8a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V14h1.5a.5.5 0 010 1H15v1.5a.5.5 0 01-1 0V15h-1.5a.5.5 0 010-1H14v-1.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function PersonAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm15 3.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function PersonArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm15 3.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function PersonArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h6.26a5.48 5.48 0 00-.05 6.94c-.4.04-.8.06-1.21.06a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 012 13zm17 1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function PersonAvailableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v6a3 3 0 003 3h6a3 3 0 003-3V6a3 3 0 00-3-3H6zm4.75 3.25a1.75 1.75 0 11-3.5 0 1.75 1.75 0 013.5 0zm1.75 4c0 .59-.15 2.5-3.5 2.5-3.36 0-3.5-1.93-3.5-2.5a1 1 0 011-1h5a1 1 0 011 1zM5.76 16A3 3 0 008 17h4.5a4.5 4.5 0 004.5-4.5V8a3 3 0 00-1-2.24v6.74a3.5 3.5 0 01-3.5 3.5H5.76z"></path></svg>`,
	4,
)

function PersonBoardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.88 0 1.73-.09 2.52-.27-.06-.43.02-.88.23-1.27l.01-.02.08-.14.59-.86c.44-.66 1.23-1 2.02-.83l.02.01.16.04.53.18a3.2 3.2 0 00.7-1.2l-.48-.46a2.07 2.07 0 01-.57-2A2 2 0 0014 11H4zm11.83.26l.4-.94a.96.96 0 011.08-.59l.1.03.5.16c.49.16.87.58 1 1.11.28 1.27-.07 2.81-1.06 4.63-.99 1.82-2.07 2.9-3.25 3.28a1.4 1.4 0 01-1.32-.27l-.1-.1-.38-.38c-.32-.33-.4-.85-.17-1.26l.05-.09.58-.84a.95.95 0 01.98-.4l.1.02 1.05.35a4.03 4.03 0 001.53-2.46l.03-.22-.88-.83c-.29-.28-.4-.7-.27-1.1l.03-.1z"></path></svg>`,
	4,
)

function PersonCallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8a8.54 8.54 0 004 1.17l.36-1.2a5.48 5.48 0 01.77-5.77H5zm14 3.5a4.5 4.5 0 01-6.68 3.94l-1.8.54a.4.4 0 01-.5-.5l.54-1.8A4.5 4.5 0 1119 14.5zM12.5 13a.5.5 0 000 1h4a.5.5 0 000-1h-4zm-.5 2.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PersonChatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a2 2 0 114 0 2 2 0 01-4 0zm-.5 3h5c.83 0 1.5.67 1.5 1.5 0 1.12-.46 2.01-1.21 2.61-.74.6-1.74.89-2.79.89a4.43 4.43 0 01-2.79-.89A3.25 3.25 0 016 11.5c0-.83.67-1.5 1.5-1.5z"></path></svg>`,
	4,
)

function PersonCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h6.26a5.48 5.48 0 00-.05 6.94c-.4.04-.8.06-1.21.06a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 012 13zm17 1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1v-1.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function PersonClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h6.26a5.48 5.48 0 00-.05 6.94c-.4.04-.8.06-1.21.06a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 012 13zm17 1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function PersonDeleteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8a8.46 8.46 0 003.88 1.16c0-.1.02-.2.05-.3l.37-1.5a3.2 3.2 0 01.84-1.49L13.94 11H5.01zm5.98 4.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function PersonEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 12c.83 0 1.5.67 1.5 1.5v.5c0 1.97-1.86 4-5 4-3.14 0-5-2.03-5-4v-.5c0-.83.67-1.5 1.5-1.5h7zM7 5.5A2.75 2.75 0 117 11a2.75 2.75 0 010-5.5zM16 2a2 2 0 012 1.85V6a2 2 0 01-1.85 2H14.5l-1.2 1.6a1 1 0 01-1.78-.38l-.01-.1V9l-.01-1.07-.08-.01a2 2 0 01-1.4-1.6l-.01-.17L10 6V4a2 2 0 011.85-2H16z"></path></svg>`,
	4,
)

function PersonFeedbackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.95 0 1.88-.1 2.72-.31l-1.83-2a3.4 3.4 0 01.1-4.69H4zm10.5 1l-.63-.49a2.4 2.4 0 00-3.24 3.5l3.5 3.83c.2.22.54.22.74 0l3.5-3.83a2.4 2.4 0 00-3.24-3.5l-.63.5z"></path></svg>`,
	4,
)

function PersonHeartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 0010 18c1.85 0 3.58-.39 4.87-1.2A4.35 4.35 0 0017 13a2 2 0 00-2-2H5z"></path></svg>`,
	4,
)

function PersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm9.88 1.5a.62.62 0 111.24 0 .62.62 0 01-1.24 0zm1.12 4a.5.5 0 01-1 0v-2a.5.5 0 011 0v2zm-5-2a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm1 0a3.5 3.5 0 107 0 3.5 3.5 0 00-7 0z"></path></svg>`,
	4,
)

function PersonInfoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A8.46 8.46 0 009 17.96V17c0-.41.16-.78.44-1.06l2.58-2.58a3.72 3.72 0 01.51-2.36H5.01zm5.15 7.85c.1.1.21.15.35.15h2c.11 0 .2-.03.27-.07.07-.04.12-.1.15-.17a.86.86 0 00.06-.24l.02-.25V18l.56-.02a.47.47 0 00.3-.12c.07-.07.11-.17.12-.3L14 17h.5c.1 0 .2-.02.27-.07a.5.5 0 00.15-.17.65.65 0 00.07-.24 2.34 2.34 0 00.01-.5v-.2c.17.07.35.11.52.14a2.87 2.87 0 002.62-.86A3.11 3.11 0 0019 13a2.94 2.94 0 00-.88-2.13 3 3 0 00-5.03 2.84l-2.94 2.94c-.1.1-.15.21-.15.35v1.5c0 .14.05.25.15.35zm7.13-7.13c.15.14.22.32.22.53 0 .2-.07.39-.22.53a.72.72 0 01-.53.22.72.72 0 01-.53-.22.72.72 0 01-.22-.53c0-.2.07-.39.22-.53a.72.72 0 01.53-.22c.2 0 .39.07.53.22z"></path></svg>`,
	4,
)

function PersonKeyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h6.54a3.98 3.98 0 00.85 5.03l.33 1.66c-.85.2-1.77.31-2.72.31a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 013 13zm15 0a3 3 0 01-1.3 2.47l-.1.53h-3.2l-.1-.53A3 3 0 1118 13zm-4.4 4l.24 1.2c.1.46.5.8.98.8h.36a1 1 0 00.98-.8l.24-1.2h-2.8z"></path></svg>`,
	4,
)

function PersonLightbulbIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h8.67a3 3 0 00-.17 1v.06A2 2 0 0011 14v3.84c-.64.1-1.31.16-2 .16a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 012 13zm11.5 0v-1a2 2 0 114 0v1h.5a1 1 0 011 1v4a1 1 0 01-1 1h-5a1 1 0 01-1-1v-4a1 1 0 011-1h.5zm1-1v1h2v-1a1 1 0 10-2 0zm1.75 4a.75.75 0 10-1.5 0 .75.75 0 001.5 0z"></path></svg>`,
	4,
)

function PersonLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18v-5c0-1.1.9-2 2-2H4zm10.51 4.93l-4.5-2.63c.1-.73.73-1.3 1.49-1.3h6c.83 0 1.5.67 1.5 1.5l-4.49 2.43zm.23 1.01l4.26-2.3v2.86c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5v-3.05l4.25 2.48c.15.09.33.1.49.01z"></path></svg>`,
	4,
)

function PersonMailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A8.46 8.46 0 009 17.96V14c0-1.1.9-2 2-2h5.73A2 2 0 0015 11H5zm14 3.5v3c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5v-3c0-.83.67-1.5 1.5-1.5h6c.83 0 1.5.67 1.5 1.5zm-1 3v-1c-.83 0-1.5.67-1.5 1.5h1c0-.28.22-.5.5-.5zm0-3a.5.5 0 01-.5-.5h-1c0 .83.67 1.5 1.5 1.5v-1zm-6.5-.5a.5.5 0 01-.5.5v1c.83 0 1.5-.67 1.5-1.5h-1zm-.5 3.5c.28 0 .5.22.5.5h1c0-.83-.67-1.5-1.5-1.5v1zm3.5-3a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"></path></svg>`,
	4,
)

function PersonMoneyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8 1.1.69 2.5 1.07 4.03 1.17A3 3 0 019 17v-4c0-.77.29-1.47.76-2H5.01zm5 2c0-1.1.9-2 2-2h5a2 2 0 012 2v4a2 2 0 01-2 2h-5a2 2 0 01-2-2v-4zm6.5 3h-4a.5.5 0 100 1h4a.5.5 0 100-1zm-4-3a.5.5 0 100 1h4a.5.5 0 100-1h-4z"></path></svg>`,
	4,
)

function PersonNoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm2.88 9l-2.94 2.94a3.62 3.62 0 00-.75 4.03 8.59 8.59 0 01-4.06-1.17A4.35 4.35 0 013 13a2 2 0 012-2h7.88zm5.47-.35a2.62 2.62 0 00-3.7 0l-4 4a2.62 2.62 0 003.7 3.7l4-4a2.62 2.62 0 000-3.7zm-3 .7a1.62 1.62 0 112.3 2.3L16 15.29 13.7 13l1.65-1.65zm-1.5 4.3c.2.2.2.5 0 .7l-1 1a.5.5 0 01-.7-.7l1-1c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function PersonPillIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm6 3.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm2.4 2.8l4.9-4.9a3.5 3.5 0 01-4.9 4.9zm-.7-.7a3.5 3.5 0 014.9-4.9l-4.9 4.9z"></path></svg>`,
	4,
)

function PersonProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm.62-2a.62.62 0 11-1.24 0 .62.62 0 011.24 0zm1.23-3.55c0 .59-.21.91-.72 1.32l-.28.22c-.25.19-.33.3-.35.44v.16a.5.5 0 01-1-.09c0-.57.21-.88.72-1.29l.27-.21c.3-.23.36-.35.36-.55 0-.55-.38-.95-.85-.95-.5 0-.86.37-.85.95a.5.5 0 11-1 0c-.01-1.13.8-1.95 1.85-1.95 1.03 0 1.85.85 1.85 1.95zM9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4z"></path></svg>`,
	4,
)

function PersonQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 4.5a2 2 0 112.61 1.9l1.6 1.6h1.79a1.5 1.5 0 010 3h-3.22c-.63 0-1.24-.25-1.68-.7l-.1-.1-1.04 1.05 1.4 1.4c.09.09.14.22.14.35v3.5a1.5 1.5 0 01-3 0v-1.8l-1.55-1.54-1 .75c-.5.38-1.13.59-1.76.59H2.5a1.5 1.5 0 010-3h4.25c1.24 0 2.25-1 2.25-2.25V8h1a.5.5 0 000-1H8.5a.5.5 0 00-.5.5v1.75a1.25 1.25 0 11-2.5 0V7A2.5 2.5 0 018 4.5h3.5z"></path></svg>`,
	4,
)

function PersonRunningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm6.64 2.92a2 2 0 001.43-2.48l-.16-.55c.25-.2.53-.37.82-.5l.34.36a2 2 0 002.9 0l.33-.35c.3.14.58.32.84.52l-.13.42a2 2 0 001.46 2.52l.35.09a4.7 4.7 0 010 1.01l-.45.12a2 2 0 00-1.43 2.48l.15.55c-.25.2-.53.37-.82.5l-.34-.36a2 2 0 00-2.9 0l-.33.35c-.3-.14-.58-.32-.84-.52l.13-.42a2 2 0 00-1.46-2.52l-.35-.09a4.71 4.71 0 010-1.01l.46-.12zm4.86.58a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function PersonSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm15 3.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.02-2.64a.5.5 0 00-.96 0l-.47 1.53H12c-.48 0-.69.65-.3.95l1.26.94-.48 1.53c-.15.49.38.89.77.59l1.25-.95 1.25.95c.4.3.92-.1.77-.59l-.48-1.53 1.25-.94c.4-.3.2-.95-.3-.95h-1.54l-.47-1.53z"></path></svg>`,
	4,
)

function PersonStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8a9.14 9.14 0 005.13 1.2 5.48 5.48 0 010-7H5zm14 3.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-7 0c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PersonSubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.53 4a4 4 0 11-.14 3.72A1.5 1.5 0 015.5 8H5v.26c0 .19.07.36.2.5A.75.75 0 115.67 10 1.74 1.74 0 014 8.26V4.5c0-.28.23-.5.5-.5h2.03zM5 7h.5a.5.5 0 00.5-.5v-.37a4.08 4.08 0 010-.26V5H5v2zm-2 6a2 2 0 012-2h10a2 2 0 012 2c0 1.7-.83 2.97-2.13 3.8A9.14 9.14 0 0110 18a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 013 13z"></path></svg>`,
	4,
)

function PersonSupportIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.29 0 .57 0 .85-.03l-1.41-1.4a1.5 1.5 0 010-2.13l2-2A1.5 1.5 0 0112.9 14h1.18a1.5 1.5 0 011.65-1.98A2 2 0 0014 11H4zm7.85 6.85a.5.5 0 01-.7 0l-2-2a.5.5 0 010-.7l2-2a.5.5 0 01.7.7L10.71 15h5.58l-1.14-1.15a.5.5 0 01.7-.7l2 2c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7-.7L16.29 16h-5.58l1.14 1.15c.2.2.2.5 0 .7z"></path></svg>`,
	4,
)

function PersonSwapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bz = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a4 4 0 100 8 4 4 0 000-8zm-5 9a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06a5.48 5.48 0 01.05-6.94H4zm6 3.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function PersonSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bz.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$by = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6a4 4 0 116.65 3h-.14c-.8 0-1.52.38-1.98.96A4 4 0 015 6zm4.05 5H4.01A2 2 0 002 13c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.8 0 1.58-.07 2.31-.22l-1.6-1.63A2.52 2.52 0 019 14.4v-2.87c0-.18.02-.35.05-.52zm.95 3.4c0 .39.15.77.43 1.05l3.04 3.1c.58.59 1.52.6 2.12.03l2.95-2.84c.6-.58.62-1.55.02-2.15l-3.1-3.14a1.5 1.5 0 00-1.08-.45h-2.87c-.83 0-1.51.68-1.51 1.51v2.88zm2.75-.9a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function PersonTagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$by.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bx = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.85 1.15a.5.5 0 00-.7.7 6.6 6.6 0 011.72 4.65 6.6 6.6 0 01-1.72 4.65.5.5 0 00.7.7 7.6 7.6 0 002.03-5.35 7.6 7.6 0 00-2.03-5.35zm-2 2a.5.5 0 00-.7.7c.63.64.97 1.62.97 2.65 0 1.03-.34 2.01-.97 2.65a.5.5 0 00.7.7 4.76 4.76 0 001.28-3.35c0-1.22-.41-2.49-1.28-3.35zM4 7a4 4 0 118 0 4 4 0 01-8 0zm-3 7a2 2 0 012-2h10a2 2 0 012 2c0 1.7-.83 2.97-2.13 3.8A9.14 9.14 0 018 19a9.14 9.14 0 01-4.87-1.2A4.35 4.35 0 011 14z"></path></svg>`,
	4,
)

function PersonVoiceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bx.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h4.76a5.47 5.47 0 01-1.24-3H7.5a.5.5 0 010-1h1.52A5.5 5.5 0 0114 9.02V3.5c0-.83-.67-1.5-1.5-1.5h-7zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function PhoneAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bv = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.5C4 2.67 4.67 2 5.5 2h7c.83 0 1.5.67 1.5 1.5v5.52A5.5 5.5 0 009.02 14H7.5a.5.5 0 000 1h1.52c.1 1.13.55 2.17 1.24 3H5.5A1.5 1.5 0 014 16.5v-13zM14.5 10a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function PhoneArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bv.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bu = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L12.5 6.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7zM6.5 2h2.76A5.5 5.5 0 0015 10.8v5.7c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 015 16.5v-13C5 2.67 5.67 2 6.5 2zM8 14.5c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PhoneCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bu.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bt = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5c1.33 0 2.55-.47 3.5-1.26V11a2 2 0 01-2 2h-3v2h1.5a.5.5 0 010 1H9v-1h3v-2H9V9.5A2.5 2.5 0 006.5 7H4V4c0-1.1.9-2 2-2h4.26a5.5 5.5 0 004.24 9zm-11-3C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-7C8 8.67 7.33 8 6.5 8h-3zm.5 7.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function PhoneDesktopAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bt.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bs = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v3h2.5A2.5 2.5 0 019 9.5V13h3v2H9v1h5.5a.5.5 0 000-1H13v-2h3a2 2 0 002-2V4a2 2 0 00-2-2H6zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-7C8 8.67 7.33 8 6.5 8h-3zm.5 7.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function PhoneDesktopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bs.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$br = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h4.76a5.47 5.47 0 01-1.24-3H7.5a.5.5 0 010-1h1.52A5.5 5.5 0 0114 9.02V3.5c0-.83-.67-1.5-1.5-1.5h-7zm9 17a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm1.85-6.35c.2.2.2.5 0 .7l-1.14 1.15 1.14 1.15a.5.5 0 01-.7.7l-1.15-1.14-1.15 1.14a.5.5 0 01-.7-.7l1.14-1.15-1.14-1.15a.5.5 0 01.7-.7l1.15 1.14 1.15-1.14c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function PhoneDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$br.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.58 1.44a1.5 1.5 0 012.12 0l1.86 1.86a1.5 1.5 0 010 2.12l-5.14 5.14a1.5 1.5 0 01-2.12 0L9.44 8.7a1.5 1.5 0 010-2.12l5.14-5.14zm-4.43 5.84a.5.5 0 000 .71L12 9.85c.2.2.51.2.7 0l1.3-1.29L11.44 6l-1.3 1.3zM12.6 2H5.5C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-5.11a2.5 2.5 0 01-3.4-.12L8.72 9.4a2.5 2.5 0 010-3.54L12.6 2zm-2.1 12.5a.5.5 0 01-.5.5H8a.5.5 0 010-1h2c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function PhoneEraserIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bp = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2C5.67 2 5 2.67 5 3.5v13c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-13c0-.83-.67-1.5-1.5-1.5h-7zM9 14h2a.5.5 0 010 1H9a.5.5 0 010-1z"></path></svg>`,
	4,
)

function PhoneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bp.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bo = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2C5.67 2 5 2.67 5 3.5v13c0 .83.67 1.5 1.5 1.5H9v-1c0-.41.16-.78.44-1.06l.94-.94H9a.5.5 0 010-1h2c.1 0 .2.03.29.1l.73-.74a3.72 3.72 0 01.31-1.98A4.1 4.1 0 0115 9.13V3.5c0-.83-.67-1.5-1.5-1.5h-7zm4 17a.48.48 0 01-.35-.15.48.48 0 01-.15-.35V17c0-.14.05-.25.15-.35l2.94-2.94a3.74 3.74 0 01-.09-.77c0-.4.08-.79.24-1.14a3.1 3.1 0 011.61-1.57 2.94 2.94 0 013.27.64A3 3 0 0115 15.84V16.52a.65.65 0 01-.08.24.5.5 0 01-.15.17.46.46 0 01-.27.07H14c0 .24 0 .43-.02.56a.46.46 0 01-.11.3.47.47 0 01-.3.12L13 18v.27c0 .08 0 .17-.02.25a.86.86 0 01-.06.24.37.37 0 01-.15.17.57.57 0 01-.27.07h-2zm7-6.75c0-.2-.07-.39-.22-.53a.72.72 0 00-.53-.22c-.2 0-.39.07-.53.22a.72.72 0 00-.22.53c0 .2.07.39.22.53.14.15.32.22.53.22.2 0 .39-.07.53-.22a.72.72 0 00.22-.53z"></path></svg>`,
	4,
)

function PhoneKeyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bo.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bn = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4.5C3 3.67 3.67 3 4.5 3h11c.83 0 1.5.67 1.5 1.5v7c0 .83-.67 1.5-1.5 1.5H10V8a2 2 0 00-2-2H3V4.5zM10 15h7.5a.5.5 0 000-1H10v1zM2 8.5C2 7.67 2.67 7 3.5 7h4C8.33 7 9 7.67 9 8.5v8c0 .83-.67 1.5-1.5 1.5h-4A1.5 1.5 0 012 16.5v-8zM5 15a.5.5 0 000 1h1a.5.5 0 000-1H5z"></path></svg>`,
	4,
)

function PhoneLaptopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bn.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bm = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5C5 2.67 5.67 2 6.5 2h7c.83 0 1.5.67 1.5 1.5v5.52A5.5 5.5 0 0010.26 18H6.5A1.5 1.5 0 015 16.5v-13zm7.07 7.94a2 2 0 01-1.44 2.48l-.46.12a4.73 4.73 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function PhoneLinkSetupIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bm.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bl = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5C5 2.67 5.67 2 6.5 2h7c.83 0 1.5.67 1.5 1.5v5.54A3 3 0 0011.5 12v.06A2 2 0 0010 14H8.5a.5.5 0 000 1H10v3H6.5A1.5 1.5 0 015 16.5v-13zm7.5 8.5v1H12a1 1 0 00-1 1v4a1 1 0 001 1h5a1 1 0 001-1v-4a1 1 0 00-1-1h-.5v-1a2 2 0 10-4 0zm1 1v-1a1 1 0 112 0v1h-2zm1 2.25a.75.75 0 110 1.5.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function PhoneLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bl.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bk = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4c0-1.1.9-2 2-2h6a2 2 0 012 2v1H5V4zm0 2v10c0 1.1.9 2 2 2h6a2 2 0 002-2V6H5z"></path></svg>`,
	4,
)

function PhonePageHeaderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bk.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4c0-1.1.9-2 2-2h6a2 2 0 012 2v12a2 2 0 01-2 2H7a2 2 0 01-2-2V4zm3 11a.5.5 0 100-1 .5.5 0 000 1zm2 0a.5.5 0 100-1 .5.5 0 000 1zm2.5-.5a.5.5 0 10-1 0 .5.5 0 001 0z"></path></svg>`,
	4,
)

function PhonePaginationIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bi = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h4.76a5.47 5.47 0 01-1.24-3H7.5a.5.5 0 010-1h1.52A5.5 5.5 0 0114 9.02V3.5c0-.83-.67-1.5-1.5-1.5h-7zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1v-1.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function PhoneScreenTimeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bi.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bh = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.37 2.93a.5.5 0 11.5-.86 4.25 4.25 0 011.63 5.66.5.5 0 01-.88-.47 3.25 3.25 0 00-1.25-4.33zm-1 1.74a.5.5 0 11.5-.87c1.02.59 1.4 1.86.91 2.9a.5.5 0 01-.9-.42c.27-.58.06-1.29-.5-1.61zm-9.74 12.4a.5.5 0 11-.5.86 4.25 4.25 0 01-1.63-5.66.5.5 0 11.88.46 3.25 3.25 0 001.25 4.33zm1-1.74a.5.5 0 11-.5.87 2.25 2.25 0 01-.92-2.9.5.5 0 01.9.42c-.26.58-.05 1.28.52 1.61zm4.54-12.26a1.95 1.95 0 012.4 1.4l2.37 8.97a2.04 2.04 0 01-1.42 2.48l-3.69 1a1.95 1.95 0 01-2.4-1.4L5.08 6.57a2.04 2.04 0 011.42-2.49l3.68-1zm-.49 11.3c.07.27.34.43.6.36l1.79-.48a.51.51 0 00.36-.62.49.49 0 00-.6-.36l-1.78.49a.51.51 0 00-.37.62z"></path></svg>`,
	4,
)

function PhoneShakeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bh.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bg = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2a2 2 0 00-2 2v3.09a1.5 1.5 0 011.56.35l2 2a1.5 1.5 0 010 2.12l-2 2a1.5 1.5 0 01-1.56.35V16c0 1.1.9 2 2 2h6a2 2 0 002-2v-2.09a1.5 1.5 0 01-1.56-.35l-2-2a1.5 1.5 0 010-2.12l2-2A1.5 1.5 0 0115 7.09V4a2 2 0 00-2-2H7zm7.85 6.15c.2.2.2.5 0 .7L13.71 10h2.79a.5.5 0 010 1h-2.8l1.15 1.15a.5.5 0 01-.7.7l-2-2a.5.5 0 010-.7l2-2c.2-.2.5-.2.7 0zm-9.7.7a.5.5 0 11.7-.7l2 2c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7-.7L6.29 11H3.5a.5.5 0 010-1h2.8L5.14 8.85z"></path></svg>`,
	4,
)

function PhoneSpanInIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bg.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bf = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2a2 2 0 00-2 2v3.09A1.5 1.5 0 016.91 9h.59a1.5 1.5 0 110 3h-.59A1.5 1.5 0 015 13.91V16c0 1.1.9 2 2 2h6a2 2 0 002-2v-2.09A1.5 1.5 0 0113.09 12h-.59a1.5 1.5 0 010-3h.59A1.5 1.5 0 0115 7.09V4a2 2 0 00-2-2H7zm7.85 6.15a.5.5 0 00-.7.7L15.29 10H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2zM4.71 10l1.14-1.15h.01a.5.5 0 00-.71-.7l-2 2a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L4.71 11H7.5a.5.5 0 00.5-.5.5.5 0 00-.5-.5H4.7z"></path></svg>`,
	4,
)

function PhoneSpanOutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bf.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$be = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2C4.67 2 4 2.67 4 3.5v13c0 .83.67 1.5 1.5 1.5h4.99A1.5 1.5 0 019 16.5V15H8a.5.5 0 010-1h1.09c.2-.58.76-1 1.41-1h.38l1.56-1.56a1.5 1.5 0 011.56-.35V3.5c0-.83-.67-1.5-1.5-1.5h-7zm8.2 10.04c.18.08.3.26.3.46v6a.5.5 0 01-.85.35L11.29 17h-.79a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5h.8l1.85-1.85a.5.5 0 01.54-.11zm3.95.16c.12.16.29.45.44.87.26.68.41 1.5.41 2.43 0 .94-.15 1.75-.4 2.43-.16.42-.33.7-.45.87a.5.5 0 01-.85-.52l.12-.19a5.9 5.9 0 00.58-2.6 5.9 5.9 0 00-.58-2.58l-.07-.11a.5.5 0 01.8-.6zm-1.43 1.77c-.1-.3-.2-.55-.27-.7a.5.5 0 10-.9.45 4.6 4.6 0 01.45 1.78 3.94 3.94 0 01-.37 1.6l-.08.18a.5.5 0 10.9.44 5.5 5.5 0 00.55-2.22c0-.5-.1-1.02-.28-1.53z"></path></svg>`,
	4,
)

function PhoneSpeakerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$be.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bd = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4c0-1.1.9-2 2-2h6a2 2 0 012 2v12a2 2 0 01-2 2H7a2 2 0 01-2-2V4zm2.5 0a.5.5 0 000 1h5a.5.5 0 000-1h-5z"></path></svg>`,
	4,
)

function PhoneStatusBarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bd.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bc = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4.8C4 3.8 4.84 3 5.84 3h10.32c1 0 1.84.8 1.84 1.8v7.4c0 1-.84 1.8-1.84 1.8H10v-2h2.5a.5.5 0 000-1H10V8a2 2 0 00-2-2H4V4.8zM3.5 7C2.67 7 2 7.67 2 8.5v8c0 .83.67 1.5 1.5 1.5h4c.83 0 1.5-.67 1.5-1.5v-8C9 7.67 8.33 7 7.5 7h-4zm1 8.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1H5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function PhoneTabletIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bc.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$bb = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 16c0 1.1.9 2 2 2h3.26a5.48 5.48 0 01-.76-5.8v-5L8.35 8.36a.5.5 0 11-.7-.7l2-2c.2-.2.5-.2.7 0l2 2a.5.5 0 01-.7.7L10.5 7.21v3.52a5.48 5.48 0 014.5-1.7V4a2 2 0 00-2-2H7a2 2 0 00-2 2v12zm14-1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function PhoneUpdateCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$bb.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ba = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5C5 2.67 5.67 2 6.5 2h7c.83 0 1.5.67 1.5 1.5v13c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 015 16.5v-13zm5.5 3a.5.5 0 00-1 0v5.8l-1.15-1.15a.5.5 0 00-.7.7l2 2c.2.2.5.2.7 0l2-2a.5.5 0 00-.7-.7l-1.15 1.14V6.5z"></path></svg>`,
	4,
)

function PhoneUpdateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ba.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5C5 2.67 5.67 2 6.5 2h7c.83 0 1.5.67 1.5 1.5v13c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 015 16.5v-13zm7.35 5.35a.5.5 0 000-.7l-2-2a.5.5 0 00-.7 0l-2 2a.5.5 0 10.7.7L10 7.21l1.65 1.64c.2.2.5.2.7 0zm-4.7 2.3a.5.5 0 000 .7l2 2c.2.2.5.2.7 0l2-2a.5.5 0 00-.7-.7L10 12.79l-1.65-1.64a.5.5 0 00-.7 0z"></path></svg>`,
	4,
)

function PhoneVerticalScrollIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4c0-1.1.9-2 2-2h6a2 2 0 012 2v12a2 2 0 01-2 2H7a2 2 0 01-2-2V4zm3.5 10.5a.5.5 0 000 1h3a.5.5 0 000-1h-3zM2.92 7.22a.5.5 0 00-.84.56l.38.57c.29.42.32.97.1 1.43-.4.78-.34 1.7.14 2.43l.38.57a.5.5 0 10.84-.56l-.38-.57a1.43 1.43 0 01-.1-1.43c.4-.78.34-1.7-.14-2.43l-.38-.57zm13.3-.14a.5.5 0 01.7.14l.38.57c.48.73.54 1.65.15 2.43-.23.46-.2 1 .09 1.43l.38.57a.5.5 0 11-.84.56l-.38-.57a2.43 2.43 0 01-.15-2.43c.23-.46.2-1-.09-1.43l-.38-.57a.5.5 0 01.14-.7z"></path></svg>`,
	4,
)

function PhoneVibrateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.26 13.74a6 6 0 117.48-7.48 6 6 0 11-7.48 7.48zM3.5 8A4.5 4.5 0 006 12.03V12a6 6 0 016.03-6A4.5 4.5 0 003.5 8zm4.47 6A4.5 4.5 0 1014 7.97V8a6 6 0 01-6 6h-.03z"></path></svg>`,
	4,
)

function PhotoFilterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 3A2.75 2.75 0 002 5.75v6.5A2.75 2.75 0 004.75 15H9v-2.5a2.5 2.5 0 012.5-2.5h6c.17 0 .34.02.5.05v-4.3A2.75 2.75 0 0015.25 3H4.75zm.6 2.65L8 8.29V6.5a.5.5 0 011 0v3a.5.5 0 01-.5.5h-3a.5.5 0 010-1h1.8L4.64 6.35a.5.5 0 11.7-.7zM18 11.09a1.5 1.5 0 00-.5-.09h-6c-.83 0-1.5.67-1.5 1.5v4c0 .83.67 1.5 1.5 1.5h6c.83 0 1.5-.67 1.5-1.5v-4c0-.65-.42-1.2-1-1.41z"></path></svg>`,
	4,
)

function PictureInPictureEnterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 9c.83 0 1.5-.67 1.5-1.5v-4C10 2.67 9.33 2 8.5 2h-6C1.67 2 1 2.67 1 3.5v4A1.5 1.5 0 002.5 9h6zm0 1h-6c-.17 0-.34-.02-.5-.05v4.3A2.75 2.75 0 004.75 17h10.5A2.75 2.75 0 0018 14.25v-6.5A2.75 2.75 0 0015.25 5H11v2.5A2.5 2.5 0 018.5 10zm3.85.65L15 13.29V11.5a.5.5 0 011 0v3a.5.5 0 01-.5.5h-3a.5.5 0 010-1h1.8l-2.65-2.65a.5.5 0 01.7-.7z"></path></svg>`,
	4,
)

function PictureInPictureExitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 3A2.75 2.75 0 002 5.75v6.5A2.75 2.75 0 004.75 15H9v-2.5a2.5 2.5 0 012.5-2.5h6c.17 0 .34.02.5.05v-4.3A2.75 2.75 0 0015.25 3H4.75zM18 11.09a1.5 1.5 0 00-.5-.09h-6c-.83 0-1.5.67-1.5 1.5v4c0 .83.67 1.5 1.5 1.5h6c.83 0 1.5-.67 1.5-1.5v-4c0-.65-.42-1.2-1-1.41z"></path></svg>`,
	4,
)

function PictureInPictureIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.4 4.78c-.17.32-.18.76-.12 1.07a.75.75 0 11-1.47.3c-.1-.52-.11-1.34.26-2.06.41-.79 1.22-1.34 2.47-1.34H16.5a.75.75 0 010 1.5h-2.25v9.42c0 1.5.45 1.89.7 2 .32.15.8.08 1.21-.13a.75.75 0 01.68 1.34c-.6.3-1.6.58-2.53.15-1.01-.47-1.56-1.61-1.56-3.36V4.25H8.24a90.75 90.75 0 01-.6 6.32 44.66 44.66 0 01-.61 3.55 12.38 12.38 0 01-.86 2.72.75.75 0 11-1.34-.68c.26-.5.5-1.33.73-2.36.23-1.03.42-2.21.58-3.42.31-2.28.5-4.62.6-6.13h-2.2c-.74 0-1.01.28-1.14.53z"></path></svg>`,
	4,
)

function PiIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.15 3.15a4.04 4.04 0 115.7 5.7l-8 8a4.04 4.04 0 11-5.7-5.7l8-8zm5 .7a3.04 3.04 0 00-4.3 0L8.21 7.5l4.29 4.3 3.65-3.65a3.04 3.04 0 000-4.3zm-7.3 10.3a.5.5 0 00-.7 0l-1.5 1.5a.91.91 0 01-1.3 0 .5.5 0 00-.85.35c0 .14.06.27.15.36.75.74 1.96.74 2.7 0l1.5-1.5a.5.5 0 000-.71z"></path></svg>`,
	4,
)

function PillIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.33 2.62a2 2 0 00-3.2.52L8.38 6.6a1.5 1.5 0 01-.78.72L4 8.75a1 1 0 00-.33 1.64l2.61 2.6L3 16.3v.7h.7L7 13.72l2.61 2.6a1 1 0 001.64-.33l1.43-3.59c.14-.34.4-.62.72-.78l3.46-1.73a2 2 0 00.52-3.2l-4.05-4.06z"></path></svg>`,
	4,
)

function PinIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L6.9 7.6 4.02 8.75a1 1 0 00-.34 1.64L6.3 13 3 16.3v.7h.7L7 13.7l2.61 2.62a1 1 0 001.64-.34l1.15-2.88 4.75 4.75a.5.5 0 00.7-.7l-15-15zm14.01 7.73l-3.24 1.62L8.5 6.38l1.62-3.24a2 2 0 013.2-.52l4.06 4.05a2 2 0 01-.52 3.2z"></path></svg>`,
	4,
)

function PinOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5a1.5 1.5 0 013 0v9a1.5 1.5 0 01-3 0v-9zm12 3.52A5.5 5.5 0 009.02 14H6V6h8v3.02zm1-3.52v3.52c1.13.1 2.17.55 3 1.24V5.5a1.5 1.5 0 00-3 0zm4 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function PipelineAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 21 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1 5.5a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zm6.4.9l-.9.9V5.74A2.75 2.75 0 003.75 3H3.5a.5.5 0 100 1h.25c.97 0 1.75.78 1.75 1.75v1.54l-.9-.9a.5.5 0 00-.7.71l1.75 1.76a.5.5 0 00.7 0L8.12 7.1a.5.5 0 10-.7-.7zM2 9.74a5.48 5.48 0 003 1.24v3.52a1.5 1.5 0 01-3 0V9.74zM10.98 6A5.5 5.5 0 016 10.98V14h8V6h-3.02zm5.52-2c-.83 0-1.5.67-1.5 1.5v9a1.5 1.5 0 003 0v-9c0-.83-.67-1.5-1.5-1.5z"></path></svg>`,
	4,
)

function PipelineArrowCurveDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aZ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5a1.5 1.5 0 013 0v9a1.5 1.5 0 01-3 0v-9zm13 0v9a1.5 1.5 0 003 0v-9a1.5 1.5 0 00-3 0zM14 14V6H6v8h8z"></path></svg>`,
	4,
)

function PipelineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aZ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aY = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5a1.5 1.5 0 013 0v9a1.5 1.5 0 01-3 0v-9zm12 3.52A5.5 5.5 0 009.02 14H6V6h8v3.02zm1-3.52v3.52c1.13.1 2.17.55 3 1.24V5.5a1.5 1.5 0 00-3 0zm4 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.29-.44l-2.97-1.65a.5.5 0 00-.74.44v3.3c0 .38.41.62.74.44l2.97-1.65a.5.5 0 000-.88z"></path></svg>`,
	4,
)

function PipelinePlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aY.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aX = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5v9A2.5 2.5 0 005.5 17h4.59a1.5 1.5 0 01.35-1.56l1-1a1.5 1.5 0 012.47.56h.59a.5.5 0 00.5-.5v-.59a1.5 1.5 0 01-.56-2.47l1-1a1.5 1.5 0 011.56-.35V5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5zM6 5h1a1 1 0 011 1v1a1 1 0 01-1 1H6a1 1 0 01-1-1V6a1 1 0 011-1zm3 1a1 1 0 011-1h4a1 1 0 011 1v1a1 1 0 01-1 1h-4a1 1 0 01-1-1V6zM7 9a1 1 0 011 1v4a1 1 0 01-1 1H6a1 1 0 01-1-1v-4a1 1 0 011-1h1zm9.85 2.15a.5.5 0 00-.7 0l-1 1a.5.5 0 00.7.7l.15-.14v1.79c0 .83-.67 1.5-1.5 1.5h-1.8l.15-.15a.5.5 0 00-.7-.7l-1 1a.5.5 0 000 .7l1 1a.5.5 0 00.7-.7l-.14-.15h1.79a2.5 2.5 0 002.5-2.5v-1.8l.15.15a.5.5 0 00.7-.7l-1-1z"></path></svg>`,
	4,
)

function PivotIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aX.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aW = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6-2.17v4.34c0 .57.63.94 1.13.65l4.12-2.39a.5.5 0 000-.86L9.13 7.18A.75.75 0 008 7.83z"></path></svg>`,
	4,
)

function PlayCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aW.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aV = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.22 8.68a1.5 1.5 0 010 2.63l-10 5.5A1.5 1.5 0 015 15.5v-11A1.5 1.5 0 017.22 3.2l10 5.5z"></path></svg>`,
	4,
)

function PlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aV.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aU = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.07 13a2 2 0 001.41 2.46l5.46 1.47a2 2 0 002.45-1.41L16.93 6a2 2 0 00-1.41-2.46l-5.46-1.47A2 2 0 007.6 3.5L5.07 13zM5 4v5.38l1.77-6.64c.07-.27.19-.52.34-.74H7a2 2 0 00-2 2zM2.67 5.5L4 10.48V4a3 3 0 01.16-.96l-.08.02A2 2 0 002.67 5.5zM13 6a1 1 0 11-2 0 1 1 0 012 0zm-3 8a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function PlayingCardsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aU.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aT = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.22 8.68a1.5 1.5 0 010 2.63L12 14.2A5.5 5.5 0 005 9.2V4.5a1.5 1.5 0 012.23-1.32l10 5.5zM4.06 11.44a2 2 0 01-1.43 2.48l-.46.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 014 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 019 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zM6.5 15.5a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function PlaySettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aT.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aS = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 3.28a.75.75 0 00-1.06-1.06l-2.45 2.45a4.04 4.04 0 00-5.12.48l-.3.3a1.49 1.49 0 000 2.1l2.46 2.47a5.48 5.48 0 014.55-.85 4.04 4.04 0 00-.53-3.44l2.45-2.45zM7.55 8.85l2.47 2.46a5.48 5.48 0 00-.85 4.55 4.04 4.04 0 01-3.44-.53l-2.45 2.45a.75.75 0 01-1.06-1.06l2.45-2.45a4.04 4.04 0 01.48-5.12l.3-.3a1.49 1.49 0 012.1 0zm9.45 9.4a4.5 4.5 0 11-5-7.5 4.5 4.5 0 015 7.5zm-2.15-6.1a.5.5 0 00-.85.35V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5a.5.5 0 00-.15-.35z"></path></svg>`,
	4,
)

function PlugConnectedAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aS.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aR = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 3.28a.75.75 0 00-1.06-1.06l-2.45 2.45a4.04 4.04 0 00-5.12.48l-.3.3a1.49 1.49 0 000 2.1l2.46 2.47a5.48 5.48 0 014.55-.85 4.04 4.04 0 00-.53-3.44l2.45-2.45zM7.55 8.85l2.47 2.46a5.48 5.48 0 00-.85 4.55 4.04 4.04 0 01-3.44-.53l-2.45 2.45a.75.75 0 01-1.06-1.06l2.45-2.45a4.04 4.04 0 01.48-5.12l.3-.3a1.49 1.49 0 012.1 0zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function PlugConnectedCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aR.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aQ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 3.28a.75.75 0 00-1.06-1.06l-2.45 2.45a4.04 4.04 0 00-5.12.48l-.3.3a1.49 1.49 0 000 2.1l3.6 3.6c.58.59 1.52.59 2.1 0l.3-.3a4.04 4.04 0 00.48-5.12l2.45-2.45zM7.55 8.85a1.49 1.49 0 00-2.1 0l-.3.3a4.04 4.04 0 00-.48 5.12l-2.45 2.45a.75.75 0 101.06 1.06l2.45-2.45a4.04 4.04 0 005.12-.48l.3-.3c.59-.58.59-1.52 0-2.1l-3.6-3.6z"></path></svg>`,
	4,
)

function PlugConnectedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aQ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aP = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 2.22c.3.3.3.77 0 1.06l-1.45 1.45a4.04 4.04 0 01-.48 5.12l-.3.3-.3.31c-.42.41-1.08.41-1.5 0L9.55 6.24a1.05 1.05 0 010-1.48l.6-.61a4.05 4.05 0 015.13-.48l1.45-1.45c.3-.3.77-.3 1.06 0zm-9 6.25c.3.3.3.77 0 1.06L7.51 10.8l1.69 1.7 1.27-1.28a.75.75 0 111.06 1.06l-1.28 1.28c.48.58.45 1.45-.1 2l-.3.3a4.04 4.04 0 01-5.12.47l-1.45 1.45a.75.75 0 01-1.06-1.06l1.45-1.45a4.04 4.04 0 01.48-5.12l.3-.3a1.49 1.49 0 012-.1l1.27-1.28c.3-.3.77-.3 1.06 0z"></path></svg>`,
	4,
)

function PlugDisconnectedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aP.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aO = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2.5a.5.5 0 00-1 0v4.02A5 5 0 003.52 11H8V6.52a5.07 5.07 0 011 0V2.5zM2.5 11h1.02a5.06 5.06 0 000 1H2.5a.5.5 0 010-1zM8 17.5v-1.02a5.07 5.07 0 001 0v1.02a.5.5 0 01-1 0zm5.48-5.5h4.02a.5.5 0 000-1h-4.02a5.07 5.07 0 010 1H9v4.48A5 5 0 0013.48 12zM8 16.48A5 5 0 013.52 12H8v4.48zM9 11h4.48A5 5 0 009 6.52V11z"></path></svg>`,
	4,
)

function PointScanIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aO.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aN = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a2 2 0 00-2 2v12a2 2 0 104 0V4a2 2 0 00-2-2zm-6 8a2 2 0 00-2 2v4a2 2 0 104 0v-4a2 2 0 00-2-2zm12-4a2 2 0 00-2 2v8a2 2 0 104 0V8a2 2 0 00-2-2z"></path></svg>`,
	4,
)

function PollIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aN.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aM = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.85 7.44A1.5 1.5 0 015.91 7h8.18c.4 0 .78.16 1.06.44l2.41 2.41c.28.28.44.67.44 1.06v.59c0 .83-.67 1.5-1.5 1.5h-13A1.5 1.5 0 012 11.5v-.59c0-.4.16-.78.44-1.06l2.41-2.41zM6.5 9.5a.5.5 0 000 1h7a.5.5 0 000-1h-7z"></path></svg>`,
	4,
)

function PortHdmiIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aM.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aL = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.43 8.3c.26-.2.58-.3.9-.3h5.34c.32 0 .64.1.9.3l1.33 1A1.5 1.5 0 0114 12H6a1.5 1.5 0 01-.9-2.7l1.33-1z"></path></svg>`,
	4,
)

function PortMicroUsbIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aL.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aK = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 7C3.67 7 3 7.67 3 8.5v3c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-11zm0 1.5h11V10h-11V8.5z"></path></svg>`,
	4,
)

function PortUsbAIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aK.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aJ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 10c0-1.1.9-2 2-2h7a2 2 0 110 4h-7a2 2 0 01-2-2z"></path></svg>`,
	4,
)

function PortUsbCIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aJ.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aI = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5A2.5 2.5 0 014.5 2h6A2.5 2.5 0 0113 4.5V6H9.5A3.5 3.5 0 006 9.5V13H4.5A2.5 2.5 0 012 10.5v-6zM9.5 7A2.5 2.5 0 007 9.5v6A2.5 2.5 0 009.5 18h6a2.5 2.5 0 002.5-2.5v-6A2.5 2.5 0 0015.5 7h-6zM8 9.5C8 8.67 8.67 8 9.5 8h6c.83 0 1.5.67 1.5 1.5v6c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 018 15.5v-6z"></path></svg>`,
	4,
)

function PositionBackwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aI.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aH = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 14v1.5A2.5 2.5 0 009.5 18h6a2.5 2.5 0 002.5-2.5v-6A2.5 2.5 0 0015.5 7H14v1h1.5c.83 0 1.5.67 1.5 1.5v6c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 018 15.5V14H7zM2 4.5A2.5 2.5 0 014.5 2h6A2.5 2.5 0 0113 4.5v6a2.5 2.5 0 01-2.5 2.5h-6A2.5 2.5 0 012 10.5v-6z"></path></svg>`,
	4,
)

function PositionForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aH.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aG = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 14c0-1.1.9-2 2-2h3a2 2 0 012 2v3a2 2 0 01-2 2h-3a2 2 0 01-2-2v-3zm2-1a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1v-3a1 1 0 00-1-1h-3zM5 9h1.3C7.8 9 9 7.8 9 6.3V5h3.5A2.5 2.5 0 0115 7.5V11h-1.3a2.7 2.7 0 00-2.7 2.7V15H7.5A2.5 2.5 0 015 12.5V9zM1 3c0-1.1.9-2 2-2h3a2 2 0 012 2v3a2 2 0 01-2 2H3a2 2 0 01-2-2V3zm2-1a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1V3a1 1 0 00-1-1H3z"></path></svg>`,
	4,
)

function PositionToBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aG.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aF = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1 3c0-1.1.9-2 2-2h3a2 2 0 012 2v1h-.5c-.17 0-.34.01-.5.04V3a1 1 0 00-1-1H3a1 1 0 00-1 1v3a1 1 0 001 1h1.04C4 7.16 4 7.33 4 7.5V8H3a2 2 0 01-2-2V3zm11 13v1c0 1.1.9 2 2 2h3a2 2 0 002-2v-3a2 2 0 00-2-2h-1v.5c0 .17-.01.34-.04.5H17a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1.04c-.16.03-.33.04-.5.04H12zM5 7.5A2.5 2.5 0 017.5 5h5A2.5 2.5 0 0115 7.5v5a2.5 2.5 0 01-2.5 2.5h-5A2.5 2.5 0 015 12.5v-5z"></path></svg>`,
	4,
)

function PositionToFrontIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aF.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aE = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 2.5a.75.75 0 00-1.5 0v6a.75.75 0 001.5 0v-6zm3 1.5a.75.75 0 10-.76 1.3A6 6 0 117 5.3.75.75 0 106.25 4a7.5 7.5 0 107.5 0z"></path></svg>`,
	4,
)

function PowerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aE.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aD = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 1c.28 0 .5.22.5.5 0 .46.07 1.22.47 1.84.38.6 1.08 1.14 2.53 1.14a.5.5 0 110 1 3.5 3.5 0 00-1.82.73A2.77 2.77 0 0015 8.45a.5.5 0 01-.5.5.5.5 0 01-.5-.5c0-.5-.16-1.26-.6-1.88-.44-.6-1.16-1.1-2.4-1.1a.5.5 0 01-.5-.5c0-.27.22-.5.5-.5.51 0 1.25 0 1.87-.36.57-.33 1.13-1 1.13-2.61 0-.28.22-.5.5-.5zM6.15 12.17l-.94 3.4c-.17.61.08 1.34.74 1.63 1.64.73 4.65 1.35 7.97.01a1.43 1.43 0 00.82-1.75l-.98-3.23a6.5 6.5 0 01-7.61-.06zm6.77-9.84c-.04.22-.1.38-.16.5a.97.97 0 01-.4.42c-.34.2-.82.23-1.36.23a1.5 1.5 0 100 2.98c.91 0 1.34.35 1.58.7.3.4.42.95.42 1.3a1.5 1.5 0 001.61 1.48A5.5 5.5 0 014.5 6.96a5.48 5.48 0 018.42-4.63z"></path></svg>`,
	4,
)

function PredictionsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aD.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aC = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2.75a.75.75 0 00-.66.39l-2.75 5c-.15.27-.11.6.08.84l7.25 8.75a.75.75 0 001.16 0l7.25-8.75c.2-.24.23-.57.08-.84l-2.75-5a.75.75 0 00-.66-.39h-9zM4.16 7.5l1.78-3.25h1.5L6.31 7.5H4.16zM6.14 9l1.93 4.75L4.14 9h2zM10 14.48L7.76 9h4.39l-2.16 5.48zM7.89 7.5l1.14-3.25h1.95l1.2 3.25H7.88zm5.88 0l-1.2-3.25h1.49l1.78 3.25h-2.07zm0 1.5h2.1l-4.01 4.83L13.76 9z"></path></svg>`,
	4,
)

function PremiumIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aC.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aB = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 2.75a.75.75 0 00-.66.39l-2.75 5c-.15.27-.11.6.08.84l7.25 8.75a.75.75 0 001.16 0l.48-.59a3.27 3.27 0 01-.06-.64c0-1.3 1-2.38 2.27-2.49a2.99 2.99 0 01.17-4.19l.32-.82h4.05l.02-.02c.2-.24.23-.57.08-.84l-2.75-5a.75.75 0 00-.66-.39h-9zM4.16 7.5l1.78-3.25h1.5L6.31 7.5H4.16zM6.14 9l1.93 4.75L4.14 9h2zM10 14.48L7.76 9h4.39l-2.16 5.48zM7.89 7.5l1.14-3.25h1.95l1.2 3.25H7.88zm5.88 0l-1.2-3.25h1.49l1.78 3.25h-2.07zM17.5 12a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function PremiumPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aB.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aA = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 20a10 10 0 100-20 10 10 0 000 20zm4.2-11.8l-4.5 4.5a1 1 0 01-1.4 0l-2-2a1 1 0 111.4-1.4L9 10.58l3.8-3.8a1 1 0 111.4 1.42z"></path></svg>`,
	4,
)

function PresenceAvailableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aA.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$az = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 20a10 10 0 100-20 10 10 0 000 20zm0-14V9.6l2.7 2.7a1 1 0 01-1.4 1.42l-3-3A1 1 0 018 10V6a1 1 0 112 0z"></path></svg>`,
	4,
)

function PresenceAwayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$az.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ay = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M20 10a10 10 0 11-20 0 10 10 0 0120 0z"></path></svg>`,
	4,
)

function PresenceBusyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ay.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ax = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 20a10 10 0 100-20 10 10 0 000 20zM7 9h6a1 1 0 110 2H7a1 1 0 110-2z"></path></svg>`,
	4,
)

function PresenceDndIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ax.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aw = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 4a2 2 0 11-4 0 2 2 0 014 0zM7 14.78v1.72c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-1.72a.5.5 0 01.15-.36l3.7-3.56a.5.5 0 00-.34-.86H3.49a.5.5 0 00-.35.86l3.7 3.56c.1.1.16.23.16.36zM8.5 7C7.67 7 7 7.67 7 8.5V9h6v-.5c0-.83-.67-1.5-1.5-1.5h-3z"></path></svg>`,
	4,
)

function PresenterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aw.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$av = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.15 7.85c-.1.2-.15.42-.15.65V9h1.3l1 1H3.5a.5.5 0 00-.36.86l3.7 3.56c.1.1.16.23.16.36v1.72c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-1.72a.5.5 0 01.15-.36l.29-.27 3.7 3.7a.5.5 0 00.71-.7l-10-10-5-5a.5.5 0 10-.7.7l5 5zm9.7 3.01l-1.97 1.9L12.12 10h4.39a.5.5 0 01.35.86zM13 9h-1.88l-2-2h2.38c.83 0 1.5.67 1.5 1.5V9zm-3-3a2 2 0 100-4 2 2 0 000 4z"></path></svg>`,
	4,
)

function PresenterOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$av.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$au = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 6v2h10V6H5zm7 5v3h3v-3h-3zM2 5.75A2.75 2.75 0 014.75 3h10.5A2.75 2.75 0 0118 5.75v8.5A2.75 2.75 0 0115.25 17H4.75A2.75 2.75 0 012 14.25v-8.5zm2-.25v3c0 .27.22.5.5.5h11a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-11a.5.5 0 00-.5.5zm7 5v4c0 .28.22.5.5.5h4a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-4a.5.5 0 00-.5.5zm-6.5 0a.5.5 0 000 1h5a.5.5 0 000-1h-5zM4 14c0 .28.22.5.5.5h5a.5.5 0 000-1h-5a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PreviewLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$au.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$at = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 4.25c0-1-1.12-1.6-1.95-1.04l-8.5 5.71c-.73.5-.73 1.57 0 2.07l8.5 5.8c.83.56 1.95-.03 1.95-1.04V4.25zM3 3.5a.5.5 0 011 0v13a.5.5 0 01-1 0v-13z"></path></svg>`,
	4,
)

function PreviousIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$at.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$as = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-.5 7.5c1.33 0 2.55-.47 3.5-1.26v3.76c0 .83-.67 1.5-1.5 1.5H15v1.5c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 015 16.5V15H3.5A1.5 1.5 0 012 13.5v-5A2.5 2.5 0 014.5 6H5v-.5C5 4.67 5.67 4 6.5 4h2.7c-.08.32-.15.66-.18 1H6.5a.5.5 0 00-.5.5V6h3.02c.26 2.8 2.61 5 5.48 5zM6 12.5v4c0 .28.22.5.5.5h7a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-7a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PrintAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$as.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ar = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4.5C5 3.67 5.67 3 6.5 3h7c.83 0 1.5.67 1.5 1.5V5h.5A2.5 2.5 0 0118 7.5v5c0 .83-.67 1.5-1.5 1.5H15v1.5c0 .83-.67 1.5-1.5 1.5h-7A1.5 1.5 0 015 15.5V14H3.5A1.5 1.5 0 012 12.5v-5A2.5 2.5 0 014.5 5H5v-.5zm9 0a.5.5 0 00-.5-.5h-7a.5.5 0 00-.5.5V5h8v-.5zm-8 7v4c0 .28.22.5.5.5h7a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-7a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function PrintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ar.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aq = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5v3a.5.5 0 01-.5.5h-3a.5.5 0 01-.5-.5v-3zm6.5-.5a.5.5 0 00-.5.5v3c0 .28.22.5.5.5h3a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-3zm.5 3V4h2v2h-2zM6 8a4 4 0 100 8h3.2a5.5 5.5 0 01.1-3.29A1 1 0 0110 11a1 1 0 01.23.03 5.49 5.49 0 017.1-1.25A4 4 0 0014 8H6zm0 5a1 1 0 110-2 1 1 0 010 2zm13 1.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.85-1.85l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 00-.7-.7z"></path></svg>`,
	4,
)

function ProductionCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aq.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ap = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5v3a.5.5 0 01-.5.5h-3a.5.5 0 01-.5-.5v-3zm6.5-.5a.5.5 0 00-.5.5v3c0 .28.22.5.5.5h3a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-3zm.5 3V4h2v2h-2zM2 12a4 4 0 014-4h8a4 4 0 010 8H6a4 4 0 01-4-4zm5 0a1 1 0 10-2 0 1 1 0 002 0zm4 0a1 1 0 10-2 0 1 1 0 002 0zm3 1a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function ProductionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ap.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ao = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-1.5 0c0-1.52-.53-2.93-1.4-4.04L5.96 15.1A6.5 6.5 0 0016.5 10zM4.9 14.04l9.14-9.14a6.5 6.5 0 00-9.13 9.13z"></path></svg>`,
	4,
)

function ProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ao.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$an = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 2a7 7 0 110 14A7 7 0 019 2zm3.32 2.62a5.5 5.5 0 00-7.7 7.7l7.7-7.7zm1.06 1.06l-7.7 7.7a5.5 5.5 0 007.7-7.7zM9 17a8 8 0 007.75-10 7 7 0 01-9.74 9.74c.63.17 1.3.26 1.99.26z"></path></svg>`,
	4,
)

function ProhibitedMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$an.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$am = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10.17A8.02 8.02 0 0010 2a8 8 0 00-.84 15.96A3 3 0 019 17v-.58a6.47 6.47 0 01-3.04-1.32l1.57-1.57 7.57-7.57A6.47 6.47 0 0116.5 10h.5a3 3 0 011 .17zM14.04 4.9L4.9 14.04a6.5 6.5 0 019.13-9.13zM10 13c0-1.1.9-2 2-2h5a2 2 0 012 2v4a2 2 0 01-2 2h-5a2 2 0 01-2-2v-4zm6.5 3h-4a.5.5 0 100 1h4a.5.5 0 100-1zm-4-3a.5.5 0 100 1h4a.5.5 0 100-1h-4z"></path></svg>`,
	4,
)

function ProhibitedNoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$am.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$al = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7L14.5 4.79l-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7L15.21 5.5l1.14-1.15zM14.5 11c.9 0 1.75-.22 2.5-.6v.6a3 3 0 01-3 3h-3.5v2h2a.5.5 0 010 1h-5a.5.5 0 010-1h2v-2H6a3 3 0 01-3-3V5a1 1 0 010-2h6.6a5.5 5.5 0 004.9 8z"></path></svg>`,
	4,
)

function ProjectionScreenDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$al.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ak = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3a1 1 0 000 2v6a3 3 0 003 3h3.5v2h-2a.5.5 0 000 1h5a.5.5 0 000-1h-2v-2H14a3 3 0 003-3V5a1 1 0 100-2H3z"></path></svg>`,
	4,
)

function ProjectionScreenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ak.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aj = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.59 5.41L2.4 8.6a2 2 0 000 2.82L5.6 14.6a2 2 0 002.82 0l3.18-3.18a2 2 0 000-2.82L8.4 5.4a2 2 0 00-2.82 0zm6 9.18l-.88-.88 1.58-1.59a3 3 0 000-4.24l-1.58-1.59.88-.88a2 2 0 012.82 0L17.6 8.6a2 2 0 010 2.82L14.4 14.6a2 2 0 01-2.82 0z"></path></svg>`,
	4,
)

function ProtocolHandlerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aj.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ai = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.01 3c.33 0 .62.23.71.55l2.82 10.07 2.24-7.1a.75.75 0 011.4-.07L15.5 9.5h1.76a.75.75 0 010 1.5H15a.75.75 0 01-.69-.45l-.7-1.65-2.4 7.58a.75.75 0 01-1.43-.03L6.97 6.41l-1.25 4.06A.75.75 0 015 11H2.75a.75.75 0 010-1.5h1.7l1.83-5.97c.1-.32.4-.53.73-.53z"></path></svg>`,
	4,
)

function PulseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ai.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ah = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm5.97 1.33a.5.5 0 00-.94 0L6.65 10H5.5a.5.5 0 000 1H7c.2 0 .4-.13.47-.32l1.02-2.73 2.04 5.72a.5.5 0 00.92.05L12.8 11h1.69a.5.5 0 000-1h-2a.5.5 0 00-.45.28l-.97 1.95-2.1-5.9z"></path></svg>`,
	4,
)

function PulseSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ah.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ag = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 17h1.5a2.5 2.5 0 002.5-2.5V13h-4v4zm0-5V8h4v4h-4zm-1 0H8V8h4v4zm-4 1h4v4H8v-4zm-1-1V8H3v4h4zm-4 1h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-1-4v4H8V3h4z"></path></svg>`,
	4,
)

function PuzzleCubeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ag.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$af = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.8 1.29a1 1 0 011.4 0l1.51 1.5a1 1 0 010 1.42l-1.5 1.5a1 1 0 01-1.42 0l-1.5-1.5a1 1 0 010-1.42l1.5-1.5zM5.5 17H7v-4H3v1.5A2.5 2.5 0 005.5 17zM7 8v4H3V8h4zm5 4H8V8h4v4zm-4 1h4v4H8v-4zm5-5v4h4V8h-4zm0 5h4v1.5a2.5 2.5 0 01-2.5 2.5H13v-4zM3 7h4V3H5.5A2.5 2.5 0 003 5.5V7zm5 0V3h4v4H8z"></path></svg>`,
	4,
)

function PuzzleCubePieceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$af.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ae = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 2a2 2 0 012 2v.06h3a1 1 0 011 1V8h-1a2 2 0 00-2 1.85V10a2 2 0 001.85 2H17v3.06a1 1 0 01-1 1h-3v.09a2 2 0 01-4-.1H6a1 1 0 01-1-1V12a2 2 0 110-4V5.06a1 1 0 011-1h3V4c0-1.1.9-2 2-2z"></path></svg>`,
	4,
)

function PuzzlePieceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ae.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ad = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 15.06V12.7c.18.08.36.15.55.21.29.1.61.1.9 0a6.77 6.77 0 003.39-2.38A6.63 6.63 0 0011 6.58V4.04l-.02-.19v-.04A1.4 1.4 0 009.5 2.67 2 2 0 0113 4v.06h3a1 1 0 011 1V8h-1a2 2 0 00-2 1.85V10a2 2 0 001.85 2H17v3.06a1 1 0 01-1 1h-3v.09a2 2 0 01-4-.1H6a1 1 0 01-1-1zM8 3.35a4.06 4.06 0 001.6.32c.2 0 .35.14.4.33v2.58c0 2.69-1.31 4.51-3.87 5.4a.38.38 0 01-.26 0A6.66 6.66 0 014 11c-.39-.3-.72-.63-.99-1a5.5 5.5 0 01-1-3.15L2 6.58v-2.5a.4.4 0 01.4-.41 4.5 4.5 0 003.32-1.55.39.39 0 01.56 0C6.82 2.7 7.4 3.1 8 3.35z"></path></svg>`,
	4,
)

function PuzzlePieceShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ad.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ac = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 11h-2v2h2v2h-2v2h2v-2h2v2h2v-2h-2v-2h2v-2h-2v2h-2v-2zM5 5h2v2H5V5zm0-2a2 2 0 00-2 2v2c0 1.1.9 2 2 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zm-.75 1.75c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2.5a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2.5zM5 13h2v2H5v-2zm0-2a2 2 0 00-2 2v2c0 1.1.9 2 2 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zm-.75 1.75c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2.5a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2.5zM13 5h2v2h-2V5zm0-2a2 2 0 00-2 2v2c0 1.1.9 2 2 2h2a2 2 0 002-2V5a2 2 0 00-2-2h-2zm-.75 1.75c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2.5a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2.5z"></path></svg>`,
	4,
)

function QrCodeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ac.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$ab = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 110 16 8 8 0 010-16zm0 11.5a.75.75 0 100 1.5.75.75 0 000-1.5zm0-8A2.5 2.5 0 007.5 8a.5.5 0 001 0 1.5 1.5 0 112.63.98l-.1.11-.12.1-.25.19A3.2 3.2 0 009.5 12a.5.5 0 001 0c0-.76.2-1.25.53-1.61l.08-.08.08-.07.09-.07.22-.17.15-.12A2.5 2.5 0 0010 5.5z"></path></svg>`,
	4,
)

function QuestionCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$ab.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$aa = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3a4 4 0 00-4 4 .75.75 0 001.5 0A2.5 2.5 0 0110 4.5 2.5 2.5 0 0112.5 7c0 .6-.16.97-.37 1.27a5 5 0 01-.97.92c-.4.33-.9.73-1.28 1.3-.39.58-.63 1.3-.63 2.26v.5a.75.75 0 001.5 0v-.5c0-.67.16-1.1.38-1.43.23-.35.55-.62.97-.96l.06-.05c.38-.3.84-.67 1.2-1.17C13.74 8.6 14 7.9 14 7a4 4 0 00-4-4zm0 14a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function QuestionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$aa.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h4.1a5.48 5.48 0 01-.4-4H5.5a.5.5 0 010-1h4.1A5.5 5.5 0 0117 9.6V5.5A2.5 2.5 0 0014.5 3h-9zm0 11h2a.5.5 0 010 1h-2a.5.5 0 010-1zM8 5c.2 0 .38.12.46.3l2 4.5a.5.5 0 11-.92.4L9.01 9H6.99l-.53 1.2a.5.5 0 01-.92-.4l2-4.5A.5.5 0 018 5zm.56 3L8 6.73 7.44 8h1.12zm4.94-2.5v1h1a.5.5 0 010 1h-1v1a.5.5 0 01-1 0v-1h-1a.5.5 0 010-1h1v-1a.5.5 0 011 0zm5.5 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function QuizNewIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.28 3.24l-1.09 1.1a6.5 6.5 0 00-9.66 5.02 5.5 5.5 0 00-1.53.9 8 8 0 0112.28-7.01zM9.75 18c.37-.46.67-.97.89-1.53a6.47 6.47 0 003.96-1.87.75.75 0 011.06 1.06A7.98 7.98 0 019.75 18zM11 14.5c0 .17 0 .34-.02.5a5.08 5.08 0 002.63-1.4.75.75 0 10-1.06-1.05c-.47.47-1.04.78-1.64.93.06.33.09.67.09 1.02zM5.5 9c.35 0 .69.03 1.02.1a3.58 3.58 0 014.47-2.56l1.16-1.17A5.1 5.1 0 005 9.02L5.5 9zm3 .9c.64.41 1.19.96 1.6 1.6a1.5 1.5 0 001.35-1.89l4.33-4.33a.75.75 0 00-1.06-1.06l-4.33 4.33A1.5 1.5 0 008.5 9.9zm8.75 3.35a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 7.5a.75.75 0 100-1.5.75.75 0 000 1.5zm1.5 3.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75-1.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 11.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75-1.75a.75.75 0 100-1.5.75.75 0 000 1.5zm-4.25 5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L4.5 15.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function RadarCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.28 3.24l-1.09 1.1a6.5 6.5 0 101.4 10.26.75.75 0 011.07 1.06 8 8 0 11-1.38-12.42zm-3.3 3.3l1.17-1.17a5.1 5.1 0 101.46 8.24.75.75 0 10-1.06-1.06 3.6 3.6 0 11-1.56-6.01zm4.8-2.32c.3.3.3.77 0 1.06l-4.33 4.33a1.5 1.5 0 11-1.06-1.06l4.33-4.33c.3-.3.77-.3 1.06 0zm1.47 9.03a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 7.5a.75.75 0 100-1.5.75.75 0 000 1.5zm1.5 3.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75-1.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 11.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75-1.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function RadarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.28 3.24l-1.09 1.1A6.5 6.5 0 003.58 11H2.06a7.99 7.99 0 0112.22-7.76zM10 17v-.5c1.66 0 3.33-.63 4.6-1.9a.75.75 0 011.06 1.06A7.98 7.98 0 019.83 18a3 3 0 00.17-1zm0-2.5v.6c1.3 0 2.61-.5 3.6-1.5a.75.75 0 10-1.05-1.05 3.6 3.6 0 01-2.86 1.04c.2.25.31.57.31.91zM6.5 11h.04A3.6 3.6 0 0111 6.54l1.16-1.17A5.1 5.1 0 005 11h1.5zm9.28-6.78c.3.3.3.77 0 1.06l-4.33 4.33a1.5 1.5 0 11-1.06-1.06l4.33-4.33c.3-.3.77-.3 1.06 0zm1.47 9.03a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 7.5a.75.75 0 100-1.5.75.75 0 000 1.5zm1.5 3.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75-1.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 11.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75-1.75a.75.75 0 100-1.5.75.75 0 000 1.5zM1.5 12a.5.5 0 00-.5.5v4c0 .28.22.5.5.5h5a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-5zm7 2c.28 0 .5.22.5.5V17a2 2 0 01-2 2H3.5a.5.5 0 010-1H7a1 1 0 001-1v-2.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function RadarRectangleMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 15a5 5 0 100-10 5 5 0 000 10zm0-13a8 8 0 100 16 8 8 0 000-16zm-7 8a7 7 0 1114 0 7 7 0 01-14 0z"></path></svg>`,
	4,
)

function RadioButtonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 7h2.5v3H5V7zm6.5 0v3h-3V7h3zm1 3H15V7h-2.5v3zm3.54-6c.26 0 .5.05.74.16A2.06 2.06 0 0118 5.96V11a2 2 0 01-1 1.73v1.77a1.45 1.45 0 01-.44 1.05c-.13.14-.3.25-.48.33-.19.09-.38.13-.58.12h-4a.48.48 0 01-.35-.15L10 14.7l-1.15 1.15c-.1.1-.21.15-.35.15h-4a1.45 1.45 0 01-1.05-.44c-.14-.13-.25-.3-.33-.48A1.32 1.32 0 013 14.5v-1.77c-.3-.17-.55-.42-.73-.73A2.06 2.06 0 012 11V5.96c0-.26.05-.5.16-.74A2.06 2.06 0 013.96 4h12.08zm-.66 2.08A.95.95 0 0015 6H5a.85.85 0 00-.4.08c-.12.06-.22.13-.31.22A1 1 0 004 7v3c0 .15.03.28.08.4.04.12.12.22.2.31.1.09.21.16.33.21.12.05.25.08.39.08h10c.14 0 .27-.02.4-.08.12-.06.22-.13.31-.22A1 1 0 0016 10V7a1 1 0 00-.3-.71 1.1 1.1 0 00-.32-.21z"></path></svg>`,
	4,
)

function RamIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm4.92 1.24A.5.5 0 007 7.5v5a.5.5 0 101 0V9.24l1.58 2.53a.5.5 0 00.84 0L12 9.24v3.26a.5.5 0 101 0v-5a.5.5 0 00-.92-.26L10 10.56 7.92 7.24z"></path></svg>`,
	4,
)

function RatingMatureIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 4A2.75 2.75 0 002 6.75v6.5A2.75 2.75 0 004.75 16h10.5A2.75 2.75 0 0018 13.25v-6.5A2.75 2.75 0 0015.25 4H4.75zM7 7.5v5a.5.5 0 01-1 0V8.3l-.28.15a.5.5 0 11-.44-.9l1-.5A.5.5 0 017 7.5zm7 0v5a.5.5 0 11-1 0V8.3l-.28.15a.5.5 0 11-.44-.9l1-.5a.5.5 0 01.72.45zm-4 1a.5.5 0 11-1 0 .5.5 0 011 0zM9.5 12a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function RatioOneToOneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.84 2.14c.2-.36.66-.5 1.02-.3a9.94 9.94 0 015.39 8.08.75.75 0 11-1.5.16 8.45 8.45 0 00-4.6-6.92.75.75 0 01-.3-1.02zM8.7 4.22a.75.75 0 00-1.38 0l-4.5 11a.75.75 0 001.38.56l1.45-3.53h4.72l1.45 3.53a.75.75 0 001.38-.56l-4.5-11zm1.06 6.53h-3.5L8 6.48l1.75 4.27zm2.62-6.4a.75.75 0 00-.74 1.3c1.52.87 2.4 2.4 2.63 3.96a.75.75 0 101.48-.22 6.92 6.92 0 00-3.37-5.04z"></path></svg>`,
	4,
)

function ReadAloudIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a0 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 5.5a1 1 0 011.84-.56.75.75 0 001.24-.83A2.5 2.5 0 104.6 8h10.67a.75.75 0 000-1.5H4.5a1 1 0 01-1-1zM9.75 4a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zm-4 5a.75.75 0 000 1.5h4.98A5.48 5.48 0 0114.5 9H5.75zm-3 2.5h7.14c-.3.46-.53.96-.68 1.5H2.75a.75.75 0 010-1.5zm3 2.5h3.27a5.57 5.57 0 00.07 1.5H5.75a.75.75 0 010-1.5zm13.25.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 101 0V15h1.5a.5.5 0 100-1H15v-1.5z"></path></svg>`,
	4,
)

function ReadingListAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a0.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 5.5a1 1 0 011.84-.56.75.75 0 001.24-.83A2.5 2.5 0 104.6 8h10.67a.75.75 0 000-1.5H4.5a1 1 0 01-1-1zM9.75 4a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5zm-4 5a.75.75 0 000 1.5h11.5a.75.75 0 100-1.5H5.75zM2 12.25c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zM5.75 14a.75.75 0 000 1.5h11.5a.75.75 0 100-1.5H5.75z"></path></svg>`,
	4,
)

function ReadingListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.5C4 2.67 4.67 2 5.5 2h9c.83 0 1.5.67 1.5 1.5v13c0 .83-.67 1.5-1.5 1.5h-9A1.5 1.5 0 014 16.5v-13zm2 3c0 .28.22.5.5.5h7a.5.5 0 000-1h-7a.5.5 0 00-.5.5zM6.5 8a.5.5 0 000 1h7a.5.5 0 000-1h-7zM6 10.5c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function ReadingModeMobileIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3a1 1 0 012 0h13a1 1 0 110 2H4v12.5a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5V3zm3 3.5c0-.28.22-.5.5-.5h11c.28 0 .5.22.5.5v7a2.5 2.5 0 01-2.5 2.5h-7A2.5 2.5 0 015 13.5v-7zm3 7c0 .28.22.5.5.5h1a.5.5 0 00.5-.5v-1c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5v1c0 .28.22.5.5.5h1a.5.5 0 00.5-.5v-2.55a1 1 0 00-.34-.75l-2.33-2.07a.5.5 0 00-.66 0L8.34 10.2a1 1 0 00-.34.75v2.55z"></path></svg>`,
	4,
)

function RealEstateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h7a2 2 0 012 2v7h3v2a3 3 0 01-3 3h-4.2A5.5 5.5 0 004 9.2V4zm11 11a2 2 0 002-2v-1h-2v3zM7.5 5a.5.5 0 000 1h4a.5.5 0 000-1h-4zm0 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm2.5 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H6v-1.5z"></path></svg>`,
	4,
)

function ReceiptAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v4a3 3 0 011 .17A3 3 0 019 11v.09c.58.2 1 .76 1 1.41V16h5a3 3 0 003-3v-2h-3V4a2 2 0 00-2-2H6zm11 11a2 2 0 01-2 2v-3h2v1zM7 5.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM5 9.27A2 2 0 002 11v1h-.5a.5.5 0 00-.5.5V17c0 1.1.9 2 2 2h4a2 2 0 002-2v-4.5a.5.5 0 00-.5-.5H8v-1a2 2 0 00-3-1.73zM5 11v1H3v-1a1 1 0 112 0zm1 0a2 2 0 00-.25-.97A1 1 0 017 11v1H6v-1z"></path></svg>`,
	4,
)

function ReceiptBagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h7a2 2 0 012 2v7h3v2a3 3 0 01-3 3h-4.5v-4.38a1 1 0 00-.55-.9l-4-2a1 1 0 00-.9 0L4 9.25V4zm11 11a2 2 0 002-2v-1h-2v3zM7.5 5a.5.5 0 000 1h4a.5.5 0 000-1h-4zm0 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm-6 8.88v-3.76a1 1 0 01.55-.9l3-1.5a1 1 0 01.9 0l3 1.5a1 1 0 01.55.9v3.76a1 1 0 01-.55.9l-3 1.5a1 1 0 01-.9 0l-3-1.5a1 1 0 01-.55-.9zm1.04-3.57a.5.5 0 00.27.65L5 13.9v2.61a.5.5 0 001 0v-2.61l2.2-.93a.5.5 0 00-.4-.92L5.5 13l-2.3-.97a.5.5 0 00-.66.27z"></path></svg>`,
	4,
)

function ReceiptCubeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h7a2 2 0 012 2v7h3v2a3 3 0 01-3 3H6a3 3 0 01-3-3V5zm11 11a2 2 0 002-2v-1h-2v3zM6.5 6a.5.5 0 000 1h4a.5.5 0 000-1h-4zm0 3a.5.5 0 000 1h4a.5.5 0 000-1h-4zm0 3a.5.5 0 000 1h2a.5.5 0 000-1h-2z"></path></svg>`,
	4,
)

function ReceiptIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h7a2 2 0 012 2v7h3v2a3 3 0 01-3 3h-4v-2.5A2.5 2.5 0 008.5 11H4V4zm11 11a2 2 0 002-2v-1h-2v3zM7.5 5a.5.5 0 000 1h4a.5.5 0 000-1h-4zm0 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm1 5c.83 0 1.5.67 1.5 1.5v3c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 011 16.5v-3c0-.83.67-1.5 1.5-1.5h6zm.5 4.5v-1c-.83 0-1.5.67-1.5 1.5h1c0-.28.22-.5.5-.5zm0-3a.5.5 0 01-.5-.5h-1c0 .83.67 1.5 1.5 1.5v-1zM2.5 13a.5.5 0 01-.5.5v1c.83 0 1.5-.67 1.5-1.5h-1zM2 16.5c.28 0 .5.22.5.5h1c0-.83-.67-1.5-1.5-1.5v1zm3.5-3a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"></path></svg>`,
	4,
)

function ReceiptMoneyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h7a2 2 0 012 2v7h3v2a3 3 0 01-3 3h-4.2A5.5 5.5 0 004 9.2V4zm11 11a2 2 0 002-2v-1h-2v3zM7.5 5a.5.5 0 000 1h4a.5.5 0 000-1h-4zm0 3a.5.5 0 000 1h4a.5.5 0 000-1h-4zm2.5 6.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6-1.6v3.2c0 .4.43.63.76.42l2.56-1.6a.5.5 0 000-.84l-2.56-1.6a.5.5 0 00-.76.42z"></path></svg>`,
	4,
)

function ReceiptPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h7a2 2 0 012 2v7h3v2a3 3 0 01-3 3h-2.08c-.08-.2-.2-.4-.36-.56l-2-2A4.5 4.5 0 009.25 10h1.25a.5.5 0 000-1H8.33A4.5 4.5 0 003 8.76V5zm11 11a2 2 0 002-2v-1h-2v3zM6.5 6a.5.5 0 000 1h4a.5.5 0 000-1h-4zm1.1 9.3a3.48 3.48 0 01-4.27-.06 3.5 3.5 0 114.97-.64l2.56 2.54a.5.5 0 01-.71.71L7.6 15.3zm-3.49-.72a2.5 2.5 0 102.78-4.16 2.5 2.5 0 00-2.78 4.16z"></path></svg>`,
	4,
)

function ReceiptSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm8 4.5a4.5 4.5 0 100-9 4.5 4.5 0 000 9z"></path></svg>`,
	4,
)

function RecordIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 18a8 8 0 100-16 8 8 0 000 16zM8 7h4a1 1 0 011 1v4a1 1 0 01-1 1H8a1 1 0 01-1-1V8a1 1 0 011-1z"></path></svg>`,
	4,
)

function RecordStopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5z"></path></svg>`,
	4,
)

function RectangleLandscapeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2a2 2 0 00-2 2v12c0 1.1.9 2 2 2h5.7a4.5 4.5 0 01-1.43-2.02 1.5 1.5 0 010-2.96 4.49 4.49 0 012.75-2.75 1.5 1.5 0 012.96 0H16V4a2 2 0 00-2-2H6zm9.06 13.33a1 1 0 11-1.12-1.66 1 1 0 011.12 1.66zM17.95 14h.55a.5.5 0 010 1h-.55A3.49 3.49 0 0115 17.95v.55a.5.5 0 01-1 0v-.55A3.49 3.49 0 0111.05 15h-.55a.5.5 0 010-1h.55A3.49 3.49 0 0114 11.05v-.55a.5.5 0 011 0v.55A3.49 3.49 0 0117.95 14zm-3.2 2.99a2.5 2.5 0 10-.5-4.98 2.5 2.5 0 00.5 4.98z"></path></svg>`,
	4,
)

function RectanglePortraitLocationTargetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.9 3.04a1.25 1.25 0 012.2 0l1.66 3.09-1.02-.34a.75.75 0 00-.48 1.42l3 1a.75.75 0 00.98-.59l.5-3a.75.75 0 10-1.48-.24l-.17 1.04-1.67-3.1a2.75 2.75 0 00-4.84 0L5.84 5.57a.75.75 0 001.33.7L8.9 3.05zm8.04 10.87l-1.91-3.56a.75.75 0 111.32-.71l1.91 3.56a2.75 2.75 0 01-2.42 4.05H12.3l.72.72a.75.75 0 11-1.06 1.06l-2-2a.75.75 0 010-1.06l2-2a.75.75 0 111.06 1.06l-.72.72h3.53c.94 0 1.55-1 1.1-1.84zm-9.69 1.84a.75.75 0 010 1.5H4.16a2.75 2.75 0 01-2.42-4.05L3.6 9.76l-1.35.45a.75.75 0 01-.48-1.42l3-1a.75.75 0 01.95.47l1 3a.75.75 0 11-1.42.48l-.4-1.22-1.83 3.39c-.44.83.16 1.84 1.1 1.84h3.09z"></path></svg>`,
	4,
)

function RecycleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.97 15.03a.75.75 0 101.06-1.06L12.56 8.5l5.47-5.47a.75.75 0 00-1.06-1.06l-6 6c-.3.3-.3.77 0 1.06l6 6zM3.03 4.97a.75.75 0 00-1.06 1.06l5.47 5.47-5.47 5.47a.75.75 0 101.06 1.06l6-6c.3-.3.3-.77 0-1.06l-6-6z"></path></svg>`,
	4,
)

function RemoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 2a.5.5 0 000 1h1v14h-1a.5.5 0 000 1h3a.5.5 0 000-1h-1V3h1a.5.5 0 000-1h-3zm-4 2h4v12h-4A2.5 2.5 0 012 13.5v-7A2.5 2.5 0 014.5 4zm11 12h-4V4h4A2.5 2.5 0 0118 6.5v7a2.5 2.5 0 01-2.5 2.5z"></path></svg>`,
	4,
)

function RenameIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 6.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm-5 0a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zM5.5 8a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm8.5 5.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zM10.5 15a1.5 1.5 0 110-3 1.5 1.5 0 010 3zM4 13.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0z"></path></svg>`,
	4,
)

function ReOrderDotsHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 6a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm0 5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM8 14.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM13.5 6a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM15 9.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM13.5 16a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path></svg>`,
	4,
)

function ReOrderDotsVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 9.25h10.5a.75.75 0 01.1 1.5H2.75a.75.75 0 01-.1-1.5h10.6-10.5zm0-4h10.5a.75.75 0 01.1 1.5H2.75a.75.75 0 01-.1-1.5h10.6-10.5z"></path></svg>`,
	4,
)

function ReOrderIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6.5v-3a.5.5 0 011 0v1.2a7.98 7.98 0 017.94-2.46A8 8 0 112 9.48a.5.5 0 111 .07A6.97 6.97 0 003 10a7 7 0 101.25-4H6a.5.5 0 010 1H3.5a.5.5 0 01-.5-.5zm4.5 1.47c0-.93.98-1.54 1.81-1.12l4.04 2.03c.92.47.92 1.77 0 2.24l-4.04 2.03a1.25 1.25 0 01-1.81-1.12V7.97z"></path></svg>`,
	4,
)

function ReplayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.25 2A3.25 3.25 0 002 5.25v3a.75.75 0 001.5 0v-3c0-.97.78-1.75 1.75-1.75h3a.75.75 0 000-1.5h-3zm6.5 0a.75.75 0 000 1.5h3c.97 0 1.75.78 1.75 1.75v3a.75.75 0 001.5 0v-3C18 3.45 16.54 2 14.75 2h-3zm-9 9c.41 0 .75.34.75.75v3c0 .97.78 1.75 1.75 1.75h3a.75.75 0 010 1.5h-3A3.25 3.25 0 012 14.75v-3c0-.41.34-.75.75-.75zm15.25.75a.75.75 0 00-1.5 0v3c0 .97-.78 1.75-1.75 1.75h-3a.75.75 0 000 1.5h3c1.8 0 3.25-1.46 3.25-3.25v-3z"></path></svg>`,
	4,
)

function ResizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.25 2A3.25 3.25 0 002 5.25v3a.75.75 0 001.5 0v-3c0-.97.78-1.75 1.75-1.75h3a.75.75 0 000-1.5h-3zm6.5 0a.75.75 0 000 1.5h3c.97 0 1.75.78 1.75 1.75v3a.75.75 0 001.5 0v-3C18 3.45 16.54 2 14.75 2h-3zM18 11.75a.75.75 0 00-1.5 0v3c0 .97-.78 1.75-1.75 1.75h-3a.75.75 0 000 1.5h3c1.8 0 3.25-1.46 3.25-3.25v-3zM1 12.5A2.5 2.5 0 013.5 10h4a2.5 2.5 0 012.5 2.5v4c0 .5-.15.98-.41 1.38l-3.03-3.03a1.5 1.5 0 00-2.12 0L1.4 17.88C1.15 17.48 1 17 1 16.5v-4zm7 .25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-5.88 5.84c.4.26.87.41 1.38.41h4c.51 0 .98-.15 1.38-.41l-3.03-3.03a.5.5 0 00-.7 0L2.12 18.6z"></path></svg>`,
	4,
)

function ResizeImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 4C4.67 4 4 4.67 4 5.5v1a.5.5 0 01-1 0v-1A2.5 2.5 0 015.5 3h1a.5.5 0 010 1h-1zm1 1C5.67 5 5 5.67 5 6.5v7c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5h-7zm8-1c.83 0 1.5.67 1.5 1.5v1a.5.5 0 001 0v-1A2.5 2.5 0 0014.5 3h-1a.5.5 0 000 1h1zm0 12c.83 0 1.5-.67 1.5-1.5v-1a.5.5 0 011 0v1a2.5 2.5 0 01-2.5 2.5h-1a.5.5 0 010-1h1zm-9 0A1.5 1.5 0 014 14.5v-1.25a.5.5 0 00-1 0v1.25A2.5 2.5 0 005.5 17h1.25a.5.5 0 000-1H5.5z"></path></svg>`,
	4,
)

function ResizeLargeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 4C4.67 4 4 4.67 4 5.5v1a.5.5 0 01-1 0v-1A2.5 2.5 0 015.5 3h1a.5.5 0 010 1h-1zm3 3C7.67 7 7 7.67 7 8.5v3c0 .83.67 1.5 1.5 1.5h3c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-3zm6-3c.83 0 1.5.67 1.5 1.5v1a.5.5 0 001 0v-1A2.5 2.5 0 0014.5 3h-1a.5.5 0 000 1h1zm0 12c.83 0 1.5-.67 1.5-1.5v-1a.5.5 0 011 0v1a2.5 2.5 0 01-2.5 2.5h-1a.5.5 0 010-1h1zm-9 0A1.5 1.5 0 014 14.5v-1.25a.5.5 0 00-1 0v1.25A2.5 2.5 0 005.5 17h1.25a.5.5 0 000-1H5.5z"></path></svg>`,
	4,
)

function ResizeSmallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a3 3 0 00-3 3v2.35c.29-.32.62-.6 1-.81V5c0-1.1.9-2 2-2h3.5a.5.5 0 000-1H5zm10 16h-2.35c.32-.29.6-.62.81-1H15a2 2 0 002-2v-3.5a.5.5 0 011 0V15a3 3 0 01-3 3zM11.5 2a.5.5 0 000 1H15a2 2 0 012 2v3.5a.5.5 0 001 0V5a3 3 0 00-3-3h-3.5zM5 7a3 3 0 00-3 3h3V7zm0 4v3H2v-3h3zm0 4H2a3 3 0 003 3v-3zm1 0h3v3H6v-3zm0-1h3v-3H6v3zm4 1h3a3 3 0 01-3 3v-3zm0-4v3h3v-3h-3zm0-1V7a3 3 0 013 3h-3zM6 7h3v3H6V7z"></path></svg>`,
	4,
)

function ResizeTableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.25 2A3.25 3.25 0 002 5.25v3a.75.75 0 001.5 0v-3c0-.97.78-1.75 1.75-1.75h3a.75.75 0 000-1.5h-3zm6.5 0a.75.75 0 000 1.5h3c.97 0 1.75.78 1.75 1.75v3a.75.75 0 001.5 0v-3C18 3.45 16.54 2 14.75 2h-3zM18 11.75a.75.75 0 00-1.5 0v3c0 .97-.78 1.75-1.75 1.75h-3a.75.75 0 000 1.5h3c1.8 0 3.25-1.46 3.25-3.25v-3zM3.5 10h4a2.5 2.5 0 012.5 2.5v4A2.5 2.5 0 017.5 19h-4A2.5 2.5 0 011 16.5v-4A2.5 2.5 0 013.5 10zm.72 2.55a.5.5 0 00-.72.45v3a.5.5 0 00.72.45l3-1.5a.5.5 0 000-.9l-3-1.5z"></path></svg>`,
	4,
)

function ResizeVideoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.53 3c.82 0 1.5.67 1.5 1.5v1.4c0 .93-.53 1.8-1.37 2.22l-4.19 2.14a3.54 3.54 0 11-2.92 0L4.36 8.12a2.5 2.5 0 01-1.35-2.04L3 5.9V4.5C3 3.67 3.67 3 4.5 3h11.03zM10 10.95a2.54 2.54 0 100 5.07 2.54 2.54 0 000-5.07zM12.61 4h-5.2v4.55l2.38 1.22a.5.5 0 00.45 0l2.38-1.22V4z"></path></svg>`,
	4,
)

function RewardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 5.49a1 1 0 00-1.6-.8l-5.87 4.3c-.68.5-.68 1.52 0 2.02l5.88 4.31a1 1 0 001.59-.8v-3.17l5.4 3.97a1 1 0 001.6-.8V5.48a1 1 0 00-1.6-.8L10 8.64V5.49zm-1.6-.8l.3.39z"></path></svg>`,
	4,
)

function RewindIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.89 4.3A2 2 0 016.76 3H17a2 2 0 011.87 2.7l-3.76 10a2 2 0 01-1.87 1.3H3a2 2 0 01-1.87-2.7l3.76-10z"></path></svg>`,
	4,
)

function RhombusIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V5h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V6h1.5a.5.5 0 000-1H15V3.5zm-6 2c0-1.28.44-2.45 1.17-3.39A6 6 0 1014.2 11 5.5 5.5 0 019 5.5zM9 15c1.49 0 2.87-.46 4-1.25v3.75a.5.5 0 01-.8.4L9 16l-3.2 1.9a.5.5 0 01-.8-.4v-3.75A6.97 6.97 0 009 15z"></path></svg>`,
	4,
)

function RibbonAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 8A6 6 0 114 8a6 6 0 0112 0zm-6 7c1.49 0 2.87-.46 4-1.25v3.75a.5.5 0 01-.8.4L10 16l-3.2 1.9a.5.5 0 01-.8-.4v-3.75A6.97 6.97 0 0010 15z"></path></svg>`,
	4,
)

function RibbonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.62 5.33a6 6 0 008.04 8.04l.75.75A6.97 6.97 0 016 13.75v3.75a.5.5 0 00.8.4L10 16l3.2 1.9a.5.5 0 00.8-.4v-2.8l3.15 3.15a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7l2.47 2.48zm1.2-1.63l8.48 8.48A6 6 0 005.82 3.7z"></path></svg>`,
	4,
)

function RibbonOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 8A6 6 0 114 8a6 6 0 0112 0zM9.85 5.1l-.72 1.55a.18.18 0 01-.14.1l-1.7.2c-.14.02-.2.2-.1.3l1.26 1.17c.05.04.07.1.05.16l-.33 1.68c-.03.15.13.26.26.19l1.49-.84a.18.18 0 01.17 0l1.5.84c.12.07.28-.04.25-.19l-.33-1.68a.17.17 0 01.05-.16l1.26-1.16a.18.18 0 00-.1-.3l-1.7-.2a.17.17 0 01-.14-.1l-.72-1.56a.17.17 0 00-.31 0zM10 15c1.49 0 2.87-.46 4-1.25v3.75a.5.5 0 01-.8.4L10 16l-3.2 1.9a.5.5 0 01-.8-.4v-3.75A6.97 6.97 0 0010 15z"></path></svg>`,
	4,
)

function RibbonStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.42 2.76A1 1 0 019.4 2h1.23a1 1 0 01.96.74L15.38 17h2.12a.5.5 0 010 1h-15a.5.5 0 010-1h2.11l.8-3h6.09a.5.5 0 000-1H5.69l.45-1.63.1-.37h4.26a.5.5 0 000-1H6.52c.68-2.48 1.35-4.96 1.9-7.24z"></path></svg>`,
	4,
)

function RoadConeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.76 6.43a2 2 0 112.82 2.82 2 2 0 01-2.82-2.82zm2.11.7a1 1 0 10-1.4 1.41 1 1 0 001.4-1.4zM9.44 13.6l.6.6a1.5 1.5 0 001.71.3l1.12 1.12c.2.2.51.2.7 0L15 14.2c.86-.86.96-2.17.31-3.14l.85-.85a6.3 6.3 0 001.56-6.33 2.43 2.43 0 00-1.6-1.6A6.3 6.3 0 009.8 3.86l-.85.85A2.5 2.5 0 005.8 5L4.4 6.43a.5.5 0 000 .7L5.5 8.27a1.5 1.5 0 00.29 1.7l.61.61-1.22.73a.5.5 0 00-.1.78l2.83 2.83a.5.5 0 00.79-.1l.73-1.21zm7.32-9.42a5.3 5.3 0 01-1.3 5.33l-4 4a.5.5 0 01-.7 0l-1.07-1.07-2.12-2.12L6.5 9.24a.5.5 0 010-.7l4-4a5.3 5.3 0 015.32-1.3c.44.13.8.48.93.93zM5.81 14.91a.5.5 0 10-.71-.7l-1.77 1.76a.5.5 0 10.7.7l1.78-1.76zm-1.42-2.12c.2.2.2.5 0 .7l-.7.71a.5.5 0 11-.72-.7l.71-.71c.2-.2.51-.2.71 0zm2.83 3.53a.5.5 0 10-.7-.7l-.72.7a.5.5 0 10.71.71l.71-.7z"></path></svg>`,
	4,
)

function RocketIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.39 12a.53.53 0 01-.54-.52c0-.29.24-.52.54-.52h.35c1.77 0 3.2-1.08 3.2-2.42 0-1.3-1.35-2.36-3.04-2.42H7.82L9.04 7.3c.2.2.2.53 0 .73a.54.54 0 01-.7.05l-.06-.05-2.12-2.08a.51.51 0 010-.73l2.12-2.08.06-.05c.21-.15.5-.13.7.05.2.2.2.53 0 .74L7.82 5.08h4.92C15.1 5.08 17 6.63 17 8.54S15.1 12 12.74 12h-.35zm-9-3c-.21 0-.39.17-.39.38v6.87c0 .41.36.75.8.75h12.8a.4.4 0 00.35-.19.37.37 0 00-.15-.51L3.6 9.05A.41.41 0 003.4 9z"></path></svg>`,
	4,
)

function RotateLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.61 12c.3 0 .54-.23.54-.52a.53.53 0 00-.54-.52h-.35c-1.77 0-3.2-1.08-3.2-2.42 0-1.3 1.35-2.36 3.04-2.42h5.08L10.96 7.3c-.2.2-.2.53 0 .73.2.18.49.2.7.05l.06-.05 2.12-2.08c.21-.2.21-.53 0-.73l-2.12-2.08-.06-.05a.54.54 0 00-.7.05c-.2.2-.2.53 0 .74l1.22 1.19H7.26C4.9 5.08 3 6.63 3 8.54S4.9 12 7.26 12h.35zm9-3c.21 0 .39.17.39.38v6.87c0 .41-.36.75-.8.75H3.4a.4.4 0 01-.35-.19.37.37 0 01.15-.51l13.2-7.25a.41.41 0 01.2-.05z"></path></svg>`,
	4,
)

function RotateRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 9.5a6.5 6.5 0 0113 0 .5.5 0 001 0 7.5 7.5 0 00-15 0 .5.5 0 001 0zm6.5-4a4 4 0 00-4 4 .5.5 0 01-1 0 5 5 0 0110 0 .5.5 0 01-1 0 4 4 0 00-4-4zM7.75 9.25a2.25 2.25 0 112.75 2.2V13h4a2.5 2.5 0 010 5h-9a2.5 2.5 0 010-5h4v-1.56a2.25 2.25 0 01-1.75-2.19z"></path></svg>`,
	4,
)

function RouterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2C3.67 2 3 2.67 3 3.5v1C3 5.33 3.67 6 4.5 6h11c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-11zm0 6C3.67 8 3 8.67 3 9.5v1c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-11zm0 6c-.83 0-1.5.67-1.5 1.5v1c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-1c0-.83-.67-1.5-1.5-1.5h-11z"></path></svg>`,
	4,
)

function RowTripleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zm.5 3a7.5 7.5 0 017.5 7.5.5.5 0 01-1 0A6.5 6.5 0 006.5 7a.5.5 0 010-1zM6 9.5c0-.28.22-.5.5-.5a4.5 4.5 0 014.5 4.5.5.5 0 01-1 0A3.5 3.5 0 006.5 10a.5.5 0 01-.5-.5zM7 14a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function RssIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.97 3.2l.03.3v13c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 016 16.5v-13A1.5 1.5 0 017.5 2h5c.72 0 1.33.51 1.47 1.2zM7 14.5v1h1.5a.5.5 0 000-1H7zm0-10v1h1.5a.5.5 0 000-1H7zM7 7v1h2.5a.5.5 0 000-1H7zm0 2.5v1h1.5a.5.5 0 000-1H7zM7 12v1h2.5a.5.5 0 100-1H7z"></path></svg>`,
	4,
)

function RulerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.31 2.04a.5.5 0 01.35-.01l6 2a.5.5 0 01.07.92h-.03a6.13 6.13 0 00-.37.22c-.25.15-.58.36-.91.62a5.8 5.8 0 00-.94.87c-.22.27-.38.53-.45.78l1.86 3.72 2 1.33A2.5 2.5 0 0118 14.57v1.93a.5.5 0 01-.48.5l-.02-.5.02.5h-.04a6.42 6.42 0 01-.47 0 21.98 21.98 0 01-5.65-.84c-3.32-.95-7.23-3.02-9.31-7.45a.5.5 0 010-.43A12.43 12.43 0 015.2 4.59a16.2 16.2 0 014.12-2.55zM17 15.47c-7.41-.6-11.41-4.2-13.55-7.58-.15.2-.28.41-.39.62 1.94 3.92 5.46 5.8 8.58 6.7A20.97 20.97 0 0017 16v-.54zM5.96 5.25l1.9 1.9a.5.5 0 01.13.42l-.48 3.4c.7.56 1.5 1.08 2.4 1.55l1.48-1.6-2.33-4.18a.5.5 0 01.6-.71l2.52.84c.13-.31.32-.6.53-.84a6.78 6.78 0 011.6-1.4l-4.8-1.6c-1.1.47-2.38 1.27-3.55 2.22zm7.8 8.7c1 .24 2.07.41 3.24.51a1.5 1.5 0 00-.67-1.14l-1.65-1.1-.92 1.73z"></path></svg>`,
	4,
)

function RunIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.77 5.23a2.5 2.5 0 000 3.54l3.46 3.46c.11.11.23.2.35.3.04-.13.1-.25.17-.36.4-.6.9-1.02 1.49-1.27.26-.1.51-.17.76-.2V7.5a1.5 1.5 0 012.05-1.4c.07-.25.2-.48.39-.66L8.77 2.77a2.5 2.5 0 00-3.54 0L2.77 5.23zM12.5 6a.5.5 0 00-.5.5v5a.5.5 0 11-1 0v-4a.5.5 0 00-1 0v4.25a2.08 2.08 0 00-1.38.08c-.38.16-.74.44-1.04.9a.5.5 0 00.22.73 5.26 5.26 0 012.71 2.37c.55 1.03 1.6 2.17 2.99 2.17h.26A2.5 2.5 0 0016 16.62l.63-1.26a3.5 3.5 0 00.37-1.57V7.5a.5.5 0 00-1 0v4a.5.5 0 11-1 0v-5a.5.5 0 00-1 0v5a.5.5 0 11-1 0v-5a.5.5 0 00-.5-.5zm-9 6c.28 0 .5.22.5.5v.5h.5a.5.5 0 010 1H4v.5a.5.5 0 11-1 0V14h-.5a.5.5 0 110-1H3v-.5c0-.28.22-.5.5-.5zm3 3c.28 0 .5.22.5.5v.5h.5a.5.5 0 010 1H7v.5a.5.5 0 11-1 0V17h-.5a.5.5 0 110-1H6v-.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function SanitizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h1v3.5C6 7.33 6.67 8 7.5 8h4c.83 0 1.5-.67 1.5-1.5V3h.38a2 2 0 011.41.59l1.62 1.62A2 2 0 0117 6.62V9.6a5.48 5.48 0 00-5.66.4H6.5c-.83 0-1.5.67-1.5 1.5V17a2 2 0 01-2-2V5zm6 9.5c0-1.33.47-2.55 1.26-3.5H6.5a.5.5 0 00-.5.5V17h3.6c-.38-.75-.6-1.6-.6-2.5zM12 3H7v3.5c0 .28.22.5.5.5h4a.5.5 0 00.5-.5V3zm7 11.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function SaveArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5v9A2.5 2.5 0 004.5 16h9a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0013.5 2h-9zm5 4.5v2h2a.5.5 0 010 1h-2v2a.5.5 0 01-1 0v-2h-2a.5.5 0 010-1h2v-2a.5.5 0 011 0zM7.5 18c-.95 0-1.82-.38-2.45-1h9.45a2.5 2.5 0 002.5-2.5V5.05c.62.63 1 1.5 1 2.45v7a3.5 3.5 0 01-3.5 3.5h-7z"></path></svg>`,
	4,
)

function SaveCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2v-5.5c0-.83.67-1.5 1.5-1.5h6.44l1.16-1.16a2.87 2.87 0 012.9-.7V6.61a2 2 0 00-.59-1.41L14.8 3.59A2 2 0 0013.38 3H13v3.5c0 .83-.67 1.5-1.5 1.5h-4A1.5 1.5 0 016 6.5V3H5zm6.94 8l-2.67 2.67c-.4.41-.7.92-.84 1.49l-.37 1.5c-.03.11-.05.23-.06.34H6v-5.5c0-.28.22-.5.5-.5h5.44zM7 3h5v3.5a.5.5 0 01-.5.5h-4a.5.5 0 01-.5-.5V3zm7.8 6.55l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function SaveEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h1v3.5C6 7.33 6.67 8 7.5 8h4c.83 0 1.5-.67 1.5-1.5V3h.38a2 2 0 011.41.59l1.62 1.62A2 2 0 0117 6.62V15a2 2 0 01-2 2v-5.5c0-.83-.67-1.5-1.5-1.5h-7c-.83 0-1.5.67-1.5 1.5V17a2 2 0 01-2-2V5zm9-2H7v3.5c0 .28.22.5.5.5h4a.5.5 0 00.5-.5V3zm2 8.5V17H6v-5.5c0-.28.22-.5.5-.5h7c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function SaveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 2a2 2 0 00-2 2v10c0 1.1.9 2 2 2v-5.5C5 9.67 5.67 9 6.5 9h10c.17 0 .34.01.5.04V5.62a2 2 0 00-.59-1.41L14.8 2.59A2 2 0 0013.38 2H13v3.5c0 .83-.67 1.5-1.5 1.5h-4A1.5 1.5 0 016 5.5V2H5zm5.05 8A3.49 3.49 0 009 12.5V16H6v-5.5c0-.28.22-.5.5-.5h3.55zM12 2H7v3.5c0 .28.22.5.5.5h4a.5.5 0 00.5-.5V2zm-2 10.5a2.5 2.5 0 012.5-2.5h4a2.5 2.5 0 012.5 2.5v4c0 .5-.15.98-.41 1.38l-3.03-3.03a1.5 1.5 0 00-2.12 0l-3.03 3.03c-.26-.4-.41-.87-.41-1.38v-4zm7 .25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-5.88 5.84c.4.26.87.41 1.38.41h4c.5 0 .98-.15 1.38-.41l-3.03-3.03a.5.5 0 00-.7 0l-3.03 3.03z"></path></svg>`,
	4,
)

function SaveImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 5.5V3H5a2 2 0 00-2 2v8c0 1.1.9 2 2 2v-4.5C5 9.67 5.67 9 6.5 9h5c.83 0 1.5.67 1.5 1.5V15a2 2 0 002-2V6.62a2 2 0 00-.59-1.41L12.8 3.59A2 2 0 0011.38 3H11v2.5c0 .83-.67 1.5-1.5 1.5h-2A1.5 1.5 0 016 5.5zm1 0V3h3v2.5a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5zm5 9.5H6v-4.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5V15zm-3.5 2c-.95 0-1.82-.38-2.45-1h7.45a2.5 2.5 0 002.5-2.5V6.05c.62.63 1 1.5 1 2.45v5a3.5 3.5 0 01-3.5 3.5h-5z"></path></svg>`,
	4,
)

function SaveMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h1v3.5C6 7.33 6.67 8 7.5 8h4c.83 0 1.5-.67 1.5-1.5V3h.38a2 2 0 011.41.59l1.62 1.62A2 2 0 0117 6.62V15a2 2 0 01-2 2v-5.5c0-.83-.67-1.5-1.5-1.5H9.33a4.5 4.5 0 00-6.33.67V5zm7.56 10.44L12.12 17H14v-5.5a.5.5 0 00-.5-.5h-3.26a4.5 4.5 0 01.32 4.44zM12 3H7v3.5c0 .28.22.5.5.5h4a.5.5 0 00.5-.5V3zm-2 10.5c0 .79-.26 1.51-.7 2.1l2.55 2.55a.5.5 0 01-.7.7L8.6 16.3a3.5 3.5 0 111.4-2.8zm-6 0a2.5 2.5 0 105 0 2.5 2.5 0 00-5 0z"></path></svg>`,
	4,
)

function SaveSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h1v3.5C6 7.33 6.67 8 7.5 8h4c.83 0 1.5-.67 1.5-1.5V3h.38a2 2 0 011.41.59l1.62 1.62A2 2 0 0117 6.62V9.6a5.48 5.48 0 00-5.66.4H6.5c-.83 0-1.5.67-1.5 1.5V17a2 2 0 01-2-2V5zm6 9.5c0-1.33.47-2.55 1.26-3.5H6.5a.5.5 0 00-.5.5V17h3.6c-.38-.75-.6-1.6-.6-2.5zM12 3H7v3.5c0 .28.22.5.5.5h4a.5.5 0 00.5-.5V3zm-2 11.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H15a.5.5 0 010-1h.47a1.97 1.97 0 00-.94-.25 2 2 0 00-1.44.59.5.5 0 01-.71-.71 3 3 0 013.62-.48V12c0-.28.22-.5.5-.5zm-.88 5.53a3 3 0 01-2.62-.18V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H14a.5.5 0 010 1h-.47a1.97 1.97 0 00.94.25 2 2 0 001.44-.59.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function SaveSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.65 4.06l.18.02a4.5 4.5 0 00-.7 3.2c.15.98.91 1.6 1.6 1.87l3.03 1.26c.68.29 1.65.39 2.46-.2a4.5 4.5 0 001.49-1.86c.19.58.29 1.23.29 1.96 0 1.75-.54 2.98-1.09 3.78a4.95 4.95 0 01-.91 1v1.41c0 .83-.67 1.5-1.5 1.5h-1.38c-.62 0-1.12-.5-1.12-1.12a.12.12 0 00-.12-.11h-1.76a.12.12 0 00-.12.11C10 17.5 9.5 18 8.88 18H7.5A1.5 1.5 0 016 16.5v-.54l-.16-.1c-.28-.18-.69-.5-1.2-1-.62-.64-1-1.34-1.2-1.8-.07-.17-.2-.27-.33-.3-.64-.1-1.11-.65-1.11-1.3V9.95c0-.63.45-1.17 1.08-1.27.11-.02.24-.13.3-.3a4.4 4.4 0 011-1.71A6.63 6.63 0 016 5.47v-2.3c0-.36.23-.61.48-.71.25-.1.58-.08.83.15.29.28.68.63 1.11.92.44.3.87.5 1.23.53zM6.75 9.5a.75.75 0 100-1.5.75.75 0 000 1.5zm10.29-2.46a3.5 3.5 0 01-1.4 2.36c-.43.31-1 .3-1.5.09l-3.03-1.26c-.48-.2-.88-.56-.98-1.05l-.02-.07a3.5 3.5 0 116.93-.07z"></path></svg>`,
	4,
)

function SavingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm3.3 1.04a.5.5 0 00-.3.46v2a.5.5 0 001 0v-.8l1.15 1.15a.5.5 0 10.7-.7L7.71 7h.79a.5.5 0 000-1h-2a.5.5 0 00-.2.04zM6 11.5v2a.5.5 0 00.14.35.5.5 0 00.36.15h2a.5.5 0 000-1h-.8l1.15-1.15a.5.5 0 00-.7-.7L7 12.29v-.79a.5.5 0 00-1 0zm7.85-5.36A.5.5 0 0013.5 6h-2a.5.5 0 000 1h.8l-1.15 1.15a.5.5 0 00.7.7L13 7.71v.79a.5.5 0 001 0v-2a.5.5 0 00-.14-.35zm-.16 7.82a.5.5 0 00.3-.46v-2a.5.5 0 00-.99 0v.8l-1.15-1.15a.5.5 0 00-.7.7L12.29 13h-.79a.5.5 0 000 1h2a.5.5 0 00.2-.04z"></path></svg>`,
	4,
)

function ScaleFillIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$99 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2zm11.12 6.08a.5.5 0 01.05-.7l1-.88H11.5a.5.5 0 010-1h2.67l-1-.87a.5.5 0 01.66-.76l2 1.75a.5.5 0 010 .76l-2 1.75a.5.5 0 01-.7-.05zM6.88 7.92a.5.5 0 01-.05.7l-1 .88H8.5a.5.5 0 010 1H5.83l1 .87a.5.5 0 01-.66.76l-2-1.75a.5.5 0 010-.76l2-1.75a.5.5 0 01.7.05z"></path></svg>`,
	4,
)

function ScaleFitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$99.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$98 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 3a.5.5 0 000 1h.75L2.08 9.22a.95.95 0 00-.08.4 3 3 0 006 0 .95.95 0 00-.08-.4L5.75 4H9.5v11h-4a1.5 1.5 0 000 3h9a1.5 1.5 0 000-3h-4V4h3.75l-2.17 5.22a.95.95 0 00-.08.4 3 3 0 006 0 .95.95 0 00-.08-.4L15.75 4h.75a.5.5 0 000-1h-13zM5 4.8L6.75 9h-3.5L5 4.8zM16.75 9h-3.5L15 4.8 16.75 9z"></path></svg>`,
	4,
)

function ScalesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$98.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$97 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6.25C3 4.45 4.46 3 6.25 3H7.6a.75.75 0 110 1.5H6.25c-.97 0-1.75.78-1.75 1.75V7.6a.75.75 0 11-1.5 0V6.25zm8.65-2.5c0-.41.34-.75.75-.75h1.35C15.55 3 17 4.46 17 6.25V7.6a.75.75 0 01-1.5 0V6.25c0-.97-.78-1.75-1.75-1.75H12.4a.75.75 0 01-.75-.75zm-7.9 7.9c.41 0 .75.34.75.75v1.35c0 .97.78 1.75 1.75 1.75H7.6a.75.75 0 010 1.5H6.25A3.25 3.25 0 013 13.75V12.4c0-.41.34-.75.75-.75zm12.5 0c.41 0 .75.34.75.75v1.35c0 1.8-1.46 3.25-3.25 3.25H12.4a.75.75 0 010-1.5h1.35c.97 0 1.75-.78 1.75-1.75V12.4c0-.41.34-.75.75-.75zM10 11a1 1 0 100-2 1 1 0 000 2zm-4 1V9a1 1 0 011-1h1l.7-1.05a1 1 0 01.84-.45h.92a1 1 0 01.84.45L12 8h1a1 1 0 011 1v3a1 1 0 01-1 1H7a1 1 0 01-1-1zm6-2a2 2 0 10-4 0 2 2 0 004 0z"></path></svg>`,
	4,
)

function ScanCameraIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$97.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$96 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 3A3.25 3.25 0 003 6.25V7.6a.75.75 0 101.5 0V6.25c0-.97.78-1.75 1.75-1.75H7.6a.75.75 0 100-1.5H6.25zm6.15 0a.75.75 0 000 1.5h1.35c.97 0 1.75.78 1.75 1.75V7.6a.75.75 0 001.5 0V6.25C17 4.45 15.54 3 13.75 3H12.4zm-7.9 9.4a.75.75 0 00-1.5 0v1.35C3 15.55 4.46 17 6.25 17H7.6a.75.75 0 000-1.5H6.25c-.97 0-1.75-.78-1.75-1.75V12.4zm12.5 0a.75.75 0 00-1.5 0v1.35c0 .97-.78 1.75-1.75 1.75H12.4a.75.75 0 000 1.5h1.35c1.8 0 3.25-1.46 3.25-3.25V12.4zM6.75 9.25a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z"></path></svg>`,
	4,
)

function ScanDashIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$96.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$95 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.7 3.5L7.02 8.19l-.18.33-1.65-2.87A6.48 6.48 0 019.7 3.51zM8.28 9l.03-.05a2 2 0 013.43.05l.03.06a2 2 0 01-.03 1.94l-.03.05A2 2 0 018.27 11l-.03-.06A2 2 0 018.27 9zm-1.35 2.67l.2.33h-3.3a6.5 6.5 0 01.41-5l2.7 4.67zM10 13.5l.3-.01-1.66 2.87a6.5 6.5 0 01-4.12-2.86H10zm2.99-1.68l.18-.33 1.65 2.87a6.48 6.48 0 01-4.53 2.13l2.7-4.67zm.09-3.49a3.52 3.52 0 00-.2-.33h3.3a6.5 6.5 0 01-.41 5l-2.7-4.67zM10 6.5l-.3.01 1.66-2.87a6.5 6.5 0 014.12 2.86H10zM10 2a8 8 0 100 16 8 8 0 000-16z"></path></svg>`,
	4,
)

function ScanIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$95.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$94 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4.5C3 3.67 3.67 3 4.5 3h2a.5.5 0 000-1h-2A2.5 2.5 0 002 4.5v2a.5.5 0 001 0v-2zm14 11c0 .83-.67 1.5-1.5 1.5h-2a.5.5 0 000 1h2a2.5 2.5 0 002.5-2.5v-2a.5.5 0 00-1 0v2zM15.5 3c.83 0 1.5.67 1.5 1.5v2a.5.5 0 001 0v-2A2.5 2.5 0 0015.5 2h-2a.5.5 0 000 1h2zM3 15.5c0 .83.67 1.5 1.5 1.5h2a.5.5 0 010 1h-2A2.5 2.5 0 012 15.5v-2a.5.5 0 011 0v2zm8.23-8.6a1.5 1.5 0 00-2.46 0l-2.6 3.75A1.5 1.5 0 007.42 13h5.18a1.5 1.5 0 001.23-2.35L11.23 6.9z"></path></svg>`,
	4,
)

function ScanObjectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$94.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$93 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5c-.83 0-1.5.67-1.5 1.5v1.75a.75.75 0 01-1.5 0V6a3 3 0 013-3h1.75a.75.75 0 010 1.5H6zM6 8c0-1.1.9-2 2-2h4a2 2 0 012 2H6zm0 1v3c0 1.1.9 2 2 2h4a2 2 0 002-2V9H6zm6.25-6a.75.75 0 000 1.5H14c.83 0 1.5.67 1.5 1.5v1.75a.75.75 0 001.5 0V6a3 3 0 00-3-3h-1.75zm-8.5 8.5c.41 0 .75.34.75.75V14c0 .83.67 1.5 1.5 1.5h1.75a.75.75 0 010 1.5H6a3 3 0 01-3-3v-1.75c0-.41.34-.75.75-.75zm13.25.75a.75.75 0 00-1.5 0V14c0 .83-.67 1.5-1.5 1.5h-1.75a.75.75 0 000 1.5H14a3 3 0 003-3v-1.75z"></path></svg>`,
	4,
)

function ScanTableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$93.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$92 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5c-.83 0-1.5.67-1.5 1.5v1.75a.75.75 0 01-1.5 0V6a3 3 0 013-3h1.75a.75.75 0 010 1.5H6zm0 2.25c0-.41.34-.75.75-.75h6.5a.75.75 0 010 1.5h-6.5A.75.75 0 016 6.75zm0 3c0-.41.34-.75.75-.75h6.5a.75.75 0 010 1.5h-6.5A.75.75 0 016 9.75zM6.75 12a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5zm5.5-9a.75.75 0 000 1.5H14c.83 0 1.5.67 1.5 1.5v1.75a.75.75 0 001.5 0V6a3 3 0 00-3-3h-1.75zm-8.5 8.5c.41 0 .75.34.75.75V14c0 .83.67 1.5 1.5 1.5h1.75a.75.75 0 010 1.5H6a3 3 0 01-3-3v-1.75c0-.41.34-.75.75-.75zm13.25.75a.75.75 0 00-1.5 0V14c0 .83-.67 1.5-1.5 1.5h-1.75a.75.75 0 000 1.5H14a3 3 0 003-3v-1.75z"></path></svg>`,
	4,
)

function ScanTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$92.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$91 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 4.5C3 3.67 3.67 3 4.5 3h2a.5.5 0 000-1h-2A2.5 2.5 0 002 4.5v2a.5.5 0 001 0v-2zm14 11c0 .83-.67 1.5-1.5 1.5h-2a.5.5 0 000 1h2a2.5 2.5 0 002.5-2.5v-2a.5.5 0 00-1 0v2zM15.5 3c.83 0 1.5.67 1.5 1.5v2a.5.5 0 001 0v-2A2.5 2.5 0 0015.5 2h-2a.5.5 0 000 1h2zM3 15.5c0 .83.67 1.5 1.5 1.5h2a.5.5 0 010 1h-2A2.5 2.5 0 012 15.5v-2a.5.5 0 011 0v2zM9.52 5.4c.2-.47.8-1.08 1.63-.85.54.14.92.46 1.13.9.19.39.22.81.23 1.15 0 .36-.06.76-.14 1.1h.28c1.2 0 2.13 1.13 1.77 2.3l-.92 3a2.2 2.2 0 01-2.74 1.4l-3.6-1.08a1.82 1.82 0 01-1.19-1.07l-.35-.89c-.32-.83.03-1.74.8-2.18l1.24-.7.03-.02c.04-.04.12-.1.22-.21.2-.22.5-.6.79-1.2l.36-.71c.18-.33.3-.58.46-.94z"></path></svg>`,
	4,
)

function ScanThumbUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$91.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$90 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.41 3.12C2.15 3.52 2 4 2 4.5v2a.5.5 0 001 0v-2c0-.23.05-.45.15-.65l4.57 4.58a1.42 1.42 0 01-.06.05l-1.24.7a1.76 1.76 0 00-.8 2.18l.35.9c.2.51.65.9 1.18 1.06l3.61 1.08c.85.26 1.75-.01 2.3-.63l3.09 3.08c-.2.1-.42.15-.65.15h-2a.5.5 0 000 1h2c.5 0 .98-.15 1.38-.41l.27.26a.5.5 0 00.7-.7l-15-15a.5.5 0 10-.7.7l.26.27zm6.45 3.62l5.02 5.02.54-1.76c.36-1.17-.56-2.3-1.77-2.3h-.28c.08-.34.14-.74.14-1.1-.01-.34-.04-.76-.23-1.15a1.68 1.68 0 00-1.13-.9c-.83-.23-1.43.38-1.63.85-.15.36-.28.61-.45.94a37 37 0 00-.21.4zM17 14.88l.98.97.02-.35v-2a.5.5 0 00-1 0v1.38zM4.15 2.02l.97.98H6.5a.5.5 0 000-1h-2c-.12 0-.24 0-.35.02zM15.5 3c.83 0 1.5.67 1.5 1.5v2a.5.5 0 001 0v-2A2.5 2.5 0 0015.5 2h-2a.5.5 0 000 1h2zM3 15.5c0 .83.67 1.5 1.5 1.5h2a.5.5 0 010 1h-2A2.5 2.5 0 012 15.5v-2a.5.5 0 011 0v2z"></path></svg>`,
	4,
)

function ScanThumbUpOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$90.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 3.5c-.69 0-1.25.56-1.25 1.25v1.5a.75.75 0 01-1.5 0v-1.5A2.75 2.75 0 014.75 2h1.5a.75.75 0 010 1.5h-1.5zm0 13c-.69 0-1.25-.56-1.25-1.25v-1.5a.75.75 0 00-1.5 0v1.5A2.75 2.75 0 004.75 18h1.5a.75.75 0 000-1.5h-1.5zM16.5 4.75c0-.69-.56-1.25-1.25-1.25h-1.5a.75.75 0 010-1.5h1.5A2.75 2.75 0 0118 4.75v1.5a.75.75 0 01-1.5 0v-1.5zM6.5 5a.75.75 0 00-.75.75v1a.75.75 0 001.5 0V6.5h2v6.36a5.5 5.5 0 011.5-2.38V6.5h2v.25a.75.75 0 001.5 0v-1A.75.75 0 0013.5 5h-7zm1.25 8.5h1.34a5.53 5.53 0 00-.07 1.5H7.75a.75.75 0 010-1.5zm11.25 1a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-5.5.8l-.65-.65a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 00-.7-.7l-2.65 2.64z"></path></svg>`,
	4,
)

function ScanTypeCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 3.5c-.69 0-1.25.56-1.25 1.25v1.5a.75.75 0 01-1.5 0v-1.5A2.75 2.75 0 014.75 2h1.5a.75.75 0 010 1.5h-1.5zm0 13c-.69 0-1.25-.56-1.25-1.25v-1.5a.75.75 0 00-1.5 0v1.5A2.75 2.75 0 004.75 18h1.5a.75.75 0 000-1.5h-1.5zM16.5 4.75c0-.69-.56-1.25-1.25-1.25h-1.5a.75.75 0 010-1.5h1.5A2.75 2.75 0 0118 4.75v1.5a.75.75 0 01-1.5 0v-1.5zM15.25 16.5c.69 0 1.25-.56 1.25-1.25v-1.5a.75.75 0 011.5 0v1.5A2.75 2.75 0 0115.25 18h-1.5a.75.75 0 010-1.5h1.5zM6.5 5a.75.75 0 00-.75.75v1a.75.75 0 001.5 0V6.5h2v7H9A.75.75 0 009 15h2a.75.75 0 000-1.5h-.25v-7h2v.25a.75.75 0 001.5 0v-1A.75.75 0 0013.5 5h-7z"></path></svg>`,
	4,
)

function ScanTypeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.48 3.2c-.3.43-.48.97-.48 1.55v1.5a.75.75 0 001.5 0v-1.5c0-.16.03-.32.09-.46l2.16 2.17v.29a.75.75 0 001 .7l2.5 2.5v3.55H9A.75.75 0 009 15h2a.75.75 0 000-1.5h-.25v-2.04l4.96 4.95c-.14.06-.3.09-.46.09h-1.5a.75.75 0 000 1.5h1.5c.58 0 1.12-.18 1.56-.48l.34.33a.5.5 0 00.7-.7l-.33-.34-1.1-1.1L5.94 5.24 4.29 3.6l-1.1-1.1-.34-.34a.5.5 0 10-.7.7l.33.34zM18 15.24c0 .2-.02.39-.06.57l-1.44-1.44v-.63a.75.75 0 011.5 0v1.5zM10.75 6.5v2.13l-1.5-1.5V6.5h-.63L7.12 5h6.38c.41 0 .75.34.75.75v1a.75.75 0 01-1.5 0V6.5h-2zm-4.5-3h-.63L4.18 2.06c.18-.04.37-.06.57-.06h1.5a.75.75 0 010 1.5zm-1.5 13c-.69 0-1.25-.56-1.25-1.25v-1.5a.75.75 0 00-1.5 0v1.5A2.75 2.75 0 004.75 18h1.5a.75.75 0 000-1.5h-1.5zM16.5 4.75c0-.69-.56-1.25-1.25-1.25h-1.5a.75.75 0 010-1.5h1.5A2.75 2.75 0 0118 4.75v1.5a.75.75 0 01-1.5 0v-1.5z"></path></svg>`,
	4,
)

function ScanTypeOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2C3.67 2 3 2.67 3 3.5v13c0 .83.67 1.5 1.5 1.5H12v-.7A5.5 5.5 0 018 12H6.5a.5.5 0 010-1h1.59c.2-.58.76-1 1.41-1v-.5h-3a.5.5 0 010-1h3c0-.53.1-1.04.3-1.5H6.5a.5.5 0 010-1h3.88a4 4 0 016.62.56V3.5c0-.83-.67-1.5-1.5-1.5h-11zm9 3.5a3 3 0 00-3 3v3a3 3 0 106 0v-3a3 3 0 00-3-3zm-4 5.5c.28 0 .5.22.5.5v.5a3.5 3.5 0 107 0v-.5a.5.5 0 011 0v.5a4.5 4.5 0 01-4 4.47V18a.5.5 0 01-1 0v-1.53A4.5 4.5 0 019 12v-.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function ScratchpadIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a1 1 0 011-1h.5a.5.5 0 100-1H4a2 2 0 00-2 2v.5a.5.5 0 101 0V6z"></path><path d="M4 14a1 1 0 01-1-1v-.5a.5.5 0 00-1 0v.5c0 1.1.9 2 2 2h.25a.5.5 0 000-1H4z"></path><path d="M2.5 8c.28 0 .5.22.5.5v2a.5.5 0 11-1 0v-2c0-.28.22-.5.5-.5z"></path><path d="M17 6a1 1 0 00-1-1h-.5a.5.5 0 010-1h.5a2 2 0 012 2v.5a.5.5 0 01-1 0V6z"></path><path d="M17 13a1 1 0 01-1 1h-.25a.5.5 0 000 1H16a2 2 0 002-2v-.5a.5.5 0 00-1 0v.5z"></path><path d="M17 8.5a.5.5 0 011 0v2a.5.5 0 11-1 0v-2z"></path><path d="M6 4.5c0-.28.22-.5.5-.5H9a.5.5 0 010 1H6.5a.5.5 0 01-.5-.5z"></path><path d="M11 4a.5.5 0 000 1h2.5a.5.5 0 000-1H11z"></path><path d="M5 6a1 1 0 00-1 1v5a1 1 0 001 1h2.7l.5-.74-1.96-2.93a1.5 1.5 0 112.5-1.66L10 9.55l1.25-1.88a1.5 1.5 0 012.5 1.66l-1.95 2.93.5.74H15a1 1 0 001-1V7a1 1 0 00-1-1H5z"></path><path d="M7.22 8.09a.5.5 0 00-.14.69l2.31 3.48-1.23 1.85a2 2 0 00-2.51 2.64 2 2 0 103.34-2.08l1-1.51L11 14.67a2 2 0 10.84-.55l-1.24-1.86-.6-.9L7.9 8.23a.5.5 0 00-.7-.14zM12.5 17a1 1 0 110-2 1 1 0 010 2zm-5 0a1 1 0 110-2 1 1 0 010 2z"></path><path d="M10.6 10.45l.6.9 1.72-2.57a.5.5 0 00-.14-.7.5.5 0 00-.7.15l-1.48 2.22z"></path></svg>`,
	24,
)

function ScreenCutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4a3 3 0 00-3 3v6a3 3 0 003 3h6.05a2.5 2.5 0 012.22-1.99A2.99 2.99 0 0115.5 9a3 3 0 012.5 1.34V7a3 3 0 00-3-3H5zm12.5 8a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function ScreenPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v6.5A2.75 2.75 0 0115.25 16h-5.13l-1.56-1.56A4.5 4.5 0 002 8.76V6.75zM4.5 16c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L7.3 14.6A3.5 3.5 0 104.5 16zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function ScreenSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5c0-1.1.9-2 2-2zm1.5 2C5.67 5 5 5.67 5 6.5v2a.5.5 0 001 0v-2c0-.28.22-.5.5-.5h2a.5.5 0 000-1h-2zm5 0a.5.5 0 000 1h2c.28 0 .5.22.5.5v2a.5.5 0 001 0v-2c0-.83-.67-1.5-1.5-1.5h-2zM6 11.5a.5.5 0 00-1 0v2c0 .83.67 1.5 1.5 1.5h2a.5.5 0 000-1h-2a.5.5 0 01-.5-.5v-2zm9 0a.5.5 0 00-1 0v2a.5.5 0 01-.5.5h-2a.5.5 0 000 1h2c.83 0 1.5-.67 1.5-1.5v-2z"></path></svg>`,
	4,
)

function ScreenshotIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3a5.5 5.5 0 014.38 8.82l4.15 4.15a.75.75 0 01-.98 1.13l-.08-.07-4.15-4.15A5.5 5.5 0 118.5 3zm0 1.5a4 4 0 100 8 4 4 0 000-8z"></path></svg>`,
	4,
)

function SearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 8.5a5.5 5.5 0 10-1.98 4.23l4.13 4.12.07.06a.5.5 0 00.63-.76l-4.12-4.13A5.48 5.48 0 0014 8.5zM8.5 7a.5.5 0 110-1 .5.5 0 010 1zM9 8.5v2a.5.5 0 01-1 0v-2a.5.5 0 011 0z"></path></svg>`,
	4,
)

function SearchInfoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3a5.5 5.5 0 014.38 8.82l4.15 4.15a.75.75 0 01-.98 1.13l-.08-.07-4.15-4.15c-.28.22-.6.41-.92.57-.1-.5-.27-.99-.5-1.43a4 4 0 10-5.86-2.94c-.5.1-1 .25-1.44.47A5.5 5.5 0 018.5 3zm-5.44 8.44a2 2 0 01-1.43 2.48l-.46.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 013 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 018 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zM5.5 15.5a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function SearchSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3a5.5 5.5 0 014.38 8.82l4.15 4.15a.75.75 0 01-.98 1.13l-.08-.07-4.15-4.15c-.54.41-1.15.72-1.82.91V12.21a4 4 0 10-5.48-4.12c-.2.07-.37.18-.52.34-.32.33-.63.58-.96.78A5.5 5.5 0 018.5 3zM7 10.35a4.63 4.63 0 01-1-.59c-.24-.18-.48-.4-.72-.64a.39.39 0 00-.56 0 4.5 4.5 0 01-3.32 1.55.4.4 0 00-.4.41v2.77c.03.8.18 1.51.44 2.15A4.81 4.81 0 003 18c.52.4 1.15.73 1.87.98.09.03.17.03.26 0C7.69 18.09 9 16.27 9 13.58V11a.4.4 0 00-.4-.33 4.23 4.23 0 01-1.6-.32z"></path></svg>`,
	4,
)

function SearchShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 11.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm6 6.5c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L11.8 11.1A3.5 3.5 0 109 12.5z"></path></svg>`,
	4,
)

function SearchSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6.25C3 4.45 4.46 3 6.25 3h1a.75.75 0 010 1.5h-1c-.97 0-1.75.78-1.75 1.75v1a.75.75 0 01-1.5 0v-1zm14 7.5c0 1.8-1.46 3.25-3.25 3.25h-1a.75.75 0 010-1.5h1c.97 0 1.75-.78 1.75-1.75v-1a.75.75 0 011.5 0v1zm0-7.5C17 4.45 15.54 3 13.75 3h-1a.75.75 0 000 1.5h1c.97 0 1.75.78 1.75 1.75v1a.75.75 0 001.5 0v-1zM6.25 17A3.25 3.25 0 013 13.75v-1a.75.75 0 011.5 0v1c0 .97.78 1.75 1.75 1.75h1a.75.75 0 010 1.5h-1zM10 12a2 2 0 100-4 2 2 0 000 4zM7 8a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function SearchVisualIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V4a2 2 0 00-2-2H4zm.27 15c.34.6.99 1 1.73 1h8a4 4 0 004-4V6a2 2 0 00-1-1.73V14a3 3 0 01-3 3H4.27z"></path></svg>`,
	4,
)

function SelectAllOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4c0-1.1.9-2 2-2h10a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V4zm10.33 2.62a.5.5 0 00-.7.05l-3.15 3.6-1.63-1.62a.5.5 0 10-.7.7l2 2a.5.5 0 00.73-.02l3.5-4a.5.5 0 00-.05-.7zM4.27 17c.34.6.99 1 1.73 1h8a4 4 0 004-4V6a2 2 0 00-1-1.73V14a3 3 0 01-3 3H4.27z"></path></svg>`,
	4,
)

function SelectAllOnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm11 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 11a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm11 0a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM7 4.75c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-4.5A.75.75 0 017 4.75zm0 10.5c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm-3-7.5a.75.75 0 011.5 0v4.5a.75.75 0 01-1.5 0v-4.5zm10.5 0a.75.75 0 011.5 0v4.5a.75.75 0 01-1.5 0v-4.5z"></path></svg>`,
	4,
)

function SelectObjectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 4.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm-13 11a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm4-11a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm3.89.75h4.22a2.5 2.5 0 010-1.5H9.9a2.5 2.5 0 010 1.5zM3.6 13L5.98 6.5c.4.3.88.48 1.41.5l-2.37 6.52c-.4-.3-.88-.48-1.41-.5zm2.28 3.25h3.4a5.48 5.48 0 01-.28-1.5H5.89a2.5 2.5 0 010 1.5zM16.39 7l-.77 2.11a5.52 5.52 0 00-1.56-.1l.92-2.52c.4.3.88.48 1.41.5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function SelectObjectSkewDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 4.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm-13 11a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm4-11a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm3.89.75h4.22a2.5 2.5 0 010-1.5H9.9a2.5 2.5 0 010 1.5zM3.6 13L5.98 6.5c.4.3.88.48 1.41.5l-2.37 6.52c-.4-.3-.88-.48-1.41-.5zm2.28 3.25H9.4l.02-.1c.12-.46.34-.9.65-1.26 0-.05.02-.1.03-.14H5.9a2.5 2.5 0 010 1.5zM16.39 7l-.92 2.53-.37.31-2.1 2.1 1.98-5.45c.4.3.88.48 1.41.5zm-5.41 8.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function SelectObjectSkewEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 4.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm-4 11a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zM3.5 17a1.5 1.5 0 110-3 1.5 1.5 0 010 3zM6 4.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0zm8.11.75H9.9a2.5 2.5 0 000-1.5h4.22a2.5 2.5 0 000 1.5zM3.61 13L5.98 6.5c.4.3.88.48 1.41.5l-2.37 6.52c-.4-.3-.88-.48-1.41-.5zm6.5 3.25H5.9a2.5 2.5 0 000-1.5h4.22a2.5 2.5 0 000 1.5zm2.5-3.25l2.37-6.51c.4.3.88.48 1.41.5l-2.37 6.52c-.4-.3-.88-.48-1.41-.5z"></path></svg>`,
	4,
)

function SelectObjectSkewIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.72 1.05l15.36 7.57a.5.5 0 010 .9l-.66.32a5.5 5.5 0 00-8.4 4.14l-6.3 3.1a.5.5 0 01-.7-.58l1.52-5.74a.5.5 0 01.4-.37l6.88-1.14a.25.25 0 00.19-.15l.02-.06a.25.25 0 00-.15-.27l-.06-.02L3.9 7.6a.5.5 0 01-.4-.37l-1.48-5.6a.5.5 0 01.7-.58zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2c0 .28.22.5.5.5H16a.5.5 0 000-1h-1v-1.5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function SendClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.47 2.22c.3-.3.77-.3 1.06 0l2.5 2.5a.75.75 0 01-1.06 1.06L9.75 4.56v6.69a.75.75 0 01-1.5 0V4.56L7.03 5.78a.75.75 0 01-1.06-1.06l2.5-2.5zM5.57 16.5A2 2 0 007.5 18H13a4.5 4.5 0 004.5-4.5v-2.25a.75.75 0 00-1.5 0v2.25a3 3 0 01-3 3H5.57zM4.5 8.75a.75.75 0 00-1.5 0v4.75c0 1.1.9 2 2 2h8a2 2 0 002-2V8.75a.75.75 0 00-1.5 0v4.75a.5.5 0 01-.5.5H5a.5.5 0 01-.5-.5V8.75z"></path></svg>`,
	4,
)

function SendCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.72 2.05l15.36 7.57a.5.5 0 010 .9L2.72 18.07a.5.5 0 01-.7-.58l1.52-5.74a.5.5 0 01.4-.37l6.88-1.14a.25.25 0 00.19-.15l.02-.06a.25.25 0 00-.15-.27l-.06-.02L3.9 8.6a.5.5 0 01-.4-.37l-1.48-5.6a.5.5 0 01.7-.58z"></path></svg>`,
	4,
)

function SendIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.33 9.07A2.5 2.5 0 014.77 6h10.46a2.5 2.5 0 012.43 3.07l-.7 3A2.5 2.5 0 0114.53 14H5.47a2.5 2.5 0 01-2.44-1.93l-.7-3zM6 9.5a.5.5 0 100-1 .5.5 0 000 1zM8.5 9a.5.5 0 10-1 0 .5.5 0 001 0zM7 11.5a.5.5 0 100-1 .5.5 0 000 1zm2.5-.5a.5.5 0 10-1 0 .5.5 0 001 0zm1.5.5a.5.5 0 100-1 .5.5 0 000 1zm2.5-.5a.5.5 0 10-1 0 .5.5 0 001 0zM10 9.5a.5.5 0 100-1 .5.5 0 000 1zm2.5-.5a.5.5 0 10-1 0 .5.5 0 001 0zm1.5.5a.5.5 0 100-1 .5.5 0 000 1z"></path></svg>`,
	4,
)

function SerialPortIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2A2.5 2.5 0 005 4.5v11A2.5 2.5 0 007.5 18h5a2.5 2.5 0 002.5-2.5v-11A2.5 2.5 0 0012.5 2h-5zM7 5.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm0 7c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ServerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2A2.5 2.5 0 005 4.5v11A2.5 2.5 0 007.5 18h5a2.5 2.5 0 002.5-2.5v-11A2.5 2.5 0 0012.5 2h-5zm0 3h5a.5.5 0 010 1h-5a.5.5 0 010-1zM7 12.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zM2 7c0-1.1.9-2 2-2v10.5c0 .17.01.34.04.5H4a2 2 0 01-2-2V7zm14 8.5c0 .17-.01.34-.04.5H16a2 2 0 002-2V7a2 2 0 00-2-2v10.5z"></path></svg>`,
	4,
)

function ServerMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2A2.5 2.5 0 005 4.5v11A2.5 2.5 0 007.5 18h2.76a5.47 5.47 0 01-1.24-3H7.5a.5.5 0 010-1h1.52c.03-.34.1-.68.19-1H7.5a.5.5 0 010-1h2.1A5.5 5.5 0 0115 9.02V4.5A2.5 2.5 0 0012.5 2h-5zM7 5.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm12 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.29-.44l-2.97-1.65a.5.5 0 00-.74.44v3.3c0 .38.41.62.74.44l2.97-1.65a.5.5 0 000-.88z"></path></svg>`,
	4,
)

function ServerPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 5a2 2 0 114 0v.79a7 7 0 015 6.71.5.5 0 01-.5.5h-13a.5.5 0 01-.5-.5 7 7 0 015-6.71V5zm2.5 3.5c.42 0 .84 0 1.27.16.41.15.87.45 1.31 1.12a.5.5 0 00.84-.56 3.66 3.66 0 00-1.81-1.5 4.51 4.51 0 00-1.59-.22h-.02a.5.5 0 000 1zm-7 5.5a1.5 1.5 0 000 3h13a1.5 1.5 0 000-3h-13z"></path></svg>`,
	4,
)

function ServiceBellIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1.91 7.38A8.5 8.5 0 013.69 4.3a.5.5 0 01.54-.13l1.92.68a1 1 0 001.32-.76l.36-2a.5.5 0 01.4-.4 8.53 8.53 0 013.55 0c.2.04.35.2.38.4l.37 2a1 1 0 001.32.76l1.92-.68a.5.5 0 01.54.13 8.5 8.5 0 011.78 3.08c.06.2 0 .4-.15.54l-1.56 1.32a1 1 0 00-.07.06 5.5 5.5 0 00-4.35.32 2 2 0 10-2.34 2.34 5.48 5.48 0 00-.13 4.81l-.43 1.4-.05.27a8.48 8.48 0 01-.79-.13.5.5 0 01-.39-.4l-.36-2a1 1 0 00-1.32-.76l-1.92.68a.5.5 0 01-.54-.13 8.5 8.5 0 01-1.78-3.08.5.5 0 01.15-.54l1.56-1.32a1 1 0 000-1.52L2.06 7.92a.5.5 0 01-.15-.54zm8.1 11.12a.4.4 0 00.52.48l1.79-.54A4.5 4.5 0 1014.5 10a4.49 4.49 0 00-2.72.92 4.48 4.48 0 00-1.21 5.77l-.55 1.78a.4.4 0 000 .03zM14.5 15a.5.5 0 010 1h-2a.5.5 0 010-1h2zm-2-2h4a.5.5 0 110 1h-4a.5.5 0 010-1z"></path></svg>`,
	4,
)

function SettingsChatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1.91 7.38A8.5 8.5 0 013.69 4.3a.5.5 0 01.54-.13l1.92.68a1 1 0 001.32-.76l.36-2a.5.5 0 01.4-.4 8.53 8.53 0 013.55 0c.2.04.35.2.38.4l.37 2a1 1 0 001.32.76l1.92-.68a.5.5 0 01.54.13 8.5 8.5 0 011.78 3.08c.06.2 0 .4-.15.54l-1.56 1.32a1 1 0 000 1.52l1.56 1.32a.5.5 0 01.15.54 8.5 8.5 0 01-1.78 3.08.5.5 0 01-.54.13l-1.92-.68a1 1 0 00-1.32.76l-.37 2a.5.5 0 01-.38.4 8.53 8.53 0 01-3.56 0 .5.5 0 01-.39-.4l-.36-2a1 1 0 00-1.32-.76l-1.92.68a.5.5 0 01-.54-.13 8.5 8.5 0 01-1.78-3.08.5.5 0 01.15-.54l1.56-1.32a1 1 0 000-1.52L2.06 7.92a.5.5 0 01-.15-.54zM8 10a2 2 0 104 0 2 2 0 00-4 0z"></path></svg>`,
	4,
)

function SettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10.5v-6A2.5 2.5 0 014.5 2h6A2.5 2.5 0 0113 4.5V7H9.5A2.5 2.5 0 007 9.5V13H4.5A2.5 2.5 0 012 10.5zM7 13v2.5A2.5 2.5 0 009.5 18h6a2.5 2.5 0 002.5-2.5v-6A2.5 2.5 0 0015.5 7H13v3.5a2.5 2.5 0 01-2.5 2.5H7z"></path></svg>`,
	4,
)

function ShapeExcludeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5A2.5 2.5 0 014.5 2h6A2.5 2.5 0 0113 4.5V7h2.5A2.5 2.5 0 0118 9.5v6a2.5 2.5 0 01-2.5 2.5h-6A2.5 2.5 0 017 15.5V13H4.5A2.5 2.5 0 012 10.5v-6zM7 12V9.5A2.5 2.5 0 019.5 7H12V4.5c0-.83-.67-1.5-1.5-1.5h-6C3.67 3 3 3.67 3 4.5v6c0 .83.67 1.5 1.5 1.5H7zm1 1v2.5c0 .83.67 1.5 1.5 1.5h6c.83 0 1.5-.67 1.5-1.5v-6c0-.83-.67-1.5-1.5-1.5H13v2.5a2.5 2.5 0 01-2.5 2.5H8z"></path></svg>`,
	4,
)

function ShapeIntersectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7.5A5.5 5.5 0 0112.98 7H10.5A3.5 3.5 0 007 10.5v2.48A5.5 5.5 0 012 7.5zm8.5.5A2.5 2.5 0 008 10.5v5a2.5 2.5 0 002.5 2.5h5a2.5 2.5 0 002.5-2.5v-5A2.5 2.5 0 0015.5 8h-5z"></path></svg>`,
	4,
)

function ShapesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5v6A2.5 2.5 0 004.5 13H7v2.5A2.5 2.5 0 009.5 18h6a2.5 2.5 0 002.5-2.5v-6A2.5 2.5 0 0015.5 7H13V4.5A2.5 2.5 0 0010.5 2h-6zM8 9.5C8 8.67 8.67 8 9.5 8h6c.83 0 1.5.67 1.5 1.5v6c0 .83-.67 1.5-1.5 1.5h-6A1.5 1.5 0 018 15.5v-6z"></path></svg>`,
	4,
)

function ShapeSubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5v6A2.5 2.5 0 004.5 13H7v2.5A2.5 2.5 0 009.5 18h6a2.5 2.5 0 002.5-2.5v-6A2.5 2.5 0 0015.5 7H13V4.5A2.5 2.5 0 0010.5 2h-6z"></path></svg>`,
	4,
)

function ShapeUnionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5a2.5 2.5 0 01-4.47 1.54L7.92 9.35a2.5 2.5 0 010 1.3l4.61 2.3a2.5 2.5 0 11-.45.9l-4.61-2.3a2.5 2.5 0 110-3.1l4.61-2.3A2.5 2.5 0 1117 5.5z"></path></svg>`,
	4,
)

function ShareAndroidIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 16a2 2 0 01-2-2V6c0-1.1.9-2 2-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4zm6-10a.5.5 0 00-.5.5v5.8l-1.65-1.65a.5.5 0 00-.7.7l2.5 2.5c.2.2.5.2.7 0l2.5-2.5a.5.5 0 00-.7-.7l-1.65 1.64V6.5A.5.5 0 0010 6z"></path></svg>`,
	4,
)

function ShareCloseTrayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.38 5.7V3.59c0-.48.53-.74.89-.47l.06.05 4.5 4.42c.2.2.23.54.05.77l-.05.07-4.5 4.42c-.34.33-.89.12-.95-.34v-2.18l-.26.03a9.25 9.25 0 00-5.19 2.5c-.39.35-.99.03-.93-.5.5-4.09 2.59-6.34 6.15-6.63l.23-.01zM5.5 4A2.5 2.5 0 003 6.5v8A2.5 2.5 0 005.5 17h8a2.5 2.5 0 002.5-2.5v-1a.5.5 0 00-1 0v1c0 .83-.67 1.5-1.5 1.5h-8A1.5 1.5 0 014 14.5v-8C4 5.67 4.67 5 5.5 5h3a.5.5 0 000-1h-3z"></path></svg>`,
	4,
)

function ShareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.75 9.25c.38 0 .7.28.74.65l.01.1v5.25A2.75 2.75 0 0113.92 18H6.25a2.75 2.75 0 01-2.74-2.58l-.01-.17V10A.75.75 0 015 9.9v5.35c0 .65.5 1.18 1.12 1.24l.13.01h7.5c.65 0 1.18-.5 1.24-1.12l.01-.13V10c0-.41.34-.75.75-.75zM5.23 6.46l4.24-4.24a.75.75 0 01.98-.07l.08.07 4.24 4.24a.75.75 0 01-.97 1.14l-.09-.08-2.96-2.96v7.69c0 .38-.28.7-.65.74L10 13a.75.75 0 01-.74-.65l-.01-.1V4.56L6.29 7.52a.75.75 0 01-.98.08l-.08-.08a.75.75 0 01-.08-.97l.08-.09 4.24-4.24-4.24 4.24z"></path></svg>`,
	4,
)

function ShareIosIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4a3 3 0 00-3 3v6a3 3 0 003 3h6.05a2.5 2.5 0 012.22-1.99A2.99 2.99 0 0115.5 9a3 3 0 012.5 1.34V7a3 3 0 00-3-3H5zm12.5 8a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function ShareScreenPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7a3 3 0 013-3h10a3 3 0 013 3v3.34a3 3 0 10-4.73 3.67c-1.1.1-2 .92-2.22 1.99H5a3 3 0 01-3-3V7zm2 0v3a1 1 0 001 1h4a1 1 0 001-1V7a1 1 0 00-1-1H5a1 1 0 00-1 1zm13.5 5a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function ShareScreenPersonOverlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7a3 3 0 013-3h10a3 3 0 013 3v6a3 3 0 01-3 3H5a3 3 0 01-3-3V7zm3-1a1 1 0 00-1 1v3a1 1 0 001 1h3a1 1 0 001-1V7a1 1 0 00-1-1H5zm10 1.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM12 10a1 1 0 00-1 1v1c0 1.1.9 2 2 2h1a2 2 0 002-2v-1a1 1 0 00-1-1h-3z"></path></svg>`,
	4,
)

function ShareScreenPersonOverlayInsideIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7a3 3 0 013-3h10a3 3 0 013 3v3.34a3 3 0 10-4.73 3.67c-1.1.1-2 .92-2.22 1.99H5a3 3 0 01-3-3V7zm4 .5v5a.5.5 0 001 0V11h1a2 2 0 100-4H6.5a.5.5 0 00-.5.5zM7 10h1a1 1 0 000-2H7v2zm10.5 2a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function ShareScreenPersonPIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm6 10a.5.5 0 01-.5-.5V7.7L7.85 9.36a.5.5 0 11-.7-.7l2.5-2.5c.2-.2.5-.2.7 0l2.5 2.5a.5.5 0 01-.7.7L10.5 7.71v5.79a.5.5 0 01-.5.5z"></path></svg>`,
	4,
)

function ShareScreenStartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 4A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h11a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 4h-11zm2.65 3.15c.2-.2.5-.2.7 0L10 9.29l2.15-2.14a.5.5 0 01.7.7L10.71 10l2.14 2.15a.5.5 0 01-.7.7L10 10.71l-2.15 2.14a.5.5 0 01-.7-.7L9.29 10 7.15 7.85a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function ShareScreenStopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5a2 2 0 00-2 2v4c0 1.1.9 2 2 2h6V9c3.23 0 3.75-.83 4.11-1.43.2-.32.36-.57.89-.57s.69.25.89.57c.2.32.43.7 1.11 1V7a2 2 0 00-2-2H4zm10.53 3.83v.02a1.63 1.63 0 01-.45.5c-.4.3-1.17.65-2.58.65a.5.5 0 00-.5.5v2c0 1.03.13 2.14.7 3.12.56 1 1.55 1.82 3.14 2.35.1.04.22.04.32 0a5.35 5.35 0 003.15-2.35c.56-.98.69-2.09.69-3.12v-2a.5.5 0 00-.5-.5c-1.41 0-2.18-.35-2.57-.65a1.63 1.63 0 01-.46-.52.5.5 0 00-.94 0zm.94 0v.01zm-.94 0v.01z"></path></svg>`,
	4,
)

function ShieldBadgeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.72 2.08a.5.5 0 01.56 0c1.94 1.3 4.03 2.1 6.3 2.43A.5.5 0 0117 5v4.6a5.5 5.5 0 00-6.78 8.35l-.04.02a.5.5 0 01-.36 0C5.31 16.23 3 13.39 3 9.5V5a.5.5 0 01.43-.5 15.05 15.05 0 006.3-2.42zM19 14.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-2.15-1.85c.2.2.2.5 0 .7l-3 3a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64 2.65-2.64c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function ShieldCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08c1.94 1.3 4.03 2.1 6.3 2.43A.5.5 0 0117 5v4.5c0 3.9-2.3 6.73-6.82 8.47a.5.5 0 01-.36 0C5.31 16.23 3 13.39 3 9.5V5a.5.5 0 01.43-.5 15.05 15.05 0 006.3-2.42.5.5 0 01.55 0zM8.03 6.97a.75.75 0 00-1.06 1.06L8.94 10l-1.97 1.97a.75.75 0 101.06 1.06L10 11.06l1.97 1.97a.75.75 0 101.06-1.06L11.06 10l1.97-1.97a.75.75 0 00-1.06-1.06L10 8.94 8.03 6.97z"></path></svg>`,
	4,
)

function ShieldDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0c.34-.14.68-.27 1-.42a5.82 5.82 0 01-.66-1.16 7.05 7.05 0 01-.52-2.5V11.05l-1.97 1.97a.75.75 0 01-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 011.06-1.06L10 8.94l1.97-1.97a.75.75 0 111.06 1.06l-1.64 1.64h.01c.9 0 1.76-.37 2.6-1.24a1.39 1.39 0 012 0 5.06 5.06 0 001 .8V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zM17 10.35a4.63 4.63 0 01-1-.59c-.24-.18-.48-.4-.72-.64a.39.39 0 00-.56 0 4.5 4.5 0 01-3.32 1.55.4.4 0 00-.4.41v2.77c.03.8.18 1.51.44 2.15A4.81 4.81 0 0013 18c.52.4 1.15.73 1.87.98.09.03.17.03.26 0 2.56-.89 3.87-2.71 3.87-5.4V11a.4.4 0 00-.4-.33 4.24 4.24 0 01-1.6-.32z"></path></svg>`,
	4,
)

function ShieldDismissShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.72 2.08a.5.5 0 01.56 0c1.94 1.3 4.03 2.1 6.3 2.43A.5.5 0 0117 5v4.5c0 3.9-2.3 6.73-6.82 8.47a.5.5 0 01-.36 0C5.31 16.23 3 13.39 3 9.5V5a.5.5 0 01.43-.5 15.05 15.05 0 006.3-2.42zM10 6a.5.5 0 00-.5.5v5a.5.5 0 001 0v-5A.5.5 0 0010 6zm0 8.5a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function ShieldErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0C14.69 16.23 17 13.39 17 9.5V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zm2.68 8.42a3 3 0 01-1.43 2.08c.24-.57.4-1.3.45-2.08h.98zm0-1a3 3 0 00-1.43-2.08c.24.57.4 1.3.45 2.08h.98zm-1.98 0a5.13 5.13 0 00-.46-1.88 1.72 1.72 0 00-.39-.54.43.43 0 00-.12-.08.03.03 0 00-.02 0h-.01a.43.43 0 00-.11.08c-.11.09-.25.26-.39.54-.23.46-.4 1.11-.46 1.88h1.96zm-1.96 1c.05.77.23 1.42.46 1.88.14.28.28.45.39.54a.42.42 0 00.12.08.03.03 0 00.02 0h.01c.02-.01.06-.03.11-.08.11-.09.25-.26.39-.54.23-.46.4-1.11.46-1.88H9.02zm-1 0c.04.79.2 1.5.45 2.08a3 3 0 01-1.43-2.08h.98zm0-1c.04-.79.2-1.5.45-2.08A3 3 0 007.04 9.5h.98zM14 10a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>`,
	4,
)

function ShieldGlobeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.72 2.08a.5.5 0 01.56 0c1.94 1.3 4.03 2.1 6.3 2.43A.5.5 0 0117 5v4.5c0 3.9-2.3 6.73-6.82 8.47a.5.5 0 01-.36 0C5.31 16.23 3 13.39 3 9.5V5a.5.5 0 01.43-.5 15.05 15.05 0 006.3-2.42z"></path></svg>`,
	4,
)

function ShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0C14.69 16.23 17 13.39 17 9.5V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zM11.5 9c0 .65-.42 1.2-1 1.41v2.09a.5.5 0 01-1 0v-2.09a1.5 1.5 0 112-1.41z"></path></svg>`,
	4,
)

function ShieldKeyholeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 12v-1a2 2 0 114 0v1h.5a1 1 0 011 1v4a1 1 0 01-1 1h-5a1 1 0 01-1-1v-4a1 1 0 011-1h.5zm1-1v1h2v-1a1 1 0 10-2 0zm1.75 4a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM9.72 2.08a.5.5 0 01.56 0c1.94 1.3 4.03 2.1 6.3 2.43A.5.5 0 0117 5v4.34A3 3 0 0011.5 11v.06A2 2 0 0010 13v4a2 2 0 00.24.94l-.06.03a.5.5 0 01-.36 0C5.31 16.23 3 13.39 3 9.5V5a.5.5 0 01.43-.5 15.05 15.05 0 006.3-2.42z"></path></svg>`,
	4,
)

function ShieldLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$89 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0l.04-.02A5.48 5.48 0 019 14.42c-1.77-.29-2.5-1.35-2.5-2.42 0-.83.67-1.5 1.5-1.5h2.73A5.48 5.48 0 0117 9.6V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zM10 9.5a2 2 0 110-4 2 2 0 010 4zm9 5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function ShieldPersonAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$89.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$88 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0C14.69 16.23 17 13.39 17 9.5V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zM10 9.5a2 2 0 110-4 2 2 0 010 4zm0 5c-2.5 0-3.5-1.25-3.5-2.5 0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5 0 1.24-1 2.5-3.5 2.5z"></path></svg>`,
	4,
)

function ShieldPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$88.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$87 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0l.07-.03A5.5 5.5 0 1117 9.26V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zm.42 13.52l4.9-4.9a3.5 3.5 0 00-4.9 4.9zm.7.7a3.5 3.5 0 004.9-4.9l-4.9 4.9zm2.1 1.7a4.5 4.5 0 110-9 4.5 4.5 0 010 9z"></path></svg>`,
	4,
)

function ShieldProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$87.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$86 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.72 2.08a.5.5 0 01.56 0c1.94 1.3 4.03 2.1 6.3 2.43A.5.5 0 0117 5v4.5c0 3.9-2.3 6.73-6.82 8.47a.5.5 0 01-.36 0C5.31 16.23 3 13.39 3 9.5V5a.5.5 0 01.43-.5 15.05 15.05 0 006.3-2.42zm1.03 11.67a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-2-5.5a1.25 1.25 0 112.5 0c0 .46-.27.76-.73 1.22l-.03.03c-.42.42-.99.99-.99 1.9v.1a.5.5 0 001 0v-.1c0-.47.27-.77.73-1.22l.03-.04c.42-.41.99-.98.99-1.89a2.25 2.25 0 00-4.5 0 .5.5 0 001 0z"></path></svg>`,
	4,
)

function ShieldQuestionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$86.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$85 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.28 2.08a.5.5 0 00-.56 0 15.05 15.05 0 01-6.3 2.43A.5.5 0 003 5v4.5c0 3.9 2.3 6.73 6.82 8.47a.5.5 0 00.36 0C14.69 16.23 17 13.39 17 9.5V5a.5.5 0 00-.43-.5 15.05 15.05 0 01-6.3-2.42zm3.57 5.77l-4 4a.5.5 0 01-.7 0l-2-2a.5.5 0 11.7-.7l1.65 1.64 3.65-3.64a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function ShieldTaskIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$85.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$84 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 7a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM8 8a2 2 0 00-2 2v.5c0 .28.22.5.5.5h7a.5.5 0 00.5-.5V10a2 2 0 00-2-2H8zm-2.5 5.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75 3.75a.75.75 0 100-1.5.75.75 0 000 1.5zm8.05-3.58c-.18.3-.3.77-.3 1.33s.12 1.03.3 1.33c.17.28.4.42.7.42.3 0 .53-.14.7-.42.18-.3.3-.77.3-1.33a2.6 2.6 0 00-.3-1.33c-.17-.28-.4-.42-.7-.42-.3 0-.53.14-.7.42zm-.85-.52c.33-.53.85-.9 1.55-.9.7 0 1.22.37 1.55.9.32.5.45 1.17.45 1.85 0 .68-.13 1.34-.45 1.85-.33.53-.85.9-1.55.9-.7 0-1.22-.37-1.55-.9a3.58 3.58 0 01-.45-1.85c0-.68.13-1.34.45-1.85zm-4.14.5c.46-.36.83-.43 1.08-.4.25.05.44.2.54.37.1.17.09.35 0 .48-.08.14-.32.35-.9.4a.5.5 0 000 1c.6.05.82.25.9.37.09.13.1.31 0 .5-.1.18-.3.33-.55.37-.25.04-.61-.02-1.07-.38a.5.5 0 10-.62.78c.62.5 1.26.68 1.85.6.57-.1 1.02-.45 1.26-.9a1.47 1.47 0 00-.33-1.85 1.47 1.47 0 00.33-1.86c-.24-.44-.7-.78-1.27-.86a2.4 2.4 0 00-1.84.6.5.5 0 00.62.78z"></path></svg>`,
	4,
)

function Shifts30MinutesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$84.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$83 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2.7a.75.75 0 01-.67.83 6.5 6.5 0 107.14 7.14.75.75 0 111.5.16 8 8 0 11-8.8-8.8c.42-.04.79.26.83.68zm1.02-.06c.1-.4.5-.65.9-.55.38.09.75.2 1.1.35a.75.75 0 01-.55 1.39 6.55 6.55 0 00-.9-.29.75.75 0 01-.55-.9zm6.54 4.33a.75.75 0 00-1.39.56c.12.29.21.59.28.9a.75.75 0 101.46-.35c-.09-.38-.2-.75-.35-1.1zM14.3 3.93a.75.75 0 011.06-.08c.3.27.6.56.86.87a.75.75 0 01-1.15.97 6.65 6.65 0 00-.7-.7.75.75 0 01-.07-1.06zM10 5.75a.75.75 0 00-1.5 0v5c0 .41.34.75.75.75h3a.75.75 0 100-1.5H10V5.75z"></path></svg>`,
	4,
)

function ShiftsActivityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$83.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$82 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v3.6a5.5 5.5 0 017.4 7.4H14a3 3 0 003-3V6a3 3 0 00-3-3H6zm4.5 3c.28 0 .5.22.5.5V9h1.5a.5.5 0 010 1h-2a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5zm-.5 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H6v-1.5z"></path></svg>`,
	4,
)

function ShiftsAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$82.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$81 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 12.92A7 7 0 0112.92 6 6 6 0 106 12.92zm3.35-8.27c.2.2.2.5 0 .7l-3 3a.5.5 0 01-.7 0l-1.5-1.5a.5.5 0 11.7-.7L6 7.29l2.65-2.64c.2-.2.5-.2.7 0zM13 19a6 6 0 100-12 6 6 0 000 12zm-1.65-8.35L13 12.29l1.65-1.64a.5.5 0 01.7.7L13.71 13l1.64 1.65a.5.5 0 01-.7.7L13 13.71l-1.65 1.64a.5.5 0 01-.7-.7L12.29 13l-1.64-1.65a.5.5 0 01.7-.7z"></path></svg>`,
	4,
)

function ShiftsAvailabilityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$81.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$80 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3h-3.6a5.48 5.48 0 00-.66-6h2.76a.5.5 0 000-1H10V6.5a.5.5 0 00-1 0v3.76a5.48 5.48 0 00-6-.66V6zm7 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0L4.5 15.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function ShiftsCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$80.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zm3.4 2.04a1.82 1.82 0 00-.34.5l-.03.08a.5.5 0 00.94.34l.02-.05.13-.17c.12-.11.3-.24.65-.24.4 0 .64.23.75.54.1.33.03.72-.24.96-.15.15-.34.28-.58.44l-.04.02c-.22.15-.47.31-.7.51A2.52 2.52 0 006 12.5a.5.5 0 00.5.5H9a.5.5 0 000-1H7.07c.1-.32.29-.56.54-.77.18-.15.39-.3.62-.44l.02-.02c.23-.15.5-.33.72-.54.58-.54.71-1.34.5-2A1.74 1.74 0 007.77 7c-.64 0-1.09.26-1.36.54zM11.5 7a.5.5 0 00-.5.5V10a.5.5 0 00.5.5H13v2a.5.5 0 001 0v-5a.5.5 0 00-1 0v2h-1v-2a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function ShiftsDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm7 .5a.5.5 0 00-1 0v4c0 .28.22.5.5.5h3a.5.5 0 000-1H10V6.5z"></path></svg>`,
	4,
)

function ShiftsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 5.75c0-.69.56-1.25 1.25-1.25H7.5a.75.75 0 000-1.5H5.75A2.75 2.75 0 003 5.75v8.5A2.75 2.75 0 005.75 17H7.5a.75.75 0 000-1.5H5.75c-.69 0-1.25-.56-1.25-1.25v-8.5zm8-2.75a.75.75 0 000 1.5h1.75c.69 0 1.25.56 1.25 1.25v8.5c0 .69-.56 1.25-1.25 1.25H12.5a.75.75 0 000 1.5h1.75A2.75 2.75 0 0017 14.25v-8.5A2.75 2.75 0 0014.25 3H12.5zm-2 2.75a.75.75 0 00-1.5 0v4.5c0 .41.34.75.75.75h3.5a.75.75 0 000-1.5H10.5V5.75z"></path></svg>`,
	4,
)

function ShiftsOpenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3h-3.6A5.5 5.5 0 003 9.6V6zm8 .5a.5.5 0 00-1 0v3c0 .28.22.5.5.5h2a.5.5 0 000-1H11V6.5zm-10 8a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zM5.5 18c-.79 0-1.51-.26-2.1-.7l4.9-4.9A3.5 3.5 0 015.5 18z"></path></svg>`,
	4,
)

function ShiftsProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v3.6a5.5 5.5 0 017.4 7.4H14a3 3 0 003-3V6a3 3 0 00-3-3H6zm4.5 3c.28 0 .5.22.5.5V9h2a.5.5 0 010 1h-2.5a.5.5 0 01-.5-.5v-3c0-.28.22-.5.5-.5zm-.5 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.5 1.88a.62.62 0 100 1.25.62.62 0 000-1.25zm0-4.88c-1.05 0-1.86.82-1.85 1.96a.5.5 0 101-.01c0-.58.36-.95.85-.95.47 0 .85.4.85.95 0 .2-.07.32-.36.55l-.27.21c-.51.4-.72.72-.72 1.29a.5.5 0 001 .09v-.16c.02-.14.1-.25.35-.44l.28-.22c.5-.4.72-.73.72-1.32 0-1.1-.82-1.95-1.85-1.95z"></path></svg>`,
	4,
)

function ShiftsQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3h-3.02l.02-.38c0-.91-.59-1.75-1.45-2.02a2.25 2.25 0 00-3.31-3.01A2.75 2.75 0 003 10.1V6zm7 .5a.5.5 0 00-1 0v4c0 .28.22.5.5.5h3a.5.5 0 000-1H10V6.5zm-6.25 8a1.75 1.75 0 100-3.5 1.75 1.75 0 000 3.5zM4 19c2.14 0 3-1.1 3-2.19a1.3 1.3 0 00-1.29-1.31H2.3A1.3 1.3 0 001 16.81c0 1.1.86 2.19 3 2.19zm3.5-.5h-.02c.35-.51.52-1.1.52-1.69 0-.48-.15-.93-.4-1.31h1.33c.6 0 1.07.5 1.07 1.13 0 .93-.71 1.87-2.5 1.87zm.25-4a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function ShiftsTeamIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6V4.5a2.42 2.42 0 01.73-1.77A2.43 2.43 0 018.5 2a2.43 2.43 0 011.5.5 2.44 2.44 0 012.48-.3 2.53 2.53 0 011.32 1.33c.13.3.2.63.2.97V6h1a1 1 0 011 1v2.2a5.5 5.5 0 00-4 .4V6h1V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 0011.5 3c-.3 0-.58.09-.83.26A2.5 2.5 0 0111 4.5v5.76a5.49 5.49 0 00-.74 7.74H7a3 3 0 01-3-3V7a1 1 0 011-1h1zm4 0V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 008.5 3a1.47 1.47 0 00-1.06.44A1.48 1.48 0 007 4.5V6h3zm9 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function ShoppingBagArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6V4.5a2.42 2.42 0 01.73-1.77A2.43 2.43 0 018.5 2a2.43 2.43 0 011.5.5 2.44 2.44 0 012.48-.3 2.53 2.53 0 011.32 1.33c.13.3.2.63.2.97V6h1a1 1 0 011 1v2.2a5.5 5.5 0 00-4 .4V6h1V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 0011.5 3c-.3 0-.58.09-.83.26A2.5 2.5 0 0111 4.5v5.76a5.49 5.49 0 00-.74 7.74H7a3 3 0 01-3-3V7a1 1 0 011-1h1zm4 0V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 008.5 3a1.47 1.47 0 00-1.06.44A1.48 1.48 0 007 4.5V6h3zm9 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function ShoppingBagDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6V4.5a2.42 2.42 0 01.73-1.77A2.43 2.43 0 018.5 2a2.43 2.43 0 011.5.5 2.44 2.44 0 012.48-.3 2.53 2.53 0 011.32 1.33c.13.3.2.63.2.97V6h1a1 1 0 011 1v8a2.95 2.95 0 01-1.47 2.58l-.59-.26-.5-.22-.2-.11-.23-.17-.24-.21-.27-.29A2 2 0 0112 15V6h1V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 0011.5 3c-.3 0-.58.09-.83.26A2.5 2.5 0 0111 4.5V15a2.95 2.95 0 00.77 2l.3.33.31.27.31.23.31.17H7a3 3 0 01-3-3V7a1 1 0 011-1h1zm1 0h3V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 008.5 3a1.47 1.47 0 00-1.06.44A1.48 1.48 0 007 4.5V6z"></path></svg>`,
	4,
)

function ShoppingBagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6V4.5a2.42 2.42 0 01.73-1.77A2.43 2.43 0 018.5 2a2.43 2.43 0 011.5.5 2.44 2.44 0 012.48-.3 2.53 2.53 0 011.32 1.33c.13.3.2.63.2.97V6h1a1 1 0 011 1v2.2a5.5 5.5 0 00-4 .4V6h1V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 0011.5 3c-.3 0-.58.09-.83.26A2.5 2.5 0 0111 4.5v5.76a5.49 5.49 0 00-.74 7.74H7a3 3 0 01-3-3V7a1 1 0 011-1h1zm4 0V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 008.5 3a1.47 1.47 0 00-1.06.44A1.48 1.48 0 007 4.5V6h3zm9 8.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM13 12a.5.5 0 00-.5.5v4a.5.5 0 001 0v-4a.5.5 0 00-.5-.5zm3 0a.5.5 0 00-.5.5v4a.5.5 0 001 0v-4a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function ShoppingBagPauseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5V6H5a1 1 0 00-1 1v8a2.93 2.93 0 00.88 2.13A3 3 0 007 18h3.09a1.5 1.5 0 01.35-1.56l.56-.56v-1.05a3 3 0 010-5.66V4.5a2.48 2.48 0 00-.33-1.24 1.48 1.48 0 012.21.66c.08.18.12.37.12.58V6h-1v3a3 3 0 013 2.88l1-1V7a1 1 0 00-1-1h-1V4.5a2.48 2.48 0 00-4-2A2.54 2.54 0 008.5 2a2.42 2.42 0 00-1.77.73A2.43 2.43 0 006 4.5zm4 0V6H7V4.5a1.48 1.48 0 01.91-1.38 1.48 1.48 0 011.97.8c.08.18.12.37.12.58zm2 9.5a2 2 0 100-4 2 2 0 000 4zm0-3a1 1 0 110 2 1 1 0 010-2zm5 8a2 2 0 100-4 2 2 0 000 4zm0-3a1 1 0 110 2 1 1 0 010-2zm.85-4.15a.5.5 0 00-.7-.7l-6 6a.5.5 0 00.7.7l6-6z"></path></svg>`,
	4,
)

function ShoppingBagPercentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5V6H5a1 1 0 00-1 1v8a2.93 2.93 0 00.88 2.13A3 3 0 007 18h3.26a5.48 5.48 0 01.74-7.74V4.5a2.48 2.48 0 00-.33-1.24 1.48 1.48 0 012.21.66c.08.18.12.37.12.58V6h-1v3.6a5.48 5.48 0 014-.4V7a1 1 0 00-1-1h-1V4.5a2.48 2.48 0 00-4-2A2.54 2.54 0 008.5 2a2.42 2.42 0 00-1.77.73A2.43 2.43 0 006 4.5zM10 6H7V4.5a1.48 1.48 0 01.91-1.38 1.48 1.48 0 011.97.8c.08.18.12.37.12.58V6zm4.5 13a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.74-6.55c.1 0 .18.03.26.08l2.3 1.51c.07.05.12.1.16.18a.54.54 0 01-.03.54.46.46 0 01-.13.13l-2.3 1.57a.54.54 0 01-.12.06.45.45 0 01-.32-.02.57.57 0 01-.16-.1.5.5 0 01-.14-.36v-3.08a.51.51 0 01.3-.46.44.44 0 01.18-.05z"></path></svg>`,
	4,
)

function ShoppingBagPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6V4.5a2.42 2.42 0 01.73-1.77A2.43 2.43 0 018.5 2a2.43 2.43 0 011.5.5 2.44 2.44 0 012.48-.3 2.53 2.53 0 011.32 1.33c.13.3.2.63.2.97V6h1a1 1 0 011 1v2.6a2.5 2.5 0 00-1.62-.6H12V6h1V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 0011.5 3c-.3 0-.58.09-.83.26A2.5 2.5 0 0111 4.5v4.55c-1.14.24-2 1.25-2 2.46v2.88c0 .66.26 1.29.72 1.76L11.53 18H7a3 3 0 01-3-3V7a1 1 0 011-1h1zm4 0V4.5a1.47 1.47 0 00-.44-1.06A1.48 1.48 0 008.5 3a1.47 1.47 0 00-1.06.44A1.48 1.48 0 007 4.5V6h3zm.43 9.45a1.51 1.51 0 01-.43-1.06v-2.88c0-.83.68-1.51 1.51-1.51h2.87c.4 0 .8.16 1.07.45l3.11 3.14c.6.6.58 1.57-.02 2.15l-2.95 2.84a1.5 1.5 0 01-2.12-.03l-3.04-3.1zm1.57-2.7a.75.75 0 101.5 0 .75.75 0 00-1.5 0z"></path></svg>`,
	4,
)

function ShoppingBagTagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2a1 1 0 00-1 1v2a1 1 0 001 1h.5a.5.5 0 000-1H7V3h.5a.5.5 0 000-1H7zm2.5 0a.5.5 0 000 1h1a.5.5 0 000-1h-1zm3 0a.5.5 0 000 1h.5v2h-.5a.5.5 0 000 1h.5a1 1 0 001-1V3a1 1 0 00-1-1h-.5zm-3 3a.5.5 0 000 1h1a.5.5 0 000-1h-1zm-5 2c.28 0 .5.22.5.5v8c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-8a.5.5 0 011 0v8a2.5 2.5 0 01-2.5 2.5h-7A2.5 2.5 0 014 15.5v-8c0-.28.22-.5.5-.5zM7 12a1 1 0 00-1 1v2a1 1 0 001 1h6a1 1 0 001-1v-2a1 1 0 00-1-1H7zM6 8a1 1 0 011-1h.5a.5.5 0 010 1H7v2h.5a.5.5 0 010 1H7a1 1 0 01-1-1V8zm3-.5c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm3 0c0-.28.22-.5.5-.5h.5a1 1 0 011 1v2a1 1 0 01-1 1h-.5a.5.5 0 010-1h.5V8h-.5a.5.5 0 01-.5-.5zm-3 3c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function ShortpickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-2.59a1.5 1.5 0 00-.35-.56l-2-2A4.49 4.49 0 005.5 8c-.93 0-1.78.28-2.5.76V5.5zm10 1v7a.5.5 0 001 0v-7a.5.5 0 00-1 0zm-4 6c0 .79-.26 1.51-.7 2.1l2.55 2.55a.5.5 0 01-.7.7L7.6 15.3A3.5 3.5 0 119 12.5zm-1 0a2.5 2.5 0 10-5 0 2.5 2.5 0 005 0z"></path></svg>`,
	4,
)

function SidebarSearchLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v7a4.5 4.5 0 10-4.5 4.5h-7A2.5 2.5 0 013 14.5v-9zm3 1v7a.5.5 0 001 0v-7a.5.5 0 00-1 0zm10 6c0 .79-.26 1.51-.7 2.1l2.55 2.55a.5.5 0 01-.7.7L14.6 15.3a3.5 3.5 0 111.4-2.8zm-1 0a2.5 2.5 0 10-5 0 2.5 2.5 0 005 0z"></path></svg>`,
	4,
)

function SidebarSearchRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.02 2.77a2.44 2.44 0 113.46 3.46L14.2 7.5l.08.09a2 2 0 010 2.82l-1.44 1.44a.5.5 0 01-.7-.7l1.44-1.44a1 1 0 000-1.42l-.09-.08-6.65 6.64a.5.5 0 01-.23.14l-4 1a.5.5 0 01-.6-.65l1.26-3.75a.5.5 0 01.12-.2l8.62-8.62zM3.27 16.9c-.02 0-.04-.02-.05-.03l1.35-.34c.53.27 1.18.47 1.93.47.5 0 1.01-.18 1.53-.47.53-.3 1.03-.7 1.53-1.1l.13-.11c.44-.36.9-.74 1.34-1 .47-.27 1.04-.49 1.63-.3.82.28 1.08 1.04 1.32 1.84.05.18.15.36.26.49.11.12.2.15.26.15.19 0 .46-.1.8-.3a9.43 9.43 0 00.93-.62 5.6 5.6 0 011.1-.55h.03l.14.47-.14-.48a.5.5 0 01.28.96 2.74 2.74 0 00-.21.08 4.6 4.6 0 00-.92.54l-.7.46a2.7 2.7 0 01-1.31.44c-.44 0-.78-.23-1-.49a2.33 2.33 0 01-.48-.87c-.26-.87-.41-1.08-.68-1.17-.16-.05-.4-.02-.8.22-.37.21-.77.54-1.23.92l-.12.1c-.5.4-1.06.84-1.66 1.19-.6.34-1.29.6-2.03.6a5.49 5.49 0 01-3.23-1.1z"></path></svg>`,
	4,
)

function SignatureIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 3.5a.5.5 0 00-.58-.5l-7 1.08a.5.5 0 00-.42.49v10.86c0 .25.18.46.42.5l7 1.07a.5.5 0 00.58-.5V10h5.17l-1 .87a.5.5 0 00.66.76l2-1.75a.5.5 0 000-.76l-2-1.75a.5.5 0 10-.65.76l1 .87H11V3.5zm-2.5 7.75a.75.75 0 110-1.5.75.75 0 010 1.5zm4 4.75H12v-5h1v4.5a.5.5 0 01-.5.5zM12 8V4h.5c.28 0 .5.22.5.5V8h-1z"></path></svg>`,
	4,
)

function SignOutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5a3 3 0 013-3h3.46a3 3 0 012.13.88l2.53 2.53A3 3 0 0116 7.54V15a3 3 0 01-3 3H7a3 3 0 01-3-3V5zm3 5.5v.5h3V9H8.5C7.67 9 7 9.67 7 10.5zM7 12v1.5c0 .83.67 1.5 1.5 1.5H10v-3H7zm4.5 3c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5H11v6h.5z"></path></svg>`,
	4,
)

function SimIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5.63V3.75a.75.75 0 00-1.5 0v3.5c0 .41.34.75.75.75h4a.75.75 0 000-1.5H5.23A6.3 6.3 0 0110 4.25c2.4 0 4.53 1.41 5.65 3.54.15.28.43.46.73.46.54 0 .91-.53.67-1.01A7.93 7.93 0 0010 2.75a7.77 7.77 0 00-6 2.88zm4.25 5.12a.75.75 0 00-1.24-.57l-1.75 1.5a.75.75 0 10.98 1.14l.51-.44v3.87a.75.75 0 001.5 0v-5.5zM15 13.5c0 1.93-.63 3.5-2.5 3.5-1.88 0-2.5-1.57-2.5-3.5s.63-3.5 2.5-3.5c1.88 0 2.5 1.57 2.5 3.5zm-1.5 0c0-.85-.15-1.4-.32-1.69a.59.59 0 00-.22-.22.94.94 0 00-.46-.09.94.94 0 00-.46.09.59.59 0 00-.22.22c-.17.3-.32.84-.32 1.69s.15 1.4.32 1.69c.08.12.15.18.22.22.07.04.2.09.46.09s.39-.05.46-.09c.07-.04.14-.1.22-.22.17-.3.32-.84.32-1.69z"></path></svg>`,
	4,
)

function SkipBack10Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.73 5.63V3.75a.75.75 0 011.5 0v3.5c0 .41-.33.75-.75.75h-4a.75.75 0 010-1.5h2.03a6.3 6.3 0 00-4.78-2.25 6.45 6.45 0 00-5.65 3.54.83.83 0 01-.73.46c-.54 0-.91-.53-.67-1.01a7.93 7.93 0 017.05-4.49c2.4 0 4.54 1.12 6 2.88zM12.5 17c1.88 0 2.5-1.57 2.5-3.5s-.62-3.5-2.5-3.5c-1.87 0-2.5 1.57-2.5 3.5s.63 3.5 2.5 3.5zm.68-1.81a.59.59 0 01-.22.22.94.94 0 01-.46.09.94.94 0 01-.46-.09.59.59 0 01-.22-.22 3.38 3.38 0 01-.32-1.69c0-.85.15-1.4.32-1.69a.59.59 0 01.22-.22c.07-.04.2-.09.46-.09s.4.05.46.09c.07.04.14.1.22.22.18.3.32.84.32 1.69s-.14 1.4-.32 1.69zm-4.93-4.44a.75.75 0 00-1.24-.57l-1.75 1.5a.75.75 0 10.98 1.14l.51-.44v3.87a.75.75 0 001.5 0v-5.5z"></path></svg>`,
	4,
)

function SkipForward10Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.73 5.63V3.75a.75.75 0 011.5 0v3.5c0 .41-.33.75-.75.75h-4a.75.75 0 010-1.5h2.03a6.3 6.3 0 00-4.78-2.25 6.45 6.45 0 00-5.65 3.54.83.83 0 01-.73.46c-.54 0-.91-.53-.67-1.01a7.93 7.93 0 017.05-4.49c2.4 0 4.54 1.12 6 2.88zM4.97 10.72a.75.75 0 001.06 1.07v-.01l.07-.06a2.3 2.3 0 011.4-.47c.55 0 .87.15 1.04.3.16.13.22.29.22.43-.01.24-.26.77-1.26.77a.75.75 0 000 1.5c1 0 1.25.53 1.26.77 0 .14-.06.3-.22.44-.17.14-.49.29-1.04.29a2.3 2.3 0 01-1.47-.53.75.75 0 00-1.06 1.06c-.28-.28 0 0 0 0l.02.02a2.03 2.03 0 00.18.16 3.8 3.8 0 002.33.8c.82-.01 1.51-.24 2.01-.66a2.05 2.05 0 00.07-3.1 2.05 2.05 0 00-.07-3.1 3.05 3.05 0 00-2.01-.65 3.8 3.8 0 00-2.5.95l-.02.01zM16 13.5c0 2.07-.62 3.75-2.5 3.75-1.87 0-2.5-1.68-2.5-3.75 0-2.07.63-3.75 2.5-3.75 1.88 0 2.5 1.68 2.5 3.75zm-1.5 0c0-.93-.15-1.56-.35-1.9a.67.67 0 00-.23-.26.8.8 0 00-.42-.09.8.8 0 00-.42.09.67.67 0 00-.23.26c-.2.34-.35.97-.35 1.9 0 .93.15 1.56.35 1.9.08.16.17.23.23.26a.8.8 0 00.42.09.8.8 0 00.42-.09c.06-.03.15-.1.23-.26.2-.34.35-.97.35-1.9z"></path></svg>`,
	4,
)

function SkipForward30Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.09 7.97C4.2 6.57 6.07 4.89 8.35 4.4c1.9-.42 4.25-.04 6.86 2.35H12.5a.75.75 0 100 1.5H17c.41 0 .75-.34.75-.75v-4a.75.75 0 00-1.5 0v2.17c-2.92-2.68-5.75-3.28-8.22-2.74-2.76.6-4.9 2.58-6.12 4.1a.75.75 0 001.18.94zm3.41 2.78c-.97 0-1.75.78-1.75 1.75v3c0 .97.78 1.75 1.75 1.75h7c.97 0 1.75-.78 1.75-1.75v-3c0-.97-.78-1.75-1.75-1.75h-7zm-.25 1.75c0-.14.11-.25.25-.25h7c.14 0 .25.11.25.25v3c0 .14-.11.25-.25.25h-7a.25.25 0 01-.25-.25v-3z"></path></svg>`,
	4,
)

function SkipForwardTabIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.16 2.74a.5.5 0 01.43-.13c3.5.6 6.4 3.67 6.4 7.39a7.5 7.5 0 01-7.5 7.5 7.96 7.96 0 01-6.4-3.21.5.5 0 01.37-.79 6.94 6.94 0 004.69-2.59c1.34-1.65 2.24-4.17 1.85-7.75a.5.5 0 01.16-.42zM3.5 10C4.33 10 5 9.33 5 8.5V4.89l3-.75v1.95A1.5 1.5 0 109 7.5v-4a.5.5 0 00-.62-.49l-4 1A.5.5 0 004 4.5v2.59A1.5 1.5 0 103.5 10z"></path></svg>`,
	4,
)

function SleepIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v3.5A5.5 5.5 0 009.2 16H4.76A2.75 2.75 0 012 13.26v-6.5zm17 7.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function SlideAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.5A2.5 2.5 0 014.5 4h11A2.5 2.5 0 0118 6.5v3.76a5.48 5.48 0 00-5.8-.76H5.5a.5.5 0 000 1h5.23c-.46.43-.84.94-1.13 1.5H5.5a.5.5 0 000 1h3.7a5.5 5.5 0 000 3H4.5A2.5 2.5 0 012 13.5v-7zm3.5.5a.5.5 0 000 1h4a.5.5 0 000-1h-4zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function SlideArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v5.07l-.4-.41a2.25 2.25 0 00-3.2 0l-3.74 3.75A2.24 2.24 0 0010 16H4a2 2 0 01-2-2V6zm13.12 5.37a1.25 1.25 0 011.76 0l1.75 1.75c.5.48.5 1.28 0 1.76l-2.57 2.58-3.52-3.52 2.58-2.57zm-3.18 3.17l-.57.58a1.25 1.25 0 000 1.76l1.75 1.75c.48.5 1.28.5 1.76 0l.58-.57-3.52-3.52z"></path></svg>`,
	4,
)

function SlideEraserIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 7a1 1 0 011-1h3.5a1 1 0 011 1v1.5a1 1 0 01-1 1H5a1 1 0 01-1-1V7zm1 3.5a1 1 0 00-1 1V13a1 1 0 001 1h3.5a1 1 0 001-1v-1.5a1 1 0 00-1-1H5zM10.5 7a1 1 0 011-1H15a1 1 0 011 1v1.5a1 1 0 01-1 1h-3.5a1 1 0 01-1-1V7zm1 3.5a1 1 0 00-1 1V13a1 1 0 001 1H15a1 1 0 001-1v-1.5a1 1 0 00-1-1h-3.5zM2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zm2-1a1 1 0 00-1 1v8a1 1 0 001 1h12a1 1 0 001-1V6a1 1 0 00-1-1H4z"></path></svg>`,
	4,
)

function SlideGridIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a4 4 0 00-4 4v5c0 1.1.9 2 2 2V8a3 3 0 013-3h8a2 2 0 00-2-2H6zm0 5a1 1 0 011-1h.5a.5.5 0 000-1H7a2 2 0 00-2 2v.5a.5.5 0 001 0V8zm3.5-2a.5.5 0 000 1h1a.5.5 0 000-1h-1zm3 0a.5.5 0 000 1h1a.5.5 0 000-1h-1zm3 0a.5.5 0 000 1h.5a1 1 0 011 1v.5a.5.5 0 001 0V8a2 2 0 00-2-2h-.5zM6 10.5a.5.5 0 00-1 0v2a.5.5 0 001 0v-2zm12 0a.5.5 0 00-1 0v2a.5.5 0 001 0v-2zm-12 4a.5.5 0 00-1 0v.5c0 1.1.9 2 2 2h.5a.5.5 0 000-1H7a1 1 0 01-1-1v-.5zm12 0a.5.5 0 00-1 0v.5a1 1 0 01-1 1h-.5a.5.5 0 000 1h.5a2 2 0 002-2v-.5zM9.5 16a.5.5 0 000 1h1a.5.5 0 000-1h-1zm3 0a.5.5 0 000 1h1a.5.5 0 000-1h-1z"></path></svg>`,
	4,
)

function SlideHideIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 7h9c.28 0 .5.22.5.5V9H5V7.5c0-.28.22-.5.5-.5zM7 10v3H5.5a.5.5 0 01-.5-.5V10h2zm7.5 3H8v-3h7v2.5a.5.5 0 01-.5.5zm-10-9A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h11a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 4h-11zm10 10h-9A1.5 1.5 0 014 12.5v-5C4 6.67 4.67 6 5.5 6h9c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"></path></svg>`,
	4,
)

function SlideLayoutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v4.84a3.49 3.49 0 00-1.5-.34h-4A3.5 3.5 0 009.63 16H4a2 2 0 01-2-2V6zm10.5 5.5a2.5 2.5 0 000 5h.5a.5.5 0 000-1h-.5a1.5 1.5 0 010-3h.5a.5.5 0 000-1h-.5zm3.5 0a.5.5 0 000 1h.5a1.5 1.5 0 010 3H16a.5.5 0 000 1h.5a2.5 2.5 0 000-5H16zM12 14c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function SlideLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.5A2.5 2.5 0 014.5 4h11A2.5 2.5 0 0118 6.5v5.47a3 3 0 00-6 .03v1.07a1.5 1.5 0 00-1.95 1.64c.06.45.19.89.37 1.29H4.5A2.5 2.5 0 012 13.5v-7zm3.5.5a.5.5 0 000 1h4a.5.5 0 000-1h-4zM5 10c0 .28.22.5.5.5H11a.5.5 0 000-1H5.5a.5.5 0 00-.5.5zm.5 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm7.5 0a2 2 0 114 0v2a2 2 0 01-4 0v-2zm-.97 2.43a.5.5 0 10-.99.14 4 4 0 003.46 3.4v.53a.5.5 0 101 0v-.53a4 4 0 003.46-3.4.5.5 0 10-1-.14 3 3 0 01-5.93 0z"></path></svg>`,
	4,
)

function SlideMicrophoneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a4 4 0 00-4 4v5c0 1.1.9 2 2 2V8a3 3 0 013-3h8a2 2 0 00-2-2H6zm1 3a2 2 0 00-2 2v7c0 1.1.9 2 2 2h2.6a5.5 5.5 0 018.4-6.74V8a2 2 0 00-2-2H7zm7.5 4a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85a.5.5 0 00.15-.35.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 14H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function SlideMultipleArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a4 4 0 00-4 4v5c0 1.1.9 2 2 2V8a3 3 0 013-3h8a2 2 0 00-2-2H6zm1 3a2 2 0 00-2 2v7c0 1.1.9 2 2 2h9a2 2 0 002-2V8a2 2 0 00-2-2H7z"></path></svg>`,
	4,
)

function SlideMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a4 4 0 00-4 4v2.76c.58-.4 1.27-.65 2-.73V8a3 3 0 013-3h8a2 2 0 00-2-2H6zm10 14h-5.88l-1.56-1.56A4.5 4.5 0 005 9.03V8c0-1.1.9-2 2-2h9a2 2 0 012 2v7a2 2 0 01-2 2zM4.5 17c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L7.3 15.6A3.5 3.5 0 104.5 17zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function SlideMultipleSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.5A2.5 2.5 0 014.5 4h11A2.5 2.5 0 0118 6.5v7a2.5 2.5 0 01-2.5 2.5h-5.38l-1.56-1.56c.21-.44.36-.93.41-1.44h3.53a.5.5 0 000-1H8.97a4.47 4.47 0 00-.44-1.5h5.97a.5.5 0 000-1H7.85A4.49 4.49 0 002 8.76V6.5zm3.5.5a.5.5 0 000 1h6a.5.5 0 000-1h-6zm-1 9c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L7.3 14.6A3.5 3.5 0 104.5 16zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	4,
)

function SlideSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 4A2.75 2.75 0 002 6.75v6.5A2.75 2.75 0 004.75 16h4.46A5.5 5.5 0 0118 10.26V6.75A2.75 2.75 0 0015.25 4H4.75zm7.32 7.44a2 2 0 01-1.44 2.48l-.46.12a4.73 4.73 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function SlideSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v6.5A2.75 2.75 0 0115.25 16H4.75A2.75 2.75 0 012 13.25v-6.5zm9-.25c0 .28.22.5.5.5h.8l-1.65 1.65a.5.5 0 00.7.7L13 7.71v.79a.5.5 0 001 0v-2a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm-1.65 4.15a.5.5 0 00-.7 0L7 12.29v-.79a.5.5 0 00-1 0v2a.5.5 0 00.5.5h2a.5.5 0 000-1h-.8l1.65-1.65a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function SlideSizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.5A2.5 2.5 0 014.5 4h11A2.5 2.5 0 0118 6.5v7a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 13.5v-7zm3.5.5a.5.5 0 000 1h4a.5.5 0 000-1h-4zM5 10c0 .28.22.5.5.5h7a.5.5 0 000-1h-7a.5.5 0 00-.5.5zm.5 2a.5.5 0 000 1h5a.5.5 0 000-1h-5z"></path></svg>`,
	4,
)

function SlideTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v6.5A2.75 2.75 0 0115.25 16H4.75A2.75 2.75 0 012 13.25v-6.5zM6 5H5v10h1V5zm3 0H8v10h1V5zm3 0v10h1V5h-1z"></path></svg>`,
	4,
)

function SlideTransitionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 2.68A2 2 0 0012 2H8a2 2 0 00-2 2v.17A3 3 0 017 4h6.04c.06-.48.23-.92.47-1.32zM13.05 5H7a2 2 0 00-2 2v6c0 1.1.9 2 2 2h6a2 2 0 002-2v-2a1 1 0 001-1V9a1 1 0 00-1-1v-.34A3.5 3.5 0 0113.04 5zM7 16a3 3 0 01-1-.17V16c0 1.1.9 2 2 2h4a2 2 0 002-2v-.17a3 3 0 01-1 .17H7zM19 4.5a2.5 2.5 0 10-5 0 2.5 2.5 0 005 0z"></path></svg>`,
	4,
)

function SmartwatchDotIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 2a2 2 0 00-2 2v.17A3 3 0 017 4h6a3 3 0 011 .17V4a2 2 0 00-2-2H8zM7 5a2 2 0 00-2 2v6c0 1.1.9 2 2 2h6a2 2 0 002-2v-2a1 1 0 001-1V9a1 1 0 00-1-1V7a2 2 0 00-2-2H7zm0 11a3 3 0 01-1-.17V16c0 1.1.9 2 2 2h4a2 2 0 002-2v-.17a3 3 0 01-1 .17H7z"></path></svg>`,
	4,
)

function SmartwatchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 4a.75.75 0 000 1.5h3.88l-4.45 5.27a.75.75 0 00.57 1.23h5.5a.75.75 0 000-1.5h-3.88l4.45-5.27A.75.75 0 0016.25 4h-5.5zm-7 6a.75.75 0 000 1.5h1.97l-2.56 3.29A.75.75 0 003.75 16h3.5a.75.75 0 000-1.5H5.28l2.56-3.29A.75.75 0 007.25 10h-3.5z"></path></svg>`,
	4,
)

function SnoozeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 10a7 7 0 1112.14 4.75l.65.77a8 8 0 10-11.58 0l.65-.77A6.97 6.97 0 013 10zm11.16 3.6a5.5 5.5 0 10-8.32 0l.65-.78a4.5 4.5 0 117.01 0l.66.78zm-1.65-1.96a3 3 0 10-5.02 0l.69-.81a2 2 0 113.64 0l.69.81zm-2.13-.96a.5.5 0 00-.76 0l-5.5 6.5a.5.5 0 00.38.82h11a.5.5 0 00.38-.82l-5.5-6.5z"></path></svg>`,
	4,
)

function SoundSourceIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm7-2.5a.5.5 0 00-1 0v5a.5.5 0 001 0v-5zM6 8a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2A.5.5 0 006 8zm5 0a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2A.5.5 0 0011 8zm2.5-1a.5.5 0 00-.5.5v5a.5.5 0 001 0v-5a.5.5 0 00-.5-.5z"></path></svg>`,
	4,
)

function SoundWaveCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 7.75c.41 0 .75.34.75.75v2h13v-2a.75.75 0 011.5 0v2c0 .83-.67 1.5-1.5 1.5h-13A1.5 1.5 0 012 10.5v-2c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function SpacebarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.4 12.8a1.04 1.04 0 001.59-.51l.45-1.37a2.34 2.34 0 011.47-1.48l1.4-.45A1.04 1.04 0 0012.25 7l-1.37-.45A2.34 2.34 0 019.4 5.08L8.95 3.7a1.03 1.03 0 00-.82-.68 1.04 1.04 0 00-1.15.7l-.46 1.4a2.34 2.34 0 01-1.44 1.45L3.7 7a1.04 1.04 0 00.02 1.97l1.37.45a2.33 2.33 0 011.48 1.48l.46 1.4c.07.2.2.37.38.5zm6.14 4.05a.8.8 0 001.22-.4l.25-.76a1.09 1.09 0 01.68-.68l.77-.25a.8.8 0 00-.02-1.52l-.77-.25a1.08 1.08 0 01-.68-.68l-.25-.77a.8.8 0 00-1.52.01l-.24.76a1.1 1.1 0 01-.67.68l-.77.25a.8.8 0 000 1.52l.77.25a1.09 1.09 0 01.68.68l.25.77c.06.16.16.3.3.4z"></path></svg>`,
	4,
)

function SparkleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3a1 1 0 00-1.68-.73l-3.87 3.6A.5.5 0 016.1 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.35.13l3.87 3.6a1 1 0 001.68-.74V3.01z"></path></svg>`,
	4,
)

function Speaker0Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3a1 1 0 00-1.68-.73l-3.87 3.6A.5.5 0 016.1 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.35.13l3.87 3.6a1 1 0 001.68-.74V3.01zm2.08 9.93a.5.5 0 01-.19-.68 4.5 4.5 0 000-4.5.5.5 0 11.87-.5 5.5 5.5 0 010 5.5.5.5 0 01-.68.18z"></path></svg>`,
	4,
)

function Speaker1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3a1 1 0 00-1.68-.73l-3.87 3.6A.5.5 0 016.1 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.35.13l3.87 3.6a1 1 0 001.68-.74V3.01zm3.25 1.63a.5.5 0 01.71.04 8 8 0 010 10.66.5.5 0 11-.75-.66 7 7 0 000-9.34.5.5 0 01.04-.7zm-1.17 8.3a.5.5 0 01-.19-.68 4.5 4.5 0 000-4.5.5.5 0 11.87-.5 5.5 5.5 0 010 5.5.5.5 0 01-.68.18z"></path></svg>`,
	4,
)

function Speaker2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.32 2.27a1 1 0 011.68.74v13.98a1 1 0 01-1.68.74l-3.87-3.6A.5.5 0 006.1 14H3.5A1.5 1.5 0 012 12.5v-5C2 6.67 2.67 6 3.5 6h2.6a.5.5 0 00.35-.13l3.87-3.6zm5.53 2.88a.5.5 0 00-.85.35v3.46l-1.19-.95a.5.5 0 10-.62.78L14.7 10l-1.51 1.21a.5.5 0 10.62.78l1.19-.95v3.46a.5.5 0 00.85.35l2.5-2.5a.5.5 0 00-.04-.74L16.3 10l2.01-1.61a.5.5 0 00.04-.74l-2.5-2.5zm1.4 6.9L16 13.28v-2.25l1.25 1zM16 6.7l1.25 1.25-1.25 1V6.71z"></path></svg>`,
	4,
)

function SpeakerBluetoothIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3a1 1 0 00-1.68-.73l-3.87 3.6A.5.5 0 016.1 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.35.13l2.83 2.63.15-.6a3.2 3.2 0 01.84-1.5L12 12.95V3zm3.96 1.66a7.97 7.97 0 011.99 4.46c-.34-.1-.68-.14-1.02-.12a6.97 6.97 0 00-1.72-3.67.5.5 0 01.75-.67zm-1.2 2.59c.41.72.65 1.5.72 2.27-.14.1-.26.2-.38.32l-.63.63c.1-.92-.08-1.87-.58-2.72a.5.5 0 01.87-.5zm-3.78 8.12l4.83-4.83a1.87 1.87 0 112.64 2.65l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.08l.37-1.5c.1-.38.3-.73.58-1.02z"></path></svg>`,
	4,
)

function SpeakerEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3a1 1 0 00-1.68-.73l-3.88 3.6A.5.5 0 016.1 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.34.13l3.88 3.6a1 1 0 001.68-.74V3.01zm1.14 4.65c.2-.2.52-.2.71 0l1.65 1.64 1.64-1.64a.5.5 0 11.71.7L16.2 10l1.65 1.65a.5.5 0 11-.7.7l-1.65-1.64-1.65 1.64a.5.5 0 11-.7-.7L14.78 10l-1.65-1.65a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function SpeakerMuteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L5.29 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.35.13l3.87 3.6a1 1 0 001.68-.74v-4.28l5.15 5.14a.5.5 0 00.7-.7l-2.56-2.57L2.85 2.15zm13.11 2.52a8 8 0 01.66 9.83l-.73-.73a7 7 0 00-.68-8.44.5.5 0 11.75-.66zm-1.2 2.58c1 1.74.95 3.8.04 5.43l-.74-.74a4.5 4.5 0 00-.17-4.19.5.5 0 11.87-.5zM12 3.01v6.87L7.25 5.13l3.07-2.86a1 1 0 011.68.74z"></path></svg>`,
	4,
)

function SpeakerOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$79 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 3a1 1 0 00-1.68-.73l-3.87 3.6A.5.5 0 016.1 6H3.5C2.67 6 2 6.67 2 7.5v5c0 .83.67 1.5 1.5 1.5h2.6a.5.5 0 01.35.13l3.21 2.98A5.48 5.48 0 0112 9.6V3zm.07 8.44l-.16-.55c.25-.2.53-.37.82-.5l.34.36a2 2 0 002.9 0l.33-.35c.3.14.58.32.84.52l-.13.42a2 2 0 001.46 2.52l.35.09a4.7 4.7 0 010 1.01l-.45.12a2 2 0 00-1.43 2.48l.15.55c-.25.2-.53.37-.82.5l-.34-.36a2 2 0 00-2.9 0l-.33.35c-.3-.14-.58-.32-.84-.52l.13-.42a2 2 0 00-1.46-2.52l-.35-.09a4.71 4.71 0 010-1.01l.45-.12a2 2 0 001.44-2.48zm2.43 4.06a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function SpeakerSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$79.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$78 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.32 2.27a1 1 0 011.68.74v13.98a1 1 0 01-1.68.74l-3.87-3.6A.5.5 0 006.1 14H3.5A1.5 1.5 0 012 12.5v-5C2 6.67 2.67 6 3.5 6h2.6a.5.5 0 00.35-.13l3.87-3.6zM14 8V6a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 011 1v2.2a1 1 0 01-.2.6l-1.3 1.8V15a1 1 0 01-1 1h-1a1 1 0 01-1-1v-1.4l-1.31-1.84a1 1 0 01-.19-.58V9a1 1 0 011-1zm1 0h2V6h-2v2z"></path></svg>`,
	4,
)

function SpeakerUsbIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$78.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$77 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3.5A6.5 6.5 0 003.5 10 .75.75 0 012 10a8 8 0 118 8 .75.75 0 010-1.5 6.5 6.5 0 100-13z"></path></svg>`,
	4,
)

function SpinnerIosIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$77.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$76 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 2c.28 0 .5.22.5.5v15a.5.5 0 01-1 0v-15c0-.28.22-.5.5-.5zM4 4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h4V4H4zm11 1a1 1 0 011 1v.5a.5.5 0 001 0V6a2 2 0 00-2-2h-.5a.5.5 0 000 1h.5zm0 10a1 1 0 001-1v-.5a.5.5 0 011 0v.5a2 2 0 01-2 2h-.5a.5.5 0 010-1h.5zm1.5-7a.5.5 0 00-.5.5v3a.5.5 0 001 0v-3a.5.5 0 00-.5-.5zm-4-4a.5.5 0 010 1h-1a.5.5 0 010-1h1zm.5 11.5a.5.5 0 00-.5-.5h-1a.5.5 0 000 1h1a.5.5 0 00.5-.5z"></path></svg>`,
	4,
)

function SplitHintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$76.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$75 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.5 10a.5.5 0 000-1h-15a.5.5 0 000 1h15zM14 2a2 2 0 012 2v4H4V4c0-1.1.9-2 2-2h8zM4 11v4c0 1.1.9 2 2 2h8a2 2 0 002-2v-4H4z"></path></svg>`,
	4,
)

function SplitHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$75.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$74 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2.5a.5.5 0 00-1 0v15a.5.5 0 001 0v-15zM2 6c0-1.1.9-2 2-2h4v12H4a2 2 0 01-2-2V6zm9 10h4a2 2 0 002-2V6a2 2 0 00-2-2h-4v12z"></path></svg>`,
	4,
)

function SplitVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$74.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$73 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.94 2.64A11.63 11.63 0 002.6 10.9l6.6 6.6a10.9 10.9 0 006.08-4.08 13.32 13.32 0 002.07-4.35l-6.42-6.43zm.91 5.5c.2.2.2.52 0 .71l-3 3a.5.5 0 01-.7-.7l3-3c.2-.2.5-.2.7 0zm5.8-.2c.26-1.3.36-2.56.35-3.71A2.25 2.25 0 0015.7 2c-1.32.02-2.53.15-3.62.37l5.56 5.56zm-9.6 9.81l-5.72-5.72A16.1 16.1 0 002 15.84c.04 1.18 1 2.09 2.15 2.14 1.43.07 2.72-.02 3.89-.23z"></path></svg>`,
	4,
)

function SportAmericanFootballIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$73.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$72 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10c0 1.55-.44 3-1.2 4.22-.95-.7-2-1.24-3.14-1.63a.5.5 0 10-.32.95c1.04.35 2 .86 2.88 1.5a7.98 7.98 0 01-12.44 0c.87-.64 1.84-1.15 2.88-1.5a.5.5 0 00-.32-.95c-1.13.39-2.2.94-3.14 1.63a7.96 7.96 0 010-8.43c.94.7 2 1.25 3.14 1.63a.5.5 0 10.32-.95 10.47 10.47 0 01-2.88-1.5 7.98 7.98 0 0112.44 0c-.87.64-1.84 1.15-2.88 1.5a.5.5 0 10.32.95c1.14-.38 2.2-.94 3.14-1.63A7.96 7.96 0 0118 10zm-8 3c.49 0 .96.03 1.43.1a.5.5 0 10.14-1 11.6 11.6 0 00-3.14 0 .5.5 0 00.14 1c.47-.07.94-.1 1.43-.1zM8.57 6.92a.5.5 0 00-.14.99 11.6 11.6 0 003.14 0 .5.5 0 10-.14-1 10.6 10.6 0 01-2.86 0z"></path></svg>`,
	4,
)

function SportBaseballIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$72.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$71 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.7 4A7.97 7.97 0 019 2.06c.07.43.14.91.24 1.4.18.9.43 1.89.78 2.79.28.71.62 1.4 1.06 1.96L10 9.3 4.7 4zm-.7.7A7.97 7.97 0 002.06 9c.43.07.9.14 1.4.24.9.18 1.89.43 2.79.78.71.28 1.4.62 1.96 1.06L9.29 10 4 4.7zm3.5 7.1c-.43-.32-.99-.6-1.61-.85-.83-.31-1.75-.55-2.62-.72-.45-.1-.88-.17-1.27-.22 0 2.02.76 3.87 2 5.28l3.5-3.5zM4.7 16l3.5-3.5c.32.43.6.98.85 1.61.31.83.55 1.75.72 2.62.1.45.17.88.22 1.27a7.97 7.97 0 01-5.28-2zm4.22-4.21L10 10.71 15.3 16a7.97 7.97 0 01-4.3 1.94c-.07-.43-.15-.91-.25-1.4-.18-.9-.43-1.89-.77-2.79a7.57 7.57 0 00-1.06-1.96zm7.08 3.5a7.97 7.97 0 001.94-4.3 17.37 17.37 0 01-4.18-1.02 7.57 7.57 0 01-1.97-1.05L10.7 10 16 15.3zM12.5 8.2c.43.33.98.6 1.61.85.83.32 1.75.55 2.62.72.45.1.88.17 1.27.22 0-2.02-.76-3.87-2-5.28l-3.5 3.5zM15.3 4A7.97 7.97 0 0010 2c.06.4.14.82.23 1.27.17.87.4 1.8.72 2.62.24.63.53 1.18.85 1.6L15.3 4z"></path></svg>`,
	4,
)

function SportBasketballIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$71.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$70 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.97 2.06a3.7 3.7 0 013.45 1.3l1.71 1.93c.75.84 1.08 2.02.73 3.13-2.1 6.7-7.03 9.08-10.19 9.55-.9.14-1.76-.22-2.39-.78l-1.8-1.6A4.07 4.07 0 012.2 11.2c2.12-5.99 6.46-8.47 9.76-9.15zm2.52 3.52a.5.5 0 10-.98-.16 10.9 10.9 0 01-3.05 5.9 10.32 10.32 0 01-4.1 2.7.5.5 0 10.28.96c1.25-.36 3-1.38 4.53-2.96a11.89 11.89 0 003.32-6.44z"></path></svg>`,
	4,
)

function SportHockeyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$70.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.58 4.13c.34.4.62.83.84 1.28a2 2 0 01-2.44.31l1.6-1.6zm-.7-.71l-1.6 1.6a2 2 0 01.3-2.43c.46.21.9.49 1.3.83zm1.04 8.02a6 6 0 00.87-5.03 3 3 0 01-3.53.04L13.1 7.6l3.82 3.83zm-3.37-5.7a3 3 0 01.04-3.53 6 6 0 00-5.03.87L12.4 6.9l1.16-1.16zM7.8 3.72l-.03.04a5.97 5.97 0 00-1.52 2.57c.46.14.93.3 1.4.5 1.04.41 2.15.98 3.06 1.77l.98-.99L7.8 3.72zm5.9 10.04a5.97 5.97 0 002.55-1.52l.04-.03-3.9-3.9-.97.99c.8.92 1.39 2.05 1.8 3.1.19.46.34.91.48 1.36zm-.44 2.57a1.7 1.7 0 01-2.1 1.65c-1.76-.4-4.54-1.23-6.2-2.89-1.65-1.65-2.5-4.44-2.9-6.2A1.7 1.7 0 014.08 6.8c.9.19 2.06.49 3.19.94a9.3 9.3 0 013.1 1.91 9.2 9.2 0 011.9 3.1c.45 1.14.75 2.29.93 3.2.03.12.04.25.04.37zm-6.4-5.18a.5.5 0 00-.7.7l2 2a.5.5 0 10.7-.7l-2-2z"></path></svg>`,
	4,
)

function SportIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a8 8 0 100 16 8 8 0 000-16zM7.1 3.63l2.4 1.4v1.7L6.73 8.7l-1.56-.57-.62-2.51a7.02 7.02 0 012.54-1.98zM3.02 10.7l1.83-1.62 1.55.56 1.04 3.3L6.73 14H4.25a6.96 6.96 0 01-1.22-3.3zm5.34 6.12l-.81-2.25.7-1.06h3.47l.72 1.06-.82 2.25a7.02 7.02 0 01-3.26 0zM15.75 14h-2.48l-.72-1.08 1.02-3.29 1.57-.56 1.83 1.62a6.96 6.96 0 01-1.22 3.3zm-.3-8.38l-.62 2.5-1.58.57-2.75-1.95v-1.7l2.4-1.4c1 .45 1.88 1.13 2.56 1.98z"></path></svg>`,
	4,
)

function SportSoccerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.6A5.5 5.5 0 0117 9.6V6a3 3 0 00-3-3H6zm8.5 16a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V14h1.5a.5.5 0 010 1H15v1.5a.5.5 0 01-1 0V15h-1.5a.5.5 0 010-1H14v-1.5c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function SquareAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.6A5.5 5.5 0 0117 9.6V6a3 3 0 00-3-3H6zm8.5 16a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm.9-6.4l.9.9h-1.55A2.75 2.75 0 0012 16.25v.25a.5.5 0 001 0v-.25c0-.97.78-1.75 1.75-1.75h1.54l-.9.9a.5.5 0 00.71.7l1.76-1.75a.5.5 0 000-.7L16.1 11.9a.5.5 0 00-.7.7z"></path></svg>`,
	4,
)

function SquareArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.6A5.5 5.5 0 0117 9.6V6a3 3 0 00-3-3H6zm8.5 16a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm1.85-6.35c.2.2.2.5 0 .7l-1.14 1.15 1.14 1.15a.5.5 0 01-.7.7l-1.15-1.14-1.15 1.14a.5.5 0 01-.7-.7l1.14-1.15-1.14-1.15a.5.5 0 01.7-.7l1.15 1.14 1.15-1.14c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function SquareDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.73 13.64l4.9-4.9A2.48 2.48 0 0117 8.59V6a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3h2.6a2.5 2.5 0 01.13-3.36zm7.74-4.2l2.1 2.1a1.5 1.5 0 010 2.12l-3.6 3.6-4.22-4.22 3.6-3.6a1.5 1.5 0 012.12 0zm-2.21 8.52l-4.22-4.22-.6.6a1.5 1.5 0 000 2.13l2.1 2.1a1.5 1.5 0 001.12.43h4.09a.5.5 0 000-1h-2.53l.04-.04z"></path></svg>`,
	4,
)

function SquareEraserIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 3a.5.5 0 000 1h3a.5.5 0 000-1h-3zM4.05 5.54a2 2 0 011.55-1.5.5.5 0 00.4-.59.5.5 0 00-.66-.38 3 3 0 00-2.29 2.34.5.5 0 00.4.6.5.5 0 00.6-.47zm0 8.92a2 2 0 001.55 1.5.5.5 0 01.4.59.5.5 0 01-.66.38 3 3 0 01-2.29-2.34.5.5 0 01.4-.6.5.5 0 01.6.47zM14.66 3.07a.5.5 0 00-.66.38.5.5 0 00.46.6 2 2 0 011.5 1.55.5.5 0 00.59.4.5.5 0 00.38-.66 3 3 0 00-2.27-2.27zM3 11.5a.5.5 0 001 0v-3a.5.5 0 00-1 0v3zM6.5 5C5.67 5 5 5.67 5 6.5v7c0 .83.67 1.5 1.5 1.5H7v-.25A2.75 2.75 0 019.75 12H12V9.75A2.75 2.75 0 0114.75 7H15v-.5c0-.83-.67-1.5-1.5-1.5h-7zM19 9.75C19 8.78 18.22 8 17.25 8h-2.5C13.78 8 13 8.78 13 9.75V13H9.75C8.78 13 8 13.78 8 14.75v2.5c0 .97.78 1.75 1.75 1.75h6.75a2.5 2.5 0 002.5-2.5V9.75zM14 13V9.75c0-.41.34-.75.75-.75h2.5c.41 0 .75.34.75.75V13h-4zm2.5 5H14v-4h4v2.5c0 .83-.67 1.5-1.5 1.5zm-6.75-4H13v4H9.75a.75.75 0 01-.75-.75v-2.5c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function SquareHintAppsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.25 3a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5h-1.5zM3 10.75a.75.75 0 001.5 0v-1.5a.75.75 0 00-1.5 0v1.5zm4.5 5.5c0-.41.34-.75.75-.75h.84c.1.53.27 1.03.51 1.5H8.25a.75.75 0 01-.75-.75zm8-7.16c.53.1 1.03.27 1.5.51V8.25a.75.75 0 00-1.5 0v.84zM6 3.75A.75.75 0 005.25 3C4.01 3 3 4 3 5.25a.75.75 0 001.5 0c0-.41.34-.75.75-.75S6 4.16 6 3.75zM5.25 17a.75.75 0 000-1.5.75.75 0 01-.75-.75.75.75 0 00-1.5 0C3 15.99 4 17 5.25 17zM14 3.75c0-.41.34-.75.75-.75C15.99 3 17 4 17 5.25a.75.75 0 01-1.5 0 .75.75 0 00-.75-.75.75.75 0 01-.75-.75zM14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function SquareHintArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.25 3a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5h-1.5zM3 10.75a.75.75 0 001.5 0v-1.5a.75.75 0 00-1.5 0v1.5zm5.5 5.5c0-.41.34-.75.75-.75h1.5a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75zm7-5.5a.75.75 0 001.5 0v-1.5a.75.75 0 00-1.5 0v1.5zm-9.5-7A.75.75 0 005.25 3C4.01 3 3 4 3 5.25a.75.75 0 001.5 0c0-.41.34-.75.75-.75S6 4.16 6 3.75zM5.25 17a.75.75 0 000-1.5.75.75 0 01-.75-.75.75.75 0 00-1.5 0C3 15.99 4 17 5.25 17zM14 3.75c0-.41.34-.75.75-.75C15.99 3 17 4 17 5.25a.75.75 0 01-1.5 0 .75.75 0 00-.75-.75.75.75 0 01-.75-.75zM14.75 17a.75.75 0 010-1.5c.41 0 .75-.34.75-.75a.75.75 0 011.5 0c0 1.24-1 2.25-2.25 2.25z"></path></svg>`,
	4,
)

function SquareHintIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.88.28l.35 1.07a2.2 2.2 0 001.4 1.4l1.07.35h.02a.42.42 0 010 .8l-1.07.35a2.2 2.2 0 00-1.4 1.4l-.35 1.07a.42.42 0 01-.8 0l-.35-1.07a2.23 2.23 0 00-1.4-1.4l-1.07-.35a.42.42 0 010-.8l1.07-.35a2.2 2.2 0 001.38-1.4l.35-1.07a.42.42 0 01.8 0zm4.9 7.93l-.76-.25a1.58 1.58 0 01-1-1l-.25-.76a.3.3 0 00-.57 0l-.25.77a1.58 1.58 0 01-.98 1l-.77.24a.3.3 0 000 .57l.77.25a1.58 1.58 0 011 1l.24.77a.3.3 0 00.58 0l.24-.77a1.58 1.58 0 011-1l.77-.24a.3.3 0 000-.57h-.02zM10 3.5c0-.17.04-.34.1-.5h-.85a.75.75 0 000 1.5h1.18a1.43 1.43 0 01-.43-1zm-6.25 8a.75.75 0 01-.75-.75v-1.5a.75.75 0 011.5 0v1.5c0 .41-.34.75-.75.75zm5.5 4a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5h-1.5zM5.25 3a.75.75 0 010 1.5.75.75 0 00-.75.75.75.75 0 01-1.5 0C3 4.01 4 3 5.25 3zM6 16.25c0 .41-.34.75-.75.75C4.01 17 3 16 3 14.75a.75.75 0 011.5 0c0 .41.34.75.75.75s.75.34.75.75zm8 0c0 .41.34.75.75.75 1.24 0 2.25-1 2.25-2.25a.75.75 0 00-1.5 0c0 .41-.34.75-.75.75a.75.75 0 00-.75.75z"></path></svg>`,
	4,
)

function SquareHintSparklesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6z"></path></svg>`,
	4,
)

function SquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.09 4H5.05A2.5 2.5 0 017.5 2H14a4 4 0 014 4v6.5a2.5 2.5 0 01-2 2.45v-1.04c.58-.2 1-.76 1-1.41V6a3 3 0 00-3-3H7.5c-.65 0-1.2.42-1.41 1zM2 7.5A2.5 2.5 0 014.5 5h8A2.5 2.5 0 0115 7.5v8a2.5 2.5 0 01-2.5 2.5h-8A2.5 2.5 0 012 15.5v-8z"></path></svg>`,
	4,
)

function SquareMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5v7A2.5 2.5 0 004.5 14H6v1.5A2.5 2.5 0 008.5 18h7a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0015.5 6H14V4.5A2.5 2.5 0 0011.5 2h-7zm-1 2.5a1 1 0 011-1h7a1 1 0 011 1v7a1 1 0 01-1 1h-7a1 1 0 01-1-1v-7z"></path></svg>`,
	4,
)

function SquareShadowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v1.76A2.99 2.99 0 0015 7h-5a3 3 0 00-3 3v5c0 .77.29 1.47.76 2H6a3 3 0 01-3-3V6zm7 11h4a3 3 0 003-3v-4a2 2 0 00-2-2h-5a2 2 0 00-2 2v5c0 1.1.9 2 2 2z"></path></svg>`,
	4,
)

function SquaresNestedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 10a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm1.6-7.1a.5.5 0 00-.7.7l.9.9h-1.55A2.75 2.75 0 0012 7.25v.25a.5.5 0 001 0v-.25c0-.97.78-1.75 1.75-1.75h1.54l-.9.9a.5.5 0 00.71.7l1.76-1.75a.5.5 0 000-.7L16.1 2.9zM4 3h5.6a5.5 5.5 0 004.4 7.98V11a2 2 0 01-2 2H4a2 2 0 01-2-2V5c0-1.1.9-2 2-2zm11 7.98c.34-.03.68-.1 1-.19V11a4 4 0 01-4 4H6a2 2 0 01-1.73-1H12a3 3 0 003-3v-.02zm3-1.24c-.3.26-.64.48-1 .66v.6a5 5 0 01-5 5H6.27c.34.6.99 1 1.73 1h4a6 6 0 006-6V9.74z"></path></svg>`,
	4,
)

function StackArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3a2 2 0 00-2 2v6c0 1.1.9 2 2 2h8a2 2 0 002-2V5a2 2 0 00-2-2H4zm.27 11c.34.6.99 1 1.73 1h6a4 4 0 004-4V7a2 2 0 00-1-1.73V11a3 3 0 01-3 3H4.27zm2 2c.34.6.99 1 1.73 1h4a6 6 0 006-6V9a2 2 0 00-1-1.73V11a5 5 0 01-5 5H6.27z"></path></svg>`,
	4,
)

function StackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3a2 2 0 00-2 2v6c0 1.1.9 2 2 2h8a2 2 0 002-2V5a2 2 0 00-2-2H4zm4.33 2.08l.91 1.73 1.8.22a.38.38 0 01.2.67L9.91 8.74l.45 1.93a.38.38 0 01-.56.4L8 10l-1.8 1.08a.38.38 0 01-.57-.4l.45-1.93L4.77 7.7a.38.38 0 01.19-.67l1.8-.22.9-1.73a.38.38 0 01.67 0zM4.27 14c.34.6.99 1 1.73 1h6a4 4 0 004-4V7a2 2 0 00-1-1.73V11a3 3 0 01-3 3H4.27zm2 2c.34.6.99 1 1.73 1h4a6 6 0 006-6V9a2 2 0 00-1-1.73V11a5 5 0 01-5 5H6.27z"></path></svg>`,
	4,
)

function StackStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 2.9a1 1 0 011.8 0l1.93 3.91 4.31.63a1 1 0 01.56 1.7l-.55.54a5.5 5.5 0 00-7.96 6.26l-3.05 1.6a1 1 0 01-1.45-1.05l.74-4.3L2.3 9.14a1 1 0 01.56-1.7l4.31-.63L9.1 2.9zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 100 1H14v1.5a.5.5 0 101 0V15h1.5a.5.5 0 100-1H15v-1.5z"></path></svg>`,
	4,
)

function StarAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.9 2.56a1 1 0 00-1.8 0L7.17 6.45l-4.31.62a1 1 0 00-.56 1.7l3.13 3.03-.74 4.28a1 1 0 001.45 1.05l3.05-1.6a5.46 5.46 0 015.31-6.9c.96 0 1.86.24 2.65.67l.55-.53a1 1 0 00-.56-1.7l-4.31-.62-1.93-3.9zM19 14.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-4.15 2.35a.5.5 0 01-.7-.7L15.29 15H12.5a.5.5 0 010-1h2.8l-1.15-1.15a.5.5 0 01.7-.7l2 2a.5.5 0 01.15.35.5.5 0 01-.14.35l-2 2z"></path></svg>`,
	4,
)

function StarArrowRightEndIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 2.56a1 1 0 011.8 0l1.93 3.9 4.31.64a1 1 0 01.56 1.7l-3.13 3.05.74 4.3a1 1 0 01-1.45 1.05l-2.98-1.57a5.52 5.52 0 00-7.8-6.07L2.3 8.8a1 1 0 01.56-1.7l4.31-.63L9.1 2.56zM5.5 10a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm2.35 4.85A.5.5 0 008 14.5a.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L6.29 14H3.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2z"></path></svg>`,
	4,
)

function StarArrowRightStartIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 2.9a1 1 0 011.8 0l1.93 3.91 4.31.63a1 1 0 01.56 1.7l-.55.54a5.5 5.5 0 00-7.96 6.26l-3.05 1.6a1 1 0 01-1.45-1.05l.74-4.3L2.3 9.14a1 1 0 01.56-1.7l4.31-.63L9.1 2.9zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function StarDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.9 2.9a1 1 0 00-1.8 0L7.17 6.8l-4.31.63a1 1 0 00-.56 1.7l3.13 3.05-.74 4.3a1 1 0 001.45 1.05l3.43-1.8c.16-.4.4-.76.7-1.07l4.83-4.83a2.87 2.87 0 012.67-.77 1 1 0 00-.63-1.63l-4.31-.63L10.9 2.9zm4.9 7.65l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function StarEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 2.9a1 1 0 011.8 0l1.93 3.91 4.31.63a1 1 0 01.56 1.7l-3.12 3.05.73 4.3a1 1 0 01-1.45 1.05L10 15.51l-3.86 2.03a1 1 0 01-1.45-1.05l.74-4.3L2.3 9.14a1 1 0 01.56-1.7l4.31-.63L9.1 2.9zM4.4 12.69a.5.5 0 01-.08.7l-2.5 2a.5.5 0 11-.62-.78l2.5-2a.5.5 0 01.7.08zM4.31 5.1a.5.5 0 11-.62.78l-2.5-2a.5.5 0 11.62-.78l2.5 2zm11.3 7.58a.5.5 0 00.08.7l2.5 2a.5.5 0 10.62-.78l-2.5-2a.5.5 0 00-.7.08zm.08-7.58a.5.5 0 00.62.78l2.5-2a.5.5 0 10-.62-.78l-2.5 2z"></path></svg>`,
	4,
)

function StarEmphasisIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2.34a.99.99 0 00-.9.56L7.17 6.8l-4.31.63a1 1 0 00-.56 1.7l3.13 3.05-.74 4.3a1 1 0 001.45 1.05L10 15.51V2.34z"></path></svg>`,
	4,
)

function StarHalfIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 2.9a1 1 0 011.8 0l1.93 3.91 4.31.63a1 1 0 01.56 1.7l-3.12 3.05.73 4.3a1 1 0 01-1.45 1.05L10 15.51l-3.86 2.03a1 1 0 01-1.45-1.05l.74-4.3L2.3 9.14a1 1 0 01.56-1.7l4.31-.63L9.1 2.9z"></path></svg>`,
	4,
)

function StarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.9 2.9a1 1 0 00-1.8 0L7.17 6.8l-4.31.63a1 1 0 00-.56 1.7l3.12 3.05-.73 4.3a1 1 0 001.45 1.05L11 14.98V13.5c0-.83.67-1.5 1.5-1.5a1.5 1.5 0 110-3 1.5 1.5 0 01-.07-3L10.9 2.9zm1.6 7.1a.5.5 0 000 1h5a.5.5 0 100-1h-5zM12 7.5c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm.5 5.5a.5.5 0 000 1h5a.5.5 0 100-1h-5z"></path></svg>`,
	4,
)

function StarLineHorizontal3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.86 2.15a.5.5 0 10-.71.7l4.1 4.1-3.4.49a1 1 0 00-.55 1.7l3.13 3.05-.74 4.3a1 1 0 001.45 1.05L10 15.51l3.86 2.03a1 1 0 001.45-1.05l-.1-.57 1.94 1.93a.5.5 0 00.7-.7l-15-15zm11.72 10.04l.05.32-6.87-6.88L9.1 2.9a1 1 0 011.8 0l1.93 3.91 4.31.63a1 1 0 01.56 1.7l-3.12 3.05z"></path></svg>`,
	4,
)

function StarOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 5.14L7.17 6.8l-4.31.63a1 1 0 00-.56 1.7l3.13 3.05-.74 4.3a1 1 0 001.45 1.05L8 16.56V5.14z"></path></svg>`,
	4,
)

function StarOneQuarterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.1 2.9a1 1 0 011.8 0l1.93 3.91 4.31.63a1 1 0 01.56 1.7l-.55.54a5.5 5.5 0 00-7.96 6.26l-3.05 1.6a1 1 0 01-1.45-1.05l.74-4.3L2.3 9.14a1 1 0 01.56-1.7l4.31-.63L9.1 2.9zm.9 11.6a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zm3.5 3.5c-.78 0-1.51-.26-2.1-.7l4.9-4.9a3.5 3.5 0 01-2.8 5.6z"></path></svg>`,
	4,
)

function StarProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.9 2.9a1 1 0 00-1.8 0L7.17 6.8l-4.31.63a1 1 0 00-.56 1.7l3.13 3.05-.74 4.3a1 1 0 001.45 1.05l3.05-1.6a5.5 5.5 0 017.96-6.26l.55-.54a1 1 0 00-.56-1.7l-4.31-.63L10.9 2.9zm-.27 11.02l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55a2 2 0 01-1.44 2.48zm4.87.58a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function StarSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 5.13L10.9 2.9a1 1 0 00-1.8 0L7.17 6.8l-4.31.63a1 1 0 00-.56 1.7l3.13 3.05-.74 4.3a1 1 0 001.45 1.05L10 15.51l2 1.05V5.13z"></path></svg>`,
	4,
)

function StarThreeQuarterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.35 2.65a2.62 2.62 0 00-3.7 0l-5.5 5.5a.5.5 0 00-.14.23l-1 4a.5.5 0 00.61.6l4-1a.5.5 0 00.23-.13l5.5-5.5a2.62 2.62 0 000-3.7zm-1.4 6.53a6 6 0 11-5.12-5.12l.85-.86A7.02 7.02 0 003 10a7 7 0 1013.8-1.68l-.86.86z"></path></svg>`,
	4,
)

function StatusIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 3a1 1 0 011-1h3a1 1 0 011 1v4h-1V3h-3v3a1 1 0 01-1 1H8v3a1 1 0 01-1 1H4v3h4v1H4a1 1 0 01-1-1v-3a1 1 0 011-1h3V7a1 1 0 011-1h3V3zm2 6a1 1 0 011-1h3a1 1 0 011 1v5.5a2.5 2.5 0 01-2.5 2.5H10a1 1 0 01-1-1v-3a1 1 0 011-1h3V9z"></path></svg>`,
	4,
)

function StepsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 2a.75.75 0 00-.75.75v5a4.5 4.5 0 003.75 4.44v1.06a5.25 5.25 0 1010.5 0v-1.1a2.75 2.75 0 10-1.5 0v1.1a3.75 3.75 0 11-7.5 0v-1.06A4.5 4.5 0 0011 7.75v-5a.75.75 0 00-.75-.75h-1.5a.75.75 0 000 1.5h.75v4.25a3 3 0 11-6 0V3.5h.75a.75.75 0 000-1.5h-1.5zM15.5 8.25a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5z"></path></svg>`,
	4,
)

function StethoscopeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3.6a5.5 5.5 0 00-7.78 3.34 4.23 4.23 0 01-1.73-.68 1.97 1.97 0 01-.14-.11.5.5 0 00-.7.7v.01l.02.02a2 2 0 00.22.18 5.22 5.22 0 002.14.87A5.56 5.56 0 009.6 17H6a3 3 0 01-3-3V6zm4.5 3a1 1 0 100-2 1 1 0 000 2zm6-1a1 1 0 10-2 0 1 1 0 002 0zm5.5 6.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function StickerAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h5v-3.08a5.87 5.87 0 01-3.47-.47 4.2 4.2 0 01-.86-.57l-.01-.02h-.01a.5.5 0 01.7-.72 1 1 0 00.14.12c.1.07.26.18.48.3A4.5 4.5 0 0010 13c.43 0 .81-.05 1.15-.14a2.75 2.75 0 012.6-1.86H17V6a3 3 0 00-3-3H6zm1.5 6a1 1 0 110-2 1 1 0 010 2zm6-1a1 1 0 11-2 0 1 1 0 012 0zm-.7 8.41a2 2 0 01-.8.5v-3.16c0-.97.78-1.75 1.75-1.75h3.15a2 2 0 01-.49.8L12.8 16.4z"></path></svg>`,
	4,
)

function StickerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 3C3.67 3 3 3.67 3 4.5v11c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-11c0-.83-.67-1.5-1.5-1.5h-11z"></path></svg>`,
	4,
)

function StopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 8.5A2.5 2.5 0 014.5 6h11A2.5 2.5 0 0118 8.5v3a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 11.5v-3zM13 9a1 1 0 10-2 0 1 1 0 002 0zm3 0a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function StorageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5V4H2.5a.5.5 0 00-.5.5v10A2.5 2.5 0 004.5 17h11a2.5 2.5 0 002.5-2.5v-10a.5.5 0 00-.5-.5H13V2.5c0-.83-.67-1.5-1.5-1.5h-3C7.67 1 7 1.67 7 2.5zM8.5 2h3c.28 0 .5.22.5.5V4H8V2.5c0-.28.22-.5.5-.5zm-2 8V7h3v3h-3zm0 4v-3h3v3h-3zm7-4h-3V7h3v3zm-3 4v-3h3v3h-3z"></path></svg>`,
	4,
)

function StoreMicrosoftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 9.25a5.75 5.75 0 015.75-5.75h.5a.75.75 0 000-1.5h-.5C9.25 2 6 5.25 6 9.25v1c0 .41-.34.75-.75.75h-2.5a.75.75 0 000 1.5h2.5c1.24 0 2.25-1 2.25-2.25v-1zm6.25-3A3.25 3.25 0 0010.5 9.5v1a4.75 4.75 0 01-4.75 4.75h-3a.75.75 0 010-1.5h3c1.8 0 3.25-1.46 3.25-3.25v-1a4.75 4.75 0 014.75-4.75h3.5a.75.75 0 010 1.5h-3.5zm.5 2.75a.75.75 0 00-.75.75v1c0 4-3.25 7.25-7.25 7.25h-.5a.75.75 0 010-1.5h.5A5.75 5.75 0 0012 10.75v-1c0-1.24 1-2.25 2.25-2.25h3a.75.75 0 010 1.5h-3z"></path></svg>`,
	4,
)

function StreamIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 9.25a5.75 5.75 0 015.75-5.75h.5a.75.75 0 000-1.5h-.5C9.25 2 6 5.25 6 9.25v1c0 .41-.34.75-.75.75H4.9l1.3 1.3a2.25 2.25 0 001.3-2.05v-1zM6.4 16.5l-1.23 1.23c.14.16.35.27.58.27h.5c4 0 7.25-3.25 7.25-7.25v-1c0-.41.34-.75.75-.75h3a.75.75 0 000-1.5h-3c-1.24 0-2.25 1-2.25 2.25v1c0 3.12-2.5 5.67-5.6 5.75zm.8-3.09c.26.48.34 1.02.23 1.53a4.75 4.75 0 003.07-4.44v-1c0-1.8 1.46-3.25 3.25-3.25h3.5a.75.75 0 000-1.5h-3.5A4.75 4.75 0 009 9.5v1c0 1.28-.74 2.38-1.8 2.91zm-5.48-2.44c.3-.3.77-.3 1.06 0l3 3c.3.3.3.77 0 1.06l-3 3a.75.75 0 01-1.06-1.06l1.72-1.72H.75a.75.75 0 010-1.5h2.69l-1.72-1.72a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function StreamInputIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.25 3.5A5.75 5.75 0 007.5 9.25v1c0 1.24-1 2.25-2.25 2.25h-2.5a.75.75 0 010-1.5h2.5c.41 0 .75-.34.75-.75v-1C6 5.25 9.25 2 13.25 2h.5a.75.75 0 010 1.5h-.5zm-2.75 6c0-1.8 1.46-3.25 3.25-3.25h3.5a.75.75 0 000-1.5h-3.5A4.75 4.75 0 009 9.5v1c0 1.8-1.46 3.25-3.25 3.25h-3a.75.75 0 000 1.5h3a4.75 4.75 0 004.75-4.75v-1zm3.75-.5a.75.75 0 00-.75.75v1c0 .66-.09 1.3-.25 1.9a1.9 1.9 0 00-1.59.05c.22-.61.34-1.27.34-1.95v-1c0-1.24 1-2.25 2.25-2.25h3a.75.75 0 010 1.5h-3zm-1.4 9.16a.5.5 0 01-.7.7l-2-2a.5.5 0 010-.7l2-2a.5.5 0 01.7.7l-1.14 1.16h5.58l-1.14-1.15a.5.5 0 01.7-.7l2 2c.2.19.2.5 0 .7l-2 2a.5.5 0 01-.7-.7l1.14-1.15h-5.58l1.14 1.14z"></path></svg>`,
	4,
)

function StreamInputOutputIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.78 1.97a.75.75 0 10-1.06 1.06l1.72 1.72h-3.69A4.75 4.75 0 009 9.5v1c0 1.8-1.46 3.25-3.25 3.25h-3a.75.75 0 000 1.5h3a4.75 4.75 0 004.75-4.75v-1c0-1.8 1.46-3.25 3.25-3.25h3.69l-1.72 1.72a.75.75 0 001.06 1.06l3-3c.3-.3.3-.77 0-1.06l-3-3zM13.25 3.5A5.75 5.75 0 007.5 9.25v1c0 1.24-1 2.25-2.25 2.25h-2.5a.75.75 0 010-1.5h2.5c.41 0 .75-.34.75-.75v-1C6 5.25 9.25 2 13.25 2h.5a.75.75 0 010 1.5h-.5zm.91 4c-.24.49-.3 1.03-.17 1.54-.28.1-.49.39-.49.71v1c0 4-3.25 7.25-7.25 7.25h-.5a.75.75 0 010-1.5h.5A5.75 5.75 0 0012 10.75v-1c0-1.21.96-2.2 2.16-2.25z"></path></svg>`,
	4,
)

function StreamOutputIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.07 6a2 2 0 011.41-2.46l5.46-1.47a2 2 0 012.45 1.41l2.54 9.53a2 2 0 01-1.41 2.45l-5.46 1.47a2 2 0 01-2.45-1.41L5.07 5.99zM9 6.24a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM5 15V9.62l1.77 6.64c.07.27.19.52.34.74H7a2 2 0 01-2-2zm-2.33-1.5L4 8.53V15a3 3 0 00.16.97l-.08-.02a2 2 0 01-1.41-2.45z"></path></svg>`,
	4,
)

function StyleGuideIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 10.5v2c0 .83.67 1.5 1.5 1.5h2v-3.5H6zm0-1v-2C6 6.67 6.67 6 7.5 6h2v3.5H6zM10.5 6v3.5H14v-2c0-.83-.67-1.5-1.5-1.5h-2zm3.5 4.5h-3.5V14h2c.83 0 1.5-.67 1.5-1.5v-2zM6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zm-2 7.5h2v-1H4V6c0-1.1.9-2 2-2h3.5v2h1V4H14a2 2 0 012 2v3.5h-2v1h2V14a2 2 0 01-2 2h-3.5v-2h-1v2H6a2 2 0 01-2-2v-3.5z"></path></svg>`,
	4,
)

function SubGridIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.75A2.75 2.75 0 014.75 4h10.5A2.75 2.75 0 0118 6.75v6.5A2.75 2.75 0 0115.25 16H4.75A2.75 2.75 0 012 13.25v-6.5zm2 4.75c0 .28.22.5.5.5h7a.5.5 0 000-1h-7a.5.5 0 00-.5.5zm.5 1.5a.5.5 0 000 1h3a.5.5 0 000-1h-3zm8.5-1.5c0 .28.22.5.5.5h2a.5.5 0 000-1h-2a.5.5 0 00-.5.5zM9.5 13a.5.5 0 000 1h6a.5.5 0 000-1h-6z"></path></svg>`,
	4,
)

function SubtitlesIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.98 9.59L17 9a8 8 0 10-7.41 7.98A5.48 5.48 0 0112.2 9.5H5.5a.5.5 0 010-1h7a.5.5 0 01.45.72 5.5 5.5 0 014.03.37zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-5.4-2.6a.5.5 0 00-.7 0l-1.75 1.75a.5.5 0 000 .7l1.75 1.75a.5.5 0 00.7-.7l-.9-.9h1.55c.97 0 1.75.78 1.75 1.75v.25a.5.5 0 001 0v-.25a2.75 2.75 0 00-2.75-2.75h-1.54l.9-.9a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function SubtractCircleArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.98 9.59L17 9a8 8 0 10-7.41 7.98A5.48 5.48 0 0112.2 9.5H5.5a.5.5 0 010-1h7a.5.5 0 01.45.72 5.5 5.5 0 014.03.37zM10 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm5.4-2.6c.2-.2.5-.2.7 0l1.75 1.75a.5.5 0 010 .7L16.1 16.1a.5.5 0 01-.7-.7l.9-.9h-1.55c-.97 0-1.75.78-1.75 1.75v.25a.5.5 0 01-1 0v-.25a2.75 2.75 0 012.75-2.75h1.54l-.9-.9a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function SubtractCircleArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zM6 10c0 .28.22.5.5.5h7a.5.5 0 000-1h-7a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function SubtractCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><rect width="14" height="1.5" x="3" y="9.25" rx=".75"></rect></svg>`,
	4,
)

function SubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zm.5 6.5h7a.5.5 0 010 1h-7a.5.5 0 010-1z"></path></svg>`,
	4,
)

function SubtractSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 5.27c.6.34 1 .99 1 1.73v6a4 4 0 01-4 4H7a2 2 0 01-1.73-1H13a3 3 0 003-3V5.27zM15 5a2 2 0 00-2-2H5a2 2 0 00-2 2v8c0 1.1.9 2 2 2h8a2 2 0 002-2V5zm-3 4a.5.5 0 01-.5.5h-5a.5.5 0 110-1h5c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function SubtractSquareMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.55 14.03a5.75 5.75 0 002.9 4.24l-1.4.57a2 2 0 01-2.37-.66l-.27-.37a2 2 0 01.06-2.44l1.08-1.34zm5.7-5.53a4.75 4.75 0 110 9.5 4.75 4.75 0 010-9.5zM5.75 1c.2 0 .39.01.58.03l.28.05-.14.04A3.72 3.72 0 004.54 6.6a3.65 3.65 0 005.75.56A4.75 4.75 0 115.75 1zm5.37.46l.09.1.09.12.44.65a1.5 1.5 0 01-.03 1.72l-.09.12-1.88 2.18a2.65 2.65 0 01-4.26-.18 2.72 2.72 0 011.43-4.1l2.62-.97a1.5 1.5 0 011.59.36zm-1.14.68a.5.5 0 00-.2.61l.03.08.26.43.06.07a.5.5 0 00.84-.5l-.04-.09-.26-.43-.05-.07a.5.5 0 00-.64-.1z"></path></svg>`,
	4,
)

function SurfaceEarbudsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.26 2a.5.5 0 00-.5.45l-.76 8a.5.5 0 00.5.55h2.42l-.91 6.43a.5.5 0 00.98.14L7.36 15h3L10 17.43a.5.5 0 00.98.14l.37-2.57h2.28l.37 2.57a.5.5 0 00.98-.14L14.08 11h.66a.5.5 0 00.5-.45l.76-8a.5.5 0 00-.5-.55H5.26zm8.23 12h-1.98l.42-3h1.14l.42 3zm-3 0H7.51l.42-3h3l-.44 3z"></path></svg>`,
	4,
)

function SurfaceHubIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$69 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 6a4 4 0 01-2.25 3.6V8.44a3 3 0 10-3.5 0V9.6A4 4 0 1114 6zM9.47 17.78c.3.3.77.3 1.06 0l2.5-2.5a.75.75 0 10-1.06-1.06l-1.22 1.22V5.75a.75.75 0 00-1.5 0v9.69l-1.22-1.22a.75.75 0 00-1.06 1.06l2.5 2.5z"></path></svg>`,
	4,
)

function SwipeDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$69.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$68 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6a4 4 0 013.6 2.25H8.44a3 3 0 100 3.5H9.6A4 4 0 116 6zm9.28 7.03l2.5-2.5c.3-.3.3-.77 0-1.06l-2.5-2.5a.75.75 0 00-1.06 1.06l1.22 1.22H5.75a.75.75 0 100 1.5h9.69l-1.22 1.22a.75.75 0 101.06 1.06z"></path></svg>`,
	4,
)

function SwipeRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$68.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$67 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.53 2.22a.75.75 0 00-1.06 0l-2.5 2.5a.75.75 0 001.06 1.06l1.22-1.22v9.69a.75.75 0 001.5 0V4.56l1.22 1.22a.75.75 0 101.06-1.06l-2.5-2.5zM6 14a4 4 0 012.25-3.6v1.16a3 3 0 103.5 0V10.4A4 4 0 116 14z"></path></svg>`,
	4,
)

function SwipeUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$67.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$66 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.14 7.97c.2.2.51.2.7 0l2.56-2.55a2 2 0 10-2.83-2.83l-.07.08-.08-.08a2 2 0 00-2.83 2.83l2.55 2.55zM2 5.5a3.5 3.5 0 117 0 3.5 3.5 0 01-7 0zM5.5 3c-.5 0-.98.16-1.38.42L7.6 6.88A2.5 2.5 0 005.5 3zM3 5.5A2.5 2.5 0 006.88 7.6L3.4 4.12C3.15 4.52 3 5 3 5.5zm9.34 7.75A2.5 2.5 0 0116.5 13h-1a.5.5 0 100 1h2a.5.5 0 00.5-.5v-2a.5.5 0 00-1 0v.55a3.49 3.49 0 00-5.53.7.5.5 0 00.87.5zm-.34 3.7v.55a.5.5 0 01-1 0v-2c0-.28.22-.5.5-.5h2a.5.5 0 110 1h-1a2.5 2.5 0 004.17-.25.5.5 0 01.86.5 3.5 3.5 0 01-5.53.7zM5.5 11c.28 0 .5.23.5.5V14h2.5a.5.5 0 110 1H6v2.5a.5.5 0 01-1 0V15H2.5a.5.5 0 110-1H5v-2.5c0-.27.22-.5.5-.5z"></path></svg>`,
	4,
)

function SymbolsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$66.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$65 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.94 9H12.3l.67-2.36a.5.5 0 00-.96-.28l-2 7a.5.5 0 00.96.28L12.02 10H18a8 8 0 01-16 0h5.98l-.96 3.36a.5.5 0 00.96.28l2-7a.5.5 0 00-.96-.28L8.27 9h-6.2a8 8 0 0115.87 0z"></path></svg>`,
	4,
)

function SyncOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$65.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$64 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.15 2.15c.2-.2.5-.2.7 0l3 3a.5.5 0 01-.7.7l-.4-.4-1.8 1.8 1.9 1.9a.5.5 0 01-.7.7L15 8.71l-5.56 5.56a2.5 2.5 0 01-1.77.73H5.71l-2.86 2.85a.5.5 0 01-.7-.7L5 14.29v-1.96c0-.66.26-1.3.73-1.77L6.3 10l.86.85a.5.5 0 00.7-.7L7 9.29l.8-.79.85.85a.5.5 0 10.7-.7l-.85-.86.8-.79.85.85a.5.5 0 00.7-.7L10 6.29 11.3 5l-1.15-1.15a.5.5 0 01.7-.7l1.9 1.9 1.8-1.8-.4-.4a.5.5 0 010-.7zm1.9 2.6l-.8-.8-1.8 1.8.8.8 1.8-1.8z"></path></svg>`,
	4,
)

function SyringeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$64.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$63 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6.5A2.5 2.5 0 014.5 4h11A2.5 2.5 0 0118 6.5v7a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 012 13.5v-7zm2.5-1a1 1 0 00-1 1v7a1 1 0 001 1h11a1 1 0 001-1v-7a1 1 0 00-1-1h-11z"></path></svg>`,
	4,
)

function SystemIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$63.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$62 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v4.1a5.46 5.46 0 00-1.5-.5V5.5a1 1 0 00-1-1h-9a1 1 0 00-1 1v9a1 1 0 001 1h3.6c.09.53.26 1.03.5 1.5H5.5A2.5 2.5 0 013 14.5v-9zm16 9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function TabAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$62.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$61 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v4.1a5.46 5.46 0 00-1.5-.5V5.5a1 1 0 00-1-1h-9a1 1 0 00-1 1v9a1 1 0 001 1h3.6c.09.53.26 1.03.5 1.5H5.5A2.5 2.5 0 013 14.5v-9zM14.5 19a4.5 4.5 0 110-9 4.5 4.5 0 010 9zm-2.35-4.85a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L13.71 15h2.79a.5.5 0 000-1h-2.8l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function TabArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$61.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$60 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v3.76a5.48 5.48 0 015.2-1A1.5 1.5 0 0111 9v1.34a5.48 5.48 0 01-.26 6.66h3.76a2.5 2.5 0 002.5-2.5V7H9.5A1.5 1.5 0 018 5.5V3H5.5zM9 3v2.5c0 .28.22.5.5.5H17v-.5A2.5 2.5 0 0014.5 3H9zm1 8a.5.5 0 01-.5.5h-2a.5.5 0 010-1h.8a3.5 3.5 0 101.7 3 .5.5 0 011 0 4.5 4.5 0 11-2-3.74V9a.5.5 0 01.5-.5c.28 0 .5.22.5.5v2z"></path></svg>`,
	4,
)

function TabDesktopArrowClockwiseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$60.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v4.1a5.5 5.5 0 017.4 7.4h4.1a2.5 2.5 0 002.5-2.5V7H9.5A1.5 1.5 0 018 5.5V3H5.5zM9 3v2.5c0 .28.22.5.5.5H17v-.5A2.5 2.5 0 0014.5 3H9zm1 11.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-6.85-.35a.5.5 0 00-.15.35.5.5 0 00.15.35l2 2a.5.5 0 00.7-.7L4.71 15H7.5a.5.5 0 000-1H4.7l1.15-1.15a.5.5 0 00-.7-.7l-2 2z"></path></svg>`,
	4,
)

function TabDesktopArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 17a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V13h7.5c.83 0 1.5.67 1.5 1.5V17h2.5zM11 17v-2.5a.5.5 0 00-.5-.5H3v.5A2.5 2.5 0 005.5 17H11z"></path></svg>`,
	4,
)

function TabDesktopBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v4.1a5.5 5.5 0 017.4 7.4h4.1a2.5 2.5 0 002.5-2.5V7H9.5A1.5 1.5 0 018 5.5V3H5.5zM9 3v2.5c0 .28.22.5.5.5H17v-.5A2.5 2.5 0 0014.5 3H9zM5.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V14h1a.5.5 0 010 1H5.5a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function TabDesktopClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4.5A2.5 2.5 0 017.5 2H9v2.5c0 .83.67 1.5 1.5 1.5H18v6.5a2.5 2.5 0 01-2.5 2.5h-8A2.5 2.5 0 015 12.5v-8zm5 0V2h5.5A2.5 2.5 0 0118 4.5V5h-7.5a.5.5 0 01-.5-.5zM12.5 18a2.5 2.5 0 002.45-2H7.5A3.5 3.5 0 014 12.5V5.05A2.5 2.5 0 002 7.5V14a4 4 0 004 4h6.5z"></path></svg>`,
	4,
)

function TabDesktopCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5V7H9.5A1.5 1.5 0 018 5.5V3H5.5zM9 3v2.5c0 .28.22.5.5.5H17v-.5A2.5 2.5 0 0014.5 3H9z"></path></svg>`,
	4,
)

function TabDesktopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v2.84c.45-.22.96-.34 1.5-.34h4a3.5 3.5 0 013.5 3.5v4c0 .54-.12 1.05-.34 1.5h2.84a2.5 2.5 0 002.5-2.5V7H9.5A1.5 1.5 0 018 5.5V3H5.5zM9 3v2.5c0 .28.22.5.5.5H17v-.5A2.5 2.5 0 0014.5 3H9zm-7 8.5A2.5 2.5 0 014.5 9h4a2.5 2.5 0 012.5 2.5v4c0 .5-.15.98-.41 1.38l-3.03-3.03a1.5 1.5 0 00-2.12 0L2.4 16.88C2.15 16.48 2 16 2 15.5v-4zm7 .25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-5.88 5.84c.4.26.87.41 1.38.41h4c.51 0 .98-.15 1.38-.41l-3.03-3.03a.5.5 0 00-.7 0L3.12 17.6z"></path></svg>`,
	4,
)

function TabDesktopImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.05 4h7.45A3.5 3.5 0 0116 7.5v7.45a2.5 2.5 0 002-2.45V6a4 4 0 00-4-4H7.5a2.5 2.5 0 00-2.45 2zM2 7.5A2.5 2.5 0 014.5 5h8A2.5 2.5 0 0115 7.5v8a2.5 2.5 0 01-2.5 2.5H11v-2.5c0-.83-.67-1.5-1.5-1.5H2V7.5zm8 8V18H4.5A2.5 2.5 0 012 15.5V15h7.5c.28 0 .5.22.5.5z"></path></svg>`,
	4,
)

function TabDesktopMultipleBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5A2.5 2.5 0 014.5 2H6v2.5C6 5.33 6.67 6 7.5 6H15v6.5a2.5 2.5 0 01-2.5 2.5h-8A2.5 2.5 0 012 12.5v-8zm5 0V2h5.5A2.5 2.5 0 0115 4.5V5H7.5a.5.5 0 01-.5-.5zM7.5 18a2.5 2.5 0 01-2.45-2h7.45a3.5 3.5 0 003.5-3.5V5.05a2.5 2.5 0 012 2.45V14a4 4 0 01-4 4H7.5z"></path></svg>`,
	4,
)

function TabDesktopMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3H8v2.5C8 6.33 8.67 7 9.5 7H17v7.5a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zM8 11a1 1 0 10-2 0 1 1 0 002 0zm2 1a1 1 0 100-2 1 1 0 000 2zm4-1a1 1 0 10-2 0 1 1 0 002 0zm3-5v-.5A2.5 2.5 0 0014.5 3H9v2.5c0 .28.22.5.5.5H17z"></path></svg>`,
	4,
)

function TabDesktopNewPageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zm2.5-1a1 1 0 00-1 1v9a1 1 0 001 1h9a1 1 0 001-1v-9a1 1 0 00-1-1h-9z"></path></svg>`,
	4,
)

function TabIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v2.13c-.44-.3-.95-.52-1.5-.6V5.5a1 1 0 00-1-1h-9a1 1 0 00-1 1v9a1 1 0 001 1H10v.44c0 .37.06.73.16 1.06H5.5A2.5 2.5 0 013 14.5v-9zm15.57 9.03a1.5 1.5 0 00-1.12-.53h-4.9c-.46 0-.86.24-1.12.53-.26.29-.43.69-.43 1.09v.32c0 1.63 1.63 3.06 4 3.06 1.24 0 2.28-.4 2.99-1H15v-1h3.76c.15-.32.23-.65.24-1h-4v-1h3.87a1.78 1.78 0 00-.3-.47zM15 13a2.5 2.5 0 112-4h-2v1h2.45a2.51 2.51 0 010 1H15v1h2c-.46.6-1.18 1-2 1z"></path></svg>`,
	4,
)

function TabInprivateAccountIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3zm-1 2.5v1.3l2.3-2.3H5.5a1 1 0 00-1 1zm0 2.7v2.6l6.3-6.3H8.2L4.5 8.2zm7.7-3.7l-7.7 7.7v2.3a1 1 0 00.03.26L14.76 4.53a1 1 0 00-.26-.03h-2.3zm3.27.74L5.24 15.47a1 1 0 00.26.03h2.3l7.7-7.7V5.5a1 1 0 00-.03-.26zm.03 3.97L9.2 15.5h2.6l3.7-3.7V9.2zm0 4l-2.3 2.29h1.3a1 1 0 001-1v-1.3z"></path></svg>`,
	4,
)

function TabInPrivateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 7h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-6 5V8H3v4h4zm2.6 0A5.52 5.52 0 0112 9.6V8H8v4h1.6zm4.9-3c.9 0 1.75.22 2.5.6V8h-4v1.2c.48-.13.98-.2 1.5-.2zM9 14.5c0-.52.07-1.02.2-1.5H8v4h1.6c-.38-.75-.6-1.6-.6-2.5zM7 13H3v1.5A2.5 2.5 0 005.5 17H7v-4zm5-6V3H8v4h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm12 11.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function TableAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5V12h-1V5.5c0-.78-.6-1.42-1.36-1.5H5.5c-.78 0-1.42.6-1.5 1.36V12H3V5.5A2.5 2.5 0 015.5 3h9zM17 14.5a2.5 2.5 0 01-2.5 2.5H13v-4h4v1.5zm-13 2c.42.31.94.5 1.5.5H7v-4H3v1.5c0 .82.4 1.54 1 2zM8 13h4v4H8v-4z"></path></svg>`,
	4,
)

function TableBottomRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 7h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-6 5V8H3v4h4zm5-3.5V8H8v4h3v-1.5c0-.82.4-1.54 1-2zM11 13H8v4h3v-4zm-4 0H3v1.5A2.5 2.5 0 005.5 17H7v-4zm5-6V3H8v4h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm5 7.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5v7c0 .83-.67 1.5-1.5 1.5h-4a1.5 1.5 0 01-1.5-1.5v-7zm2.5 2.5h-1a.5.5 0 000 1h1a.5.5 0 000-1zm3.5.5a.5.5 0 00-.5-.5h-1a.5.5 0 000 1h1a.5.5 0 00.5-.5zM14.5 15h-1a.5.5 0 000 1h1a.5.5 0 000-1zm3.5.5a.5.5 0 00-.5-.5h-1a.5.5 0 000 1h1a.5.5 0 00.5-.5zM14.5 17h-1a.5.5 0 000 1h1a.5.5 0 000-1zm3.5.5a.5.5 0 00-.5-.5h-1a.5.5 0 000 1h1a.5.5 0 00.5-.5zM13.5 10a.5.5 0 00-.5.5v1c0 .28.22.5.5.5h4a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-4z"></path></svg>`,
	4,
)

function TableCalculatorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 13h1.98c.1-.12.19-.23.3-.33L12 10.94V7H8v6zm7.1-5.16c.26-.26.55-.45.86-.6A2 2 0 0015 7h-2v2.94l2.1-2.1zM5 13a2 2 0 01-2-2V9c0-1.1.9-2 2-2h2v6H5zm10.8-4.45l-4.82 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function TableCellEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3H3zm0 1v6h14V7H3zm4.35 1.85l-.64.65h6.58l-.64-.65a.5.5 0 01.7-.7l1.5 1.5c.2.2.2.5 0 .7l-1.5 1.5a.5.5 0 01-.7-.7l.64-.65H6.71l.64.65a.5.5 0 01-.7.7l-1.5-1.5a.5.5 0 010-.7l1.5-1.5a.5.5 0 11.7.7zM3 14h14a3 3 0 01-3 3H6a3 3 0 01-3-3z"></path></svg>`,
	4,
)

function TableCellsMergeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 6h7v-.5A2.5 2.5 0 0014.5 3H10v3zm7 7V7H3v6h14zm-7-5v4H9V8h1zm0 9h4.5a2.5 2.5 0 002.5-2.5V14h-7v3zm-1-3H3v.5A2.5 2.5 0 005.5 17H9v-3zm0-8V3H5.5A2.5 2.5 0 003 5.5V6h6z"></path></svg>`,
	4,
)

function TableCellsSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm5 5H8v4h4V8zm1 5h4v1.5a2.5 2.5 0 01-2.5 2.5H13v-4zM8 4h6.5c.83 0 1.5.67 1.5 1.5V12h1V5.5A2.5 2.5 0 0014.5 3H8v1zM5.5 16H12v1H5.5A2.5 2.5 0 013 14.5V8h1v6.5c0 .83.67 1.5 1.5 1.5z"></path></svg>`,
	4,
)

function TableCheckerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 13.5A3.5 3.5 0 006.5 17h7.83c-.77.63-1.76 1-2.83 1h-5A4.5 4.5 0 012 13.5v-5c0-1.07.37-2.06 1-2.83v7.83zM15.5 16H14v-4h4v1.5a2.5 2.5 0 01-2.5 2.5zM14 7v4h4V7h-4zm-5 4h4V7H9v4zm4 1H9v4h4v-4zM8 7v4H4V7h4zm0 5H4v1.5A2.5 2.5 0 006.5 16H8v-4zm10-6h-4V2h1.5A2.5 2.5 0 0118 4.5V6zm-5 0V2H9v4h4zM8 6V2H6.5A2.5 2.5 0 004 4.5V6h4z"></path></svg>`,
	4,
)

function TableCopyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2.5a.5.5 0 00-1 0v4.88c.13.1.24.22.36.34l.14.15.14-.15c.12-.12.23-.24.36-.34V2.5zm-1 15v-4.89c.13-.1.24-.23.36-.35l.14-.14.14.14c.12.12.23.24.36.35v4.89a.5.5 0 01-1 0zM2 3.5c0-.28.22-.5.5-.5H4a2 2 0 012 2v2H2V3.5zm0 13V13h4v2a2 2 0 01-2 2H2.5a.5.5 0 01-.5-.5zM6 8v4H2V8h4zm12-4.5a.5.5 0 00-.5-.5H16a2 2 0 00-2 2v2h4V3.5zM14 13v2c0 1.1.9 2 2 2h1.5a.5.5 0 00.5-.5V13h-4zm-2.15-4.85a.5.5 0 00-.7 0L10 9.29 8.85 8.15a.5.5 0 10-.7.7L9.29 10l-1.14 1.15a.5.5 0 00.7.7L10 10.71l1.15 1.14a.5.5 0 00.7-.7L10.71 10l1.14-1.15a.5.5 0 000-.7zM18 12V8h-4v4h4z"></path></svg>`,
	4,
)

function TableDeleteColumnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 6H8V2h4v4zM3.5 2H7v4H5a2 2 0 01-2-2V2.5c0-.28.22-.5.5-.5zM15 6h-2V2h3.5c.28 0 .5.22.5.5V4a2 2 0 01-2 2zm1.5 12a.5.5 0 00.5-.5V16a2 2 0 00-2-2h-2v4h3.5zM12 18v-4H8v4h4zm-5 0H3.5a.5.5 0 01-.5-.5V16c0-1.1.9-2 2-2h2v4zm10.5-7.5a.5.5 0 000-1h-4.89a5 5 0 01-.48.5l.14.13c.12.12.25.24.35.37h4.88zm-15-1h4.89a5 5 0 00.34.35l.14.14-.14.14c-.12.12-.25.24-.35.37H2.5a.5.5 0 010-1zm9.35 2.35a.5.5 0 000-.7L10.71 10l1.14-1.15a.5.5 0 00-.7-.7L10 9.29 8.85 8.15a.5.5 0 10-.7.7L9.29 10l-1.14 1.15a.5.5 0 00.7.7L10 10.71l1.15 1.14c.2.2.5.2.7 0z"></path></svg>`,
	4,
)

function TableDeleteRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 7h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-6 5V8H3v4h4zm2.6 0A5.52 5.52 0 0112 9.6V8H8v4h1.6zm4.9-3c.9 0 1.75.22 2.5.6V8h-4v1.2c.48-.13.98-.2 1.5-.2zM9 14.5c0-.52.07-1.02.2-1.5H8v4h1.6c-.38-.75-.6-1.6-.6-2.5zM7 13H3v1.5A2.5 2.5 0 005.5 17H7v-4zm5-6V3H8v4h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm12 11.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-3.8 0l1.15-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15z"></path></svg>`,
	4,
)

function TableDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18.45 13.2a1.87 1.87 0 00-2.64-2.65l-4.83 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83zM15.1 9.83c.53-.53 1.21-.8 1.9-.84V8h-4v3.94l2.1-2.1zm-4.83 4.83L11.94 13H8v4h1.22l.21-.85a3.2 3.2 0 01.84-1.48zM12 12H8V8h4v4zm-5 0V8H3v4h4zm-4 1h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-1-4v4H8V3h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7z"></path></svg>`,
	4,
)

function TableEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V12h4V8H4V5.5C4 4.67 4.67 4 5.5 4h9c.83 0 1.5.67 1.5 1.5v9c0 .83-.67 1.5-1.5 1.5H12v-3H8v4h6.5a2.5 2.5 0 002.5-2.5v-9zm-14 9V13h4v4H5.5A2.5 2.5 0 013 14.5zM8 8v4h4V8H8z"></path></svg>`,
	4,
)

function TableFreezeColumnAndRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16 14.5c0 .83-.67 1.5-1.5 1.5H12v-3H8v4h6.5a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3H8v4h4V4h2.5c.83 0 1.5.67 1.5 1.5v9zM5.5 3H7v4H3V5.5A2.5 2.5 0 015.5 3zM7 12V8H3v4h4zm5-4H8v4h4V8zm-9 5h4v4H5.5A2.5 2.5 0 013 14.5V13z"></path></svg>`,
	4,
)

function TableFreezeColumnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 4c.83 0 1.5.67 1.5 1.5V8h-3v4h4V5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V12h4V8H4V5.5C4 4.67 4.67 4 5.5 4h9zM3 14.5V13h4v4H5.5A2.5 2.5 0 013 14.5zm9-1.5H8v4h4v-4zM8 8v4h4V8H8zm5 9v-4h4v1.5a2.5 2.5 0 01-2.5 2.5H13z"></path></svg>`,
	4,
)

function TableFreezeRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 17h1.5a2.5 2.5 0 002.5-2.5V13h-4v4zm0-5V8h4v4h-4zm-1 0H8V8h4v4zm-4 1h4v4H8v-4zm-1-1V8H3v4h4zm-4 1h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-1-4v4H8V3h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7z"></path></svg>`,
	4,
)

function TableIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.5 9c.17 0 .34.01.5.04V8h-4v1h3.5zM9 16.5V13H8v4h1.04a3.53 3.53 0 01-.04-.5zm.04-4.5A3.5 3.5 0 0112 9.04V8H8v4h1.04zM7 12V8H3v4h4zm-4 1h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-1-4v4H8V3h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm3 9.5a2.5 2.5 0 012.5-2.5h4a2.5 2.5 0 012.5 2.5v4c0 .5-.15.98-.41 1.38l-3.03-3.03a1.5 1.5 0 00-2.12 0l-3.03 3.03c-.26-.4-.41-.87-.41-1.38v-4zm7 .25a.75.75 0 10-1.5 0 .75.75 0 001.5 0zm-5.88 5.84c.4.26.87.41 1.38.41h4c.5 0 .98-.15 1.38-.41l-3.03-3.03a.5.5 0 00-.7 0l-3.03 3.03z"></path></svg>`,
	4,
)

function TableImageIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.5a.5.5 0 00-1 0v13a.5.5 0 001 0v-13zm13 0a.5.5 0 00-1 0v13a.5.5 0 001 0v-13zM9 3a2 2 0 00-2 2v2h6V5a2 2 0 00-2-2H9zm-2 9V8h6v4H7zm0 1h6v2a2 2 0 01-2 2H9a2 2 0 01-2-2v-2z"></path></svg>`,
	4,
)

function TableInsertColumnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 16a.5.5 0 000 1h13a.5.5 0 000-1h-13zm0-13a.5.5 0 000 1h13a.5.5 0 000-1h-13zM3 11c0 1.1.9 2 2 2h2V7H5a2 2 0 00-2 2v2zm9 2H8V7h4v6zm1 0V7h2a2 2 0 012 2v2a2 2 0 01-2 2h-2z"></path></svg>`,
	4,
)

function TableInsertRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.58 9H17V8h-4v1.12c.18-.08.38-.12.58-.12zm-2.25 3l.67-1.6V8H8v4h3.33zm-1.21 2.92l.8-1.92H8v4h3.5a1.5 1.5 0 01-1.38-2.08zM7 12V8H3v4h4zm-4 1h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-1-4v4H8V3h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm5.61 13c.33 0 .56.3.49.62l-.44 1.74c-.12.48.46.83.83.49l4.87-4.55a.75.75 0 00-.51-1.3h-.4a.5.5 0 01-.48-.66l.56-1.68a.5.5 0 00-.47-.66h-3.48a.5.5 0 00-.46.3l-2.08 5c-.14.34.1.7.46.7h1.11z"></path></svg>`,
	4,
)

function TableLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 15.5c0 .54.12 1.05.34 1.5H8v-4h2.05A3.49 3.49 0 009 15.5zM13 8v4h3.5c.17 0 .34.01.5.04V8h-4zm-1 4V8H8v4h4zm-5 0V8H3v4h4zm-4 1h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4zm-1-4v4H8V3h4zM7 3v4H3V5.5A2.5 2.5 0 015.5 3H7zm3 12.5a2.5 2.5 0 012.5-2.5h.5a.5.5 0 010 1h-.5a1.5 1.5 0 000 3h.5a.5.5 0 010 1h-.5a2.5 2.5 0 01-2.5-2.5zm5.5-2c0-.28.22-.5.5-.5h.5a2.5 2.5 0 010 5H16a.5.5 0 010-1h.5a1.5 1.5 0 000-3H16a.5.5 0 01-.5-.5zm-3 1.5a.5.5 0 000 1h4a.5.5 0 000-1h-4z"></path></svg>`,
	4,
)

function TableLinkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 3a.5.5 0 000 1h13a.5.5 0 000-1h-13zM8 12V8.41c.16.06.33.09.5.09v1a1.5 1.5 0 003 0v-1c.17 0 .34-.03.5-.09V12H8zm7 5h-2v-4h4v2a2 2 0 01-2 2zm2-5h-4V8h3.5c.28 0 .5.22.5.5V12zm-9 5h4v-4H8v4zM7 8v4H3V8.5c0-.28.22-.5.5-.5H7zm0 9H5a2 2 0 01-2-2v-2h4v4zm4.15-9.65a.5.5 0 00.7-.7l-1.5-1.5a.5.5 0 00-.7 0l-1.5 1.5a.5.5 0 10.7.7l.65-.64V9.5a.5.5 0 001 0V6.7l.65.65z"></path></svg>`,
	4,
)

function TableMoveAboveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.5 17a.5.5 0 000-1h-13a.5.5 0 000 1h13zM12 8v3.59a1.5 1.5 0 00-.5-.09v-1a1.5 1.5 0 00-3 0v1c-.17 0-.34.03-.5.09V8h4zM5 3h2v4H3V5c0-1.1.9-2 2-2zM3 8h4v4H3.5a.5.5 0 01-.5-.5V8zm9-5H8v4h4V3zm1 9V8h4v3.5a.5.5 0 01-.5.5H13zm0-9h2a2 2 0 012 2v2h-4V3zm-4.15 9.65a.5.5 0 00-.7.7l1.5 1.5c.2.2.5.2.7 0l1.5-1.5a.5.5 0 00-.7-.7l-.65.64V10.5a.5.5 0 00-1 0v2.8l-.65-.65z"></path></svg>`,
	4,
)

function TableMoveBelowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 16.5a.5.5 0 001 0v-13a.5.5 0 00-1 0v13zm9-4.5H8.41c.06-.16.09-.33.09-.5h1a1.5 1.5 0 000-3h-1c0-.17-.03-.34-.09-.5H12v4zm5-7v2h-4V3h2a2 2 0 012 2zm-5-2v4H8V3.5c0-.28.22-.5.5-.5H12zm5 9V8h-4v4h4zm-9 1h4v4H8.5a.5.5 0 01-.5-.5V13zm9 0v2a2 2 0 01-2 2h-2v-4h4zM7.35 8.85a.5.5 0 10-.7-.7l-1.5 1.5a.5.5 0 000 .7l1.5 1.5a.5.5 0 00.7-.7l-.64-.65H9.5a.5.5 0 000-1H6.7l.65-.65z"></path></svg>`,
	4,
)

function TableMoveLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 3.5a.5.5 0 00-1 0v13a.5.5 0 001 0v-13zM8 8h3.59a1.5 1.5 0 00-.09.5h-1a1.5 1.5 0 100 3h1c0 .17.03.34.09.5H8V8zm-5 7v-2h4v4H5a2 2 0 01-2-2zm5 2v-4h4v3.5a.5.5 0 01-.5.5H8zM3 8v4h4V8H3zm9-1H8V3h3.5c.28 0 .5.22.5.5V7zM3 7V5c0-1.1.9-2 2-2h2v4H3zm9.65 4.15a.5.5 0 00.7.7l1.5-1.5a.5.5 0 000-.7l-1.5-1.5a.5.5 0 00-.7.7l.64.65H10.5a.5.5 0 000 1h2.8l-.65.65z"></path></svg>`,
	4,
)

function TableMoveRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 13.5a3.5 3.5 0 01-3.5 3.5H5.67c.77.63 1.76 1 2.83 1h5a4.5 4.5 0 004.5-4.5v-5c0-1.07-.37-2.06-1-2.83v7.83zM4.5 16H6v-4H2v1.5A2.5 2.5 0 004.5 16zM6 7v4H2V7h4zm5 4H7V7h4v4zm-4 1h4v4H7v-4zm5-5v4h4V7h-4zm0 5h4v1.5a2.5 2.5 0 01-2.5 2.5H12v-4zM2 6h4V2H4.5A2.5 2.5 0 002 4.5V6zm5 0V2h4v4H7zm5 0V2h1.5A2.5 2.5 0 0116 4.5V6h-4z"></path></svg>`,
	4,
)

function TableMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 3a3 3 0 013 3v8a3 3 0 01-3 3v-4.38l.06-.06 1.5-1.5a1.5 1.5 0 000-2.12l-1.5-1.5a1.6 1.6 0 00-.06-.06V3zm-1 0v4a1.5 1.5 0 00-1.5 1.5h-3A1.5 1.5 0 007 7V3h6zm-4.94 9.56c-.3.3-.68.44-1.06.44v4h6v-4a1.5 1.5 0 01-1.5-1.5h-3c0 .38-.15.77-.44 1.06zM6 17v-4.38a1.55 1.55 0 01-.06-.06l-1.5-1.5a1.5 1.5 0 010-2.12l1.5-1.5.06-.06V3a3 3 0 00-3 3v8a3 3 0 003 3zm1.35-8.85c.2.2.2.5 0 .7l-.64.65h6.58l-.64-.65a.5.5 0 01.7-.7l1.5 1.5c.2.2.2.5 0 .7l-1.5 1.5a.5.5 0 01-.7-.7l.64-.65H6.71l.64.65a.5.5 0 01-.7.7l-1.5-1.5a.5.5 0 010-.7l1.5-1.5c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function TableResizeColumnIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 14a3 3 0 01-3 3H6a3 3 0 01-3-3h4.38l.06.06 1.5 1.5a1.5 1.5 0 002.12 0l1.5-1.5.06-.06H17zm0-1h-4a1.5 1.5 0 00-1.5-1.5v-3A1.5 1.5 0 0013 7h4v6zM7.44 8.06A1.5 1.5 0 017 7H3v6h4a1.5 1.5 0 011.5-1.5v-3a1.5 1.5 0 01-1.06-.44zM3 6h4.38l.06-.06 1.5-1.5a1.5 1.5 0 012.12 0l1.5 1.5.06.06H17a3 3 0 00-3-3H6a3 3 0 00-3 3zm8.85 1.35a.5.5 0 01-.7 0l-.65-.64v6.58l.65-.64a.5.5 0 01.7.7l-1.5 1.5a.5.5 0 01-.7 0l-1.5-1.5a.5.5 0 01.7-.7l.65.64V6.71l-.65.64a.5.5 0 11-.7-.7l1.5-1.5c.2-.2.5-.2.7 0l1.5 1.5c.2.2.2.5 0 .7z"></path></svg>`,
	4,
)

function TableResizeRowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 17h1.5a2.5 2.5 0 002.5-2.5V13h-4v4z"></path><path d="M13 12V8h4v4h-4z"></path><path d="M12 12H8.74A4.5 4.5 0 008 10.67V8h4v4z"></path><path d="M8.56 15.44L10.12 17H12v-4H8.97a4.55 4.55 0 01-.4 2.44z"></path><path d="M4.5 9c.93 0 1.78.28 2.5.76V8H3v1.26A4.5 4.5 0 014.5 9z"></path><path d="M13 7h4V5.5A2.5 2.5 0 0014.5 3H13v4z"></path><path d="M12 3v4H8V3h4z"></path><path d="M7 3v4H3V5.5A2.5 2.5 0 015.5 3H7z"></path><path d="M4.5 17c.79 0 1.51-.26 2.1-.7l2.55 2.55a.5.5 0 10.7-.7L7.3 15.6A3.5 3.5 0 104.5 17zm0-1a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"></path></svg>`,
	20,
)

function TableSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 9.6a5.48 5.48 0 00-4-.4V8h4v1.6zM9.2 13a5.5 5.5 0 00.4 4H8v-4h1.2zM12 9.6A5.52 5.52 0 009.6 12H8V8h4v1.6zM7 8v4H3V8h4zm0 5H3v1.5A2.5 2.5 0 005.5 17H7v-4zm10-6h-4V3h1.5A2.5 2.5 0 0117 5.5V7zm-5 0V3H8v4h4zM7 7V3H5.5A2.5 2.5 0 003 5.5V7h4zm5.06 4.44a2 2 0 01-1.43 2.48l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zm2.44 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function TableSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v4h6.5V3h-4zm4 7.5H3v4A2.5 2.5 0 005.5 17h4v-6.5zm1 0H17v4a2.5 2.5 0 01-2.5 2.5h-4v-6.5zm6.5-1v-4A2.5 2.5 0 0014.5 3h-4v6.5H17z"></path></svg>`,
	4,
)

function TableSimpleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 6h4V2H8v4zM7 2H3.5a.5.5 0 00-.5.5V4c0 1.1.9 2 2 2h2V2zm6 4h2a2 2 0 002-2V2.5a.5.5 0 00-.5-.5H13v4zm4 11.5a.5.5 0 01-.5.5H13v-4h2a2 2 0 012 2v1.5zM12 14v4H8v-4h4zm-8.5 4H7v-4H5a2 2 0 00-2 2v1.5c0 .28.22.5.5.5zm-1-8.5h15a.5.5 0 110 1h-15a.5.5 0 010-1z"></path></svg>`,
	4,
)

function TableSplitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 3a.5.5 0 000 1h13a.5.5 0 000-1h-13zM15 17h-2v-4h4v2a2 2 0 01-2 2zm2-5h-4V8h3.5c.28 0 .5.22.5.5V12zm-5 0V8H8v4h4zm-4 5h4v-4H8v4zM7 8v4H3V8.5c0-.28.22-.5.5-.5H7zm0 9H5a2 2 0 01-2-2v-2h4v4z"></path></svg>`,
	4,
)

function TableStackAboveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.5 17a.5.5 0 000-1h-13a.5.5 0 000 1h13zM5 3h2v4H3V5c0-1.1.9-2 2-2zM3 8h4v4H3.5a.5.5 0 01-.5-.5V8zm5 0v4h4V8H8zm4-5H8v4h4V3zm1 9V8h4v3.5a.5.5 0 01-.5.5H13zm0-9h2a2 2 0 012 2v2h-4V3z"></path></svg>`,
	4,
)

function TableStackBelowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 16.5a.5.5 0 001 0v-13a.5.5 0 00-1 0v13zM17 5v2h-4V3h2a2 2 0 012 2zm-5-2v4H8V3.5c0-.28.22-.5.5-.5H12zm0 5H8v4h4V8zm5 4V8h-4v4h4zm-9 1h4v4H8.5a.5.5 0 01-.5-.5V13zm9 0v2a2 2 0 01-2 2h-2v-4h4z"></path></svg>`,
	4,
)

function TableStackLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 3.5a.5.5 0 00-1 0v13a.5.5 0 001 0v-13zM3 15v-2h4v4H5a2 2 0 01-2-2zm5 2v-4h4v3.5a.5.5 0 01-.5.5H8zm0-5h4V8H8v4zM3 8v4h4V8H3zm9-1H8V3h3.5c.28 0 .5.22.5.5V7zM3 7V5c0-1.1.9-2 2-2h2v4H3z"></path></svg>`,
	4,
)

function TableStackRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.85 1.15a.5.5 0 10-.7.7L8.29 3H6a3 3 0 00-3 3v2.3L1.85 7.14a.5.5 0 10-.7.7l2 2c.2.2.5.2.7 0l2-2a.5.5 0 10-.7-.7L4 8.29V6c0-1.1.9-2 2-2h2.3L7.14 5.15a.5.5 0 10.7.7l2-2a.5.5 0 000-.7l-2-2zm.71 5.41a1.5 1.5 0 01-.56.35V7h4V3h-1.09a1.5 1.5 0 01-.35 1.56l-2 2zm-4 4a1.5 1.5 0 01-1.56.35V12h4V8h-.09c-.07.2-.19.4-.35.56l-2 2zM13 17h1.5a2.5 2.5 0 002.5-2.5V13h-4v4zm0-5V8h4v4h-4zm-1 0H8V8h4v4zm-4 1h4v4H8v-4zm-5 0h4v4H5.5A2.5 2.5 0 013 14.5V13zm10-6h4V5.5A2.5 2.5 0 0014.5 3H13v4z"></path></svg>`,
	4,
)

function TableSwitchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zm6.5 6a.5.5 0 000 1h3a.5.5 0 000-1h-3z"></path></svg>`,
	4,
)

function TabletIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.7 2.04c.18.08.3.26.3.46v6a.5.5 0 01-.85.35L11.29 7h-.79a.5.5 0 01-.5-.5v-2c0-.28.22-.5.5-.5h.8l1.85-1.85a.5.5 0 01.54-.11zm3.95.16c.12.16.29.45.44.87.26.68.41 1.5.41 2.43 0 .94-.15 1.75-.4 2.43-.16.42-.33.7-.45.87a.5.5 0 01-.85-.52l.12-.19a5.9 5.9 0 00.58-2.6 5.9 5.9 0 00-.58-2.58l-.07-.11a.5.5 0 11.8-.6zm-1.7 1.08a5.5 5.5 0 01.55 2.22 4.9 4.9 0 01-.55 2.22.5.5 0 11-.9-.44l.08-.17.15-.4c.14-.42.22-.83.22-1.21s-.08-.8-.22-1.22a4.59 4.59 0 00-.23-.56.5.5 0 11.9-.44zm.4 6.42a1.5 1.5 0 01-.53-.74 1.5 1.5 0 01-.87-.07 1.5 1.5 0 01-2.51.67L10.88 8h-.38A1.5 1.5 0 019 6.5v-2c0-.18.03-.34.09-.5H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h12a2 2 0 002-2V9.8c-.5.29-1.15.27-1.65-.1zM8.5 13h3a.5.5 0 010 1h-3a.5.5 0 010-1z"></path></svg>`,
	4,
)

function TabletSpeakerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v4.1a5.46 5.46 0 00-1.5-.5V5.5a1 1 0 00-1-1h-9a1 1 0 00-1 1v9a1 1 0 001 1h3.6c.09.53.26 1.03.5 1.5H5.5A2.5 2.5 0 013 14.5v-9zm7 9a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zm3.5 3.5c-.79 0-1.51-.26-2.1-.7l4.9-4.9a3.5 3.5 0 01-2.8 5.6z"></path></svg>`,
	4,
)

function TabProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v2.73c-.34-.2-.67-.46-1-.8a1.4 1.4 0 00-.5-.34V5.5a1 1 0 00-1-1h-9a1 1 0 00-1 1v9a1 1 0 001 1h5.07a5.8 5.8 0 00.96 1.5H5.5A2.5 2.5 0 013 14.5v-9zm12.28 2.62c1 1.04 2.1 1.55 3.32 1.55.2 0 .36.14.4.34v2.57c0 2.69-1.31 4.51-3.87 5.4a.39.39 0 01-.26 0c-2.48-.86-3.79-2.6-3.87-5.15v-2.75a.4.4 0 01.4-.41 4.5 4.5 0 003.32-1.55.39.39 0 01.56 0zM15 12.47l-1.36-1.36a.38.38 0 00-.53.53L14.47 13l-1.36 1.35a.38.38 0 00.54.54L15 13.53l1.35 1.36a.38.38 0 00.54-.54L15.53 13l1.36-1.36a.38.38 0 00-.54-.53L15 12.47z"></path></svg>`,
	4,
)

function TabShieldDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 8a6 6 0 016-6h3a3 3 0 012.24 1H8a5 5 0 00-5 5v5.24A3 3 0 012 11V8zm2 .5A4.5 4.5 0 018.5 4H13a3 3 0 012.24 1H8.5A3.5 3.5 0 005 8.5v6.74A3 3 0 014 13V8.5zM9 6a3 3 0 00-3 3v6a3 3 0 003 3h6a3 3 0 003-3V9a3 3 0 00-3-3H9z"></path></svg>`,
	4,
)

function TabsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$59 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm4-1.5v3c0 .83.67 1.5 1.5 1.5h4.06c.4 0 .79-.14 1.1-.39l1.78-1.44a1.5 1.5 0 000-2.34L12.66 7.4c-.31-.25-.7-.39-1.1-.39H7.5C6.67 7 6 7.67 6 8.5z"></path></svg>`,
	4,
)

function TagCircleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$59.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$58 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.03a2 2 0 00-1.98-2L11.12 2a2 2 0 00-1.42.59L3.02 9.25a2 2 0 000 2.83l4.95 4.95a2 2 0 001.95.51 5.5 5.5 0 017.8-7.5 2 2 0 00.3-1.06L18 4.03zM14 7a1 1 0 110-2 1 1 0 010 2zm5 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function TagDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$58.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$57 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.03a2 2 0 00-1.98-2L11.12 2a2 2 0 00-1.42.59L3.02 9.25a2 2 0 000 2.83l4.95 4.95a2 2 0 001.95.51 5.5 5.5 0 017.8-7.5 2 2 0 00.3-1.06L18 4.03zM14 7a1 1 0 110-2 1 1 0 010 2zm5 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2a.5.5 0 101 0v-2a.5.5 0 00-.5-.5zm0 5.12a.62.62 0 100-1.25.62.62 0 000 1.25z"></path></svg>`,
	4,
)

function TagErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$57.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$56 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.03a2 2 0 00-1.98-2L11.12 2a2 2 0 00-1.42.59L3.02 9.25a2 2 0 000 2.83l4.95 4.95a2 2 0 002.83 0l6.63-6.63A2 2 0 0018 8.98V4.03zM14 7a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function TagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$56.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$55 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.5 4.03c0-.82-.66-1.49-1.48-1.5l-4.9-.03c-.4 0-.78.16-1.06.44L3.38 9.61a1.5 1.5 0 000 2.12l4.94 4.95a1.5 1.5 0 001.68.3V14a2 2 0 011.5-1.94V12a3 3 0 015.4-1.79l.17-.16c.29-.29.44-.67.44-1.07V4.03z"></path></svg>`,
	4,
)

function TagLockAccentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$55.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$54 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.03a2 2 0 00-1.98-2L11.12 2a2 2 0 00-1.42.59L3.02 9.25a2 2 0 000 2.83l4.95 4.95a2 2 0 002.03.49V14a2 2 0 011.5-1.94V12a3 3 0 015.68-1.35l.25-.25A2 2 0 0018 8.98V4.03zM14 7a1 1 0 110-2 1 1 0 010 2zm-1.5 5v1H12a1 1 0 00-1 1v4a1 1 0 001 1h5a1 1 0 001-1v-4a1 1 0 00-1-1h-.5v-1a2 2 0 10-4 0zm1 1v-1a1 1 0 112 0v1h-2zm1 2.25a.75.75 0 110 1.5.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function TagLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$54.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$53 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 11.8a2 2 0 00.46 2.11l2.97 2.98a4 4 0 005.65.02l4.4-4.36a2 2 0 00.6-1.43v-.57l-5 4.96-.15.13-.56.55a3 3 0 01-4.23 0l-.5-.5a4.05 4.05 0 01-.2-.2l-2.98-2.98A2 2 0 013 11.8zm6.2-9.21A2 2 0 0110.63 2h4.45a2 2 0 012 2v4.37a2 2 0 01-.59 1.43l-5.82 5.76a2 2 0 01-2.82-.01l-4.38-4.39a2 2 0 010-2.82L9.2 2.59zm4.3 3.91a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function TagMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$53.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$52 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L5.79 6.5 3.02 9.25a2 2 0 000 2.83l4.95 4.95a2 2 0 002.83 0l2.76-2.76 3.59 3.58a.5.5 0 00.7-.7l-15-15zm14.58 8.25l-2.45 2.45L7.2 5.08l2.5-2.5A2 2 0 0111.13 2l4.89.04a2 2 0 011.99 2v4.94a2 2 0 01-.58 1.42zM14 7a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function TagOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$52.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$51 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 4.03a2 2 0 00-1.98-2L11.12 2a2 2 0 00-1.42.59L3.02 9.25a2 2 0 000 2.83l4.95 4.95a2 2 0 001.95.51 5.5 5.5 0 017.8-7.5 2 2 0 00.3-1.06L18 4.03zM14 7a1 1 0 110-2 1 1 0 010 2zm5 7.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.5 1.88a.62.62 0 100 1.25.62.62 0 000-1.25zm0-4.88c-1.05 0-1.86.82-1.85 1.96a.5.5 0 101-.01c0-.58.36-.95.85-.95.47 0 .85.4.85.95 0 .2-.07.32-.36.55l-.27.21c-.51.4-.72.72-.72 1.29a.5.5 0 001 .09v-.16c.02-.14.1-.25.35-.44l.28-.22c.5-.4.72-.73.72-1.32 0-1.1-.82-1.95-1.85-1.95z"></path></svg>`,
	4,
)

function TagQuestionMarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$51.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$50 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.02 2.04a2 2 0 011.99 2v4.94a2 2 0 01-.58 1.42l-.15.15A5 5 0 0015 10h-1.09a1.5 1.5 0 00-2.47-1.56l-2 2a1.5 1.5 0 000 2.12l1.2 1.2A1.5 1.5 0 0010 15a5 5 0 00.54 2.25 2 2 0 01-2.57-.22l-4.95-4.95a2 2 0 010-2.83L9.7 2.6A2 2 0 0111.13 2l4.89.04zM13 6a1 1 0 102 0 1 1 0 00-2 0zm-.15 3.85a.5.5 0 00-.7-.7l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L11.71 12H15a3 3 0 11-3 3 .5.5 0 10-1 0 4 4 0 104-4h-3.3l1.15-1.15z"></path></svg>`,
	4,
)

function TagResetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$50.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.02 2.04a2 2 0 011.99 2v4.94a2 2 0 01-.58 1.42l-.36.36a4.5 4.5 0 10-6.31 6.3 2 2 0 01-2.8-.03l-4.94-4.95a2 2 0 010-2.83L9.7 2.6A2 2 0 0111.13 2l4.89.04zM13 6a1 1 0 102 0 1 1 0 00-2 0zm3.3 9.6a3.5 3.5 0 10-.7.7l2.55 2.55a.5.5 0 10.7-.7L16.3 15.6zm-.3-2.1a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path></svg>`,
	4,
)

function TagSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 8.5a5.5 5.5 0 1110.97.6c.34.15.65.34.93.57A6.5 6.5 0 103.64 11.3c.25-.25.53-.45.82-.61A5.48 5.48 0 014 8.5zm10 0l-.01.33-1-.17.01-.16a3.5 3.5 0 10-6.57 1.69 4.4 4.4 0 00-1.05.13A4.48 4.48 0 019.5 4 4.5 4.5 0 0114 8.5zm-6-1a1.5 1.5 0 113 0v2.08l2.94.51a2.5 2.5 0 011.91 3.33l-.98 2.67a2.5 2.5 0 01-1.92 1.6l-1.52.26c-1.02.18-1.95-.45-2.43-1.23A5.87 5.87 0 004.44 14a.5.5 0 01-.43-.62c.15-.6.43-1.04.82-1.36.39-.32.85-.47 1.3-.52.63-.06 1.29.05 1.87.25V7.5z"></path></svg>`,
	4,
)

function TapDoubleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 8.5a3.5 3.5 0 117 .16l.99.17.01-.33a4.5 4.5 0 10-8.62 1.82 4.2 4.2 0 011.05-.13A3.48 3.48 0 016 8.5zM9.5 6C8.67 6 8 6.67 8 7.5v4.25a4.46 4.46 0 00-1.87-.25c-.45.05-.91.2-1.3.52s-.67.77-.82 1.36a.5.5 0 00.43.62c2.6.28 3.92 1.7 4.56 2.72.48.78 1.4 1.41 2.43 1.23l1.52-.26a2.5 2.5 0 001.92-1.6l.98-2.67a2.5 2.5 0 00-1.91-3.33L11 9.58V7.5c0-.83-.67-1.5-1.5-1.5z"></path></svg>`,
	4,
)

function TapSingleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.6 7.52a8 8 0 11-5.11-5.13l-1.05 1.05a1.5 1.5 0 00-.16.19 6.5 6.5 0 105.09 5.1l.2-.17 1.03-1.04zM14.9 9a5.02 5.02 0 01-4.9 6 5 5 0 111-9.9v1.55A3.5 3.5 0 1013.35 9h1.55zM10 11.5a1.5 1.5 0 001.45-1.89l1.58-1.58a.74.74 0 00.03-.03h2.44a.5.5 0 00.35-.15l2-2A.5.5 0 0017.5 5H15V2.5a.5.5 0 00-.85-.35l-2 2a.5.5 0 00-.15.35v2.44a.76.76 0 00-.03.03l-1.58 1.58a1.5 1.5 0 10-.4 2.95z"></path></svg>`,
	4,
)

function TargetArrowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 11.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM5 10a5 5 0 0110-.05l-2.42 2.4a3.5 3.5 0 10-.23.23l-2.08 2.09c-.1.1-.2.21-.28.33A5 5 0 015 10zm5-6.5c3.28 0 5.99 2.43 6.43 5.59.5-.13 1.02-.12 1.52.03A8 8 0 109 17.93c0-.09.02-.18.05-.28l.3-1.19A6.5 6.5 0 0110 3.5zm.98 11.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.08l.37-1.5c.1-.38.3-.73.58-1.01z"></path></svg>`,
	4,
)

function TargetEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 11.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM5 10a5 5 0 1110 0 5 5 0 01-10 0zm5-3.5a3.5 3.5 0 100 7 3.5 3.5 0 000-7zM2 10a8 8 0 1116 0 8 8 0 01-16 0zm8-6.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13z"></path></svg>`,
	4,
)

function TargetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.85 3.35a.5.5 0 10-.7-.7L3.5 4.29l-.65-.64a.5.5 0 10-.7.7l1 1c.2.2.5.2.7 0l2-2zm2.9.15a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm1.27 6.5c.05-.52.17-1.03.35-1.5H8.75a.75.75 0 000 1.5h1.27zM5.85 8.85a.5.5 0 10-.7-.7L3.5 9.79l-.65-.64a.5.5 0 10-.7.7l1 1c.2.2.5.2.7 0l2-2zm0 4.3c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64 1.65-1.64c.2-.2.5-.2.7 0zM20 15.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V15h-1.5a.5.5 0 000 1H15v1.5a.5.5 0 001 0V16h1.5a.5.5 0 000-1H16v-1.5z"></path></svg>`,
	4,
)

function TaskListAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.85 4.35a.5.5 0 10-.7-.7L3.5 5.29l-.65-.64a.5.5 0 10-.7.7l1 1c.2.2.5.2.7 0l2-2zm2.9.15a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM8 15.25c0-.41.34-.75.75-.75h8.5a.75.75 0 010 1.5h-8.5a.75.75 0 01-.75-.75zm-2.15-5.4a.5.5 0 10-.7-.7L3.5 10.79l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l2-2zm0 4.3c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64 1.65-1.64c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function TaskListLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.85 4.35a.5.5 0 00-.7-.7L15.5 5.29l-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l2-2zm-15.1.15a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM2 15.25c0-.41.34-.75.75-.75h8.5a.75.75 0 010 1.5h-8.5a.75.75 0 01-.75-.75zm13.85-3.4l2-2a.5.5 0 00-.7-.7l-1.65 1.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0zm2 3l-2 2a.5.5 0 01-.7 0l-1-1a.5.5 0 01.7-.7l.65.64 1.65-1.64a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function TaskListRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3.6A5.5 5.5 0 009.6 17H6a3 3 0 01-3-3V6zm6.35.4a.5.5 0 00-.7 0L7.23 7.8l-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02L9.34 7.1a.5.5 0 000-.7zm0 5.7a.5.5 0 00-.7-.7l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75zM11 7a.5.5 0 000 1h2.5a.5.5 0 000-1H11zm8 7.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-4-2V14h1.5a.5.5 0 010 1H15v1.5a.5.5 0 01-1 0V15h-1.5a.5.5 0 010-1H14v-1.5a.5.5 0 011 0z"></path></svg>`,
	4,
)

function TaskListSquareAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.05a2.46 2.46 0 01-.05-.5v-4.04l-1.4 1.4a.5.5 0 01-.69 0l-.75-.68a.5.5 0 01.68-.73l.4.36 1.4-1.41a.5.5 0 01.36-.15v-.75c0-1.22.88-2.11 1.83-2.64A7.68 7.68 0 0114.5 7c.89 0 1.74.13 2.5.36V6a3 3 0 00-3-3H6zm11 5.42A7.25 7.25 0 0014.5 8C12.01 8 10 9.12 10 10.5s2.02 2.5 4.5 2.5c2.49 0 4.5-1.12 4.5-2.5 0-.87-.8-1.63-2-2.08zM9.35 6.4c.2.2.2.5 0 .7L7.6 8.85a.5.5 0 01-.69.02l-.75-.69a.5.5 0 11.68-.73l.4.36 1.4-1.41c.2-.2.52-.2.71 0zM14.5 14c1.38 0 2.68-.3 3.67-.86.29-.16.58-.36.83-.59v3.95c0 1.38-2.01 2.5-4.5 2.5S10 17.88 10 16.5v-3.95c.25.23.54.43.83.6 1 .54 2.29.85 3.67.85z"></path></svg>`,
	4,
)

function TaskListSquareDatabaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm6.35 1.1a.5.5 0 00-.7-.7L7.23 7.8l-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02L9.34 7.1zm0 4.3a.5.5 0 00-.7 0l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75a.5.5 0 000-.7zM11 12a.5.5 0 000 1h2.5a.5.5 0 000-1H11zm-.5-4.5c0 .28.22.5.5.5h2.5a.5.5 0 000-1H11a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function TaskListSquareLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3.4a3 3 0 00-4.5 2.6H11a.5.5 0 000 1h1.67a3 3 0 00.6 1.01A2.5 2.5 0 0011.04 17H6a3 3 0 01-3-3V6zm6.35 1.1a.5.5 0 00-.7-.7L7.23 7.8l-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02L9.34 7.1zm0 4.3a.5.5 0 00-.7 0l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75a.5.5 0 000-.7zm1.15-3.9c0 .28.22.5.5.5h2.5a.5.5 0 000-1H11a.5.5 0 00-.5.5zm7 4.5a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function TaskListSquarePersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm11.35 1.1a.5.5 0 10-.7-.7l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75zm0 4.3a.5.5 0 00-.7 0l-1.42 1.4-.4-.35a.5.5 0 00-.67.73l.75.69c.2.18.5.17.7-.02l1.74-1.75a.5.5 0 000-.7zM6.5 12a.5.5 0 000 1H9a.5.5 0 000-1H6.5zM6 7.5c0 .28.22.5.5.5H9a.5.5 0 000-1H6.5a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function TaskListSquareRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.6A5.5 5.5 0 0117 9.6V6a3 3 0 00-3-3H6zm3.35 3.4c.2.2.2.5 0 .7L7.6 8.85a.5.5 0 01-.69.02l-.75-.69a.5.5 0 11.68-.73l.4.36 1.4-1.41c.2-.2.52-.2.71 0zm-.7 5a.5.5 0 01.7.7L7.6 13.85a.5.5 0 01-.69.02l-.75-.69a.5.5 0 01.68-.73l.4.36 1.4-1.41zM11 8a.5.5 0 010-1h2.5a.5.5 0 010 1H11zm-.37 5.92a2 2 0 001.43-2.48l-.15-.56c.25-.2.53-.36.82-.5l.34.36a2 2 0 002.9 0l.33-.34c.3.14.58.31.83.52l-.12.42a2 2 0 001.45 2.52l.35.08a4.6 4.6 0 01.01 1.02l-.46.12a2 2 0 00-1.43 2.47l.16.56c-.26.2-.53.36-.82.5l-.34-.36a2 2 0 00-2.91 0l-.32.35c-.3-.14-.58-.31-.84-.52l.13-.42a2 2 0 00-1.46-2.52l-.34-.08a4.62 4.62 0 01-.01-1.02l.45-.12zm4.87.58a1 1 0 10-2 0 1 1 0 002 0z"></path></svg>`,
	4,
)

function TaskListSquareSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4c0-1.1.9-2 2-2h8a2 2 0 012 2v9.88l-2.5 2.52-.93-.95a1.5 1.5 0 10-2.14 2.1l.44.45H6a2 2 0 01-2-2V4zm5 5.5c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5zM9.5 5a.5.5 0 000 1h4a.5.5 0 000-1h-4zM9 13.5c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5zm-2-3a1 1 0 100-2 1 1 0 000 2zm1-5a1 1 0 10-2 0 1 1 0 002 0zm-1 9a1 1 0 100-2 1 1 0 000 2zm10.86.35a.5.5 0 00-.72-.7l-3.64 3.68-1.64-1.68a.5.5 0 10-.72.7l1.93 1.97a.6.6 0 00.86 0l3.93-3.97z"></path></svg>`,
	4,
)

function TasksAppIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3a3.5 3.5 0 00-2.85 5.53 7.92 7.92 0 015.5-4.32A3.5 3.5 0 005.5 3zM18 6.5c0 .76-.24 1.46-.65 2.03a7.92 7.92 0 00-5.5-4.32A3.5 3.5 0 0118 6.5zm-15 5C3 7.87 6.17 5 10 5s7 2.87 7 6.5a6.2 6.2 0 01-1.76 4.31 5.5 5.5 0 00-10.48 0A6.2 6.2 0 013 11.5zm8.33 1.7a4.5 4.5 0 013.07 3.35A7.33 7.33 0 0110 18c-1.66 0-3.2-.54-4.4-1.45a4.5 4.5 0 013.07-3.35 1.5 1.5 0 002.66 0z"></path></svg>`,
	4,
)

function TeddyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 7.25a.75.75 0 00-1.5 0v4.9a2 2 0 101.5 0v-4.9zM6.5 5.5a3.5 3.5 0 017 0v5.67A4.48 4.48 0 0110 18.5a4.5 4.5 0 01-3.5-7.33V5.5zm1.5 0v6.24l-.2.22a3 3 0 104.4 0l-.2-.22V5.5a2 2 0 00-4 0z"></path></svg>`,
	4,
)

function TemperatureIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.4 2.82a.5.5 0 00-.77 0 20.89 20.89 0 01-4.91 3.9.5.5 0 00-.25.36L3.37 15H2.5a.5.5 0 000 1h3.94a.5.5 0 00.1.01h6.9a.5.5 0 00.1-.01h3.96a.5.5 0 000-1h-.84l-1.1-7.92a.5.5 0 00-.24-.36 20.89 20.89 0 01-4.92-3.9zM7.51 15c.84-1.22 1.7-2.79 2.49-5.26.7 2.23 1.5 3.78 2.49 5.26H7.5z"></path></svg>`,
	4,
)

function TentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.75c0-.41.34-.75.75-.75H11v4H7V2.75zM2.75 7a.75.75 0 00-.75.75v2.5c0 .41.34.75.75.75H6V7H2.75zM11 7H7v4h3.25c.41 0 .75-.34.75-.75V7zm4.25-5H12v4h3.25c.41 0 .75-.34.75-.75v-2.5a.75.75 0 00-.75-.75zM4 14.75c0-.41.34-.75.75-.75H8v4H4.75a.75.75 0 01-.75-.75v-2.5zM13 18v-4H9v4h4zm5-4v3.25c0 .41-.34.75-.75.75H14v-4h4zm-3.25-5a.75.75 0 00-.75.75V13h4V9.75a.75.75 0 00-.75-.75h-2.5z"></path></svg>`,
	4,
)

function TetrisAppIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 3.75c0-.41.34-.75.75-.75h10c.41 0 .75.34.75.75v1.5a.75.75 0 01-1.5 0V4.5H9.5v7.7a5.48 5.48 0 00.1 4.8H6.75a.75.75 0 010-1.5H8v-11H4.5v.75a.75.75 0 01-1.5 0v-1.5zM19 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5z"></path></svg>`,
	4,
)

function TextAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.75c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75A.75.75 0 013 5.75zm0 4c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75A.75.75 0 013 9.75zm9.03 6.03c.3-.3.3-.77 0-1.06l-1.5-1.5a.75.75 0 00-1.06 0l-1.5 1.5a.75.75 0 101.06 1.06l.97-.97.97.97c.3.3.77.3 1.06 0z"></path></svg>`,
	4,
)

function TextAddSpaceAfterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.03 5.78a.75.75 0 00-1.06-1.06l-.97.97-.97-.97a.75.75 0 00-1.06 1.06l1.5 1.5c.3.3.77.3 1.06 0l1.5-1.5zM3 10.75c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75zm0 4c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function TextAddSpaceBeforeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 5a1 1 0 011-1h12.5a1 1 0 011 1v2a1 1 0 11-2 0V6H12v8.03a6.47 6.47 0 00-.5 5.97H9a1 1 0 110-2h1V6H5.75v1a1 1 0 01-2 0V5zM23 17.5a5.5 5.5 0 10-11 0 5.5 5.5 0 0011 0zm-5 .5v2.5a.5.5 0 11-1 0V18h-2.5a.5.5 0 010-1H17v-2.5a.5.5 0 111 0V17h2.5a.5.5 0 010 1H18z"></path></svg>`,
	4,
)

function TextAddTIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 4.25c0-.41.34-.75.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 4.25zm-2 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.25zm4.75 4.25a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z"></path></svg>`,
	4,
)

function TextAlignCenterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.25 16a.75.75 0 01-.75-.75V4.75a.75.75 0 011.5 0v10.5c0 .41-.34.75-.75.75zm5 2a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v14.5c0 .41-.34.75-.75.75zm4.25-4.75a.75.75 0 001.5 0v-6.5a.75.75 0 00-1.5 0v6.5z"></path></svg>`,
	4,
)

function TextAlignCenterRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.75 4c.41 0 .75.34.75.75v10.5a.75.75 0 01-1.5 0V4.75c0-.41.34-.75.75-.75zm-5-2c.41 0 .75.34.75.75v14.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zM6.5 6.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z"></path></svg>`,
	4,
)

function TextAlignCenterRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 3.5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.5zm0 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 8.5zm2.56 6.75h10.88l-.72.72a.75.75 0 101.06 1.06l2-2c.3-.3.3-.77 0-1.06l-2-2a.75.75 0 10-1.06 1.06l.72.72H4.56l.72-.72a.75.75 0 10-1.06-1.06l-2 2c-.3.3-.3.77 0 1.06l2 2a.75.75 0 001.06-1.06l-.72-.72z"></path></svg>`,
	4,
)

function TextAlignDistributedEvenlyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.78 6.28c.3-.3.3-.77 0-1.06L4.56 5h12.69a.75.75 0 000-1.5H4.56l.22-.22a.75.75 0 00-1.06-1.06l-1.5 1.5c-.3.3-.3.77 0 1.06l1.5 1.5c.3.3.77.3 1.06 0zM18 9.25c0 .41-.34.75-.75.75H2.75a.75.75 0 010-1.5h14.5c.41 0 .75.34.75.75zM2.75 13.5h12.69l-.22-.22a.75.75 0 111.06-1.06l1.5 1.5c.3.3.3.77 0 1.06l-1.5 1.5a.75.75 0 11-1.06-1.06l.22-.22H2.75a.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function TextAlignDistributedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.03 14.72a.75.75 0 00-1.06 1.06l2 2c.3.3.77.3 1.06 0l2-2a.75.75 0 10-1.06-1.06l-.72.72V2.75a.75.75 0 00-1.5 0v12.69l-.72-.72zM10 18a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v14.5c0 .41-.34.75-.75.75zm8.03-12.72c-.3.3-.77.3-1.06 0l-.72-.72v12.69a.75.75 0 01-1.5 0V4.56l-.72.72a.75.75 0 11-1.06-1.06l2-2c.3-.3.77-.3 1.06 0l2 2c.3.3.3.77 0 1.06z"></path></svg>`,
	4,
)

function TextAlignDistributedVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.25c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.25zm0 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.25zm.75 4.25a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function TextAlignJustifyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 4.5c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 019 4.5zm0 5c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 019 9.5zm-6.25 4.25a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75z"></path></svg>`,
	4,
)

function TextAlignJustifyLowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 11a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5c0 .41-.34.75-.75.75zm5 0a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5c0 .41-.34.75-.75.75zm4.25 6.25a.75.75 0 001.5 0V2.75a.75.75 0 00-1.5 0v14.5z"></path></svg>`,
	4,
)

function TextAlignJustifyLowRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 9c.41 0 .75.34.75.75v7.5a.75.75 0 01-1.5 0v-7.5c0-.41.34-.75.75-.75zm-5 0c.41 0 .75.34.75.75v7.5a.75.75 0 01-1.5 0v-7.5c0-.41.34-.75.75-.75zM6.25 2.75a.75.75 0 00-1.5 0v14.5a.75.75 0 001.5 0V2.75z"></path></svg>`,
	4,
)

function TextAlignJustifyLowRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.25 18a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v14.5c0 .41-.34.75-.75.75zm5 0a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v14.5c0 .41-.34.75-.75.75zm4.25-.75a.75.75 0 001.5 0V2.75a.75.75 0 00-1.5 0v14.5z"></path></svg>`,
	4,
)

function TextAlignJustifyRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.75 2c.41 0 .75.34.75.75v14.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zm-5 0c.41 0 .75.34.75.75v14.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zm-4.25.75a.75.75 0 00-1.5 0v14.5a.75.75 0 001.5 0V2.75z"></path></svg>`,
	4,
)

function TextAlignJustifyRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.25c0-.41.34-.75.75-.75h10.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.25zm0 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.25zm.75 4.25a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5z"></path></svg>`,
	4,
)

function TextAlignLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.25 18a.75.75 0 01-.75-.75V6.75a.75.75 0 011.5 0v10.5c0 .41-.34.75-.75.75zm5 0a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v14.5c0 .41-.34.75-.75.75zm4.25-.75a.75.75 0 001.5 0v-8.5a.75.75 0 00-1.5 0v8.5z"></path></svg>`,
	4,
)

function TextAlignLeftRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.75 2c.41 0 .75.34.75.75v10.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zm-5 0c.41 0 .75.34.75.75v14.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zm-4.25.75a.75.75 0 00-1.5 0v8.5a.75.75 0 001.5 0v-8.5z"></path></svg>`,
	4,
)

function TextAlignLeftRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.25c0-.41.34-.75.75-.75h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 4.25zm-4 5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.25zm7.75 4.25a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5z"></path></svg>`,
	4,
)

function TextAlignRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.25 14a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v10.5c0 .41-.34.75-.75.75zm5 4a.75.75 0 01-.75-.75V2.75a.75.75 0 011.5 0v14.5c0 .41-.34.75-.75.75zm4.25-7.75a.75.75 0 001.5 0v-7.5a.75.75 0 00-1.5 0v7.5z"></path></svg>`,
	4,
)

function TextAlignRightRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.75 6c.41 0 .75.34.75.75v10.5a.75.75 0 01-1.5 0V6.75c0-.41.34-.75.75-.75zm-5-4c.41 0 .75.34.75.75v14.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zM6.5 9.75a.75.75 0 00-1.5 0v7.5a.75.75 0 001.5 0v-7.5z"></path></svg>`,
	4,
)

function TextAlignRightRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.6 2.5a.6.6 0 10-1.2 0v6.05L5.12 4.27a.6.6 0 10-.85.85L8.55 9.4H2.5a.6.6 0 100 1.2h6.05l-4.28 4.28a.6.6 0 00.85.85l4.28-4.28v6.05a.6.6 0 101.2 0v-6.05l4.28 4.28a.6.6 0 00.85-.85l-4.28-4.28h6.05a.6.6 0 100-1.2h-6.05l4.28-4.28a.6.6 0 00-.85-.85L10.6 8.55V2.5z"></path></svg>`,
	4,
)

function TextAsteriskIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.7 3.47a.75.75 0 00-1.4 0l-3.75 9.5a.75.75 0 001.4.56l1.2-3.03h3.7l1.2 3.03a.75.75 0 001.4-.56l-3.75-9.5zM11.27 9H8.73L10 5.8 11.27 9z"></path><path d="M2.5 16a.5.5 0 000 1h15a.5.5 0 000-1h-15z"></path></svg>`,
	6,
)

function TextBaselineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4.5C5 3.67 5.67 3 6.5 3h3.88a4.12 4.12 0 013.44 6.39 4.24 4.24 0 011.43 3.24A4.36 4.36 0 0110.88 17H6.5A1.5 1.5 0 015 15.5v-11zM8 6v2.25h2.38a1.13 1.13 0 000-2.25H8zm0 5.25V14h2.88c.7 0 1.37-.54 1.37-1.37 0-.84-.69-1.38-1.37-1.38H8z"></path></svg>`,
	4,
)

function TextBoldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 14.5a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9zM6.7 14h6.6c.38 0 .7-.34.7-.75s-.32-.75-.7-.75H6.7c-.38 0-.7.34-.7.75s.32.75.7.75zm0-3h6.6c.38 0 .7-.34.7-.75s-.32-.75-.7-.75H6.7c-.38 0-.7.34-.7.75s.32.75.7.75z"></path></svg>`,
	4,
)

function TextboxAlignBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm6.5 0a.5.5 0 00-.5.5v9a.5.5 0 001 0v-9a.5.5 0 00-.5-.5zM7 5.5a.5.5 0 00-1 0v9a.5.5 0 001 0v-9z"></path></svg>`,
	4,
)

function TextboxAlignBottomRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9zm-10.3 2h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75s.32-.75.7-.75zm1 3h4.6c.38 0 .7.34.7.75s-.32.75-.7.75H7.7c-.38 0-.7-.34-.7-.75s.32-.75.7-.75z"></path></svg>`,
	4,
)

function TextboxAlignCenterIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.5 3A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9A2.5 2.5 0 015.5 3h9zM6 8.25c0 .41.32.75.7.75h6.6c.38 0 .7-.34.7-.75s-.32-.75-.7-.75H6.7c-.38 0-.7.34-.7.75zm.7 2.25c-.38 0-.7.34-.7.75s.32.75.7.75h6.6c.38 0 .7-.34.7-.75s-.32-.75-.7-.75H6.7z"></path></svg>`,
	4,
)

function TextboxAlignMiddleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5zm8.5 0a.5.5 0 00-.5.5v9a.5.5 0 001 0v-9a.5.5 0 00-.5-.5zM9 5.5a.5.5 0 00-1 0v9a.5.5 0 001 0v-9z"></path></svg>`,
	4,
)

function TextboxAlignMiddleRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9zM6.7 6h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75S6.32 6 6.7 6zm0 3h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75S6.32 9 6.7 9z"></path></svg>`,
	4,
)

function TextboxAlignTopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm5.5 2c.28 0 .5.22.5.5v9a.5.5 0 01-1 0v-9c0-.28.22-.5.5-.5zm3 0c.28 0 .5.22.5.5v9a.5.5 0 01-1 0v-9c0-.28.22-.5.5-.5z"></path></svg>`,
	4,
)

function TextboxAlignTopRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9zM6 6.75c0-.41.32-.75.7-.75h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75zm0 3c0-.41.32-.75.7-.75h3.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75zM6.7 12h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75s.32-.75.7-.75z"></path></svg>`,
	4,
)

function TextboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h1.25A2.25 2.25 0 0111 15.97a2.25 2.25 0 014 0 2.25 2.25 0 011.99-1.22l.01-.25v-9zM6 6.75c0-.41.32-.75.7-.75h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75zm0 3c0-.41.32-.75.7-.75h3.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75zM6.7 12h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75s.32-.75.7-.75zm3.55 5a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM13 18.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zm4 0a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function TextboxMoreIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$49 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9zM7.5 6.7v6.6c0 .38-.34.7-.75.7S6 13.68 6 13.3V6.7c0-.38.34-.7.75-.7s.75.32.75.7zM9.75 6c.41 0 .75.32.75.7v3.6c0 .38-.34.7-.75.7S9 10.68 9 10.3V6.7c0-.38.34-.7.75-.7zm3 0c.41 0 .75.32.75.7v6.6c0 .38-.34.7-.75.7s-.75-.32-.75-.7V6.7c0-.38.34-.7.75-.7z"></path></svg>`,
	4,
)

function TextboxRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$49.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$48 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h4.1a5.48 5.48 0 01-.5-3.5H6.7c-.38 0-.7-.34-.7-.75s.32-.75.7-.75h2.9c.29-.56.67-1.07 1.13-1.5H6.7c-.4 0-.71-.34-.71-.75S6.32 9 6.7 9H14.36a5.63 5.63 0 012.65.6V5.5zM6 6.75c0-.41.32-.75.7-.75h6.6c.38 0 .7.34.7.75s-.32.75-.7.75H6.7c-.38 0-.7-.34-.7-.75zm6.07 4.7a2 2 0 01-1.44 2.47l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.05a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function TextBoxSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$48.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$47 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 7a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM7 5.75c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 5.75zM7.75 10a.75.75 0 000 1.5h3.14c.38-.59.87-1.1 1.45-1.5H7.75zm0 5h2.27c.05.52.17 1.03.35 1.5H7.75a.75.75 0 010-1.5zM4.5 10.75a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM3.25 17a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM20 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V14h-1.5a.5.5 0 000 1H15v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H16v-1.5z"></path></svg>`,
	4,
)

function TextBulletListAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$47.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$46 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 7a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM7 5.75c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 5.75zm0 5c0-.41.34-.75.75-.75h4.59c-.58.4-1.07.91-1.45 1.5H7.75a.75.75 0 01-.75-.75zM7.75 15h2.27c.05.52.17 1.03.35 1.5H7.75a.75.75 0 010-1.5zm-4.5-3a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zm0 5a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM20 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15-1.85a.5.5 0 00-.7 0l-2.65 2.64-.65-.64a.5.5 0 00-.7.7l1 1c.2.2.5.2.7 0l3-3a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function TextBulletListCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$46.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$45 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 7a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM7 5.75c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 5.75zm0 5c0-.41.34-.75.75-.75h4.59c-.58.4-1.07.91-1.45 1.5H7.75a.75.75 0 01-.75-.75zM7.75 15h2.27c.05.52.17 1.03.35 1.5H7.75a.75.75 0 010-1.5zm-4.5-3a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zm0 5a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM20 14.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.65-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14 1.15 1.14a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15z"></path></svg>`,
	4,
)

function TextBulletListDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$45.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$44 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 7a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM7 5.75c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 5.75zM7.75 10a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5zm0 5a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5zM4.5 10.75a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM3.25 17a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function TextBulletListLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$44.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$43 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.25 2.75a.75.75 0 00-1.5 0v11.5a.75.75 0 001.5 0V2.75zM4.5 18a1 1 0 100-2 1 1 0 000 2zm5.5 0a1 1 0 100-2 1 1 0 000 2zm6.5-1a1 1 0 11-2 0 1 1 0 012 0zM10 2c.41 0 .75.34.75.75v11.5a.75.75 0 01-1.5 0V2.75c0-.41.34-.75.75-.75zm6.25.75a.75.75 0 00-1.5 0v11.5a.75.75 0 001.5 0V2.75z"></path></svg>`,
	4,
)

function TextBulletListRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$43.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$42 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 4a1 1 0 100-2 1 1 0 000 2zM10 4a1 1 0 100-2 1 1 0 000 2zm6.5-1a1 1 0 11-2 0 1 1 0 012 0zM5.25 5.75a.75.75 0 00-1.5 0v11.5a.75.75 0 001.5 0V5.75zM10 5c.41 0 .75.34.75.75v11.5a.75.75 0 01-1.5 0V5.75c0-.41.34-.75.75-.75zm6.25.75a.75.75 0 00-1.5 0v11.5a.75.75 0 001.5 0V5.75z"></path></svg>`,
	4,
)

function TextBulletListRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$42.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$41 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.75 7a1.25 1.25 0 110-2.5 1.25 1.25 0 010 2.5zM13 5.75a.75.75 0 00-.75-.75h-9.5a.75.75 0 000 1.5h9.5c.41 0 .75-.34.75-.75zM12.25 10a.75.75 0 010 1.5h-9.5a.75.75 0 010-1.5h9.5zm0 5a.75.75 0 010 1.5h-9.5a.75.75 0 010-1.5h9.5zm3.25-4.25a1.25 1.25 0 102.5 0 1.25 1.25 0 00-2.5 0zM16.75 17a1.25 1.25 0 110-2.5 1.25 1.25 0 010 2.5z"></path></svg>`,
	4,
)

function TextBulletListRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$41.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$40 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v4.6a5.48 5.48 0 00-5.66.4H9.5a.5.5 0 000 1h.76a5.48 5.48 0 00-.66 6H5a2 2 0 01-2-2V5zm3.75 3a.75.75 0 100-1.5.75.75 0 000 1.5zM6 10.25a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM6.75 14a.75.75 0 100-1.5.75.75 0 000 1.5zm6.75-7h-4a.5.5 0 000 1h4a.5.5 0 000-1zm1 12a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.5-6.5a.5.5 0 011 0V14h1a.5.5 0 010 1h-1.5a.5.5 0 01-.5-.5v-2z"></path></svg>`,
	4,
)

function TextBulletListSquareClockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$40.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h4.22l.21-.84a3.2 3.2 0 01.84-1.49l.67-.67H9.5a.5.5 0 010-1h2.44l3.16-3.16c.53-.53 1.21-.8 1.9-.84V5a2 2 0 00-2-2H5zm2.5 4.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM6.75 11a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.5 7h4a.5.5 0 010 1h-4a.5.5 0 010-1zM9 10.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm1.98 4.88l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function TextBulletListSquareEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h10a2 2 0 002-2V5a2 2 0 00-2-2H5zm2.5 4.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM6.75 11a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.5 7h4a.5.5 0 010 1h-4a.5.5 0 010-1zM9 10.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm.5 2.5h4a.5.5 0 010 1h-4a.5.5 0 010-1z"></path></svg>`,
	4,
)

function TextBulletListSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h5.2c-.24-.76-.34-1.7.1-2.4.13-.24.31-.44.52-.6H9.5a.5.5 0 010-1h2.9a2.87 2.87 0 01-.36-2H9.5a.5.5 0 010-1h2.88c.5-.9 1.47-1.5 2.62-1.5.5 0 1 .1 1.5.4.18.1.35.22.5.36V5a2 2 0 00-2-2H5zm2.5 4.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM6.75 11a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.5 7h4a.5.5 0 010 1h-4a.5.5 0 010-1zM16 9.77a2 2 0 10-2 3.46 2 2 0 002-3.46zm-5 5.98c0-.69.56-1.25 1.25-1.25h5.5A1.25 1.25 0 0119 15.84v.21a2.03 2.03 0 01-.07.45c-.06.29-.2.66-.46 1.04C17.93 18.32 16.9 19 15 19c-1.61 0-2.6-.5-3.2-1.13a2.94 2.94 0 01-.8-1.82v-.3z"></path></svg>`,
	4,
)

function TextBulletListSquarePersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v4.76A4.5 4.5 0 019.97 13h3.53a.5.5 0 010 1H9.97c-.05.5-.2.98-.4 1.44L11.11 17H15a2 2 0 002-2V5a2 2 0 00-2-2H5zm2.5 4.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2-.25h4a.5.5 0 010 1h-4a.5.5 0 010-1zM9 10.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm-6.62 1.4a3.5 3.5 0 005.22 4.4l2.54 2.56a.5.5 0 00.71-.71L8.3 15.6a3.5 3.5 0 10-5.92-3.7zm5.2.21a2.5 2.5 0 11-4.16 2.78 2.5 2.5 0 014.16-2.78z"></path></svg>`,
	4,
)

function TextBulletListSquareSearchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h4.6a5.48 5.48 0 01.66-6H9.5a.5.5 0 010-1h1.84A5.47 5.47 0 0117 9.6V5a2 2 0 00-2-2H5zm2.5 4.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM6.75 11a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.5 7h4a.5.5 0 010 1h-4a.5.5 0 010-1zm2.56 4.44a2 2 0 01-1.43 2.48l-.46.12a4.74 4.74 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zm2.44 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function TextBulletListSquareSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3a2 2 0 00-2 2v10c0 1.1.9 2 2 2h5.8c-.47-.8-.8-1.8-.8-3h-.5a.5.5 0 010-1h.5v-1.5c0-.18.03-.35.08-.5H9.5a.5.5 0 010-1h1.72l.14-.03a4.71 4.71 0 002.5-1.43 1.62 1.62 0 012.29 0c.22.23.51.49.85.73V5a2 2 0 00-2-2H5zm2.5 4.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM6.75 11a.75.75 0 110-1.5.75.75 0 010 1.5zm.75 2.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.5 7h4a.5.5 0 010 1h-4a.5.5 0 010-1zm5.94 2.24a5.7 5.7 0 003.06 1.72c.27.04.5.26.5.54V14c0 3.47-3.18 4.73-3.87 4.96a.4.4 0 01-.26 0C14.18 18.73 11 17.46 11 14v-2.5c0-.28.23-.5.5-.54a5.7 5.7 0 003.06-1.72.62.62 0 01.88 0z"></path></svg>`,
	4,
)

function TextBulletListSquareShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v4.5c-.42-.31-.94-.5-1.5-.5h-2c-.82 0-1.54.4-2 1h-2a.5.5 0 000 1h1.55v.04A2.5 2.5 0 009 13.5V17H5a2 2 0 01-2-2V5zm3.75 3a.75.75 0 100-1.5.75.75 0 000 1.5zM6 10.25a.75.75 0 101.5 0 .75.75 0 00-1.5 0zM6.75 14a.75.75 0 100-1.5.75.75 0 000 1.5zm6.75-7h-4a.5.5 0 000 1h4a.5.5 0 000-1zM12 12v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 4.5h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function TextBulletListSquareToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5c0-1.1.9-2 2-2h10a2 2 0 012 2v6.87l-.98-1.7a2.32 2.32 0 00-3.47-.67H8.5a.5.5 0 000 1h3.28L10.34 13H8.5a.5.5 0 000 1h1.26l-1.45 2.53c-.1.15-.16.3-.21.47H5a2 2 0 01-2-2V5zm4 1.5a.75.75 0 10-1.5 0 .75.75 0 001.5 0zM7 10a.75.75 0 10-1.5 0A.75.75 0 007 10zm-.75 4.25a.75.75 0 100-1.5.75.75 0 000 1.5zM8 6.5c0 .27.22.5.5.5h5a.5.5 0 000-1h-5a.5.5 0 00-.5.5zm5.65 3.55a1.34 1.34 0 011.5.61l3.67 6.37a1.3 1.3 0 01-.5 1.8c-.2.1-.42.17-.65.17h-7.34A1.33 1.33 0 019 17.68c0-.23.06-.45.17-.65l3.67-6.37c.18-.31.48-.52.8-.61zm.85 2.45a.5.5 0 10-1 0V15a.5.5 0 101 0v-2.5zM14 18a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function TextBulletListSquareWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.25 7a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5zM7 5.75c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 5.75zM7.75 10a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5zm4 5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zM4.5 10.75a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM7.25 17a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function TextBulletListTreeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.75 3.25c.41 0 .75.34.75.75v4.66C13 8.24 13.6 8 14.25 8c1.66 0 3 1.57 3 3.5s-1.34 3.5-3 3.5c-.65 0-1.26-.24-1.75-.66v.16a.75.75 0 01-1.5 0V4c0-.41.34-.75.75-.75zm2.5 10.25c.62 0 1.5-.67 1.5-2s-.88-2-1.5-2-1.5.67-1.5 2 .88 2 1.5 2zm-8.6-4.56a2.8 2.8 0 00-1.06.23.75.75 0 01-.68-1.34 4.26 4.26 0 011.69-.4c.63-.02 1.34.08 1.99.4C9 8.54 9 9.95 9 10.46v4.04a.75.75 0 01-1.5.06c-.87.53-1.89.85-2.94.57a2.61 2.61 0 01-.73-4.75c.78-.52 1.7-.66 2.53-.61a6 6 0 011.1.16.97.97 0 00-.55-.76c-.35-.18-.8-.25-1.26-.23zM7.5 11.5a4.5 4.5 0 00-1.22-.24c-.62-.03-1.2.09-1.61.36-.93.62-.65 1.8.27 2.06.75.2 1.67-.19 2.56-1V11.5z"></path></svg>`,
	4,
)

function TextCaseLowercaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 3.25c.41 0 .75.34.75.75v4.66c.5-.42 1.1-.66 1.75-.66 1.66 0 3 1.57 3 3.5S16.66 15 15 15c-.65 0-1.26-.24-1.75-.66v.16a.75.75 0 01-1.5 0V4c0-.41.34-.75.75-.75zM15 13.5c.62 0 1.5-.67 1.5-2s-.88-2-1.5-2-1.5.67-1.5 2 .88 2 1.5 2zM6.5 3.25c.31 0 .59.2.7.5l3.64 10.5a.75.75 0 11-1.41.5l-.78-2.25H4.06l-.86 2.27a.75.75 0 01-1.4-.54l3.98-10.5c.12-.3.4-.48.71-.48zM4.62 11h3.5L6.45 6.2 4.63 11z"></path></svg>`,
	4,
)

function TextCaseTitleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 3.25c.31 0 .59.2.7.5l3.64 10.5a.75.75 0 11-1.41.5l-.78-2.25H4.06l-.86 2.27a.75.75 0 01-1.4-.54l3.98-10.5c.12-.3.4-.48.71-.48zM4.62 11h3.5L6.45 6.2 4.63 11zM12 3.5a.75.75 0 00-.75.75V14.5c0 .41.34.75.75.75h2.75a3.5 3.5 0 001.71-6.55 3.12 3.12 0 00-2.34-5.2H12zm3.75 3.13c0 .9-.73 1.62-1.63 1.62h-1.37V5h1.38c.9 0 1.62.73 1.62 1.63zm-1 7.12h-2v-4h2a2 2 0 110 4z"></path></svg>`,
	4,
)

function TextCaseUppercaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 3.25c.31 0 .59.2.7.5l3.64 10.5a.75.75 0 11-1.41.5l-.78-2.25h-4.59l-.86 2.27a.75.75 0 11-1.4-.54l3.98-10.5c.12-.3.4-.48.71-.48zM11.62 11h3.5l-1.68-4.8-1.82 4.8zM4.9 8.94a2.8 2.8 0 00-1.06.23.75.75 0 01-.68-1.34 4.26 4.26 0 011.69-.4c.63-.02 1.34.08 1.99.4 1.42.71 1.41 2.12 1.41 2.63v4.04a.75.75 0 01-1.5.06c-.87.53-1.89.85-2.94.57a2.61 2.61 0 01-.73-4.75c.78-.52 1.7-.66 2.53-.61a6 6 0 011.1.16.97.97 0 00-.55-.76c-.35-.18-.8-.25-1.26-.23zm1.85 2.56a4.51 4.51 0 00-1.22-.24c-.62-.03-1.2.09-1.61.36-.93.62-.65 1.8.27 2.06.75.2 1.67-.19 2.56-1V11.5z"></path></svg>`,
	4,
)

function TextChangeCaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2c.2 0 .4.13.47.32l3.5 8.95a.5.5 0 01-.94.37L8.01 9H4l-1.04 2.68a.5.5 0 11-.94-.36l3.5-9A.5.5 0 016 2zm0 1.88L4.4 8H7.6l-1.6-4.12zM11.5 2c.28 0 .5.22.5.5v3.52a2.48 2.48 0 012.26-1.3c.89 0 1.6.34 2.15 1 .55.66.82 1.54.82 2.64l-.01.42-.05-.05a2.49 2.49 0 00-1.15-.65 2.86 2.86 0 00-.53-1.62c-.36-.47-.86-.7-1.48-.7-.6 0-1.09.24-1.47.72-.3.37-.47.83-.54 1.37v1.03c.05.43.18.8.37 1.12L11 11.37V2.5c0-.28.22-.5.5-.5zm4.97 7.44l2.1 2.1a1.5 1.5 0 01-.01 2.12l-3.6 3.6-4.21-4.22 3.6-3.6a1.5 1.5 0 012.12 0zm-2.22 8.52l-4.21-4.21-.6.6a1.5 1.5 0 000 2.12l2.1 2.1c.3.3.71.45 1.12.43h4.09a.5.5 0 100-1h-2.53l.03-.04z"></path></svg>`,
	4,
)

function TextClearFormattingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.5c0-.41.34-.75.75-.75h11.5a.75.75 0 010 1.5H5.75A.75.75 0 015 3.5zm0 12c0-.41.34-.75.75-.75h11.5a.75.75 0 010 1.5H5.75A.75.75 0 015 15.5zm6.75-8.75a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zM11 11.5c0-.41.34-.75.75-.75h5.5a.75.75 0 010 1.5h-5.5a.75.75 0 01-.75-.75zm-2-2a3.5 3.5 0 11-7 0 3.5 3.5 0 017 0zm-6 0c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function TextCollapseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 13.13c0-.35.24-.63.54-.63h11.92c.3 0 .54.28.54.63v3.74c0 .35-.24.63-.54.63H4.04c-.3 0-.54-.28-.54-.63v-3.75z"></path></svg>`,
	4,
)

function TextColorAccentIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.46 2.31a.5.5 0 00-.92 0l-3 7.5a.5.5 0 10.92.38L8.54 7.5h2.92l1.08 2.69a.5.5 0 10.92-.38l-3-7.5zM10 3.85l1.06 2.65H8.94L10 3.85zM4.5 12c-.83 0-1.5.67-1.5 1.5v3c0 .83.67 1.5 1.5 1.5h11c.83 0 1.5-.67 1.5-1.5v-3c0-.83-.67-1.5-1.5-1.5h-11z"></path></svg>`,
	4,
)

function TextColorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15 5.75a.75.75 0 00-.75-.75h-8.5a.75.75 0 000 1.5h8.5c.41 0 .75-.34.75-.75zm0 3a.75.75 0 00-.75-.75h-8.5a.75.75 0 000 1.5h8.5c.41 0 .75-.34.75-.75zm0 3a.75.75 0 00-.75-.75h-8.5a.75.75 0 000 1.5h8.5c.41 0 .75-.34.75-.75zm0 3a.75.75 0 00-.75-.75h-8.5a.75.75 0 000 1.5h8.5c.41 0 .75-.34.75-.75z"></path></svg>`,
	4,
)

function TextColumnOneIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.75 5a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zm0 3a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM7 11.75c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zM7.75 14a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5z"></path></svg>`,
	4,
)

function TextColumnOneNarrowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 5a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H3.75zm0 3a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H3.75zM3 11.75c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75zM3.75 14a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H3.75z"></path></svg>`,
	4,
)

function TextColumnOneWideIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.75 5a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H3.75zm0 3a.75.75 0 000 1.5h8.46a5.48 5.48 0 014.39-.09.75.75 0 00-.35-1.41H3.75zm0 3h6.5a5.5 5.5 0 00-.88 1.5H3.75a.75.75 0 010-1.5zm0 3h5.27a5.57 5.57 0 00.07 1.5H3.75a.75.75 0 010-1.5zm15.25.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-5.12-3a.5.5 0 00-.47.33l-.88 2.5A.5.5 0 0013 15h.78l-.51 1.87a.5.5 0 00.9.4l2.25-3.5A.5.5 0 0016 13h-.75l.28-.84a.5.5 0 00-.47-.66h-1.18z"></path></svg>`,
	4,
)

function TextColumnOneWideLightningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 5.75a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 0a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-10 0A.75.75 0 006.25 5h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 3a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 0a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-10 0A.75.75 0 006.25 8h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 3a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 0a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-10 0a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 3a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm5 0a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-10 0a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75z"></path></svg>`,
	4,
)

function TextColumnThreeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.75a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm-8 0A.75.75 0 008.25 5h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm8 3a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm-8 0A.75.75 0 008.25 8h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm8 3a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm-8 0a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm8 3a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75zm-8 0a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h4.5c.41 0 .75-.34.75-.75z"></path></svg>`,
	4,
)

function TextColumnTwoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.75c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 013 5.75zm6 0c0-.41.34-.75.75-.75h6.5a.75.75 0 010 1.5h-6.5A.75.75 0 019 5.75zm-6 3c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 013 8.75zm6 0c0-.41.34-.75.75-.75h6.5a.75.75 0 010 1.5h-6.5A.75.75 0 019 8.75zm-6 3c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm6 0c0-.41.34-.75.75-.75h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 01-.75-.75zm-6 3c0-.41.34-.75.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm6 0c0-.41.34-.75.75-.75h6.5a.75.75 0 010 1.5h-6.5a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function TextColumnTwoLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.75a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-6 0a.75.75 0 00-.75-.75h-6.5a.75.75 0 000 1.5h6.5c.41 0 .75-.34.75-.75zm6 3a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-6 0a.75.75 0 00-.75-.75h-6.5a.75.75 0 000 1.5h6.5c.41 0 .75-.34.75-.75zm6 3a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-6 0a.75.75 0 00-.75-.75h-6.5a.75.75 0 000 1.5h6.5c.41 0 .75-.34.75-.75zm6 3a.75.75 0 00-.75-.75h-2.5a.75.75 0 000 1.5h2.5c.41 0 .75-.34.75-.75zm-6 0a.75.75 0 00-.75-.75h-6.5a.75.75 0 000 1.5h6.5c.41 0 .75-.34.75-.75z"></path></svg>`,
	4,
)

function TextColumnTwoRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 5.5zm0 9c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 14.5zm2.78-5.03l-1.5-1.5a.75.75 0 00-1.06 1.06l.97.97-.97.97a.75.75 0 101.06 1.06l1.5-1.5c.3-.3.3-.77 0-1.06zM7 8.5c0-.41.34-.75.75-.75h9.5a.75.75 0 010 1.5h-9.5A.75.75 0 017 8.5zm.75 2.25a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5z"></path></svg>`,
	4,
)

function TextContinuousIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2c.28 0 .5.22.5.5v15a.5.5 0 01-1 0v-15c0-.28.22-.5.5-.5zM9 5H2.5a.5.5 0 000 1H9V5zm0 3H2.5a.5.5 0 000 1H9V8zm0 3H2.5a.5.5 0 000 1H9v-1zm0 3H2.5a.5.5 0 000 1H9v-1zm7.5 0H12v-3h4.5a1.5 1.5 0 010 3zm0-5H12V6h4.5a1.5 1.5 0 010 3z"></path></svg>`,
	4,
)

function TextDensityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 4.5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zm0 3a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2 11.25c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5h9.5a.75.75 0 000-1.5h-9.5z"></path></svg>`,
	4,
)

function TextDescriptionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 3c-.3 0-.58.19-.7.47l-3 7.5a.75.75 0 001.4.56L12 9.5h3l.8 2.03a.75.75 0 001.4-.56l-3-7.5a.75.75 0 00-.7-.47zm0 2.77L14.4 8h-1.8l.9-2.23zM5.22 4.22a.75.75 0 011.06 1.06L5.56 6h3.69a.75.75 0 010 1.5H5.56l.72.72a.75.75 0 01-1.06 1.06l-2-2a.75.75 0 010-1.06l2-2zm0 7.5a.75.75 0 011.06 1.06l-.72.72h10.69a.75.75 0 010 1.5H5.56l.72.72a.75.75 0 11-1.06 1.06l-2-2a.75.75 0 010-1.06l2-2z"></path></svg>`,
	4,
)

function TextDirectionHorizontalLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 3c.3 0 .58.19.7.47l3 7.5a.75.75 0 01-1.4.56L8 9.5H5l-.8 2.03a.75.75 0 01-1.4-.56l3-7.5A.75.75 0 016.5 3zm0 2.77L5.6 8h1.8l-.9-2.23zm8.28-1.55a.75.75 0 10-1.06 1.06l.72.72h-3.69a.75.75 0 000 1.5h3.69l-.72.72a.75.75 0 001.06 1.06l2-2c.3-.3.3-.77 0-1.06l-2-2zm0 7.5a.75.75 0 10-1.06 1.06l.72.72H3.75a.75.75 0 000 1.5h10.69l-.72.72a.75.75 0 101.06 1.06l2-2c.3-.3.3-.77 0-1.06l-2-2z"></path></svg>`,
	4,
)

function TextDirectionHorizontalRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.22 5.22a.75.75 0 001.06 1.06L6 5.56v3.69a.75.75 0 001.5 0V5.56l.72.72a.75.75 0 001.06-1.06l-2-2a.75.75 0 00-1.06 0l-2 2zm7.5 0a.75.75 0 101.06 1.06l.72-.72v10.69a.75.75 0 101.5 0V5.56l.72.72a.75.75 0 001.06-1.06l-2-2a.75.75 0 00-1.06 0l-2 2zM3 13.5c0-.3.19-.58.47-.7l7.5-3a.75.75 0 11.56 1.4L9.5 12v3l2.03.8a.75.75 0 01-.56 1.4l-7.5-3a.75.75 0 01-.47-.7zm2.77 0l2.23.9v-1.8l-2.23.9z"></path></svg>`,
	4,
)

function TextDirectionRotate270RightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 13.5c0 .3-.19.58-.47.7l-7.5 3a.75.75 0 01-.56-1.4l2.03-.8v-3l-2.03-.8a.75.75 0 01.56-1.4l7.5 3c.28.12.47.4.47.7zm-2.77 0L12 12.6v1.8l2.23-.9zM5 16.25a.75.75 0 001.5 0V5.56l.72.72a.75.75 0 001.06-1.06l-2-2a.75.75 0 00-1.06 0l-2 2a.75.75 0 001.06 1.06L5 5.56v10.69zm8-7a.75.75 0 001.5 0V5.56l.72.72a.75.75 0 101.06-1.06l-2-2a.75.75 0 00-1.06 0l-2 2a.75.75 0 001.06 1.06l.72-.72v3.69z"></path></svg>`,
	4,
)

function TextDirectionRotate90LeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 6.5c0-.3-.19-.58-.47-.7l-7.5-3a.75.75 0 00-.56 1.4l2.03.8v3l-2.03.8a.75.75 0 10.56 1.4l7.5-3a.75.75 0 00.47-.7zm-2.77 0L12 7.4V5.6l2.23.9zM5 3.75a.75.75 0 011.5 0v10.69l.72-.72a.75.75 0 111.06 1.06l-2 2c-.3.3-.77.3-1.06 0l-2-2a.75.75 0 011.06-1.06l.72.72V3.75zm8 7a.75.75 0 011.5 0v3.69l.72-.72a.75.75 0 111.06 1.06l-2 2a.75.75 0 01-1.06 0l-2-2a.75.75 0 011.06-1.06l.72.72v-3.69z"></path></svg>`,
	4,
)

function TextDirectionRotate90RightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 3.75a.75.75 0 011.5 0v10.69l.72-.72a.75.75 0 011.06 1.06l-2 2c-.3.3-.77.3-1.06 0l-2-2a.75.75 0 111.06-1.06l.72.72V3.75zm8 9a.75.75 0 011.5 0v1.69l.72-.72a.75.75 0 111.06 1.06l-2 2a.75.75 0 01-1.06 0l-2-2a.76.76 0 010-1.07c.3-.3.77-.28 1.06.01l.72.72v-1.69zM13.5 3c.3 0 .58.19.7.47l3 7.5a.75.75 0 01-1.4.56L15 9.5h-3l-.8 2.03a.75.75 0 01-1.4-.56l3-7.5a.75.75 0 01.7-.47zm0 2.77L12.6 8h1.8l-.9-2.23z"></path></svg>`,
	4,
)

function TextDirectionVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.09 6.7a2.26 2.26 0 013.07-.12l.13.12.12.13c.73.85.73 2.1 0 2.96l-.12.13-6.87 6.9a1.5 1.5 0 01-.55.35l-.16.05-3.08.76a.5.5 0 01-.62-.53l.01-.08.8-3.07c.05-.21.15-.4.28-.57l.1-.12 6.89-6.9zM6.42 2.23l.05.08 2.98 7.63-.77.78L8 9H4l-1.03 2.68a.5.5 0 01-.56.3l-.1-.02a.5.5 0 01-.3-.56l.02-.08 3.5-9a.5.5 0 01.9-.1zM6 3.87L4.4 8H7.6l-1.6-4.13z"></path></svg>`,
	4,
)

function TextEditStyleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.09 3.9a2.25 2.25 0 00-4.18 0L4.9 11.37a2.2 2.2 0 00-.04.1l-1.2 2.95a2.25 2.25 0 004.18 1.68l.64-1.59h3.04l.64 1.6a2.25 2.25 0 104.18-1.7l-1.2-2.95a2.27 2.27 0 00-.04-.1L12.1 3.92zm-1.4.57l3.04 7.48v.03l1.22 2.99a.75.75 0 01-1.4.56L12.54 13H7.47l-1.02 2.53a.75.75 0 01-1.4-.56l1.21-2.99.02-.03L9.3 4.47a.75.75 0 011.39 0zm1.23 7.03H8.08L10 6.75l1.92 4.75z"></path></svg>`,
	4,
)

function TextEffectsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 3.5a.75.75 0 000 1.5h12.5a.75.75 0 000-1.5H4.75zM4 16.25c0-.41.34-.75.75-.75h12.5a.75.75 0 010 1.5H4.75a.75.75 0 01-.75-.75zm7-4c0-.41.34-.75.75-.75h5.5a.75.75 0 010 1.5h-5.5a.75.75 0 01-.75-.75zm0-4c0-.41.34-.75.75-.75h5.5a.75.75 0 010 1.5h-5.5a.75.75 0 01-.75-.75zM5.5 14a3.5 3.5 0 100-7 3.5 3.5 0 000 7zM6 8.5V10h1.5a.5.5 0 010 1H6v1.5a.5.5 0 01-1 0V11H3.5a.5.5 0 010-1H5V8.5a.5.5 0 011 0z"></path></svg>`,
	4,
)

function TextExpandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 7a3 3 0 013-3h10a3 3 0 013 3v6a3 3 0 01-3 3H5a3 3 0 01-3-3V7zm5-.5v1a.5.5 0 001 0V7h1.5v6H9a.5.5 0 000 1h2a.5.5 0 000-1h-.5V7H12v.5a.5.5 0 001 0v-1a.5.5 0 00-.5-.5h-5a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function TextFieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.72 2.22a.75.75 0 111.06 1.06l-.97.97.97.97a.75.75 0 01-1.06 1.06l-1.5-1.5a.75.75 0 010-1.06l1.5-1.5zM3.75 3.5h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 010-1.5zm12.5 10a.75.75 0 010 1.5H3.75a.75.75 0 010-1.5h12.5zM3.75 10h12.5a.75.75 0 000-1.5H3.75a.75.75 0 000 1.5z"></path></svg>`,
	4,
)

function TextFirstLineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 2c.3 0 .59.2.7.48l2.27 5.94.05.13.03.1-.79 2.12-.49-1.27H4.22l-.77 2.02a.75.75 0 01-1.4-.53l3.25-8.5A.75.75 0 016 2zM4.8 8h2.4L6 4.85 4.8 8zm7.9-2.51a.75.75 0 00-1.4 0L7.2 16.5h-.45a.75.75 0 000 1.5h2.5a.75.75 0 100-1.5H8.8l.75-2h4.92l.75 2h-.46a.75.75 0 000 1.5h2.5a.75.75 0 100-1.5h-.44L12.7 5.49zm1.2 7.5h-3.8L12 7.9l1.9 5.1z"></path></svg>`,
	4,
)

function TextFontIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.2 3.75a.75.75 0 00-1.42-.02L2.8 14.23a.75.75 0 101.4.54l.86-2.27H8.1c.1-.53.27-1.03.51-1.5H5.63l1.82-4.8 1.48 4.24c.32-.47.7-.9 1.15-1.25L8.2 3.75zm5.3 7.13a.62.62 0 100 1.24.62.62 0 000-1.24zm0 5.12a.5.5 0 00.5-.5v-2a.5.5 0 00-1 0v2c0 .28.22.5.5.5zm0-7a4.5 4.5 0 100 9 4.5 4.5 0 000-9zm0 8a3.5 3.5 0 110-7 3.5 3.5 0 010 7z"></path></svg>`,
	4,
)

function TextFontInfoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 3c.32 0 .6.2.7.5l4.26 12.25a.75.75 0 01-1.42.5l-1.3-3.75h-4.66L9.2 16.26a.75.75 0 01-1.4.01L6.92 14H4.26l-.8 2.25a.75.75 0 01-1.42-.5L4.8 8a.75.75 0 011.41-.02l2.28 5.9L12.3 3.48c.1-.3.39-.5.7-.49zM4.8 12.5h1.55l-.8-2.1-.75 2.1zm8.19-6.52L11.14 11h3.58l-1.74-5.02z"></path></svg>`,
	4,
)

function TextFontSizeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.3 3c.4.03.7.35.7.75v5.5a.75.75 0 01-1.5 0V6.11l-.31.23a.75.75 0 01-.83-1.25 2.84 2.84 0 001.16-1.5.75.75 0 01.79-.59zm-7.1 12.07a.79.79 0 01-.2-.55V6.61c0-.22.07-.42.21-.58a.76.76 0 01.57-.24c.22 0 .41.08.56.24.15.16.22.36.22.58v2.35a2.6 2.6 0 011.8-.71c.88 0 1.6.32 2.13.98.54.65.8 1.5.8 2.54 0 1.03-.26 1.89-.8 2.54-.54.66-1.26.98-2.14.98a2.5 2.5 0 01-1.84-.72.74.74 0 01-.77.72c-.2 0-.4-.06-.54-.22zm1.8-1.76c.3.37.68.55 1.14.55.49 0 .86-.18 1.13-.53.28-.36.43-.88.43-1.56s-.15-1.2-.43-1.56a1.33 1.33 0 00-1.13-.54c-.46 0-.83.19-1.13.56-.3.38-.46.88-.46 1.54s.16 1.16.46 1.54zm-10.25 1.2c0 .22.08.4.24.54H2c.16.14.36.2.57.2a.8.8 0 00.5-.16c.14-.1.23-.25.3-.43l.74-2.02h3.27l.76 2.02a.8.8 0 00.8.59c.2 0 .4-.06.56-.2a.69.69 0 00.25-.53c0-.13-.03-.26-.09-.4L6.71 6.44a1.1 1.1 0 00-.36-.51.97.97 0 00-.59-.18c-.22 0-.43.06-.6.18-.18.12-.3.3-.38.51l-2.94 7.68c-.06.14-.09.27-.09.4zm5.13-3.3H4.62l1.13-3.1 1.13 3.1z"></path></svg>`,
	4,
)

function TextFootnoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zm0 3a.75.75 0 000 1.5h.46a5.48 5.48 0 014.58 0h9.46a.75.75 0 000-1.5H2.75zm14.5 7.5h-6.34a5.53 5.53 0 00.07-1.5h6.27a.75.75 0 010 1.5zm0-3h-6.62a5.5 5.5 0 00-.89-1.5h7.51a.75.75 0 010 1.5zm-7.25 2a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.15-2.35a.5.5 0 00-.7.7L6.29 14H3.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2A.5.5 0 008 14.5a.5.5 0 00-.14-.35l-2-2z"></path></svg>`,
	4,
)

function TextGrammarArrowLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 10a4.5 4.5 0 100 9 4.5 4.5 0 000-9zm-2.35 4.85A.5.5 0 013 14.5a.5.5 0 01.15-.35l2-2a.5.5 0 01.7.7L4.71 14H7.5a.5.5 0 010 1H4.7l1.15 1.15a.5.5 0 01-.7.7l-2-2zM2 5.75c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 5.75zm0 3c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H7.79a5.48 5.48 0 00-4.58 0h-.46A.75.75 0 012 8.75zm8.9 6.75h6.35a.75.75 0 000-1.5h-6.27a5.59 5.59 0 01-.07 1.5zm-.27-3h6.62a.75.75 0 000-1.5h-7.5c.36.45.66.95.88 1.5z"></path></svg>`,
	4,
)

function TextGrammarArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.75a.75.75 0 00-.75-.75H2.75a.75.75 0 000 1.5h14.5c.41 0 .75-.34.75-.75zm0 3a.75.75 0 00-.75-.75H2.75a.75.75 0 000 1.5h9.46a5.48 5.48 0 014.58 0h.46c.41 0 .75-.34.75-.75zM9.02 14a5.57 5.57 0 00.07 1.5H2.75a.75.75 0 010-1.5h6.27zm1.24-3a5.5 5.5 0 00-.89 1.5H2.75a.75.75 0 010-1.5h7.5zM19 14.5a4.5 4.5 0 10-9 0 4.5 4.5 0 009 0zm-2.5-2a.5.5 0 01.75.66l-.06.06-3.51 3.65a.5.5 0 01-.67.02l-.07-.07-1.34-1.65a.5.5 0 01.72-.7l.06.07 1 1.23 3.12-3.27z"></path></svg>`,
	4,
)

function TextGrammarCheckmarkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.75a.75.75 0 00-.75-.75H2.75a.75.75 0 100 1.5h14.5c.41 0 .75-.34.75-.75zm0 3a.75.75 0 00-.75-.75H2.75a.75.75 0 100 1.5h9.46a5.48 5.48 0 014.58 0h.46c.41 0 .75-.34.75-.75zM9.1 15.5H2.74a.75.75 0 010-1.5h6.27a5.57 5.57 0 00.07 1.5zm.27-3H2.75a.75.75 0 010-1.5h7.5a5.5 5.5 0 00-.88 1.5zm9.63 2a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.5.7l1.15 1.15a.5.5 0 00.7-.7l-1.14-1.15 1.14-1.15a.5.5 0 00-.7-.7l-1.15 1.14-1.15-1.14a.5.5 0 00-.7.7l1.14 1.15-1.14 1.15a.5.5 0 00.7.7l1.15-1.14z"></path></svg>`,
	4,
)

function TextGrammarDismissIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zm0 3a.75.75 0 000 1.5h9.46a5.48 5.48 0 014.58 0h.46a.75.75 0 000-1.5H2.75zm0 3h7.5a5.5 5.5 0 00-.88 1.5H2.75a.75.75 0 010-1.5zm0 3h6.27a5.57 5.57 0 00.07 1.5H2.75a.75.75 0 010-1.5zm16.25.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM14.5 12a.5.5 0 00-.5.5v2a.5.5 0 001 0v-2a.5.5 0 00-.5-.5zm0 5.13a.62.62 0 100-1.25.62.62 0 000 1.24z"></path></svg>`,
	4,
)

function TextGrammarErrorIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 5.75a.75.75 0 00-.75-.75H2.75a.75.75 0 100 1.5h14.5c.41 0 .75-.34.75-.75zm0 3a.75.75 0 00-.75-.75H2.75a.75.75 0 100 1.5h9.46a5.48 5.48 0 014.58 0h.46c.41 0 .75-.34.75-.75zM2.75 11h7.5a5.5 5.5 0 00-.88 1.5H2.75a.75.75 0 010-1.5zm0 3h6.27a5.57 5.57 0 00.07 1.5H2.75a.75.75 0 010-1.5zm9.32-2.56a2 2 0 01-1.43 2.48l-.47.12a4.7 4.7 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.73 4.73 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function TextGrammarSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 4.5a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zm0 3a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 3a.75.75 0 000 1.5h6.63a1.5 1.5 0 01-.28-1.5H2.75zm0 3h6.63L7.88 15H2.75a.75.75 0 010-1.5zM14.5 7.44a.5.5 0 00-1 0l-.1.79a2.5 2.5 0 01-2.17 2.18l-.8.1a.5.5 0 000 .99l.8.1a2.5 2.5 0 012.18 2.17l.1.8a.5.5 0 00.99 0l.1-.8a2.5 2.5 0 012.17-2.18l.8-.1a.5.5 0 000-.99l-.8-.1a2.5 2.5 0 01-2.18-2.17l-.1-.8zm-2.65 5.7c.2.2.2.52 0 .71l-4 4a.5.5 0 01-.7-.7l4-4c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function TextGrammarWandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.25 3.5a.75.75 0 010 1.5H3.75a.75.75 0 010-1.5h12.5zm-5 10a.75.75 0 010 1.5h-7.5a.75.75 0 010-1.5h7.5zM12 9.25a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h7.5c.41 0 .75-.34.75-.75zm3.72 1.47a.75.75 0 111.06 1.06l-.97.97.97.97a.75.75 0 11-1.06 1.06l-1.5-1.5a.75.75 0 010-1.06l1.5-1.5z"></path></svg>`,
	4,
)

function TextHangingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.57 3.82a.74.74 0 00-.8.1.75.75 0 00-.26.43 6.52 6.52 0 01-2.68 3.53.75.75 0 10.84 1.24 8.77 8.77 0 001.83-1.65v8.03a.75.75 0 001.5 0V4.52a.75.75 0 00-.43-.7zM3.5 4.5a.75.75 0 10-1.5 0v11a.75.75 0 001.5 0v-5h5v5a.75.75 0 001.5 0v-11a.75.75 0 10-1.5 0V9h-5V4.5z"></path></svg>`,
	4,
)

function TextHeader1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4.5a.75.75 0 00-1.5 0v11a.75.75 0 001.5 0v-5h5v5a.75.75 0 001.5 0v-11a.75.75 0 00-1.5 0V9h-5V4.5zm11.25.75A2.3 2.3 0 0012.5 7.5a.75.75 0 01-1.5 0 3.8 3.8 0 013.75-3.75c1.4 0 2.48.8 2.97 1.91.5 1.11.41 2.5-.33 3.73a6.18 6.18 0 01-1.52 1.6l-.82.62-.07.04c-.3.22-.58.43-.85.65-.9.72-1.57 1.45-1.8 2.45h4.92a.75.75 0 010 1.5H11.5a.75.75 0 01-.75-.75c0-2.1 1.23-3.4 2.44-4.37l.9-.69.07-.04.78-.59c.53-.42.93-.8 1.17-1.2.5-.85.52-1.71.24-2.34a1.68 1.68 0 00-1.6-1.02z"></path></svg>`,
	4,
)

function TextHeader2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 4.5a.75.75 0 00-1.5 0v11a.75.75 0 001.5 0v-5h5v5a.75.75 0 001.5 0v-11a.75.75 0 00-1.5 0V9h-5V4.5zm8.97 1.96c.09-.3.22-.57.47-.79.24-.2.69-.42 1.56-.42.78 0 1.26.3 1.55.65.32.37.45.82.45 1.1 0 .36-.1.92-.45 1.38-.33.42-.96.87-2.3.87a.75.75 0 000 1.5c.45 0 1.2.11 1.81.42.6.3.94.71.94 1.33 0 .84-.26 1.39-.6 1.72-.33.34-.82.53-1.4.53-.68 0-1.15-.12-1.46-.3a1.17 1.17 0 01-.55-.85.75.75 0 10-1.48.3c.17.81.6 1.44 1.26 1.84.63.38 1.41.51 2.23.51.92 0 1.8-.3 2.47-.97A3.82 3.82 0 0018 12.5c0-1.23-.7-2.03-1.48-2.51.28-.2.52-.44.72-.7.63-.8.76-1.74.76-2.29 0-.63-.25-1.43-.8-2.08a3.43 3.43 0 00-2.7-1.17 3.8 3.8 0 00-2.53.78 3.02 3.02 0 00-.94 1.51.75.75 0 001.44.42z"></path></svg>`,
	4,
)

function TextHeader3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$39 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 2.75c0-.41.34-.75.75-.75h6c.41 0 .75.34.75.75v1.5a.75.75 0 01-1.5 0V3.5H6.5v5h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5H5v-5H3.5v.75a.75.75 0 01-1.5 0v-1.5z"></path></svg>`,
	4,
)

function TextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$39.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$38 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.75c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 016 4.75zM6.75 9a.75.75 0 000 1.5h10.5a.75.75 0 000-1.5H6.75zm0 5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zm-3.28-2.22a.75.75 0 001.06-1.06l-.97-.97.97-.97a.75.75 0 00-1.06-1.06l-1.5 1.5c-.3.3-.3.77 0 1.06l1.5 1.5z"></path></svg>`,
	4,
)

function TextIndentDecreaseLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$38.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$37 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.41 0 .75.34.75.75v9.5a.75.75 0 01-1.5 0v-9.5c0-.41.34-.75.75-.75zM6.25 5.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm9 0a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm-6.22 9.47a.75.75 0 00-1.06 1.06l1.5 1.5c.3.3.77.3 1.06 0l1.5-1.5a.75.75 0 10-1.06-1.06l-.97.97-.97-.97z"></path></svg>`,
	4,
)

function TextIndentDecreaseRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$37.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$36 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.97 4.78a.75.75 0 101.06-1.06l-1.5-1.5a.75.75 0 00-1.06 0l-1.5 1.5a.75.75 0 001.06 1.06l.97-.97.97.97zM6.25 7.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm9 0a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zM10 7c.41 0 .75.34.75.75v9.5a.75.75 0 01-1.5 0v-9.5c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function TextIndentDecreaseRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$36.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$35 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.25 4a.75.75 0 010 1.5h-7.5a.75.75 0 010-1.5h7.5zM14 9.75a.75.75 0 00-.75-.75H2.75a.75.75 0 000 1.5h10.5c.41 0 .75-.34.75-.75zm0 5a.75.75 0 00-.75-.75h-5.5a.75.75 0 000 1.5h5.5c.41 0 .75-.34.75-.75zm1.22-7.03c.3-.3.77-.3 1.06 0l1.5 1.5c.3.3.3.77 0 1.06l-1.5 1.5a.75.75 0 11-1.06-1.06l.97-.97-.97-.97a.75.75 0 010-1.06z"></path></svg>`,
	4,
)

function TextIndentDecreaseRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$35.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$34 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.75c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 016 4.75zM6.75 9a.75.75 0 000 1.5h10.5a.75.75 0 000-1.5H6.75zm0 5a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5zM3.03 7.72a.75.75 0 00-1.06 1.06l.97.97-.97.97a.75.75 0 101.06 1.06l1.5-1.5c.3-.3.3-.77 0-1.06l-1.5-1.5z"></path></svg>`,
	4,
)

function TextIndentIncreaseLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$34.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$33 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.41 0 .75.34.75.75v9.5a.75.75 0 01-1.5 0v-9.5c0-.41.34-.75.75-.75zM6.25 5.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm9 0a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm-4.28 12.03a.75.75 0 101.06-1.06l-1.5-1.5a.75.75 0 00-1.06 0l-1.5 1.5a.75.75 0 101.06 1.06l.97-.97.97.97z"></path></svg>`,
	4,
)

function TextIndentIncreaseRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$33.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$32 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.03 2.22a.75.75 0 00-1.06 1.06l1.5 1.5c.3.3.77.3 1.06 0l1.5-1.5a.75.75 0 00-1.06-1.06l-.97.97-.97-.97zM6.25 7.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm9 0a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5zm-6 9.5v-9.5a.75.75 0 011.5 0v9.5a.75.75 0 01-1.5 0z"></path></svg>`,
	4,
)

function TextIndentIncreaseRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$32.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$31 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 4.75a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h7.5c.41 0 .75-.34.75-.75zM13.25 9a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5h10.5zm0 5a.75.75 0 010 1.5h-5.5a.75.75 0 010-1.5h5.5zm3.72-6.28a.75.75 0 111.06 1.06l-.97.97.97.97a.75.75 0 11-1.06 1.06l-1.5-1.5a.75.75 0 010-1.06l1.5-1.5z"></path></svg>`,
	4,
)

function TextIndentIncreaseRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$31.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$30 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 3.25c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-3.23L8.59 15.5h2.66a.75.75 0 010 1.5h-7.5a.75.75 0 010-1.5h3.23L11.41 4H8.75A.75.75 0 018 3.25z"></path></svg>`,
	4,
)

function TextItalicIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$30.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.78 4.22a.75.75 0 01-1.06 1.06L16 4.56v3.69a.75.75 0 01-1.5 0V4.56l-.72.72a.75.75 0 11-1.06-1.06l2-2c.3-.3.77-.3 1.06 0l2 2zM3 4.25c0-.41.34-.75.75-.75h5.5a.75.75 0 010 1.5h-5.5A.75.75 0 013 4.25zM15.25 11c.41 0 .75.34.75.75v3.69l.72-.72a.75.75 0 111.06 1.06l-2 2c-.3.3-.77.3-1.06 0l-2-2a.75.75 0 111.06-1.06l.72.72v-3.69c0-.41.34-.75.75-.75zM3 9.25c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 013 9.25zm.75 4.25a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5z"></path></svg>`,
	4,
)

function TextLineSpacingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.25 2c.3 0 .58.18.7.47L14.04 15a2.24 2.24 0 00-1.69-.17l-.95-2.34H5.08l-1.64 4.03a.75.75 0 11-1.39-.56l5.5-13.5a.75.75 0 01.7-.47zM13 15.75c.63 0 1.15.46 1.24 1.07l.01.18A1.25 1.25 0 1113 15.75zM5.7 11h5.1L8.25 4.74 5.7 11zm4.55 6a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM17 18.25a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"></path></svg>`,
	4,
)

function TextMoreIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.97 2.98c.52.25.91.74 1.17 1.46a.75.75 0 01-1.4.51c-.18-.47-.35-.59-.44-.63-.12-.06-.27-.07-.58-.07a.69.69 0 00-.5.17c-.12.1-.22.27-.3.5a2.82 2.82 0 00-.17.88c0 .41 0 .9.16 1.3.08.18.17.32.3.42.11.1.3.2.6.23.08 0 .28 0 .48-.07a.8.8 0 00.46-.45.75.75 0 011.37.61c-.63 1.42-2.03 1.45-2.48 1.4a2.58 2.58 0 01-1.4-.56c-.35-.3-.58-.68-.72-1.04-.27-.68-.27-1.43-.27-1.8v-.08a3.36 3.36 0 01.03-.4c.03-.26.1-.61.23-.97.14-.36.35-.77.72-1.09.37-.34.87-.55 1.49-.55h.03c.28 0 .75 0 1.22.23zM4.7 2.75c.31 0 .59.2.7.5l1.77 5a.75.75 0 01-1.42.5l-.09-.25h-2.1l-.11.27a.75.75 0 11-1.4-.54l1.94-5c.1-.3.4-.48.7-.48zm-.04 2.9L4.14 7h1l-.48-1.34zm.64 5.1c.39.03.7.35.7.75v5a.75.75 0 01-1.5 0v-2.7l-.2.14a.75.75 0 11-.84-1.25c.56-.37.97-.96 1.05-1.35a.75.75 0 01.79-.59zm4.54 1.5c-.31 0-.59.29-.59.61a.75.75 0 11-1.5 0 2.12 2.12 0 013.88-1.17c.42.64.42 1.46-.04 2.24-.23.4-.55.69-.84.92l-.44.32-.06.05-.33.23c-.14.1-.25.2-.35.3h1.62a.75.75 0 010 1.5H8.55a.73.73 0 01-.05 0 .75.75 0 01-.75-.75c0-1.16.69-1.8 1.27-2.25L9.4 14l.06-.04.37-.28c.23-.18.38-.34.48-.5.21-.36.14-.57.08-.66a.64.64 0 00-.54-.26zm4.88.37a.49.49 0 01.14-.23c.07-.06.2-.14.49-.14.49 0 .6.3.6.39 0 .17-.04.31-.12.4-.04.06-.19.21-.7.21a.75.75 0 000 1.5c.2 0 .45.03.64.11.08.04.12.08.13.1.02.02.04.06.04.18 0 .33-.1.44-.15.49-.08.06-.22.12-.44.12-.26 0-.39-.05-.44-.08-.05-.03-.13-.1-.2-.31a.75.75 0 00-1.42.47 2 2 0 00.81 1.1c.4.25.83.32 1.25.32.45 0 .98-.11 1.4-.48.46-.38.7-.95.7-1.63a1.77 1.77 0 00-.43-1.18c.36-.47.42-1 .42-1.32 0-.93-.8-1.89-2.1-1.89-.62 0-1.11.2-1.47.52-.34.3-.51.66-.6.93a.75.75 0 101.45.42zM8 3.5v5a.75.75 0 00.87.74v.01h1.63c.24 0 .73-.04 1.2-.3.52-.3.92-.87.92-1.7 0-.43-.1-.8-.28-1.12a1.7 1.7 0 00-.29-.35c.15-.27.24-.62.24-1.02 0-.41-.08-.77-.25-1.08a1.69 1.69 0 00-.66-.67c-.46-.26-.95-.26-1.12-.26H8.75A.75.75 0 008 3.5zm2.5 4.25h-1v-1H10.44c.19 0 .38.01.51.08.05.02.08.05.1.08.03.04.07.13.07.33 0 .17-.04.26-.06.3a.3.3 0 01-.12.1.96.96 0 01-.44.11zm-.88-2.5H9.5v-1h.75c.16 0 .3.01.4.07a.2.2 0 01.08.08c.02.04.06.15.06.36 0 .18-.03.27-.06.3a.25.25 0 01-.1.1.76.76 0 01-.35.09h-.66z"></path></svg>`,
	4,
)

function TextNumberFormatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 1.5a.5.5 0 00-.39-.49.5.5 0 00-.56.27l-.07.12a2.96 2.96 0 01-1.2 1.15.5.5 0 10.44.9c.3-.15.56-.34.78-.53V5.5a.5.5 0 001 0v-4zM8.75 4a.75.75 0 100 1.5h7.5a.75.75 0 000-1.5h-7.5zm0 5a.75.75 0 100 1.5h7.5a.75.75 0 000-1.5h-7.5zM8 14.75c0-.41.34-.75.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zm-5.35-7.1a.5.5 0 00.7.7l.05-.04.2-.12C3.76 8.09 4 8 4.3 8c.23 0 .41.06.53.15.1.07.16.17.16.35a.5.5 0 01-.21.44c-.15.12-.35.22-.62.35l-.14.08c-.32.15-.7.36-1 .7-.33.35-.53.81-.53 1.43 0 .28.22.5.5.5h2.5a.5.5 0 000-1H3.59c.04-.1.1-.2.17-.27.17-.18.4-.31.71-.47l.13-.06c.26-.13.58-.29.83-.5.33-.27.57-.65.57-1.2 0-.5-.22-.9-.57-1.15A1.92 1.92 0 004.33 7h-.01a2.5 2.5 0 00-1.66.63v.01h-.01zm.01-.02l-.01.02s.1-.1.01-.02zm1.09 7.87c0-.28.22-.5.5-.5.34 0 .53-.1.63-.18.1-.09.13-.2.13-.3-.01-.2-.19-.52-.76-.52-.41 0-.63.1-.72.17a.42.42 0 00-.1.07.5.5 0 01-.88-.46v-.01l.02-.02a.8.8 0 01.1-.15c.07-.08.17-.17.3-.27.28-.18.7-.33 1.28-.33 1.03 0 1.73.67 1.76 1.48.01.37-.12.74-.4 1.02.28.28.41.65.4 1.02-.03.8-.73 1.48-1.76 1.48-.59 0-1-.15-1.28-.33a1.4 1.4 0 01-.4-.42l-.01-.01v-.01a.5.5 0 01.87-.48l.1.08c.1.07.3.17.72.17.57 0 .75-.33.76-.52 0-.1-.04-.21-.13-.3-.1-.08-.29-.18-.63-.18a.5.5 0 01-.5-.5zm-.32-1.25l.02-.03v.01l-.01.01v.01z"></path></svg>`,
	4,
)

function TextNumberListLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 11a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5c0 .41-.34.75-.75.75zm5 0a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5c0 .41-.34.75-.75.75zm5 0a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5c0 .41-.34.75-.75.75zM1.01 14.38A.5.5 0 011.5 14h4a.5.5 0 110 1H2.92c.2.22.38.48.53.78a.5.5 0 11-.9.44 2.96 2.96 0 00-1.15-1.2 2.07 2.07 0 00-.12-.07.5.5 0 01-.27-.56zm7.34 1.97a.5.5 0 01-.7 0h-.01v-.01a1.45 1.45 0 01-.11-.12A2.5 2.5 0 017 14.68c0-.38.1-.79.35-1.11A1.4 1.4 0 018.5 13c.55 0 .93.24 1.2.57.21.25.37.57.5.83l.06.13c.16.3.3.54.47.7.08.08.16.14.27.18V13.5a.5.5 0 111 0V16a.5.5 0 01-.5.5c-.62 0-1.08-.2-1.44-.52a3.32 3.32 0 01-.77-1.15 3.18 3.18 0 00-.35-.62.5.5 0 00-.44-.21c-.18 0-.28.07-.35.16a.93.93 0 00-.15.53 1.5 1.5 0 00.35.95v.01c.2.2.2.5 0 .7zm6.65-1.6a.5.5 0 101 0c0-.34.1-.53.18-.63.09-.1.2-.13.3-.13.2.01.52.19.52.76 0 .41-.1.63-.17.72a.42.42 0 01-.07.1.5.5 0 00.46.88h.01l.02-.02.04-.02.1-.08c.09-.07.18-.17.28-.3.18-.28.33-.7.33-1.28 0-1.03-.67-1.73-1.48-1.76-.37-.01-.74.12-1.02.4a1.37 1.37 0 00-1.02-.4c-.8.03-1.48.73-1.48 1.76 0 .59.15 1 .33 1.28a1.4 1.4 0 00.42.4l.01.01h.01a.5.5 0 00.48-.87.42.42 0 01-.08-.1c-.07-.1-.17-.3-.17-.72 0-.57.33-.75.52-.76.1 0 .21.04.3.13.08.1.18.29.18.63zm-.75.82l-.02-.01h.02z"></path></svg>`,
	4,
)

function TextNumberListRotate270Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18.99 4.61a.5.5 0 01-.49.39h-4a.5.5 0 010-1h2.58c-.2-.22-.38-.48-.53-.78a.5.5 0 11.9-.44 2.96 2.96 0 001.15 1.2l.12.07c.2.1.32.34.27.56zm-7.34-1.96c.2-.2.5-.2.7 0h.01v.01a1.3 1.3 0 01.11.12A2.44 2.44 0 0113 4.32c0 .38-.1.79-.35 1.11A1.4 1.4 0 0111.5 6a1.5 1.5 0 01-1.2-.57 4.2 4.2 0 01-.56-.96c-.16-.3-.3-.54-.47-.7A.93.93 0 009 3.58V5.5a.5.5 0 11-1 0V3c0-.28.22-.5.5-.5.62 0 1.08.2 1.44.52a3.32 3.32 0 01.77 1.15c.13.27.23.47.35.62a.5.5 0 00.44.21c.18 0 .28-.07.35-.16.09-.12.15-.3.15-.53a1.5 1.5 0 00-.35-.95v-.01a.5.5 0 010-.7zM5 4.25a.5.5 0 00-1 0c0 .34-.1.53-.18.63-.09.1-.2.13-.3.13C3.32 5 3 4.82 3 4.25c0-.41.1-.63.17-.72a.41.41 0 01.07-.1.5.5 0 00-.46-.88h-.01l-.02.02a.83.83 0 00-.15.1 1.4 1.4 0 00-.27.3c-.18.28-.33.7-.33 1.28 0 1.03.67 1.73 1.48 1.76.37.01.74-.12 1.02-.4.28.28.65.41 1.02.4C6.32 5.98 7 5.28 7 4.25c0-.59-.15-1-.33-1.28a1.4 1.4 0 00-.42-.4l-.01-.01h-.01a.5.5 0 00-.48.87l.08.1c.07.1.17.3.17.72 0 .57-.33.75-.52.76a.37.37 0 01-.3-.13C5.1 4.78 5 4.59 5 4.25zm.75-.82l.02.01h-.02zM5.25 8c.41 0 .75.34.75.75v7.5a.75.75 0 01-1.5 0v-7.5c0-.41.34-.75.75-.75zm5 0c.41 0 .75.34.75.75v7.5a.75.75 0 01-1.5 0v-7.5c0-.41.34-.75.75-.75zm5 0c.41 0 .75.34.75.75v7.5a.75.75 0 01-1.5 0v-7.5c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function TextNumberListRotate90Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 1.5a.5.5 0 00-.39-.49.5.5 0 00-.56.27l-.07.12a2.96 2.96 0 01-1.2 1.15.5.5 0 10.44.9c.3-.15.56-.34.78-.53V5.5a.5.5 0 001 0v-4zm-2.35 6.15a.5.5 0 00.7.7l.05-.04.2-.12c.17-.1.41-.19.71-.19.23 0 .41.06.53.15.1.07.16.17.16.35a.5.5 0 01-.21.44 3.18 3.18 0 01-.76.43c-.32.15-.7.36-1 .7-.33.35-.53.81-.53 1.43 0 .28.22.5.5.5h2.5a.5.5 0 000-1h-1.91c.04-.1.1-.2.17-.27a2.38 2.38 0 01.83-.53c.27-.13.59-.29.84-.5.33-.27.57-.65.57-1.2 0-.5-.22-.9-.57-1.15a1.92 1.92 0 00-1.1-.35h-.01a2.5 2.5 0 00-1.66.63v.01h-.01zm1.1 7.85c0-.28.22-.5.5-.5.34 0 .53-.1.63-.18.1-.09.13-.2.13-.3-.01-.2-.19-.52-.76-.52-.41 0-.63.1-.72.17a.42.42 0 00-.1.07l.02-.02v.01l-.01.01v.01a.5.5 0 01-.89-.47v-.01l.02-.02.02-.04.08-.1c.07-.09.17-.18.3-.28.28-.18.7-.33 1.28-.33 1.03 0 1.73.67 1.76 1.48.01.37-.12.74-.4 1.02.28.28.41.65.4 1.02-.03.8-.73 1.48-1.76 1.48-.59 0-1-.15-1.28-.33a1.4 1.4 0 01-.4-.42l-.01-.01v-.01a.5.5 0 01.87-.48l.1.08c.1.07.3.17.72.17.57 0 .75-.33.76-.52 0-.1-.04-.21-.13-.3-.1-.08-.29-.18-.63-.18a.5.5 0 01-.5-.5zM3.75 4a.75.75 0 100 1.5h7.5a.75.75 0 000-1.5h-7.5zm0 5a.75.75 0 100 1.5h7.5a.75.75 0 000-1.5h-7.5zm0 5a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5h-7.5z"></path></svg>`,
	4,
)

function TextNumberListRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 3a4 4 0 100 8H13v6.5a.5.5 0 001 0V4h1v13.5a.5.5 0 001 0V4h.5a.5.5 0 000-1h-5zM3.15 5.65c.2-.2.5-.2.7 0l2 2c.2.2.2.5 0 .7l-2 2a.5.5 0 01-.7-.7L4.79 8 3.15 6.35a.5.5 0 010-.7zm2.7 6a.5.5 0 00-.7 0l-2 2a.5.5 0 000 .7l2 2a.5.5 0 00.7-.7L4.21 14l1.64-1.65a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function TextParagraphDirectionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 3a4 4 0 100 8H13v6.5a.5.5 0 001 0V4h1v13.5a.5.5 0 001 0V4h.5a.5.5 0 000-1h-5zM5.15 7.65a.5.5 0 11.7.7L4.21 10l1.64 1.65a.5.5 0 01-.7.7l-2-2a.5.5 0 010-.7l2-2z"></path></svg>`,
	4,
)

function TextParagraphDirectionLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 3a4 4 0 100 8H13v6.5a.5.5 0 001 0V4h1v13.5a.5.5 0 001 0V4h.5a.5.5 0 000-1h-5zM3.85 7.65a.5.5 0 10-.7.7L4.79 10l-1.64 1.65a.5.5 0 00.7.7l2-2a.5.5 0 000-.7l-2-2z"></path></svg>`,
	4,
)

function TextParagraphDirectionRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.25 2c.41 0 .75.34.75.75v2.5A2.75 2.75 0 0115.25 8h-3.8l1.36 1.5a.75.75 0 01-1.12 1L9.2 7.75a.75.75 0 010-1L11.7 4a.75.75 0 011.12 1l-1.36 1.5h3.8c.69 0 1.25-.56 1.25-1.25v-2.5c0-.41.34-.75.75-.75zM8.3 9.5a.75.75 0 10-1.1 1L8.55 12h-5.8a.75.75 0 000 1.5h5.8L7.2 15a.75.75 0 001.1 1l2.5-2.75a.75.75 0 000-1L8.3 9.5z"></path></svg>`,
	4,
)

function TextParagraphIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.25 4.75a.75.75 0 00-1.5 0v1.86l-1.77-.58a.75.75 0 10-.46 1.43l1.77.58-1.1 1.5a.75.75 0 001.22.88l1.09-1.5 1.09 1.5a.75.75 0 101.21-.88l-1.09-1.5 1.77-.58a.75.75 0 10-.46-1.43l-1.77.58V4.75zM6.5 16a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path></svg>`,
	4,
)

function TextPeriodAsteriskIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.5c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zm5 5a2.25 2.25 0 014.5 0v5a.75.75 0 001.5 0v-5a3.75 3.75 0 10-7.5 0v5a.75.75 0 001.5 0v-5zm8.75 1.75h-1.75v-1.5h1.75a.75.75 0 010 1.5zm-13-1.5h1.75v1.5H3.5a.75.75 0 010-1.5zm0 6a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zm5.25-6h2.5v1.5h-2.5v-1.5z"></path></svg>`,
	4,
)

function TextPositionBehindIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.5c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zM10 6.25c-.98 0-1.81.63-2.12 1.5H6.33a3.75 3.75 0 017.35 0h-1.56A2.25 2.25 0 0010 6.25zm-3.75 5h1.5v2.25a.75.75 0 01-1.5 0v-2.25zm7.5 0h-1.5v2.25a.75.75 0 001.5 0v-2.25zM3.5 14.75a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zm0-6a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13z"></path></svg>`,
	4,
)

function TextPositionFrontIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2.75a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zm0 12a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zm7.25-2.25c0-.41.34-.75.75-.75h5a.75.75 0 010 1.5h-5a.75.75 0 01-.75-.75zm-6.5-4a2.25 2.25 0 014.5 0v5a.75.75 0 001.5 0v-5a3.75 3.75 0 10-7.5 0v5a.75.75 0 001.5 0v-5z"></path></svg>`,
	4,
)

function TextPositionLineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.5c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zm0 12c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zm.75-9.75a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zm11.25.75c0-.41.34-.75.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zM3.5 8.75a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zm11.25.75c0-.41.34-.75.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zM3.5 11.75a.75.75 0 000 1.5h1a.75.75 0 000-1.5h-1zm11.25.75c0-.41.34-.75.75-.75h1a.75.75 0 010 1.5h-1a.75.75 0 01-.75-.75zm-7-4a2.25 2.25 0 014.5 0v5a.75.75 0 001.5 0v-5a3.75 3.75 0 10-7.5 0v5a.75.75 0 001.5 0v-5z"></path></svg>`,
	4,
)

function TextPositionSquareIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2.75a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zM7.75 8.5a2.25 2.25 0 014.5 0v5a.75.75 0 001.5 0v-5a3.75 3.75 0 10-7.5 0v5a.75.75 0 001.5 0v-5zm-5 7c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zm13.75-3.75h-1.75v1.5h1.75a.75.75 0 000-1.5zm-13 0h1.75v1.5H3.5a.75.75 0 010-1.5zm5.25-3h2.5v1.5h-2.5v-1.5zm0 3h2.5v1.5h-2.5v-1.5zm-3.5-3v1.5H3.5a.75.75 0 010-1.5h1.75zm11.25 0h-1.75v1.5h1.75a.75.75 0 000-1.5zm-2.63-3c.32.45.57.95.71 1.5h1.92a.75.75 0 000-1.5h-2.63zm-7.74 0c-.32.45-.57.95-.71 1.5H3.5a.75.75 0 010-1.5h2.63z"></path></svg>`,
	4,
)

function TextPositionThroughIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 2.75a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zm0 12a.75.75 0 000 1.5h13a.75.75 0 000-1.5h-13zm6.5-8.5c-1.24 0-2.25 1-2.25 2.25v5a.75.75 0 01-1.5 0v-5a3.75 3.75 0 117.5 0v5a.75.75 0 01-1.5 0v-5c0-1.24-1-2.25-2.25-2.25zm-6.5 5.5h1.75v1.5H3.5a.75.75 0 010-1.5zm13 1.5h-1.75v-1.5h1.75a.75.75 0 010 1.5zm-1.75-4.5v1.5h1.75a.75.75 0 000-1.5h-1.75zm-8.62-3c-.32.45-.57.95-.71 1.5H3.5a.75.75 0 010-1.5h2.63zm10.37 1.5h-1.92a4.73 4.73 0 00-.7-1.5h2.62a.75.75 0 010 1.5zM5.25 8.75v1.5H3.5a.75.75 0 010-1.5h1.75z"></path></svg>`,
	4,
)

function TextPositionTightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.75 3.5c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zm0 12c0-.41.34-.75.75-.75h13a.75.75 0 010 1.5h-13a.75.75 0 01-.75-.75zm5-7a2.25 2.25 0 014.5 0v5a.75.75 0 001.5 0v-5a3.75 3.75 0 10-7.5 0v5a.75.75 0 001.5 0v-5z"></path></svg>`,
	4,
)

function TextPositionTopBottomIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.97 2.98c.52.25.91.74 1.17 1.46a.75.75 0 11-1.4.51c-.18-.47-.35-.59-.44-.63-.12-.06-.27-.07-.58-.07a.69.69 0 00-.5.17c-.12.1-.22.27-.3.5a2.81 2.81 0 00-.17.88c0 .41 0 .9.16 1.3.08.18.17.32.3.42.11.1.3.2.6.23.08 0 .28 0 .48-.07a.8.8 0 00.46-.45.75.75 0 011.37.61c-.63 1.42-2.03 1.45-2.48 1.4a2.58 2.58 0 01-1.4-.56c-.35-.3-.58-.68-.72-1.04a5 5 0 01-.27-1.8v-.08a3.36 3.36 0 01.03-.4c.03-.26.1-.61.23-.97.14-.36.35-.77.72-1.09.37-.34.87-.55 1.49-.55h.03c.28 0 .75 0 1.22.23zm-11.58.27A.75.75 0 004 3.23l-1.94 5a.75.75 0 101.4.54l.1-.27h2.11l.1.25a.75.75 0 001.4-.5l-1.77-5zM5.13 7h-1l.53-1.34L5.13 7zM8 3.5v5a.75.75 0 00.87.74v.01h1.63c.24 0 .73-.04 1.2-.3.52-.3.92-.87.92-1.7 0-.43-.1-.8-.28-1.12a1.7 1.7 0 00-.29-.35c.15-.27.24-.62.24-1.02 0-.41-.08-.77-.25-1.08a1.69 1.69 0 00-.66-.67c-.46-.26-.95-.26-1.12-.26H8.75A.75.75 0 008 3.5zm2.5 4.25h-1v-1H10.44c.19 0 .38.01.51.08.05.02.08.05.1.08.03.04.07.13.07.33 0 .17-.04.26-.06.3a.3.3 0 01-.12.1.96.96 0 01-.44.11zm-.88-2.5H9.5v-1h.75c.16 0 .3.01.4.07a.2.2 0 01.08.08c.02.04.06.15.06.36 0 .18-.03.27-.06.3a.25.25 0 01-.1.1.76.76 0 01-.35.09h-.66zm4.32 5.72a.75.75 0 00-1.16-.94l-3.56 4.35-1.69-1.68a.75.75 0 00-1.06 1.06l2.27 2.27a.75.75 0 001.11-.06l4.1-5z"></path></svg>`,
	4,
)

function TextProofingToolsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 6.5a2.5 2.5 0 10-1.17 2.12 8.8 8.8 0 01-.96 2.76 12.06 12.06 0 01-2.22 2.77.5.5 0 00.7.7h.02c.74-.75 1.66-1.67 2.38-2.98A10.83 10.83 0 009 6.5zm5.83 2.12A2.5 2.5 0 1116 6.5c0 2.33-.52 4.04-1.25 5.37-.72 1.3-1.64 2.23-2.38 2.97l-.02.01a.5.5 0 01-.7-.7c.75-.76 1.57-1.59 2.22-2.77a8.8 8.8 0 00.96-2.76z"></path></svg>`,
	4,
)

function TextQuoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.7 2.5a.75.75 0 00-1.4 0L3.03 9a.75.75 0 001.42.5l.34-1h2.4l.34 1A.75.75 0 008.96 9L6.7 2.5zM6 5.04L6.68 7H5.32L6 5.04zM4 11a.75.75 0 000 1.5h2.53l-3.14 4.3A.75.75 0 004 18h4a.75.75 0 000-1.5H5.47l3.14-4.3A.75.75 0 008 11H4zm10.25-9c.41 0 .75.34.75.75v12.57l1.45-1.58a.75.75 0 011.1 1.02l-2.75 3a.75.75 0 01-1.1 0l-2.75-3a.75.75 0 011.1-1.02l1.45 1.58V2.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function TextSortAscendingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a.75.75 0 100 1.5h2.53L3.39 7.8A.75.75 0 004 9h4a.75.75 0 000-1.5H5.47l3.14-4.3A.75.75 0 008 2H4zm2.7 8.5a.75.75 0 00-1.4 0L3.03 17a.75.75 0 101.42.5l.34-1h2.4l.34 1a.75.75 0 101.42-.5L6.7 10.5zM6 13.04L6.68 15H5.32L6 13.04zM14.25 2c.41 0 .75.34.75.75v12.57l1.45-1.58a.75.75 0 011.1 1.02l-2.75 3a.75.75 0 01-1.1 0l-2.75-3a.75.75 0 011.1-1.02l1.45 1.58V2.75c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function TextSortDescendingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.25 3.7c1-.7 2.33-1.2 3.75-1.2a6.4 6.4 0 015.1 2.3.75.75 0 01-1.2.9A4.92 4.92 0 0010 4c-1.08 0-2.12.38-2.88.92C6.33 5.5 6 6.1 6 6.5c0 .78.38 1.29 1.11 1.71.18.1.38.2.59.29H5.16a3.16 3.16 0 01-.66-2c0-1.1.8-2.11 1.75-2.8zM16.5 10a.75.75 0 010 1.5h-1.66c.4.52.66 1.18.66 2 0 1.36-.87 2.38-1.91 3.01a7.06 7.06 0 01-3.59.99 7.52 7.52 0 01-3-.5 4.8 4.8 0 01-2.12-1.83.75.75 0 111.24-.84c.43.65.9 1.05 1.48 1.3.6.25 1.35.37 2.4.37.97 0 2.02-.28 2.8-.76.8-.5 1.2-1.1 1.2-1.74 0-.78-.38-1.29-1.11-1.71a5.4 5.4 0 00-.59-.29H3.5a.75.75 0 010-1.5h13z"></path></svg>`,
	4,
)

function TextStrikethroughIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.78 4.99A.75.75 0 0012.64 4L8.5 8.85 4.35 4A.75.75 0 103.22 5L7.52 10l-4.3 5.01a.75.75 0 001.13.98l4.15-4.84 3.85 4.5c.13-.55.38-.99.66-1.34-.35-.24-.6-.6-.71-1.03L9.49 10l4.3-5.01zm1.55 7.26c-.3 0-.58.3-.58.61a.75.75 0 01-1.5 0 2.12 2.12 0 013.88-1.17c.42.64.42 1.46-.04 2.24-.23.4-.55.69-.84.92l-.44.32-.06.05-.33.23c-.14.1-.25.2-.35.3h1.62a.75.75 0 010 1.5h-2.64a.73.73 0 01-.05 0 .75.75 0 01-.75-.75c0-1.16.69-1.8 1.27-2.25l.37-.26.06-.04.37-.28c.23-.18.38-.34.48-.5.21-.36.14-.57.08-.66a.64.64 0 00-.55-.26z"></path></svg>`,
	4,
)

function TextSubscriptIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.33 3.25c-.3 0-.58.29-.58.61a.75.75 0 01-1.5 0 2.12 2.12 0 013.88-1.17c.42.64.42 1.46-.04 2.24-.23.4-.55.69-.84.92l-.44.32-.06.05-.33.23c-.14.1-.25.2-.35.3h1.62a.75.75 0 010 1.5h-2.64a.76.76 0 01-.05 0 .75.75 0 01-.75-.75c0-1.16.69-1.8 1.27-2.25L14.9 5l.06-.04.37-.28c.23-.18.38-.34.48-.5.21-.36.14-.57.08-.66a.64.64 0 00-.55-.26zM9.5 10l2.85-3.33c.13-.56.39-1 .67-1.36a1.75 1.75 0 01-.68-.93L8.5 8.85 4.35 4A.75.75 0 103.22 5L7.52 10l-4.3 5.01a.75.75 0 101.13.98l4.15-4.84L12.64 16a.75.75 0 101.14-.98L9.48 10z"></path></svg>`,
	4,
)

function TextSuperscriptIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 3.75c0-.41.34-.75.75-.75h10c.41 0 .75.34.75.75v1.5a.75.75 0 01-1.5 0V4.5h-3.5v11h1.25a.75.75 0 010 1.5h-4a.75.75 0 010-1.5H9v-11H5.5v.75a.75.75 0 01-1.5 0v-1.5z"></path></svg>`,
	4,
)

function TextTIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 3.75a.75.75 0 00-1.5 0V9c0 1.37.34 2.74 1.16 3.78A4.67 4.67 0 0010 14.5c1.7 0 3-.65 3.84-1.72A6.09 6.09 0 0015 9V3.75a.75.75 0 00-1.5 0V9a4.6 4.6 0 01-.84 2.85C12.13 12.53 11.3 13 10 13c-1.3 0-2.13-.47-2.66-1.15A4.6 4.6 0 016.5 9V3.75zM5.75 15.5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5z"></path></svg>`,
	4,
)

function TextUnderlineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 15.75v.5A1.75 1.75 0 0117.25 18H2.75A1.75 1.75 0 011 16.25v-.5a.75.75 0 111.5 0v.5a.25.25 0 00.25.25h14.5a.25.25 0 00.25-.25v-.5a.75.75 0 111.5 0zM3.83 10.38a4.17 4.17 0 012.53-.61c.37.02.74.07 1.1.16a.97.97 0 00-.55-.76c-.4-.18-.83-.26-1.26-.23-.37 0-.73.08-1.07.23a.75.75 0 11-.67-1.34c.53-.25 1.1-.38 1.69-.4.69-.03 1.37.1 1.99.4A2.69 2.69 0 019 10.46v4.04a.75.75 0 11-1.5.06 3.73 3.73 0 01-2.95.56 2.61 2.61 0 01-.72-4.74zm1.11 3.3a2.92 2.92 0 002.56-1V11.5a4.5 4.5 0 00-1.22-.23 2.68 2.68 0 00-1.62.36 1.11 1.11 0 00.28 2.05zm6.06.82V4a.75.75 0 111.5 0v4.66A2.7 2.7 0 0114.25 8a3.28 3.28 0 013 3.5 3.28 3.28 0 01-3 3.5c-.64 0-1.26-.24-1.75-.66v.16a.75.75 0 11-1.5 0zm1.75-3a1.8 1.8 0 001.5 2 1.8 1.8 0 001.5-2 1.8 1.8 0 00-1.5-2 1.8 1.8 0 00-1.5 2z"></path></svg>`,
	4,
)

function TextWholeWordIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.98 14.54c-.26.27-.55.51-.86.7a.5.5 0 11-.54-.83 3.33 3.33 0 001.4-1.79.5.5 0 011 .11v5.77a.5.5 0 01-1 0v-3.96zm4.6-1.3c-.62 0-1.09.53-1.09 1.06a.5.5 0 01-1 0 2.1 2.1 0 012.1-2.07c.72 0 1.42.33 1.8.91.42.61.44 1.41-.05 2.21-.24.4-.58.71-.92.97l-.5.35-.07.05-.4.28c-.43.32-.74.6-.88 1h2.59a.5.5 0 010 1H6a.5.5 0 01-.5-.5c0-1.17.7-1.82 1.36-2.3l.43-.3.07-.05.46-.33c.29-.22.51-.44.67-.69.3-.51.24-.89.08-1.13a1.18 1.18 0 00-.98-.47zm4.48.25a.92.92 0 00-.28.43.5.5 0 11-.96-.28c.08-.27.25-.62.6-.9.34-.3.83-.5 1.49-.5 1.32 0 2.1.93 2.1 1.8 0 .35-.07.87-.43 1.32a1.8 1.8 0 01-.22.22 1.65 1.65 0 01.65 1.34 2 2 0 01-.68 1.62c-.42.35-.95.46-1.42.46-.45 0-.9-.07-1.27-.3-.39-.24-.65-.6-.81-1.09a.5.5 0 01.94-.32c.1.3.25.46.4.55.15.1.38.16.74.16.33 0 .6-.08.78-.23.17-.14.32-.38.32-.84 0-.2-.05-.32-.11-.41a.78.78 0 00-.32-.24c-.3-.13-.68-.16-.94-.16a.5.5 0 010-1c.71 0 1.02-.22 1.16-.4.16-.19.21-.45.21-.68 0-.28-.29-.8-1.1-.8-.44 0-.7.12-.85.25zM2 9.25c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 9.25zm0-5c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.25zm14 10c0-.41.34-.75.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function TextWordCountIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.25c0-.41.34-.75.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.25zm0 5c0-.41.34-.75.75-.75h13a3.25 3.25 0 010 6.5h-3.4l.23.27a.75.75 0 01-1.16.96l-1.25-1.5a.75.75 0 010-.96l1.25-1.5a.75.75 0 011.16.96l-.23.27h3.4a1.75 1.75 0 100-3.5h-13A.75.75 0 012 9.25zm0 5c0-.41.34-.75.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z"></path></svg>`,
	4,
)

function TextWrapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.7 2.64A4 4 0 0110 2a3.56 3.56 0 013.52 2.1c.33.7.43 1.44.46 1.92.65.05 1.31.2 1.86.56C16.56 7.06 17 7.85 17 9c0 1.17-.44 1.97-1.16 2.44-.69.45-1.56.56-2.34.56h-7c-.79 0-1.66-.13-2.34-.58C3.44 10.94 3 10.15 3 9s.44-1.94 1.16-2.42c.55-.36 1.2-.51 1.86-.56.03-.48.13-1.21.46-1.92.25-.53.63-1.06 1.21-1.46zM10 15a2 2 0 11-4 0 2 2 0 014 0zm-5 1.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"></path></svg>`,
	4,
)

function ThinkingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.48 18.3c-.8.83-2.09.38-2.43-.6-.28-.8-.64-1.77-1-2.48C8 13.1 7.38 11.9 5.67 10.37c-.23-.2-.52-.36-.84-.49-1.13-.44-2.2-1.61-1.91-3l.35-1.77a2.5 2.5 0 011.8-1.92l5.6-1.53a4.5 4.5 0 015.6 3.54l.69 3.76A3 3 0 0114 12.5h-.89l.01.05c.08.41.18.97.24 1.58.07.62.1 1.29.05 1.92a3.68 3.68 0 01-.5 1.73c-.11.16-.27.35-.44.52z"></path></svg>`,
	4,
)

function ThumbDislikeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.48 1.7c-.8-.83-2.09-.38-2.43.6-.28.8-.64 1.77-1 2.48C8 6.9 7.38 8.1 5.67 9.63c-.23.2-.52.36-.84.49-1.13.44-2.2 1.61-1.91 3l.35 1.77a2.5 2.5 0 001.8 1.92l5.6 1.52a4.5 4.5 0 005.6-3.53l.69-3.76A3 3 0 0014 7.5h-.89l.01-.05c.08-.41.18-.97.24-1.59.07-.6.1-1.28.05-1.9a3.68 3.68 0 00-.5-1.74 4.16 4.16 0 00-.44-.52z"></path></svg>`,
	4,
)

function ThumbLikeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.74 2.53a1.75 1.75 0 00-2.48 0l-7.73 7.73c-.68.69-.68 1.8 0 2.48l.78.77c.4.4.98.34 1.34.14a1.25 1.25 0 011.7 1.7c-.2.36-.27.94.14 1.34l.77.78c.69.68 1.8.68 2.48 0l7.73-7.73c.68-.69.68-1.8 0-2.48l-.78-.77c-.4-.4-.98-.34-1.34-.14a1.25 1.25 0 01-1.7-1.7c.2-.36.27-.94-.14-1.34l-.77-.78z"></path></svg>`,
	4,
)

function TicketDiagonalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18 6v1.5a.5.5 0 01-.5.5 2 2 0 100 4c.28 0 .5.22.5.5V14a1 1 0 01-1 1H3a1 1 0 01-1-1v-1.5c0-.28.22-.5.5-.5a2 2 0 100-4 .5.5 0 01-.5-.5V6a1 1 0 011-1h14a1 1 0 011 1z"></path></svg>`,
	4,
)

function TicketHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 2.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zm-5 7.5a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM10 8.5a.5.5 0 00-1 0v2c0 .28.22.5.5.5H11a.5.5 0 000-1h-1V8.5zm0 7.5c.28 0 .5.22.5.5v1a.5.5 0 01-1 0v-1c0-.28.22-.5.5-.5zM2.5 9.5a.5.5 0 000 1h1a.5.5 0 000-1h-1zM16 10c0-.28.22-.5.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zM4.15 15.15a.5.5 0 00.7.7l1-1a.5.5 0 00-.7-.7l-1 1zm10-10l1-1a.5.5 0 01.7.7l-1 1a.5.5 0 01-.7-.7zm-9.3-1a.5.5 0 10-.7.7l1 1a.5.5 0 10.7-.7l-1-1zm10 10l1 1a.5.5 0 01-.7.7l-1-1a.5.5 0 01.7-.7z"></path></svg>`,
	4,
)

function TimeAndWeatherIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.5 3C2.67 3 2 3.67 2 4.5v4c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-9zm0 8c-.83 0-1.5.67-1.5 1.5v4c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-4c0-.83-.67-1.5-1.5-1.5h-9zM17 12.44a2 2 0 01-1-3.88 2 2 0 011 3.88zM16.5 3c.28 0 .5.22.5.5v4.04a3.02 3.02 0 00-1 0V3.5c0-.28.22-.5.5-.5zm0 10.5c-.17 0-.34-.01-.5-.04v4.04a.5.5 0 001 0v-4.04c-.16.03-.33.04-.5.04z"></path></svg>`,
	4,
)

function TimelineIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.47 2.17a.75.75 0 00-.94 0L6.78 4.42a.75.75 0 00.94 1.16L10 3.72l2.28 1.86a.75.75 0 10.94-1.16l-2.75-2.25zm2.75 13.41l-2.75 2.25a.75.75 0 01-.94 0l-2.75-2.25a.75.75 0 01.94-1.16L10 16.28l2.28-1.86a.75.75 0 11.94 1.16zm-2.47-6.83a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM10 12a.75.75 0 100-1.5.75.75 0 000 1.5zm6-2.5a1.5 1.5 0 013 0v1a1.5 1.5 0 01-3 0v-1zm1.5-.5a.5.5 0 00-.5.5v1a.5.5 0 001 0v-1a.5.5 0 00-.5-.5zm-11-1C5.67 8 5 8.67 5 9.5v1a1.5 1.5 0 003 0v-1C8 8.67 7.33 8 6.5 8zM6 9.5a.5.5 0 011 0v1a.5.5 0 01-1 0v-1zm6 0a1.5 1.5 0 013 0v1a1.5 1.5 0 01-3 0v-1zm1.5-.5a.5.5 0 00-.5.5v1a.5.5 0 001 0v-1a.5.5 0 00-.5-.5zm-11-1C1.67 8 1 8.67 1 9.5v1a1.5 1.5 0 003 0v-1C4 8.67 3.33 8 2.5 8zM2 9.5a.5.5 0 011 0v1a.5.5 0 01-1 0v-1z"></path></svg>`,
	4,
)

function TimePickerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm7.66 1.93a.5.5 0 10-.71.7l1.41 1.42a.5.5 0 10.71-.7l-1.41-1.42zM16.43 10c-.98.02-1.86.44-2.48 1.1a1.5 1.5 0 00-1.92-1.02l-1.5.5A1.5 1.5 0 0011 13.5v4.34A7.03 7.03 0 012.5 11a7 7 0 0113.93-1zM9 10.5a.5.5 0 001 0v-4a.5.5 0 00-1 0v4zm5 3a2.5 2.5 0 015 0v3a2.5 2.5 0 01-5 0v-3zm2.5-1.5c-.83 0-1.5.67-1.5 1.5v3a1.5 1.5 0 003 0v-3c0-.83-.67-1.5-1.5-1.5zm-3.5-.5a.5.5 0 00-.66-.47l-1.5.5a.5.5 0 10.32.94l.84-.28v6.31a.5.5 0 001 0v-7z"></path></svg>`,
	4,
)

function Timer10Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm7.66 1.93a.5.5 0 10-.71.7l1.41 1.42a.5.5 0 10.71-.7l-1.41-1.42zm1.29 6.2A3.5 3.5 0 0012 13.5c0 .7.47 1.27 1.1 1.45A3.49 3.49 0 0012 17.5v.04A6.98 6.98 0 012.5 11a7 7 0 0113.95-.87zM9 11.5a.5.5 0 001 0v-5a.5.5 0 00-1 0v5zm6.5-.5a2.5 2.5 0 00-2.5 2.5.5.5 0 001 0 1.5 1.5 0 111.5 1.5 2.5 2.5 0 00-2.5 2.5v1c0 .28.22.5.5.5h4a.5.5 0 000-1H14v-.5c0-.83.67-1.5 1.5-1.5a2.5 2.5 0 000-5z"></path></svg>`,
	4,
)

function Timer2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.5 2a.5.5 0 000 1h4a.5.5 0 000-1h-4zm7.66 1.93a.5.5 0 10-.71.7l1.41 1.42a.5.5 0 10.71-.7l-1.41-1.42zm1.29 6.2a3.7 3.7 0 00-.95-.13 4.47 4.47 0 00-2.74.97l-.25.2v.01a1.5 1.5 0 001.63 2.48 2.49 2.49 0 00-.04 2.62l-.04.03a1.5 1.5 0 00-2.05 1.23 7 7 0 114.44-7.41zM9 11.5a.5.5 0 001 0v-5a.5.5 0 00-1 0v5zm4.84 1.21l.03-.02a2.57 2.57 0 01.47-.33c.32-.2.73-.36 1.16-.36.9 0 1.5.62 1.5 1.25 0 .28-.17.58-.51.84-.34.25-.8.41-1.24.41a.5.5 0 000 1c.44 0 .9.16 1.24.41.34.26.51.56.51.84 0 .63-.6 1.25-1.5 1.25-.43 0-.84-.17-1.16-.36a3.37 3.37 0 01-.47-.33l-.02-.02a.5.5 0 00-.7.72h.01l.01.02.04.03a3.68 3.68 0 00.62.45c.4.23 1 .49 1.67.49 1.32 0 2.5-.95 2.5-2.25 0-.7-.4-1.26-.91-1.64l-.16-.11.16-.11c.5-.38.91-.95.91-1.64 0-1.3-1.18-2.25-2.5-2.25-.68 0-1.27.26-1.67.5a4.35 4.35 0 00-.62.44l-.04.03v.01h-.01a.5.5 0 00.68.73z"></path></svg>`,
	4,
)

function Timer3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm7.45 1.43c.2-.2.51-.2.7 0l1.42 1.41a.5.5 0 11-.7.71l-1.42-1.41a.5.5 0 010-.71zM16.5 11a7 7 0 11-14 0 7 7 0 0114 0zM9 6.5v5a.5.5 0 001 0v-5a.5.5 0 00-1 0z"></path></svg>`,
	4,
)

function TimerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.96 5.67L2.15 2.85a.5.5 0 11.7-.7l15 15a.5.5 0 01-.7.7l-2.32-2.31A6.98 6.98 0 012.5 11c0-2.13.96-4.05 2.46-5.33zM10 10.71l-1-1v1.79a.5.5 0 001 0v-.8zm0-4.21v1.38l5.92 5.92A7 7 0 006.7 4.58L9 6.88V6.5a.5.5 0 011 0zm-3-4c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm7.45 1.43c.2-.2.51-.2.7 0l1.42 1.41a.5.5 0 11-.7.71l-1.42-1.41a.5.5 0 010-.71z"></path></svg>`,
	4,
)

function TimerOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 6a4 4 0 010 8H6a4 4 0 010-8h8zm-8 6a2 2 0 100-4 2 2 0 000 4z"></path></svg>`,
	4,
)

function ToggleLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A3.5 3.5 0 016.5 2h7a3.5 3.5 0 110 7h-7A3.5 3.5 0 013 5.5zm5 0a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM6.5 11a3.5 3.5 0 100 7h7a3.5 3.5 0 100-7h-7zm7 5a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"></path></svg>`,
	4,
)

function ToggleMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 6a4 4 0 100 8h8a4 4 0 000-8H6zm8 6a2 2 0 110-4 2 2 0 010 4z"></path></svg>`,
	4,
)

function ToggleRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 4.5V6H4a2 2 0 00-2 2v2h4v-.5a.5.5 0 011 0v.5h6v-.5a.5.5 0 011 0v.5h4V8a2 2 0 00-2-2h-2V4.5c0-.83-.67-1.5-1.5-1.5h-5C6.67 3 6 3.67 6 4.5zM7.5 4h5c.28 0 .5.22.5.5V6H7V4.5c0-.28.22-.5.5-.5zM18 11h-4v.5a.5.5 0 11-1 0V11H7v.5a.5.5 0 01-1 0V11H2v4c0 1.1.9 2 2 2h12a2 2 0 002-2v-4z"></path></svg>`,
	4,
)

function ToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4c0-1.1.9-2 2-2h7a2 2 0 012 2v6a2 2 0 01-2 2H9.42l-1.48 2.74a.5.5 0 01-.88 0L5.56 12H4a2 2 0 01-2-2V4zm3.5 1a.5.5 0 00-.5.5v1a.5.5 0 00.8.4c-.2.67-.5 1.1-.65 1.25a.5.5 0 10.7.7A4.97 4.97 0 007 5.5a.5.5 0 00-.5-.5h-1zm3 0a.5.5 0 00-.5.5v1a.5.5 0 00.8.4c-.2.67-.5 1.1-.65 1.25a.5.5 0 10.7.7A4.97 4.97 0 0010 5.5a.5.5 0 00-.5-.5h-1zm-2.98 9H2.5a.5.5 0 000 1h3.56l-.54-1zm3.41 1h8.57a.5.5 0 000-1H9.48l-.55 1zM2 17.5c0-.28.22-.5.5-.5h10a.5.5 0 010 1h-10a.5.5 0 01-.5-.5z"></path></svg>`,
	4,
)

function TooltipQuoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.25 3.54a6.5 6.5 0 00-3.3 1.36l.83.82a.75.75 0 01-1.06 1.06l-.83-.82A6.39 6.39 0 003.57 9h1.68a.75.75 0 010 1.5H3.53a6.65 6.65 0 002.06 4.2.75.75 0 01-1.03 1.1A8.11 8.11 0 012 9.94C2 5.55 5.59 2 10 2a7.97 7.97 0 015.47 13.8.75.75 0 01-1.02-1.1 6.58 6.58 0 002.03-4.2h-1.73a.75.75 0 010-1.5h1.68a6.48 6.48 0 00-5.68-5.46v1.21a.75.75 0 01-1.5 0v-1.2zm4.2 2.27a.5.5 0 01.75.63l-.12.2a343.95 343.95 0 01-2.2 3.82 30.11 30.11 0 01-.65 1.01 1.5 1.5 0 01-2.28-1.94c.07-.09.2-.2.34-.33l.56-.48a123.93 123.93 0 013.42-2.77l.18-.14z"></path></svg>`,
	4,
)

function TopSpeedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.42 4.02a.75.75 0 10-1.4-.54c-.14.37-.29.83-.4 1.24-.61.04-1.22.04-1.82 0a.75.75 0 00-.1 1.5c.51.03 1.03.04 1.53.02-.12.56-.21 1.08-.27 1.55a5.27 5.27 0 00-2.62 2.52c-.51 1.12-.48 2.45.32 3.26.54.55 1.32.6 2 .46.43-.09.9-.28 1.34-.55l.03.06a.75.75 0 101.38-.58l-.22-.45a7.06 7.06 0 001.82-3.5c.66.28 1.11.75 1.33 1.24.22.5.23 1.09-.06 1.65-.28.57-.9 1.19-2.01 1.66a.75.75 0 00.58 1.38 5.26 5.26 0 002.77-2.37 3.4 3.4 0 00.09-2.93 4.04 4.04 0 00-2.54-2.18v-.03a.75.75 0 00-1.48-.2c-.36-.02-.74 0-1.14.06l.25-1.18c.75-.09 1.49-.22 2.2-.38a.75.75 0 10-.31-1.46c-.48.1-.97.2-1.45.27l.18-.52zm-3.71 6.9c.2-.43.56-.9 1.12-1.32.01.55.07 1.02.16 1.44a6 6 0 00.34 1.09c-.36.23-.7.38-1 .44-.41.09-.57-.02-.6-.05-.21-.22-.38-.8-.02-1.6zm3.83-2.2a5.64 5.64 0 01-1.02 2.27 6.7 6.7 0 01-.17-2.13c.43-.1.82-.14 1.19-.14zM5.98 5.2a4.92 4.92 0 00-3.93.5l-.02.02h-.01a.75.75 0 00.85 1.24l.03-.02.14-.07a3.42 3.42 0 012.52-.22c.57.16.8.46.92.75.08.2.11.41.13.63-.44-.1-.94-.2-1.47-.22a4.5 4.5 0 00-3.18 1.01 2.8 2.8 0 00-.84 2.96c.3 1 1.1 1.9 2.3 2.15a4.4 4.4 0 002.64-.4l.56-.29v.01a.75.75 0 101.5 0V8.5c0-.37 0-1.02-.25-1.66A2.76 2.76 0 005.99 5.2zm-.9 4.11c.55.03 1.08.15 1.54.28v1.88c-.3.22-.71.48-1.17.68-.64.29-1.24.41-1.72.31a1.55 1.55 0 01-1.17-1.1c-.15-.53-.02-1.06.37-1.39.63-.54 1.38-.69 2.14-.66z"></path></svg>`,
	4,
)

function TranslateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a2 2 0 00-.5 3.94V9.5a.5.5 0 001 0V5.94A2 2 0 0010 2zM3 5a1 1 0 012 0v4c0 .28.22.5.5.5H8a.5.5 0 000-1H6V5a2 2 0 10-4 0v11a2 2 0 104 0v-3.5h2V16a2 2 0 104 0v-3h4.5c.83 0 1.5-.67 1.5-1.5V5a2 2 0 10-4 0v3.5h-2a.5.5 0 000 1h2.5A.5.5 0 0015 9V5a1 1 0 112 0v6.5a.5.5 0 01-.5.5h-5a.5.5 0 00-.5.5V16a1 1 0 11-2 0v-4a.5.5 0 00-.5-.5h-3a.5.5 0 00-.5.5v4a1 1 0 11-2 0V5z"></path></svg>`,
	4,
)

function TransmissionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 2a1 1 0 00-1 1v2a1 1 0 001 1h3a1 1 0 001-1V3a1 1 0 00-1-1h-3zm2 5.5a.5.5 0 00-1 0v5.8l-1.15-1.15a.5.5 0 00-.7.7l2 2c.2.2.5.2.7 0l2-2a.5.5 0 00-.7-.7L14 13.29V7.5zM5 11a1 1 0 00-1 1v2a1 1 0 001 1h3a1 1 0 001-1v-2a1 1 0 00-1-1H5zm-2 2.5a.5.5 0 00-1 0V15c0 1.1.9 2 2 2h12a2 2 0 002-2v-1.5a.5.5 0 00-1 0V15a1 1 0 01-1 1H4a1 1 0 01-1-1v-1.5z"></path></svg>`,
	4,
)

function TrayItemAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 2a1 1 0 00-1 1v2a1 1 0 001 1h3a1 1 0 001-1V3a1 1 0 00-1-1h-3zm1.85 5.15a.5.5 0 00-.7 0l-2 2a.5.5 0 00.7.7L13 8.71v5.79a.5.5 0 001 0V8.7l1.15 1.15a.5.5 0 00.7-.7l-2-2zM5 11a1 1 0 00-1 1v2a1 1 0 001 1h3a1 1 0 001-1v-2a1 1 0 00-1-1H5zm-2 2.5a.5.5 0 00-1 0V15c0 1.1.9 2 2 2h12a2 2 0 002-2v-1.5a.5.5 0 00-1 0V15a1 1 0 01-1 1H4a1 1 0 01-1-1v-1.5z"></path></svg>`,
	4,
)

function TrayItemRemoveIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$29 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2a3.5 3.5 0 00-3.39 2.61A3.5 3.5 0 004.05 8.6 3.5 3.5 0 006 15h2v1.75c0 .69.56 1.25 1.25 1.25h1.5c.69 0 1.25-.56 1.25-1.25V15h2a3.5 3.5 0 001.95-6.4 3.52 3.52 0 00-2.56-3.99A3.5 3.5 0 0010 2zM9 15h2v1.75c0 .14-.11.25-.25.25h-1.5a.25.25 0 01-.25-.25V15z"></path></svg>`,
	4,
)

function TreeDeciduousIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$29.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$28 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.62 2.21a1 1 0 00-1.24 0l-3.3 2.61a1.5 1.5 0 00-.06 2.32l-1.47 1.2a1.5 1.5 0 00.51 2.6l-1.58 1.48A1.49 1.49 0 004.49 15H8v1.75c0 .69.56 1.25 1.25 1.25h1.5c.69 0 1.25-.56 1.25-1.25V15h3.5c1.36 0 2-1.65 1.02-2.58l-1.58-1.48a1.5 1.5 0 00.5-2.6L14 7.14a1.5 1.5 0 00-.06-2.32l-3.31-2.6zM9 15h2v1.75c0 .14-.11.25-.25.25h-1.5a.25.25 0 01-.25-.25V15z"></path></svg>`,
	4,
)

function TreeEvergreenIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$28.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$27 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M18.76 4.93A2 2 0 0017 2H3a2 2 0 00-1.76 2.93l7 13.02a2 2 0 003.52 0l7-13.02z"></path></svg>`,
	4,
)

function TriangleDownIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$27.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$26 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1.18 15.8c-.53 1 .2 2.2 1.32 2.2h15a1.5 1.5 0 001.32-2.22l-7.6-14a1.5 1.5 0 00-2.65.02l-7.4 14z"></path></svg>`,
	4,
)

function TriangleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$26.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$25 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.07 18.76A2 2 0 0018 17V3a2 2 0 00-2.93-1.76l-13.02 7a2 2 0 000 3.52l13.02 7z"></path></svg>`,
	4,
)

function TriangleLeftIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$25.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$24 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.93 1.24A2 2 0 002 3v14a2 2 0 002.93 1.76l13.02-7a2 2 0 000-3.52l-13.02-7z"></path></svg>`,
	4,
)

function TriangleRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$24.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$23 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 4c0-1.1.9-2 2-2h5a2 2 0 012 2h1c.82 0 1.5.67 1.5 1.5V7a3 3 0 01-2.6 2.97 4.5 4.5 0 01-3.9 3.5v1.5h2a2 2 0 012 2v.5a.5.5 0 01-.5.5H6a.5.5 0 01-.5-.5v-.5c0-1.1.9-2 2-2h2v-1.5a4.5 4.5 0 01-3.9-3.5A3 3 0 013 7V5.5C3 4.67 3.67 4 4.5 4h1zm9 4.94A2 2 0 0016 7V5.5a.5.5 0 00-.5-.5h-1v3.94zM5.5 5h-1a.5.5 0 00-.5.5V7a2 2 0 001.5 1.93V5z"></path></svg>`,
	4,
)

function TrophyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$23.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$22 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.59 4.3c-.36.28-.6.71-.6 1.2V7a3 3 0 002.62 2.97 4.5 4.5 0 003.9 3.5v1.5h-2a2 2 0 00-2 2v.5c0 .27.22.5.5.5h8a.5.5 0 00.5-.5v-.5a2 2 0 00-2-2h-2v-1.5c.6-.07 1.19-.26 1.7-.55l4.94 4.93a.5.5 0 00.7-.7l-15-15zM5.5 6.2v2.72A2 2 0 014 7V5.5c0-.22.13-.4.32-.47L5.5 6.21zm8.9 3.76a4.48 4.48 0 01-.7 1.6L5.57 3.46A2 2 0 017.5 2h5a2 2 0 012 2h1c.82 0 1.5.67 1.5 1.5V7a3 3 0 01-2.6 2.97zm.1-1.03A2 2 0 0016 7V5.5a.5.5 0 00-.5-.5h-1v3.94z"></path></svg>`,
	4,
)

function TrophyOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$22.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$21 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M19 5.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.15.35A.5.5 0 0017 5.5a.5.5 0 00-.15-.35l-2-2a.5.5 0 00-.7.7L15.29 5H12.5a.5.5 0 000 1h2.8l-1.15 1.15a.5.5 0 00.7.7l2-2zM14.5 11c1.33 0 2.55-.47 3.5-1.26V13a2 2 0 01-2 2H4a2 2 0 01-2-2V6c0-1.1.9-2 2-2h5.2a5.5 5.5 0 005.3 7zm-9 5a.5.5 0 000 1h9a.5.5 0 000-1h-9z"></path></svg>`,
	4,
)

function TvArrowRightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$21.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$20 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V6zm3.5 10a.5.5 0 000 1h9a.5.5 0 000-1h-9z"></path></svg>`,
	4,
)

function TvIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$20.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v1.27A2 2 0 0017 7h-2a2 2 0 00-2 2v1.27A2 2 0 0012 12v2.18a2 2 0 00.18.82H4a2 2 0 01-2-2V6zm15 2a1 1 0 011 1v2a1 1 0 011 1v2.2a1 1 0 01-.2.6l-1.3 1.8V18a1 1 0 01-1 1h-1a1 1 0 01-1-1v-1.4l-1.31-1.84a1 1 0 01-.19-.58V12a1 1 0 011-1V9a1 1 0 011-1h2zm0 3V9h-2v2h2zm-3.5 5.91l-.66-.91H5.5a.5.5 0 000 1h8v-.09zm-.31-2.15l-.34.24z"></path></svg>`,
	4,
)

function TvUsbIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.51 9.13c.4-.34.9-.63 1.49-.63.58 0 1.1.3 1.49.63a3.88 3.88 0 01.56.6l.03.05a.5.5 0 00.84 0l.03-.05a3.18 3.18 0 01.56-.6c.4-.34.9-.63 1.49-.63.58 0 1.1.3 1.49.63a3.88 3.88 0 01.56.6l.03.05A.5.5 0 0018 9.5C18 5.72 14.78 2 10 2 5.22 2 2 5.72 2 9.5a.5.5 0 00.92.28l.03-.05a3.2 3.2 0 01.56-.6c.4-.34.9-.63 1.49-.63.58 0 1.1.3 1.49.63a3.88 3.88 0 01.56.6l.03.05a.5.5 0 00.84 0l.03-.05a3.2 3.2 0 01.56-.6zM10 9.5c-.15 0-.32.05-.5.15v6.1a1.25 1.25 0 11-2.5 0v-.25a.5.5 0 00-1 0v.25a2.25 2.25 0 004.5 0v-6.1c-.18-.1-.35-.15-.5-.15z"></path></svg>`,
	4,
)

function UmbrellaIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 17A1.5 1.5 0 013 15.5v-11C3 3.67 3.67 3 4.5 3h4.75c.83 0 1.5.67 1.5 1.5v4.75h4.75c.83 0 1.5.67 1.5 1.5v4.75c0 .83-.67 1.5-1.5 1.5h-11zm11-6.25h-4.75v4.75h4.75v-4.75zm-6.25 0H4.5v4.75h4.75v-4.75zm0-1.5V4.5H4.5v4.75h4.75zm5.03-2.47a.75.75 0 11-1.06-1.06l1.22-1.22-1.22-1.22a.75.75 0 011.06-1.06l1.22 1.22 1.22-1.22a.75.75 0 111.06 1.06L16.56 4.5l1.22 1.22a.75.75 0 01-1.06 1.06L15.5 5.56l-1.22 1.22z"></path></svg>`,
	4,
)

function UninstallAppIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5V6h.08C14.14 6 15 6.85 15 7.91v5.18c0 1.06-.86 1.91-1.92 1.91H12v2.5a.5.5 0 01-1 0V15H9v2.5a.5.5 0 01-1 0V15H6.92A1.92 1.92 0 015 13.09V7.9C5 6.85 5.86 6 6.92 6H7V2.5zM8 6h4V3H8v3z"></path></svg>`,
	4,
)

function UsbPlugIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.5c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5V6a2 2 0 012 2v8a2 2 0 01-2 2H7a2 2 0 01-2-2V8c0-1.1.9-2 2-2V2.5zM8 6h4V3H8v3z"></path></svg>`,
	4,
)

function UsbStickIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12 11a1 1 0 100-2 1 1 0 000 2zM2 7a3 3 0 013-3h10a3 3 0 013 3v6a3 3 0 01-3 3H5a3 3 0 01-3-3V7zm3.5 0a.5.5 0 00-.5.5v5a.5.5 0 001 0v-5a.5.5 0 00-.5-.5zm8.85.65a.5.5 0 00-.7 0l-.63.63a2 2 0 00-2.04 0l-.63-.63a.5.5 0 00-.7.7l.63.63a2 2 0 000 2.04l-.63.63a.5.5 0 00.7.7l.63-.63a2 2 0 002.04 0l.63.63a.5.5 0 00.7-.7l-.63-.63a2 2 0 000-2.04l.63-.63a.5.5 0 000-.7z"></path></svg>`,
	4,
)

function VaultIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.75 2a.75.75 0 000 1.5h1.13l.36 2H7.25v-.75A.75.75 0 006.5 4h-2a.75.75 0 000 1.5h1.25v.7L5.4 9.02a3.75 3.75 0 104.06 3.2l3.23-4.3.24 1.32A3.75 3.75 0 1014.41 9l-1.17-6.39A.75.75 0 0012.5 2h-1.75zm-3.6 5.13A.75.75 0 007.2 7h4.29l-2.69 3.58a3.76 3.76 0 00-1.92-1.4l.26-2.05zM3.5 12.75c0-1.05.73-1.94 1.7-2.18L5 12.16a.75.75 0 00.75.84h2.24a2.25 2.25 0 01-4.49-.25zm3.1-1.25l.1-.8c.37.18.7.46.92.8H6.6zm6.61-.75l.3 1.64A.75.75 0 0015 12.1l-.3-1.57a2.25 2.25 0 11-1.48.21z"></path></svg>`,
	4,
)

function VehicleBicycleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9 4a.5.5 0 000 1h2a.5.5 0 000-1H9zM3 5.5A3.5 3.5 0 016.5 2h7A3.5 3.5 0 0117 5.5V8h1a.5.5 0 010 1h-1v7.5c0 .83-.67 1.5-1.5 1.5h-1a1.5 1.5 0 01-1.5-1.5V16H7v.5c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 013 16.5V9H2a.5.5 0 010-1h1V5.5zm13 0A2.5 2.5 0 0013.5 3h-7A2.5 2.5 0 004 5.5V10h12V5.5zM14 16v.5c0 .28.22.5.5.5h1a.5.5 0 00.5-.5V16h-2zM4 16v.5c0 .28.22.5.5.5h1a.5.5 0 00.5-.5V16H4zm4-3a1 1 0 10-2 0 1 1 0 002 0zm5 1a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function VehicleBusIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.75 1a.75.75 0 00-.75.75V3h-.86a2.5 2.5 0 00-2.45 2.01l-.2.99h-.74a.75.75 0 000 1.5h.44l-.11.56A1.5 1.5 0 002 9.5v4c0 .83.67 1.5 1.5 1.5h13c.83 0 1.5-.67 1.5-1.5v-4a1.5 1.5 0 00-1.08-1.44l-.11-.56h.54a.75.75 0 00.65-.75v-.1a.75.75 0 00-.75-.65h-.74l-.2-.99A2.5 2.5 0 0013.86 3H13V1.75a.75.75 0 00-.75-.75h-4.5zM6.14 4h7.72c.72 0 1.33.5 1.47 1.2L15.9 8H4.11l.56-2.8C4.8 4.5 5.42 4 6.14 4zM5 11.5a1 1 0 112 0 1 1 0 01-2 0zm8 0a1 1 0 112 0 1 1 0 01-2 0zM6 17v-1H4v1a1 1 0 102 0zm10-1v1a1 1 0 11-2 0v-1h2z"></path></svg>`,
	4,
)

function VehicleCabIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.36 2.02a.5.5 0 01.56.2l1.72 2.59 2.58-1.73a.5.5 0 01.77.54L14.14 7h3.36a.5.5 0 01.35.85l-2.57 2.57 2.5 1.66a.5.5 0 01-.28.92h-3a.5.5 0 110-1h1.35l-1.63-1.08a.5.5 0 01-.07-.77L16.29 8H13.5a.5.5 0 01-.49-.62l.7-2.75-1.93 1.29a.5.5 0 01-.7-.14L10 4.15V5.5a.5.5 0 01-1 0v-3a.5.5 0 01.36-.48zM2.5 10a.5.5 0 100 1H3c-.6.46-1 1.18-1 2v4a1 1 0 002 0v-.5h7v.5a1 1 0 002 0v-4c0-.82-.4-1.54-1-2h.5a.5.5 0 000-1h-.66l-.14-.83A2 2 0 009.73 7.5H5.27A2 2 0 003.3 9.17l-.14.83H2.5zm1.58.53l.2-1.2a1 1 0 011-.83h4.45a1 1 0 01.99.84l.2 1.2a2.52 2.52 0 00-.42-.04h-6l-.42.03zm1.42 3.22a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm4.75.75a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function VehicleCarCollisionIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 16v1a1 1 0 11-2 0v-1h2zm10 0v1a1 1 0 11-2 0v-1h2zM13.86 3c1.2 0 2.22.84 2.45 2.01l.2.99h.74c.38 0 .7.28.74.65l.01.1c0 .38-.28.7-.65.74l-.1.01h-.44l.11.56A1.5 1.5 0 0118 9.5v4c0 .83-.67 1.5-1.5 1.5h-13A1.5 1.5 0 012 13.5v-4c0-.68.46-1.26 1.08-1.44l.11-.56h-.44a.75.75 0 010-1.5h.74l.2-.99A2.5 2.5 0 016.14 3h7.72zM6 10.5a1 1 0 100 2 1 1 0 000-2zm8 0a1 1 0 100 2 1 1 0 000-2zM13.86 4H6.14c-.72 0-1.33.5-1.47 1.2L4.1 8h11.78l-.56-2.8A1.5 1.5 0 0013.86 4z"></path></svg>`,
	4,
)

function VehicleCarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.98 13.84c.6-.27 1.02-.88 1.02-1.59v-1.21a2.5 2.5 0 00-1.86-2.42l-2.09-.56-1.54-2.77A2.5 2.5 0 0010.32 4H6.94a2.5 2.5 0 00-2.37 1.7l-.82 2.48A2.5 2.5 0 002 10.56v1.69c0 .7.42 1.32 1.02 1.6a2.5 2.5 0 004.93.15h4.1a2.5 2.5 0 004.93-.16zM6.94 5H8v3H4.86l.66-1.97A1.5 1.5 0 016.94 5zm4.7.77L12.86 8H9V5h1.32c.55 0 1.05.3 1.31.77zM4 13.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm9 0a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"></path></svg>`,
	4,
)

function VehicleCarProfileLtrIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.02 13.84A1.75 1.75 0 012 12.25v-1.21a2.5 2.5 0 011.86-2.42l2.09-.56L7.49 5.3A2.5 2.5 0 019.68 4h3.38a2.5 2.5 0 012.37 1.7l.82 2.48A2.5 2.5 0 0118 10.56v1.69c0 .7-.42 1.32-1.02 1.6a2.5 2.5 0 01-4.93.15h-4.1a2.5 2.5 0 01-4.93-.16zM13.06 5H12v3h3.14l-.66-1.97A1.5 1.5 0 0013.06 5zm-4.7.77L7.14 8H11V5H9.68c-.55 0-1.05.3-1.31.77zM16 13.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zm-9 0a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z"></path></svg>`,
	4,
)

function VehicleCarProfileRtlIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 2.54c0-.28.22-.5.5-.5h5c.28 0 .5.22.5.5V5h2.5c.28 0 .5.22.5.5v4.06l1.63.46a.5.5 0 01.32.7l-1.82 3.79a1.5 1.5 0 00-2.53.45V15a2.28 2.28 0 01-.35.57c-.26.32-.5.44-.74.44s-.48-.13-.75-.45a2.68 2.68 0 01-.36-.6 1.5 1.5 0 00-2.81.03 2.27 2.27 0 01-.35.57c-.26.33-.5.45-.74.45s-.48-.12-.74-.44a2.61 2.61 0 01-.36-.6 1.5 1.5 0 00-2.55-.42l-1.8-3.83a.5.5 0 01.32-.7L4 9.57V5.5c0-.28.22-.5.5-.5H7V2.54zm5 .5H8V5h4V3.04zm3 6.25V6H5v3.28l4.2-1.16a3 3 0 011.6 0L15 9.29zm-3.6 5.66zm0 0zm4.09.44v-.01a.5.5 0 00-.96-.06v.02a1.62 1.62 0 01-.12.24c-.08.17-.22.39-.4.6-.35.45-.85.82-1.51.82s-1.16-.38-1.52-.82a3.64 3.64 0 01-.51-.85.5.5 0 00-.94 0 1.75 1.75 0 01-.12.25c-.09.17-.22.39-.4.6-.35.45-.85.82-1.51.82s-1.16-.37-1.52-.81a3.62 3.62 0 01-.5-.85l-.01-.02a.5.5 0 00-.96.06 1.5 1.5 0 01-.08.24c-.07.16-.17.37-.33.58-.3.41-.8.8-1.6.8a.5.5 0 000 1 2.9 2.9 0 002.54-1.4l.17.22C5.66 17.38 6.4 18 7.5 18s1.84-.62 2.3-1.18l.2-.28.2.28A2.96 2.96 0 0012.5 18a2.95 2.95 0 002.46-1.4l.14.2c.44.6 1.2 1.21 2.4 1.2a.5.5 0 100-1c-.8.01-1.3-.38-1.6-.79a2.72 2.72 0 01-.4-.77l-.01-.05z"></path></svg>`,
	4,
)

function VehicleShipIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 5a.5.5 0 000 1h3a.5.5 0 100-1h-3zM3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-2.68 2.98l2.38 1.06a.5.5 0 11-.4.92L11.9 17H8.1l-4.4 1.96a.5.5 0 11-.4-.92l2.38-1.06A3 3 0 013 14V6zm1 0v5h12V6a2 2 0 00-2-2H6a2 2 0 00-2 2zm4 8a1 1 0 10-2 0 1 1 0 002 0zm5 1a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function VehicleSubwayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 1a2 2 0 011 .27A2 2 0 018 3v1h.5c.28 0 .5.22.5.5V9a2 2 0 01-2 2H3a2 2 0 01-2-2V4.5c0-.28.22-.5.5-.5H2V3c0-1.1.9-2 2-2zM3 4h2V3a1 1 0 00-2 0v1zm3-1v1h1V3a1 1 0 00-1.25-.97A2 2 0 016 3zm3 .09V3h3.25c.97 0 1.75.78 1.75 1.75V6h.88c.57 0 1.09.32 1.34.83l1.62 3.24c.1.2.16.43.16.67v3.76c0 .83-.67 1.5-1.5 1.5h-1.55a2.5 2.5 0 01-4.9 0h-1.1a2.5 2.5 0 01-4.9 0H3.8c-.96 0-1.75-.78-1.75-1.75v-2.4c.3.1.63.15.96.15h4a3 3 0 003-3V4.5c0-.65-.42-1.2-1-1.41zM14 7v3h2.7l-1.37-2.72a.5.5 0 00-.45-.28H14zm-7.5 7a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm4.5 1.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0z"></path></svg>`,
	4,
)

function VehicleTruckBagIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.04 9.89v4.36c0 .97.79 1.75 1.75 1.75h.26a2.5 2.5 0 004.9 0h1.1a2.5 2.5 0 004.9 0h1.55c.83 0 1.5-.67 1.5-1.5v-3.76c0-.24-.05-.47-.16-.67l-1.62-3.24A1.5 1.5 0 0014.88 6H14V4.75C14 3.78 13.22 3 12.25 3h-2.1a2 2 0 01.35 1.12v3.76a2 2 0 01-1.1 1.8l-3 1.5a2 2 0 01-1.8 0l-2.56-1.3zM14 7h.88c.2 0 .36.1.45.28L16.69 10H14V7zm-7.5 7a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm4.5 1.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM1.5 4.12v3.76a1 1 0 00.55.9l3 1.5a1 1 0 00.9 0l3-1.5a1 1 0 00.55-.9V4.12a1 1 0 00-.55-.9l-3-1.5a1 1 0 00-.9 0l-3 1.5a1 1 0 00-.55.9zm1.7-.08l2.3.97 2.3-.97a.5.5 0 01.4.92L6 5.9V8.5a.5.5 0 11-1 0V5.89l-2.2-.93a.5.5 0 11.4-.92z"></path></svg>`,
	4,
)

function VehicleTruckCubeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 2a2 2 0 00-2 2v11a1 1 0 001 1V9.8c0-.25.04-.5.1-.72L4.16 5.6A2.25 2.25 0 016.3 4h7.4c1 0 1.87.65 2.15 1.6l1.04 3.48c.07.23.11.47.11.71V16a1 1 0 001-1V4a2 2 0 00-2-2H4zm12 7.8v6.7c0 .83-.67 1.5-1.5 1.5h-1a1.5 1.5 0 01-1.5-1.5V16H8v.5c0 .83-.67 1.5-1.5 1.5h-1A1.5 1.5 0 014 16.5V9.8c0-.15.02-.3.06-.44L5.1 5.9c.16-.53.65-.89 1.2-.89h7.4c.55 0 1.04.36 1.2.9l1.04 3.46c.04.14.06.29.06.43zM5 16.5c0 .28.22.5.5.5h1a.5.5 0 00.5-.5V16H5v.5zM14.86 9l-.66-2.62a.5.5 0 00-.48-.38H6.28a.5.5 0 00-.48.38L5.14 9h9.72zM13 16.5c0 .28.22.5.5.5h1a.5.5 0 00.5-.5V16h-2v.5zM7 13a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 10-2 0 1 1 0 002 0zm-5.5 1a.5.5 0 000 1h3a.5.5 0 000-1h-3z"></path></svg>`,
	4,
)

function VehicleTruckIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.04 4.75C2.04 3.78 2.83 3 3.8 3h8.46c.97 0 1.75.78 1.75 1.75V6h.88c.57 0 1.09.32 1.34.83l1.62 3.24c.1.2.16.43.16.67v3.76c0 .83-.67 1.5-1.5 1.5h-1.55a2.5 2.5 0 01-4.9 0h-1.1a2.5 2.5 0 01-4.9 0H3.8c-.96 0-1.75-.78-1.75-1.75v-9.5zM14 7v3h2.7l-1.37-2.72a.5.5 0 00-.45-.28H14zm-7.5 7a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm4.5 1.5a1.5 1.5 0 103 0 1.5 1.5 0 00-3 0z"></path></svg>`,
	4,
)

function VehicleTruckProfileIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.97 4.02A1.7 1.7 0 002 5.7v8.6a1.7 1.7 0 001.97 1.68 37.94 37.94 0 0112.25.02A1.7 1.7 0 0018 14.3V5.7a1.7 1.7 0 00-1.97-1.68c-4 .64-8.07.64-12.06 0zM16 14.96c-1-.15-2-.27-3-.35V12h2a1 1 0 011 1v1.96zm-4-.41a38.84 38.84 0 00-4 0V12a1 1 0 011-1h2a1 1 0 011 1v2.55zm-5 .06c-1 .08-2 .2-3 .35V13a1 1 0 011-1h2v2.61zM10 10a1 1 0 110-2 1 1 0 010 2zm-3.5 0a1 1 0 11-2 0 1 1 0 012 0zm9 0a1 1 0 11-2 0 1 1 0 012 0z"></path></svg>`,
	4,
)

function Video360Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l1.18 1.19A1.7 1.7 0 002 5.7v8.6a1.7 1.7 0 001.97 1.68 37.94 37.94 0 0111.17-.13l2 2a.5.5 0 00.71-.7l-15-15zM14 14.7l-.99-.09v-.9l1 1zm-1.99-2v1.85a38.84 38.84 0 00-4 0V12a1 1 0 011-1h1.3l1.7 1.7zm-8 2.26V13a1 1 0 011-1h2v2.61c-1 .08-2 .2-3 .35zM5.5 11a1 1 0 110-2 1 1 0 010 2zm8.62 1L6.46 4.34c3.19.3 6.4.2 9.57-.32A1.7 1.7 0 0118 5.7v8.6c0 .44-.17.84-.44 1.14L16 13.88V13a1 1 0 00-1-1h-.88zm.38-1a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function Video360OffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 5.5A2.5 2.5 0 0011.5 3h-6A2.5 2.5 0 003 5.5v3.1a5.5 5.5 0 017.8 6.4h.7a2.5 2.5 0 002.5-2.5v-7zm1 1.43v4.15l2.76 2.35a.75.75 0 001.24-.57V5.2a.75.75 0 00-1.23-.57L15 6.93zm-5 6.57a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4-2a.5.5 0 00-1 0V13H3.5a.5.5 0 000 1H5v1.5a.5.5 0 001 0V14h1.5a.5.5 0 000-1H6v-1.5z"></path></svg>`,
	4,
)

function VideoAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.2 4L2 8.2V6.8L4.8 4h1.4zm7 0l-1.46 1.46a3.48 3.48 0 00-1.02-.39L11.79 4h1.42zm-1.08 3.17a2.51 2.51 0 00-2.34-1.16 2.5 2.5 0 102.34 1.16zm.72-.72c.2.29.37.6.48.94L16.69 4 16.5 4h-1.2l-2.46 2.45zM7.5 12c-.08 0-.15 0-.22.02A1.5 1.5 0 006 13.5V16h8v-2.5a1.5 1.5 0 00-1.5-1.5h-5zm5-1c.22 0 .43.03.63.08L18 6.2V5.5c0-.2-.04-.4-.12-.59l-4.5 4.5a3.5 3.5 0 01-.93 1.59h.05zm1.9.88c.23.27.4.58.5.93L18 9.7V8.29l-3.6 3.6zM15 16v-1.2l3-3v1.4L15.2 16H15zm-10-.3v-1.4l-1.7 1.69.2.01h1.2l.3-.3zm1.57-6.48c.08.36.21.7.4 1.02L2.11 15.1A1.5 1.5 0 012 14.5v-.7l4.57-4.58zM9.71 4L2 11.7v-1.4L8.3 4h1.4z"></path></svg>`,
	4,
)

function VideoBackgroundEffectIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 5.5A2.5 2.5 0 0011.5 3h-6A2.5 2.5 0 003 5.5v3.1a5.5 5.5 0 017.8 6.4h.7a2.5 2.5 0 002.5-2.5v-7zm1 1.43v4.15l2.76 2.35a.75.75 0 001.24-.57V5.2a.75.75 0 00-1.23-.57L15 6.93zM5.5 18a4.5 4.5 0 10-3.94-2.32l-.54 1.8c-.1.3.2.6.5.5l1.8-.54c.64.36 1.39.56 2.18.56zM3 12.5c0-.28.22-.5.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm.5 2.5a.5.5 0 010-1h2a.5.5 0 010 1h-2z"></path></svg>`,
	4,
)

function VideoChatIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 3A2.5 2.5 0 002 5.5v9A2.5 2.5 0 004.5 17h11a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0015.5 3h-11zm4.27 4.08l4 2.5a.5.5 0 010 .84l-4 2.65a.5.5 0 01-.77-.42V7.5a.5.5 0 01.77-.42z"></path></svg>`,
	4,
)

function VideoClipIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 3A2.5 2.5 0 002 5.5v7A2.5 2.5 0 004.5 15h9a2.5 2.5 0 002.5-2.5v-7A2.5 2.5 0 0013.5 3h-9zM7 6.76c0-.6.67-.96 1.17-.62l3.61 2.45c.3.2.3.63 0 .82l-3.6 2.46A.75.75 0 017 11.25v-4.5zM6.5 17a2.5 2.5 0 01-2-1H14a3 3 0 003-3V5.5c.6.46 1 1.18 1 2V13a4 4 0 01-4 4H6.5z"></path></svg>`,
	4,
)

function VideoClipMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l.73.74A2.5 2.5 0 002 5.5v9A2.5 2.5 0 004.5 17h11c.24 0 .47-.03.7-.1l.95.95a.5.5 0 00.7-.7l-15-15zm8.08 9.49l-2.15 1.43a.5.5 0 01-.78-.42V8.71l2.93 2.93zm1.85-1.22l-.15.1 5.1 5.1c.18-.34.27-.72.27-1.12v-9A2.5 2.5 0 0015.5 3H5.12l4.8 4.8 2.85 1.78a.5.5 0 010 .84z"></path></svg>`,
	4,
)

function VideoClipOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 6.5A2.5 2.5 0 0010.5 4h-6A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h6a2.5 2.5 0 002.5-2.5v-7zm1 1.43v4.15l2.76 2.35a.75.75 0 001.24-.57V6.2a.75.75 0 00-1.23-.57L14 7.93z"></path></svg>`,
	4,
)

function VideoIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.5 4.21A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h6a2.5 2.5 0 002.5-2.3l4.15 4.15a.5.5 0 00.7-.7l-15-15zm13.91 12.28l-1.4-1.2L14 11.88V7.93l2.77-2.31a.75.75 0 011.23.57v7.67c0 .64-.75.99-1.24.57zM13 10.88L6.12 4h4.38A2.5 2.5 0 0113 6.5v4.38z"></path></svg>`,
	4,
)

function VideoOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5C2 4.67 2.67 4 3.5 4h13c.83 0 1.5.67 1.5 1.5v3.4c-.14-.06-.53-.2-1-.18V5.5a.5.5 0 00-.5-.5h-13a.5.5 0 00-.5.5v9c0 .28.22.5.5.5H6v-1.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5v1.07c-1.04.04-1.53.8-1.83 1.24l-.13.19H3.5A1.5 1.5 0 012 14.5v-9zm10.5 3a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm3.33 2.76l.4-.94a.96.96 0 011.08-.59l.1.03.5.16c.49.16.87.58 1 1.11.28 1.27-.07 2.81-1.06 4.63-.99 1.82-2.07 2.9-3.25 3.28a1.4 1.4 0 01-1.32-.27l-.1-.1-.38-.38c-.32-.33-.4-.85-.17-1.26l.05-.09.58-.84a.95.95 0 01.98-.4l.1.02 1.05.35a4.03 4.03 0 001.53-2.46l.03-.22-.88-.83c-.29-.28-.4-.7-.27-1.1l.03-.1z"></path></svg>`,
	4,
)

function VideoPersonCallIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.5 8.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM2 5.5C2 4.67 2.67 4 3.5 4h13c.83 0 1.5.67 1.5 1.5v9c0 .83-.67 1.5-1.5 1.5h-13A1.5 1.5 0 012 14.5v-9zM14 15h2.5a.5.5 0 00.5-.5v-9a.5.5 0 00-.5-.5h-13a.5.5 0 00-.5.5v9c0 .28.22.5.5.5H6v-1.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5V15z"></path></svg>`,
	4,
)

function VideoPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.3 4.01C2.57 4.11 2 4.74 2 5.5v9c0 .83.67 1.5 1.5 1.5h11.8l1.85 1.85a.5.5 0 00.7-.7l-15-15zM11.3 12H7.5c-.83 0-1.5.67-1.5 1.5V15H3.5a.5.5 0 01-.5-.5v-9c0-.28.22-.5.5-.5h.8l3.22 3.22-.02.28a2.5 2.5 0 002.78 2.48L11.29 12zM8.57 6.45l3.48 3.48a2.5 2.5 0 00-3.48-3.48zM17 14.5c0 .1-.03.2-.1.29l.72.7c.24-.26.38-.6.38-.99v-9c0-.83-.67-1.5-1.5-1.5H6.12l1 1h9.38c.28 0 .5.22.5.5v9z"></path></svg>`,
	4,
)

function VideoPersonOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.76 4h12.73A1.5 1.5 0 0118 5.5v9a1.5 1.5 0 01-1.5 1.5H3.51a1.5 1.5 0 01-1.5-1.5V9.89c.16.07.33.1.5.11.17 0 .34-.04.5-.1v4.6a.5.5 0 00.5.5h2.5v-1.5A1.5 1.5 0 017.5 12h5a1.5 1.5 0 011.5 1.5V15h2.5a.5.5 0 00.5-.5v-9a.5.5 0 00-.5-.5H4.3a.57.57 0 01-.2-.12.57.57 0 01-.14-.23L3.76 4zm8 2.73a2.5 2.5 0 11-3.54 3.54 2.5 2.5 0 013.54-3.54zm-7.64 2.6a.18.18 0 00-.12.16c0 .04.01.08.03.1.02.04.05.06.09.08l.46.14a.96.96 0 01.6.6l.15.46a.18.18 0 00.16.13.18.18 0 00.17-.13l.15-.45a.94.94 0 01.6-.6l.46-.15a.17.17 0 00.08-.07.18.18 0 00-.08-.27h-.01l-.46-.15a.95.95 0 01-.6-.6l-.15-.46a.19.19 0 00-.04-.06.18.18 0 00-.13-.06.19.19 0 00-.1.04.18.18 0 00-.07.08l-.15.46a.99.99 0 01-.22.37c-.1.1-.23.18-.37.23l-.45.15zM2.5 9a.3.3 0 01-.28-.2l-.25-.76a1.57 1.57 0 00-1-1L.2 6.78A.3.3 0 010 6.5a.3.3 0 01.2-.28l.77-.25a1.57 1.57 0 00.98-.98v-.02l.25-.77A.3.3 0 012.5 4a.3.3 0 01.28.2l.25.77.1.22c.07.14.16.28.28.4.17.17.38.3.62.38l.76.25h.02a.3.3 0 01.2.29.3.3 0 01-.2.28l-.77.25a1.57 1.57 0 00-1 1l-.25.76v.02a.32.32 0 01-.1.13.3.3 0 01-.18.05z"></path></svg>`,
	4,
)

function VideoPersonSparkleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5.5C2 4.67 2.67 4 3.5 4h13c.83 0 1.5.67 1.5 1.5v4.76a5.5 5.5 0 00-1-.66V5.5a.5.5 0 00-.5-.5h-13a.5.5 0 00-.5.5v9c0 .28.22.5.5.5H6v-1.5c0-.83.67-1.5 1.5-1.5h2.1a5.48 5.48 0 00-.4 4H3.5A1.5 1.5 0 012 14.5v-9zm10.5 3c0 .34-.07.66-.19.95-.8.35-1.5.88-2.04 1.54L10 11a2.5 2.5 0 112.5-2.5zm6.5 6a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-4.02-2.64a.5.5 0 00-.96 0l-.47 1.53H12c-.48 0-.69.65-.3.95l1.26.94-.48 1.53c-.15.49.38.89.77.59l1.25-.95 1.25.95c.4.3.92-.1.77-.59l-.48-1.53 1.25-.94c.4-.3.2-.95-.3-.95h-1.54l-.47-1.53z"></path></svg>`,
	4,
)

function VideoPersonStarIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.3 4.01C2.57 4.11 2 4.74 2 5.5v9c0 .83.67 1.5 1.5 1.5h5.7a5.5 5.5 0 01.4-4H7.5c-.83 0-1.5.67-1.5 1.5V15H3.5a.5.5 0 01-.5-.5v-9c0-.28.22-.5.5-.5h.8l3.22 3.22-.02.28a2.5 2.5 0 002.77 2.49v-.01l.71.71a4.5 4.5 0 006.37 6.29.5.5 0 00.5-.83l-15-15zM16.5 17.2c-.13.27-.47.4-.75.2l-1.25-.95-1.25.95c-.4.3-.92-.1-.77-.59l.48-1.53-1.25-.94c-.4-.3-.2-.95.3-.95h.68l3.8 3.81zM8.57 6.45l3.25 3.25c.16-.1.32-.17.5-.25A2.5 2.5 0 0010 6c-.53 0-1.02.17-1.43.45zm3.99 3.99l1.45 1.45.01-.03a.5.5 0 01.96 0l.45 1.45.08.08H17c.48 0 .68.65.3.95l-.48.36 1.74 1.74a4.5 4.5 0 00-6-6zM6.12 4l1 1h9.38c.28 0 .5.22.5.5v4.1c.36.18.7.4 1 .66V5.5c0-.83-.67-1.5-1.5-1.5H6.12z"></path></svg>`,
	4,
)

function VideoPersonStarOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.5 5c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5h1c.83 0 1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5h-1zm5 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5h1c.83 0 1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5h-1zm-12.57.45A1.25 1.25 0 002 6.5v7c0 .98 1.08 1.58 1.92 1.06l5.5-3.46c.77-.5.77-1.62 0-2.11l-5.5-3.54z"></path></svg>`,
	4,
)

function VideoPlayPauseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 6.5A2.5 2.5 0 0010.5 4h-6A2.5 2.5 0 002 6.5v7A2.5 2.5 0 004.5 16h4.7A5.5 5.5 0 0113 9.2V6.5zm5-.3v4.06a5.48 5.48 0 00-4-1.24V7.93l2.77-2.31a.75.75 0 011.23.57zm-8 8.3a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm1 0a3.5 3.5 0 015.6-2.8l-4.9 4.9a3.48 3.48 0 01-.7-2.1zm3.5 3.5c-.79 0-1.51-.26-2.1-.7l4.9-4.9a3.5 3.5 0 01-2.8 5.6z"></path></svg>`,
	4,
)

function VideoProhibitedIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.5 4A2.5 2.5 0 0113 6.5v7a2.5 2.5 0 01-2 2.45V12.5A3.5 3.5 0 007.5 9h-4c-.54 0-1.05.12-1.5.34V6.5A2.5 2.5 0 014.5 4h6zm3.5 8.08V7.93l2.77-2.31a.75.75 0 011.23.57v7.67c0 .64-.75.99-1.24.57L14 12.08zM1 12.5A2.5 2.5 0 013.5 10h4a2.5 2.5 0 012.5 2.5v4A2.5 2.5 0 017.5 19h-4A2.5 2.5 0 011 16.5v-4zm4.02.03a.45.45 0 00-.45-.03.5.5 0 00-.15.1.5.5 0 00-.14.36v3.08a.5.5 0 00.14.35.45.45 0 00.48.13.52.52 0 00.13-.06l2.3-1.57c.06-.04.12-.1.16-.18a.54.54 0 000-.49.49.49 0 00-.17-.18l-2.3-1.5z"></path></svg>`,
	4,
)

function VideoRecordingIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 5c0-1.1.9-2 2-2h8a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm13 5.66V5.33l2.25-1.27a.5.5 0 01.75.44v7a.5.5 0 01-.75.44L15 10.66zm-8 3.09h3v.5A3.75 3.75 0 016.25 18H3.5a.5.5 0 01-.5-.5v-1.75c0-.28.22-.5.5-.5h2.75c.41 0 .75-.34.75-.75v-.75z"></path></svg>`,
	4,
)

function VideoSecurityIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 2A2.5 2.5 0 004 4.5v5A2.5 2.5 0 006.5 12h4A2.5 2.5 0 0013 9.5v-5A2.5 2.5 0 0010.5 2h-4zm9.4 7.92L14 8.89V5.1l1.9-1.03a.75.75 0 011.1.66v4.52c0 .57-.6.93-1.1.66zM3.66 11.89c-.32.12-.6.26-.85.4-.41.27-.82.66-.82 1.21 0 .55.4.94.82 1.2.44.28 1.05.51 1.75.7a22.04 22.04 0 005.72.6l-1.14 1.15a.5.5 0 00.7.7l2-2a.5.5 0 000-.7l-2-2a.5.5 0 00-.7.7L10.29 15H10c-2.04 0-3.87-.22-5.17-.57a5.55 5.55 0 01-1.47-.57C3 13.64 3 13.5 3 13.5c0 0 .01-.14.36-.36.27-.17.68-.34 1.21-.5a3.01 3.01 0 01-.9-.75zm9.4.29c.27-.26.5-.57.65-.92.63.1 1.2.2 1.71.34.7.19 1.3.42 1.75.7.41.26.82.65.82 1.2 0 .55-.4.94-.82 1.2a6.5 6.5 0 01-1.75.7l-.85.2a.49.49 0 01-.58-.5c0-.24.18-.44.42-.5.26-.05.52-.1.75-.17a5.55 5.55 0 001.47-.57c.35-.22.36-.35.36-.36 0 0-.01-.14-.36-.36-.32-.2-.81-.4-1.47-.57-.6-.16-1.31-.3-2.1-.4z"></path></svg>`,
	4,
)

function VideoSwitchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 6.5A2.5 2.5 0 0010.5 4h-6A2.5 2.5 0 002 6.5v3.76a5.5 5.5 0 018.8 5.73A2.5 2.5 0 0013 13.5v-7zm1 1.43v4.15l2.76 2.35a.75.75 0 001.24-.57V6.2a.75.75 0 00-1.23-.57L14 7.93zM1 14.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm6.5-3c.28 0 .5.22.5.5v1.5a.5.5 0 01-.5.5H6a.5.5 0 010-1h.47a1.99 1.99 0 00-2.38.34.5.5 0 01-.71-.71A3 3 0 017 12.15V12c0-.28.22-.5.5-.5zm-.88 5.53A3 3 0 014 16.85V17a.5.5 0 01-1 0v-1.5c0-.28.22-.5.5-.5H5a.5.5 0 010 1h-.47a1.99 1.99 0 002.38-.34.5.5 0 01.71.71 3 3 0 01-1 .66z"></path></svg>`,
	4,
)

function VideoSyncIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M1.96 4.5c0-.83.67-1.5 1.5-1.5H16.4c.83 0 1.5.67 1.5 1.5v8c0 .83-.67 1.5-1.5 1.5H12v2.01h1.5a.5.5 0 010 1h-7a.5.5 0 110-1H8V14H3.46a1.5 1.5 0 01-1.5-1.5v-8zM9 14v2.01h2V14H9zM4 5.5v6c0 .28.22.5.5.5h1a.5.5 0 00.5-.5v-6a.5.5 0 00-.5-.5h-1a.5.5 0 00-.5.5zm3 0v6c0 .28.22.5.5.5h8a.5.5 0 00.5-.5v-6a.5.5 0 00-.5-.5h-8a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function ViewDesktopIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 4c0-1.1.9-2 2-2h6a2 2 0 012 2v12a2 2 0 01-2 2H7a2 2 0 01-2-2V4zm2.5 0a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h5a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-5zm0 4a.5.5 0 00-.5.5v5c0 .28.22.5.5.5h5a.5.5 0 00.5-.5v-5a.5.5 0 00-.5-.5h-5zM9 15.5c0 .28.22.5.5.5h1a.5.5 0 000-1h-1a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function ViewDesktopMobileIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.7 6.16c.34.25.4.72.14 1.05L2.7 10l2.14 2.8a.75.75 0 11-1.18.9l-2.5-3.24a.75.75 0 010-.92l2.5-3.25a.75.75 0 011.05-.13zm10.46 6.63a.75.75 0 101.18.92l2.5-3.25c.21-.27.21-.65 0-.92l-2.5-3.25a.75.75 0 10-1.18.92L17.3 10l-2.14 2.8zM6 11a1 1 0 100-2 1 1 0 000 2zm5-1a1 1 0 11-2 0 1 1 0 012 0zm3 1a1 1 0 100-2 1 1 0 000 2z"></path></svg>`,
	4,
)

function VirtualNetworkIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.84 7.2a.75.75 0 00-1.18-.9l-2.5 3.24c-.21.27-.21.65 0 .92l2.5 3.25a.75.75 0 101.18-.92L2.7 10l2.14-2.8zm13.12 3.84a2.5 2.5 0 00-1.13-1.66l-1.67-2.17a.75.75 0 111.18-.92l2.5 3.25c.21.27.21.65 0 .92l-.52.68a2.49 2.49 0 00-.36-.1zM7 10a1 1 0 11-2 0 1 1 0 012 0zm3 1a1 1 0 100-2 1 1 0 000 2zm2 1v-.5c0-.83.67-1.5 1.5-1.5h2c.83 0 1.5.67 1.5 1.5v.5h.5c.83 0 1.5.67 1.5 1.5V15h-2v-.5a.5.5 0 00-1 0v.5h-3v-.5a.5.5 0 00-1 0v.5h-2v-1.5c0-.83.67-1.5 1.5-1.5h.5zm1-.5v.5h3v-.5a.5.5 0 00-.5-.5h-2a.5.5 0 00-.5.5zm4 4.5h2v1.5c0 .83-.67 1.5-1.5 1.5h-6a1.5 1.5 0 01-1.5-1.5V16h2v.5a.5.5 0 001 0V16h3v.5a.5.5 0 001 0V16z"></path></svg>`,
	4,
)

function VirtualNetworkToolboxIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 10a1 1 0 112 0 1 1 0 01-2 0zm7-2a2 2 0 011.74 1c1.23.06 2.37.52 3.26 1.26V6a2 2 0 00-2-2H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.2a5.5 5.5 0 011.81-5.76A2.02 2.02 0 0111.27 9H8.73A2 2 0 117 8h6zm1.5 11a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm-.9-6.4l-.9.9h1.55A2.75 2.75 0 0117 16.25v.25a.5.5 0 01-1 0v-.25c0-.97-.78-1.75-1.75-1.75h-1.54l.9.9a.5.5 0 01-.71.7l-1.76-1.75a.5.5 0 010-.7l1.76-1.75a.5.5 0 01.7.7z"></path></svg>`,
	4,
)

function VoicemailArrowBackIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 10a1 1 0 112 0 1 1 0 01-2 0zm7-2a2 2 0 011.74 1c1.23.06 2.37.52 3.26 1.26V6a2 2 0 00-2-2H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.2a5.5 5.5 0 011.81-5.76A2.02 2.02 0 0111.27 9H8.73A2 2 0 117 8h6zm-3 6.5a4.5 4.5 0 109 0 4.5 4.5 0 00-9 0zm5.4-2.6c.2-.2.5-.2.7 0l1.75 1.75a.5.5 0 010 .7L16.1 16.1a.5.5 0 01-.7-.7l.9-.9h-1.55c-.97 0-1.75.78-1.75 1.75v.25a.5.5 0 01-1 0v-.25a2.75 2.75 0 012.75-2.75h1.54l-.9-.9a.5.5 0 010-.7z"></path></svg>`,
	4,
)

function VoicemailArrowForwardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13 8a2 2 0 011.74 1c1.23.06 2.37.52 3.26 1.26V6a2 2 0 00-2-2H4a2 2 0 00-2 2v8c0 1.1.9 2 2 2h5.2a5.5 5.5 0 011.81-5.76A2.02 2.02 0 0111.27 9H8.73A2 2 0 117 8h6zm-7 2a1 1 0 112 0 1 1 0 01-2 0zm13 4.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-7 0c0 .28.22.5.5.5h4a.5.5 0 000-1h-4a.5.5 0 00-.5.5z"></path></svg>`,
	4,
)

function VoicemailArrowSubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 10a1 1 0 112 0 1 1 0 01-2 0zm6 0a1 1 0 112 0 1 1 0 01-2 0zM2 6c0-1.1.9-2 2-2h12a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6zm7 4a2 2 0 00-.27-1h2.54A2 2 0 1013 8H7a2 2 0 102 2z"></path></svg>`,
	4,
)

function VoicemailIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4 5.75a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM9.25 4c.7 0 1.3.41 1.59 1.01.77.05 1.5.25 2.16.59V2.5c0-.83-.67-1.5-1.5-1.5h-9C1.67 1 1 1.67 1 2.5V9c0 .83.67 1.5 1.5 1.5H5c0-1.93 1-3.63 2.5-4.61A1.78 1.78 0 017.68 5H6.33a1.75 1.75 0 11-1.58-1h4.5zm-.62 1.33c.3-.11.62-.2.95-.25a.75.75 0 00-.95.25zM15 10.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2 0a.5.5 0 00-.5-.5h-4a.5.5 0 000 1h4a.5.5 0 00.5-.5z"></path></svg>`,
	4,
)

function VoicemailSubtractIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 9h-1.27l1.73-3a1 1 0 00-.36-1.37L11 3.13a1 1 0 00-1.37.37l-2.5 4.33A1 1 0 007.26 9H6.5a.5.5 0 000 1h7a.5.5 0 000-1zm-3-5l2.6 1.5L11.08 9H9.16L8 8.33 10.5 4zm4.04 3l-.58 1h.54l2.25 3H3.25L5.5 8h.4a1 1 0 01.08-.17L6.46 7H5.5a1 1 0 00-.8.4l-2.5 3.33a1 1 0 00-.2.6V16a1 1 0 001 1h14a1 1 0 001-1v-4.67a1 1 0 00-.2-.6L15.3 7.4a1 1 0 00-.76-.4z"></path></svg>`,
	4,
)

function VoteIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8 7v2h4V7H8z"></path><path d="M7.5 1c.28 0 .5.22.5.5V3h6.5c.83 0 1.5.67 1.5 1.5v7c0 .1-.03.2-.08.28L14 14.65v1.85c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 016 16.5v-1.85l-1.92-2.87A.5.5 0 014 11.5v-7C4 3.67 4.67 3 5.5 3H7V1.5c0-.28.22-.5.5-.5zM7 6.5v3c0 .28.22.5.5.5h5a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5h-5a.5.5 0 00-.5.5zm1 6c0 .28.22.5.5.5h3a.5.5 0 000-1h-3a.5.5 0 00-.5.5z"></path></svg>`,
	6,
)

function WalkieTalkieIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.18 1.34a1.5 1.5 0 00-2.18.3L6.96 6h1.22l2.64-3.79a.5.5 0 01.73-.1l.8.66L10.12 6h1.22l1.8-2.6 1.68 1.37c.2.16.24.46.1.67l-.4.56h1.22a1.5 1.5 0 00-.3-2.01l-3.26-2.65zM4.5 5C3.67 5 3 5.67 3 6.5v8A2.5 2.5 0 005.5 17H15a2 2 0 002-2V9a2 2 0 00-2-2H4.5a.5.5 0 010-1h1.47l.7-1H4.5zm9 7h1a.5.5 0 010 1h-1a.5.5 0 010-1z"></path></svg>`,
	4,
)

function WalletCreditCardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 3C3.67 3 3 3.67 3 4.5v10A2.5 2.5 0 005.5 17H15a2 2 0 002-2V7a2 2 0 00-1-1.73V5a2 2 0 00-2-2H4.5zM15 5H4.5a.5.5 0 010-1H14a1 1 0 011 1zm-1.5 6h1a.5.5 0 010 1h-1a.5.5 0 010-1z"></path></svg>`,
	4,
)

function WalletIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$19 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h2.25a.75.75 0 010 1.5H6c-.83 0-1.5.67-1.5 1.5v2.25a.75.75 0 01-1.5 0V6zm8-2.25c0-.41.34-.75.75-.75H14a3 3 0 013 3v2.25a.75.75 0 01-1.5 0V6c0-.83-.67-1.5-1.5-1.5h-2.25a.75.75 0 01-.75-.75zM3.75 11c.41 0 .75.34.75.75V14c0 .13.02.26.05.39l3.68-3.68a2.5 2.5 0 013.54 0l3.68 3.68c.03-.13.05-.26.05-.39v-2.25a.75.75 0 011.5 0V14a3 3 0 01-3 3h-2.25a.75.75 0 010-1.5H14c.13 0 .26-.02.39-.05l-3.68-3.68a1 1 0 00-1.42 0l-3.68 3.68c.13.03.26.05.39.05h2.25a.75.75 0 010 1.5H6a3 3 0 01-3-3v-2.25c0-.41.34-.75.75-.75zM14 7.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"></path></svg>`,
	4,
)

function WallpaperIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$19.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$18 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 2.5a.5.5 0 00-1 0V3h-.5a.5.5 0 000 1h.5v.5a.5.5 0 001 0V4h.5a.5.5 0 000-1H17v-.5zm-10 3a.5.5 0 01-.5.5H6v.5a.5.5 0 01-1 0V6h-.5a.5.5 0 010-1H5v-.5a.5.5 0 011 0V5h.5c.28 0 .5.22.5.5zm9 9a.5.5 0 01-.5.5H15v.5a.5.5 0 01-1 0V15h-.5a.5.5 0 010-1h.5v-.5a.5.5 0 011 0v.5h.5c.28 0 .5.22.5.5zm-2.57-7.93a1.91 1.91 0 00-2.7 0l-.48.47 2.7 2.71.48-.48c.75-.74.75-1.96 0-2.7zm-1.18 3.89l-2.7-2.71-6.99 6.98a1.91 1.91 0 102.7 2.7l6.99-6.97z"></path></svg>`,
	4,
)

function WandIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$18.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$17 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.68 2.79a1.5 1.5 0 012.64 0l6.5 12A1.5 1.5 0 0116.5 17h-13a1.5 1.5 0 01-1.32-2.21l6.5-12zM10.5 7.5a.5.5 0 00-1 0v4a.5.5 0 001 0v-4zm.25 6.25a.75.75 0 10-1.5 0 .75.75 0 001.5 0z"></path></svg>`,
	4,
)

function WarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$17.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$16 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7.69 1.85L1.13 13.78A1.5 1.5 0 002.44 16h7.94a7.27 7.27 0 01-.38-2.12v-2.79c0-.75.59-1.42 1.4-1.42.9 0 1.73-.35 2.56-1.2L10.3 1.85a1.5 1.5 0 00-2.62 0zM9 5.75c.41 0 .75.34.75.75v4a.75.75 0 01-1.5 0v-4c0-.41.34-.75.75-.75zm.75 7a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"></path><path d="M17 10.35a4.63 4.63 0 01-1-.59c-.24-.18-.48-.4-.72-.64a.39.39 0 00-.56 0 4.5 4.5 0 01-3.32 1.55.4.4 0 00-.4.41v2.77c.03.8.18 1.51.44 2.15A4.81 4.81 0 0013 18c.52.4 1.15.73 1.87.98.09.03.17.03.26 0 2.56-.89 3.87-2.71 3.87-5.4V11a.4.4 0 00-.4-.33 4.22 4.22 0 01-1.6-.32z"></path></svg>`,
	6,
)

function WarningShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$16.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$15 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M7 15a1 1 0 110 2 1 1 0 010-2zm8.5-7a2.5 2.5 0 110 5H14.59c.11.28.17.57.17.89a2.35 2.35 0 01-2.37 2.37c-1 0-1.74-.44-2.13-1.17a.75.75 0 011.27-.8l.1.17c.14.2.36.3.76.3.5 0 .87-.37.87-.87 0-.44-.36-.82-.84-.87l-.21-.01H2.74a.75.75 0 01-.1-1.5H15.44l.18-.02a1 1 0 10-1.01-1.45l-.1.21a.75.75 0 01-1.36-.6A2.5 2.5 0 0115.5 8zm-6-5a3.5 3.5 0 01.43 6.97l-.1.02H2.75a.75.75 0 01-.1-1.49H9.5a2 2 0 10-2-2 .75.75 0 01-1.5 0A3.5 3.5 0 019.5 3zM3 3a1 1 0 110 2 1 1 0 010-2zm14-1a1 1 0 110 2 1 1 0 010-2z"></path></svg>`,
	4,
)

function WeatherBlowingSnowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$15.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$14 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 7c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 13.24 2.82 2.82 0 0115.13 16H6.87A2.82 2.82 0 014 13.24a2.82 2.82 0 012.87-2.77h.06C7.13 8.57 8.53 7 11 7zM8.4 4c1.45 0 2.72.83 3.34 2.04A6.05 6.05 0 0011 6C8.6 6 6.87 7.3 6.25 9.29l-.07.21-.04.19-.17.03a3.73 3.73 0 00-2.71 2.26 2.62 2.62 0 011.2-4.86h.22A3.77 3.77 0 018.39 4z"></path></svg>`,
	4,
)

function WeatherCloudyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$14.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$13 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 3c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0117 9.24 2.82 2.82 0 0114.13 12h-.73l-.96 1.74a.5.5 0 01-.88-.48l.7-1.26H10.4l-.96 1.74a.5.5 0 01-.88-.48l.7-1.26H7.4l-.96 1.74a.5.5 0 01-.88-.48l.7-1.26h-.39A2.82 2.82 0 013 9.24c0-1.47 1.2-2.67 2.7-2.76h.23C6.13 4.55 7.53 3 10 3zM7.75 14.32a.5.5 0 01.18.68l-1 1.75a.5.5 0 01-.86-.5l1-1.75a.5.5 0 01.68-.18zm3.18.68a.5.5 0 00-.86-.5l-1 1.75a.5.5 0 00.86.5l1-1.75z"></path></svg>`,
	4,
)

function WeatherDrizzleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$13.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$12 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.75 14.5a1.75 1.75 0 110 3.5 1.75 1.75 0 010-3.5zm0 1.5a.25.25 0 100 .5.25.25 0 000-.5zm8.75-8a2.5 2.5 0 110 5H14.59c.11.28.17.57.17.89a2.35 2.35 0 01-2.37 2.37c-1 0-1.74-.44-2.13-1.17a.75.75 0 011.27-.8l.1.17c.14.2.36.3.76.3.5 0 .87-.37.87-.87 0-.44-.36-.82-.84-.87l-.21-.01H2.74a.75.75 0 01-.1-1.5H15.44l.18-.02a1 1 0 10-1.01-1.45l-.1.21a.75.75 0 01-1.36-.6A2.5 2.5 0 0115.5 8zm-6-5a3.5 3.5 0 01.43 6.97l-.1.02H2.75a.75.75 0 01-.1-1.49H9.5a2 2 0 10-2-2 .75.75 0 01-1.5 0A3.5 3.5 0 019.5 3zM3.75 3a1.75 1.75 0 110 3.5 1.75 1.75 0 010-3.5zm12.5-1a1.75 1.75 0 110 3.5 1.75 1.75 0 010-3.5zM3.75 4.5a.25.25 0 100 .5.25.25 0 000-.5zm12.5-1a.25.25 0 100 .5.25.25 0 000-.5z"></path></svg>`,
	4,
)

function WeatherDuststormIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$12.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$11 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 15h7a.5.5 0 01.09 1H6.5a.5.5 0 01-.09-1h.09zm-2-2h11c.27 0 .5.22.5.5a.5.5 0 01-.41.5H4.5a.5.5 0 01-.5-.5.5.5 0 01.41-.5h.1zM10 3c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0117 9.24 2.82 2.82 0 0114.13 12H5.87A2.82 2.82 0 013 9.24c0-1.47 1.2-2.67 2.7-2.76h.23C6.13 4.55 7.53 3 10 3z"></path></svg>`,
	4,
)

function WeatherFogIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$11.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$10 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 16.67A.67.67 0 1111 18a.67.67 0 010-1.33zM8.67 16a.67.67 0 110 1.33.67.67 0 010-1.33zm4.66 0a.67.67 0 110 1.33.67.67 0 010-1.33zM11 6c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 12.24 2.82 2.82 0 0115.13 15H6.87A2.82 2.82 0 014 12.24a2.82 2.82 0 012.87-2.77h.06C7.13 7.57 8.53 6 11 6zM3.8 8.7a.5.5 0 01-.22.6l-.09.04-.8.27a.5.5 0 01-.4-.9l.08-.04.8-.28a.5.5 0 01.63.31zm5.12-4.2c.33.16.62.37.87.62a4.57 4.57 0 00-3.54 3.16l-.07.22-.04.19-.17.03c-.45.09-.87.26-1.25.5a3.28 3.28 0 014.2-4.72zm-6 .17L3 4.7l.76.37a.5.5 0 01-.35.93l-.09-.03-.76-.37a.5.5 0 01.36-.93zM9.99 2.3c.22.1.33.35.26.58l-.03.08-.37.77a.5.5 0 01-.93-.36l.03-.08.37-.76A.5.5 0 0110 2.3zm-3.8-.04l.05.09.27.8a.5.5 0 01-.9.4l-.04-.08-.28-.8a.5.5 0 01.9-.4z"></path></svg>`,
	4,
)

function WeatherHailDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$10.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 16.67A.67.67 0 1111 18a.67.67 0 010-1.33zM8.67 16a.67.67 0 110 1.33.67.67 0 010-1.33zm4.66 0a.67.67 0 110 1.33.67.67 0 010-1.33zM11 6c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 12.24 2.82 2.82 0 0115.13 15H6.87A2.82 2.82 0 014 12.24c0-1.47 1.2-2.67 2.7-2.76h.23C7.13 7.55 8.53 6 11 6zM5.84 2a4.24 4.24 0 013.88 3.14 4.56 4.56 0 00-3.47 3.14l-.07.22-.04.19-.17.03c-.89.18-1.66.67-2.2 1.36l-.28-.15A4.24 4.24 0 012.1 8.66a.63.63 0 01.3-.95c1.38-.49 2.12-1.04 2.55-1.85.46-.89.55-1.82.24-3.08-.1-.41.22-.8.64-.78z"></path></svg>`,
	4,
)

function WeatherHailNightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$_ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.52 10.02A4.48 4.48 0 005.6 9.3c.46-.04.92-.03 1.38.03 1.35.17 2.6.73 3.77 1.4.7.42 1.6.54 2.55.4.4-.05.78-.14 1.12-.27.06-.27.09-.56.09-.85zM5.08 4.38L5 4.32a.5.5 0 00-.64.77l.86.86.07.05a.5.5 0 00.63-.76l-.85-.86zm10.66.64a.5.5 0 00-.77-.64l-.85.86-.06.07a.5.5 0 00.76.64l.86-.86.06-.07zm-5.22-2.59a.5.5 0 00-1 .1v1.2l.02.1a.5.5 0 00.99-.1v-1.2l-.01-.1zm-6.78 9.5a4.81 4.81 0 013-.6c.97.12 1.96.53 3 1.14 1.21.7 2.6.83 3.84.66a7.47 7.47 0 003.21-1.22.5.5 0 00-.58-.82c-.66.47-1.67.9-2.77 1.05-1.1.15-2.23.03-3.19-.53a9.05 9.05 0 00-3.39-1.28 5.8 5.8 0 00-3.6.73.5.5 0 00.48.88zm3 1.4a4.81 4.81 0 00-3 .6.5.5 0 01-.48-.87 5.8 5.8 0 013.6-.73c1.16.15 2.28.63 3.4 1.28.95.56 2.09.68 3.18.53 1.1-.15 2.11-.58 2.77-1.05a.5.5 0 01.58.82 7.47 7.47 0 01-3.2 1.22 5.96 5.96 0 01-3.84-.66 8.08 8.08 0 00-3.01-1.14zm-3 2.6a4.81 4.81 0 013-.6c.97.12 1.96.53 3 1.14 1.21.7 2.6.83 3.84.66a7.47 7.47 0 003.21-1.22.5.5 0 00-.58-.82c-.66.47-1.67.9-2.77 1.05-1.1.15-2.23.03-3.19-.53a9.05 9.05 0 00-3.39-1.28 5.8 5.8 0 00-3.6.73.5.5 0 00.48.88z"></path></svg>`,
	4,
)

function WeatherHazeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$_.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$Z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.36 14a7.98 7.98 0 01-13.48.54.6.6 0 01.29-.9c3-1.08 4.61-2.33 5.55-4.11.98-1.88 1.24-3.94.55-6.76a.6.6 0 01.61-.73A7.98 7.98 0 0116.36 14z"></path></svg>`,
	4,
)

function WeatherMoonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$Z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$Y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7l6.6 6.61-.03.07c-.94 1.78-2.55 3.03-5.55 4.1a.6.6 0 00-.3.9 7.98 7.98 0 0012.14 1.19l2.14 2.13a.5.5 0 00.7-.7l-2.16-2.17-6.5-6.5-6.34-6.33zM16.35 14l-.08.15-6.78-6.78c.27-1.32.21-2.8-.22-4.6a.6.6 0 01.61-.73A7.98 7.98 0 0116.36 14z"></path></svg>`,
	4,
)

function WeatherMoonOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$Y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$X = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 7c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 13.24 2.82 2.82 0 0115.13 16H6.87A2.82 2.82 0 014 13.24a2.82 2.82 0 012.87-2.77h.06C7.13 8.57 8.53 7 11 7zM3.8 9.7a.5.5 0 01-.22.6l-.09.04-.8.27a.5.5 0 01-.4-.9l.08-.04.8-.28a.5.5 0 01.63.31zm5.12-4.2c.33.16.62.37.87.62a4.57 4.57 0 00-3.54 3.16l-.07.22-.04.19-.17.03c-.45.09-.87.26-1.25.5a3.28 3.28 0 014.2-4.72zm-6 .17L3 5.7l.76.37a.5.5 0 01-.35.93l-.09-.03-.76-.37a.5.5 0 01.36-.93zM9.99 3.3c.22.1.33.35.26.58l-.03.08-.37.77a.5.5 0 01-.93-.36l.03-.08.37-.76a.5.5 0 01.67-.23zm-3.8-.04l.05.09.27.8a.5.5 0 01-.9.4l-.04-.08-.28-.8a.5.5 0 01.9-.4z"></path></svg>`,
	4,
)

function WeatherPartlyCloudyDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$X.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$W = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 7c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 13.24 2.82 2.82 0 0115.13 16H6.87A2.82 2.82 0 014 13.24c0-1.47 1.2-2.67 2.7-2.76h.23C7.13 8.55 8.53 7 11 7zM5.84 3a4.24 4.24 0 013.88 3.14 4.56 4.56 0 00-3.47 3.14l-.07.22-.04.19-.17.03c-.89.18-1.66.67-2.2 1.36l-.28-.15A4.24 4.24 0 012.1 9.66a.63.63 0 01.3-.95c1.38-.49 2.12-1.04 2.55-1.85.46-.89.55-1.82.24-3.08-.1-.41.22-.8.64-.78z"></path></svg>`,
	4,
)

function WeatherPartlyCloudyNightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$W.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$V = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.02 4.02c2.46 0 3.86 1.57 4.06 3.47h.06a2.82 2.82 0 012.88 2.76 2.82 2.82 0 01-2.88 2.77h-.71l-.01.02-1.49 2.7a.5.5 0 01-.91-.39l.04-.08 1.23-2.25h-1.85l-.01.02-1.49 2.7a.5.5 0 01-.9-.39l.03-.08 1.23-2.25H7.43l-1.48 2.73a.5.5 0 01-.6.23l-.08-.03a.5.5 0 01-.24-.6l.04-.08 1.22-2.25h-.4a2.82 2.82 0 01-2.87-2.77c0-1.46 1.19-2.67 2.7-2.75h.23c.2-1.92 1.6-3.48 4.07-3.48z"></path></svg>`,
	4,
)

function WeatherRainIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$V.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$U = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 6c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 12.24 2.82 2.82 0 0115.13 15h-.7l-.01.04-1.49 2.7a.5.5 0 01-.91-.4l.03-.07L13.3 15h-1.85l-.02.04-1.49 2.7a.5.5 0 01-.91-.4l.03-.07L10.31 15H8.44l-1.5 2.75a.5.5 0 01-.9-.4l.03-.08L7.3 15h-.43A2.82 2.82 0 014 12.24a2.82 2.82 0 012.87-2.77h.06C7.13 7.57 8.53 6 11 6zM3.8 8.7a.5.5 0 01-.22.6l-.09.04-.8.27a.5.5 0 01-.4-.9l.08-.04.8-.28a.5.5 0 01.63.31zm5.12-4.2c.33.16.62.37.87.62a4.57 4.57 0 00-3.54 3.16l-.07.22-.04.19-.17.03c-.45.09-.87.26-1.25.5a3.28 3.28 0 014.2-4.72zm-6 .17L3 4.7l.76.37a.5.5 0 01-.35.93l-.09-.03-.76-.37a.5.5 0 01.36-.93zM9.99 2.3c.22.1.33.35.26.58l-.03.08-.37.77a.5.5 0 01-.93-.36l.03-.08.37-.76a.5.5 0 01.67-.23zm-3.8-.04l.05.09.27.8a.5.5 0 01-.9.4l-.04-.08-.28-.8a.5.5 0 01.9-.4z"></path></svg>`,
	4,
)

function WeatherRainShowersDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$U.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$T = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.02 6.02c2.46 0 3.86 1.57 4.06 3.47h.06a2.82 2.82 0 012.88 2.76 2.82 2.82 0 01-2.88 2.77h-.71l-.01.02-1.49 2.7a.5.5 0 01-.91-.39l.03-.08 1.24-2.25h-1.85l-.01.02-1.49 2.7a.5.5 0 01-.91-.39l.03-.08 1.24-2.25H8.43l-1.48 2.73a.5.5 0 01-.6.23l-.08-.03a.5.5 0 01-.24-.6l.04-.08 1.22-2.25h-.4a2.82 2.82 0 01-2.87-2.77c0-1.46 1.19-2.67 2.7-2.75h.23c.2-1.92 1.6-3.48 4.07-3.48zm-5.16-4a4.24 4.24 0 013.87 3.14A4.56 4.56 0 006.26 8.3l-.06.22-.05.18-.16.03c-.9.19-1.67.68-2.2 1.37l-.29-.15a4.24 4.24 0 01-1.37-1.27.63.63 0 01.3-.95c1.38-.5 2.12-1.05 2.54-1.85.47-.89.55-1.83.24-3.08-.1-.41.23-.8.65-.78z"></path></svg>`,
	4,
)

function WeatherRainShowersNightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$T.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$S = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 4c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0117 10.24 2.82 2.82 0 0114.13 13h-1.5a.5.5 0 11-.95 0H7.44l-1.5 2.75a.5.5 0 01-.9-.4l.03-.08L6.3 13h-.43A2.82 2.82 0 013 10.24a2.82 2.82 0 012.87-2.77h.06C6.13 5.57 7.53 4 10 4zm1.5 11a.5.5 0 110 1 .5.5 0 010-1zm-2.2-.94c.22.12.31.37.24.59l-.04.08-.56 1.01a.5.5 0 01-.68.2.49.49 0 01-.23-.59l.03-.08.56-1.01a.5.5 0 01.68-.2zm4.2-.06a.5.5 0 110 1 .5.5 0 010-1z"></path></svg>`,
	4,
)

function WeatherRainSnowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$S.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$R = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.38 0 .7.28.74.65l.01.1v2.37l1.5-1.32a.75.75 0 011 1.13l-2.5 2.19v2.13h2.13l2.2-2.5a.75.75 0 01.97-.13l.08.06c.29.25.34.67.14.97l-.07.1-1.32 1.5h2.37c.38 0 .7.28.74.65l.01.1c0 .38-.28.7-.65.74h-2.47l1.32 1.52c.25.28.25.7 0 .98l-.07.08a.75.75 0 01-.98 0l-.08-.07-2.2-2.5h-2.12v2.13l2.5 2.2c.28.24.33.66.13.96l-.06.1a.75.75 0 01-.97.13l-.1-.07-1.5-1.32v2.37c0 .38-.28.7-.65.74H10a.75.75 0 01-.75-.64v-2.47l-1.5 1.32a.75.75 0 01-1-1.13l2.5-2.2v-2.12H7.3l-2.37 2.7a.75.75 0 11-1.13-1l1.5-1.7H2.75a.75.75 0 01-.74-.65L2 10c0-.38.28-.7.65-.74l.1-.01h2.2L3.8 7.95a.75.75 0 111.13-1l2.01 2.3h2.3V7.12l-2.49-2.2a.75.75 0 01-.13-.97l.06-.08a.75.75 0 01.97-.14l.1.07 1.5 1.32V2.75c0-.35.23-.64.55-.72L9.9 2 10 2z"></path></svg>`,
	4,
)

function WeatherSnowflakeIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$R.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$Q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.5 15a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zM7 14a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zM10 4c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0117 10.24 2.82 2.82 0 0114.13 13H5.87A2.82 2.82 0 013 10.24c0-1.47 1.2-2.67 2.7-2.76h.23C6.13 5.55 7.53 4 10 4z"></path></svg>`,
	4,
)

function WeatherSnowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$Q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$P = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 17a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zM8 16a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zM11 6c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 12.24 2.82 2.82 0 0115.13 15H6.87A2.82 2.82 0 014 12.24a2.82 2.82 0 012.87-2.77h.06C7.13 7.57 8.53 6 11 6zM3.8 8.7a.5.5 0 01-.22.6l-.09.04-.8.27a.5.5 0 01-.4-.9l.08-.04.8-.28a.5.5 0 01.63.31zm5.12-4.2c.33.16.62.37.87.62a4.57 4.57 0 00-3.54 3.16l-.07.22-.04.19-.17.03c-.45.09-.87.26-1.25.5a3.28 3.28 0 014.2-4.72zm-6 .17L3 4.7l.76.37a.5.5 0 01-.35.93l-.09-.03-.76-.37a.5.5 0 01.36-.93zM9.99 2.3c.22.1.33.35.26.58l-.03.08-.37.77a.5.5 0 01-.93-.36l.03-.08.37-.76a.5.5 0 01.67-.23zm-3.8-.04l.05.09.27.8a.5.5 0 01-.9.4l-.04-.08-.28-.8a.5.5 0 01.9-.4z"></path></svg>`,
	4,
)

function WeatherSnowShowerDayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$P.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$O = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 17a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zM8 16a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zm3 0a.5.5 0 110 1 .5.5 0 010-1zM11 6c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 12.24 2.82 2.82 0 0115.13 15H6.87A2.82 2.82 0 014 12.24c0-1.47 1.2-2.67 2.7-2.76h.23C7.13 7.55 8.53 6 11 6zM5.84 2a4.24 4.24 0 013.88 3.14 4.56 4.56 0 00-3.47 3.14l-.07.22-.04.19-.17.03c-.89.18-1.66.67-2.2 1.36l-.28-.15A4.24 4.24 0 012.1 8.66a.63.63 0 01.3-.95c1.38-.49 2.12-1.04 2.55-1.85.46-.89.55-1.82.24-3.08-.1-.41.22-.8.64-.78z"></path></svg>`,
	4,
)

function WeatherSnowShowerNightIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$O.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$N = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M15.5 8a2.5 2.5 0 01.16 5H14.6c.11.28.17.57.17.89a2.35 2.35 0 01-2.37 2.37c-1 0-1.74-.44-2.13-1.17a.75.75 0 011.27-.8l.1.17c.14.2.36.3.76.3.5 0 .87-.37.87-.87 0-.44-.36-.82-.84-.87l-.21-.01H2.74a.75.75 0 01-.1-1.5H15.44l.18-.02a1 1 0 10-1.01-1.45l-.1.21a.75.75 0 01-1.36-.6A2.5 2.5 0 0115.5 8zm-6 2H2.75a.75.75 0 01-.1-1.5H9.5a2 2 0 10-2-2 .75.75 0 01-1.5 0 3.5 3.5 0 113.93 3.47l-.1.02H2.75 9.5z"></path></svg>`,
	4,
)

function WeatherSquallsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$N.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$M = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M9.5 3.5v-1a.5.5 0 011 0v1a.5.5 0 01-1 0zM7 8a3 3 0 116 0 3 3 0 01-6 0zm2.5 4.5v1a.5.5 0 001 0v-1a.5.5 0 00-1 0zM4.5 8a.5.5 0 000 1h1a.5.5 0 000-1h-1zm11 1h-1a.5.5 0 010-1h1a.5.5 0 010 1zM6.15 5.85a.5.5 0 10.7-.7l-1-1a.5.5 0 10-.7.7l1 1zm.7 5.3a.5.5 0 00-.7 0l-1 1a.5.5 0 10.7.7l1-1a.5.5 0 000-.7zm7-5.3a.5.5 0 01-.7-.7l1-1a.5.5 0 01.7.7l-1 1zm-.7 5.3c.2-.2.5-.2.7 0l1 1a.5.5 0 01-.7.7l-1-1a.5.5 0 010-.7zm-7.02 5.3C7.18 16.2 8.46 16 10 16c1.67 0 3.05.23 4.13.53a11.17 11.17 0 013.02 1.33l.03.03a.5.5 0 00.63-.78l-.02-.02-.04-.03a4.8 4.8 0 00-.82-.5c-.57-.31-1.42-.7-2.53-1A16.57 16.57 0 0010 15c-1.62 0-3 .2-4.11.49a12.46 12.46 0 00-3.45 1.44 4.84 4.84 0 00-.23.16l-.01.01h-.01v.01a.5.5 0 00.62.78 1.6 1.6 0 01.19-.13 11.45 11.45 0 013.14-1.3z"></path></svg>`,
	4,
)

function WeatherSunnyHighIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$M.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$L = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10 2c.28 0 .5.22.5.5v1a.5.5 0 01-1 0v-1c0-.28.22-.5.5-.5zm4 8a4 4 0 11-8 0 4 4 0 018 0zm3.5.5a.5.5 0 000-1h-1a.5.5 0 000 1h1zM10 16c.28 0 .5.22.5.5v1a.5.5 0 01-1 0v-1c0-.28.22-.5.5-.5zm-6.5-5.5a.5.5 0 000-1H2.46a.5.5 0 000 1H3.5zm.65-6.35c.2-.2.5-.2.7 0l1 1a.5.5 0 11-.7.7l-1-1a.5.5 0 010-.7zm.7 11.7a.5.5 0 01-.7-.7l1-1a.5.5 0 01.7.7l-1 1zm11-11.7a.5.5 0 00-.7 0l-1 1a.5.5 0 00.7.7l1-1a.5.5 0 000-.7zm-.7 11.7a.5.5 0 00.7-.7l-1-1a.5.5 0 00-.7.7l1 1z"></path></svg>`,
	4,
)

function WeatherSunnyIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$L.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$K = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.66 11a4.5 4.5 0 014.38-5.47A4.48 4.48 0 0114.4 11h3.09a.5.5 0 010 1h-15a.5.5 0 010-1h3.16zm4.47 7a.5.5 0 01-.21 0h.21zM5.08 4.38L5 4.32a.5.5 0 00-.64.77l.86.86.07.05a.5.5 0 00.63-.76l-.85-.86zm10.66.64a.5.5 0 00-.77-.64l-.85.86-.06.07a.5.5 0 00.76.64l.86-.86.06-.07zm-5.22-2.59a.5.5 0 00-1 .1v1.2l.02.1a.5.5 0 00.99-.1v-1.2l-.01-.1zM8.5 16a.5.5 0 000 1h3a.5.5 0 000-1h-3zM5 14c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9A.5.5 0 015 14z"></path></svg>`,
	4,
)

function WeatherSunnyLowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$K.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$J = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11.61 12.13c.2.18.22.5.04.7L10.62 14h1.88a.5.5 0 01.4.81l-2.46 3a.5.5 0 01-.78-.62l1.8-2.19H9.5a.5.5 0 01-.37-.83l1.78-2a.5.5 0 01.7-.04zM11 6c2.46 0 3.86 1.57 4.07 3.47h.06A2.82 2.82 0 0118 12.24 2.82 2.82 0 0115.13 15h-1.21a1.5 1.5 0 00-1.15-1.97l-.13-.02a1.5 1.5 0 00-2.56-1.4l-1.7 1.89c-.4.45-.47 1.02-.3 1.5h-1.2A2.82 2.82 0 014 12.24a2.82 2.82 0 012.87-2.77h.06C7.13 7.57 8.53 6 11 6zM8.4 3c1.45 0 2.72.83 3.34 2.04A6.05 6.05 0 0011 5C8.6 5 6.87 6.3 6.25 8.29l-.07.21-.04.19-.17.03a3.73 3.73 0 00-2.71 2.26 2.62 2.62 0 011.2-4.86h.22A3.77 3.77 0 018.39 3z"></path></svg>`,
	4,
)

function WeatherThunderstormIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$J.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$I = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm3.5 0a.5.5 0 000 1h7a.5.5 0 000-1h-7z"></path></svg>`,
	4,
)

function WebAssetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$I.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$H = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.33 3.46l.11.1.1.11c.64.76.61 1.9-.1 2.6l-3.6 3.63c-.22.22-.5.38-.8.47l-1.96.6a.84.84 0 01-1.04-1.08l.62-1.94c.1-.29.25-.55.47-.76l3.6-3.63a1.9 1.9 0 012.6-.1zM12.9 4H4.5A2.5 2.5 0 002 6.5v2.26c.52-.48 1.12-.98 1.72-1.4A6.55 6.55 0 015.7 6.32c.32-.09.66-.12.99-.05.34.08.63.28.84.59.47.67.13 1.4-.2 1.92-.16.27-.37.56-.57.83l-.02.04c-.21.29-.42.58-.61.88-.16.28-.2.62-.13.86.03.12.1.2.17.27.07.06.19.12.37.13.33.03.76-.08 1.3-.27a.5.5 0 11.33.94 4.2 4.2 0 01-1.71.33 1.52 1.52 0 01-1.41-1.12 2.19 2.19 0 01.21-1.65h.01v-.01c.22-.34.45-.66.66-.95l.01-.02c.21-.29.4-.54.55-.78.32-.53.3-.73.22-.84a.4.4 0 00-.25-.17 1.08 1.08 0 00-.5.03c-.47.12-1.04.44-1.66.88-.85.6-1.7 1.38-2.3 1.98v3.35A2.5 2.5 0 004.5 16h11a2.5 2.5 0 002.5-2.5V7.13l-3.45 3.47a2.9 2.9 0 01-1.22.73l-1.96.6A1.84 1.84 0 019.1 9.58l.62-1.94c.14-.44.38-.84.7-1.17L12.9 4z"></path></svg>`,
	4,
)

function WhiteboardIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$H.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$G = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.73 7.56c.4.4.78.87 1.11 1.35a.75.75 0 01-1.23.85 7.97 7.97 0 00-13.14 0 .75.75 0 11-1.23-.86 9.47 9.47 0 0114.5-1.34zm-2.14 1.9c.47.46.88 1.04 1.2 1.64a.75.75 0 11-1.34.69 4.94 4.94 0 00-8.82-.02.75.75 0 01-1.34-.67 6.44 6.44 0 0110.3-1.64zm-1.64 2.38c.37.36.67.8.87 1.28a.75.75 0 01-1.37.6 2.63 2.63 0 00-4.82-.01.75.75 0 11-1.38-.6 4.13 4.13 0 016.7-1.27zm-2.03 2.04a1.24 1.24 0 11-1.76 1.76 1.24 1.24 0 011.76-1.76z"></path></svg>`,
	4,
)

function Wifi1Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$G.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$F = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14.59 9.45c.47.47.88 1.05 1.2 1.65a.75.75 0 01-1.34.69 4.94 4.94 0 00-8.82-.02.75.75 0 11-1.34-.67 6.44 6.44 0 0110.3-1.64zm-1.64 2.4c.37.35.67.8.87 1.27a.75.75 0 01-1.37.6 2.63 2.63 0 00-4.82-.01.75.75 0 11-1.38-.6 4.13 4.13 0 016.7-1.27zm-2.03 2.03a1.24 1.24 0 11-1.76 1.76 1.24 1.24 0 011.76-1.76z"></path></svg>`,
	4,
)

function Wifi2Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$F.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$E = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.95 11.84c.37.36.67.8.87 1.28a.75.75 0 01-1.37.6 2.63 2.63 0 00-4.82-.01.75.75 0 11-1.38-.6 4.13 4.13 0 016.7-1.27zm-2.03 2.04a1.24 1.24 0 11-1.76 1.76 1.24 1.24 0 011.76-1.76z"></path></svg>`,
	4,
)

function Wifi3Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$E.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$D = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M10.92 13.88a1.24 1.24 0 11-1.76 1.76 1.24 1.24 0 011.76-1.76z"></path></svg>`,
	4,
)

function Wifi4Icon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$D.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$C = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.73 7.56c.4.4.78.87 1.11 1.35a.75.75 0 01-1.23.85A7.97 7.97 0 005.06 8.03a3 3 0 00-2.4 2.02.75.75 0 01-.42-1.15 9.47 9.47 0 0114.5-1.34zm-5.8 8.08c-.26.25-.6.37-.93.36v-2.48a1.24 1.24 0 01.92 2.12zm.96-2.74a2.63 2.63 0 00-2.08-.76 2 2 0 00-1.31-1.08V11v-.07a4.13 4.13 0 015.32 2.2.75.75 0 01-1.37.6c-.13-.31-.33-.6-.56-.83zm1.64-2.39a4.94 4.94 0 00-5.45-1.04 3.01 3.01 0 00-1.15-1.1 6.45 6.45 0 018.85 2.73.75.75 0 11-1.33.69 5.13 5.13 0 00-.92-1.28zM3.5 11v1H3a1 1 0 00-1 1v4a1 1 0 001 1h5a1 1 0 001-1v-4a1 1 0 00-1-1h-.5v-1a2 2 0 10-4 0zm1 1v-1a1 1 0 112 0v1h-2zm1 2.25a.75.75 0 110 1.5.75.75 0 010-1.5z"></path></svg>`,
	4,
)

function WifiLockIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$C.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$B = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.28 2.22a.75.75 0 00-1.06 1.06l2.89 2.89A9.5 9.5 0 002.24 8.9a.75.75 0 101.23.86A7.97 7.97 0 016.2 7.27l.96.96A6.44 6.44 0 004.3 11.1a.75.75 0 001.34.67 4.9 4.9 0 012.68-2.4l1.28 1.28a4.11 4.11 0 00-3.34 2.46.75.75 0 101.38.6 2.63 2.63 0 013.92-1.1l5.17 5.17a.75.75 0 101.06-1.06L3.28 2.22zm8.09 7.03a4.92 4.92 0 013.08 2.54.75.75 0 101.33-.69A6.43 6.43 0 009.7 7.57l1.68 1.68zM8.55 6.43a7.96 7.96 0 018.06 3.33.75.75 0 101.23-.85A9.47 9.47 0 007.31 5.19l1.24 1.24zm2.37 9.2a1.24 1.24 0 10-1.76-1.75 1.24 1.24 0 001.76 1.76z"></path></svg>`,
	4,
)

function WifiOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$B.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$A = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17.84 8.12a9.47 9.47 0 00-15.6 0 .75.75 0 101.23.85 7.97 7.97 0 0113.14 0 .75.75 0 101.23-.85zM7.11 11.05a4.13 4.13 0 014.18-1.02c-.5.36-.94.8-1.3 1.31a2.62 2.62 0 00-2.36 1.58.75.75 0 11-1.38-.6c.21-.47.5-.9.86-1.27zm7.48-2.39l.33.36a5.58 5.58 0 00-1.97.2 4.94 4.94 0 00-7.32 1.76.75.75 0 11-1.34-.68 6.44 6.44 0 0110.3-1.64zm-2.52 2.78a2 2 0 01-1.43 2.48l-.46.12a4.7 4.7 0 000 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.15-.55a2 2 0 011.43-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.29.13-.57.3-.82.5l.16.55zm2.43 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function WifiSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$A.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$z = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M16.73 7.56c.4.4.78.87 1.11 1.35a.75.75 0 01-1.23.85 7.97 7.97 0 00-13.14 0 .75.75 0 11-1.23-.86 9.47 9.47 0 0114.5-1.34zM5.48 9.46a6.44 6.44 0 018.65-.43c-.52.1-1 .4-1.31.9a4.94 4.94 0 00-7.2 1.84.75.75 0 01-1.33-.67c.3-.61.7-1.16 1.19-1.65zm4.3 6.51l1.08-2.15a1.24 1.24 0 10-1.08 2.15zm1.7-3.4l.68-1.35a4.13 4.13 0 00-5.9 1.9.75.75 0 001.37.6c.13-.32.32-.6.54-.82.9-.9 2.3-1.01 3.31-.33zm2.12-2.02l-3.5 7A1 1 0 0011 19h7a1 1 0 00.9-1.45l-3.5-7a1 1 0 00-1.8 0zM15 12.5v3a.5.5 0 11-1 0v-3a.5.5 0 111 0zm-.5 5.5a.5.5 0 110-1 .5.5 0 010 1z"></path></svg>`,
	4,
)

function WifiWarningIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$z.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$y = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6.5 8a.5.5 0 00-.5.5v4c0 .28.22.5.5.5h4a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-4zM10 9v3H7V9h3zM3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zM4.5 7v7.25c0 .69.56 1.25 1.25 1.25h8.5c.69 0 1.25-.56 1.25-1.25V7h-11z"></path></svg>`,
	4,
)

function WindowAdIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$y.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$x = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15l15 15a.5.5 0 01-.7.7l-1.27-1.26c-.4.26-.87.41-1.38.41h-9A2.5 2.5 0 013 14.5v-9c0-.51.15-.98.41-1.38L2.15 2.85a.5.5 0 11.7-.7zM14.71 15.4L11 11.71v.79a.5.5 0 01-.5.5h-4a.5.5 0 01-.5-.5v-4c0-.28.22-.5.5-.5h.8l-1-1H4.5v7.25c0 .69.56 1.25 1.25 1.25h8.5c.16 0 .32-.03.46-.09zM8.29 9H7v3h3v-1.3L8.3 9zm7.21 4.38V7H9.12L5.15 3.02 5.5 3h9A2.5 2.5 0 0117 5.5v9c0 .12 0 .24-.02.35l-1.48-1.47z"></path></svg>`,
	4,
)

function WindowAdOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$x.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$w = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h5.04a3.3 3.3 0 01.01-1H6a2 2 0 01-2-2V7h12v2.04c.36.06.7.19 1 .36V6a3 3 0 00-3-3H6zm0 6h3v3H6V9zm-.5-1a.5.5 0 00-.5.5v4c0 .28.22.5.5.5h4a.5.5 0 00.5-.5v-4a.5.5 0 00-.5-.5h-4zm12 4a2 2 0 11-4 0 2 2 0 014 0zm1.5 4.5c0 1.25-1 2.5-3.5 2.5S12 17.75 12 16.5c0-.83.67-1.5 1.5-1.5h4c.83 0 1.5.67 1.5 1.5z"></path></svg>`,
	4,
)

function WindowAdPersonIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$w.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$v = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v1H4v7c0 1.1.9 2 2 2h1v1H6a3 3 0 01-3-3V6zm11.75 2C13.78 8 13 8.78 13 9.75V13H9.75C8.78 13 8 13.78 8 14.75v2.5c0 .97.78 1.75 1.75 1.75h6.75a2.5 2.5 0 002.5-2.5V9.75C19 8.78 18.22 8 17.25 8h-2.5zM18 16.5c0 .83-.67 1.5-1.5 1.5H14v-4h4v2.5zm-4-6.75c0-.41.34-.75.75-.75h2.5c.41 0 .75.34.75.75V13h-4V9.75zM9.75 14H13v4H9.75a.75.75 0 01-.75-.75v-2.5c0-.41.34-.75.75-.75z"></path></svg>`,
	4,
)

function WindowAppsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$v.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$u = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.75 3A2.75 2.75 0 003 5.75v8.5A2.75 2.75 0 005.75 17H9.6a5.46 5.46 0 01-.5-1.5H5.74c-.69 0-1.25-.56-1.25-1.25V7h11v2.1c.53.09 1.04.26 1.5.5V5.75A2.75 2.75 0 0014.25 3h-8.5zm8.75 16a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm2.35-4.85a.5.5 0 11-.7.7L15 13.71v2.79a.5.5 0 01-1 0v-2.8l-1.15 1.15a.5.5 0 11-.7-.7l2-2a.5.5 0 01.35-.15.5.5 0 01.35.14l2 2z"></path></svg>`,
	4,
)

function WindowArrowUpIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$u.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$t = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3.6c-.32-.16-.65-.3-1-.4V7H4v7c0 1.1.9 2 2 2h3.2c.1.35.24.68.4 1H6a3 3 0 01-3-3V6zm8.34 4c.79-.56 1.73-.9 2.74-.98a.56.56 0 00-.13-.02h-4.4a.56.56 0 00-.5.3.46.46 0 00.11.55c.1.1.25.15.39.15h1.79zm-5.76-.89a.97.97 0 00-.08.39c0 .14.03.27.08.4.04.12.12.22.2.31.1.09.21.16.33.21.12.05.26.08.39.08s.27-.02.4-.08c.11-.05.22-.13.31-.22a1 1 0 000-1.41c-.1-.09-.2-.16-.33-.21a.95.95 0 00-.38-.08.86.86 0 00-.4.08c-.11.05-.22.13-.31.22s-.16.2-.21.31zM5.5 13.5a.97.97 0 01.29-.7c.1-.1.2-.17.32-.22a.84.84 0 01.39-.08c.13 0 .26.03.38.08s.23.12.32.2a1 1 0 01-.7 1.71.97.97 0 01-.4-.07 1.1 1.1 0 01-.31-.2.84.84 0 01-.21-.32 1.2 1.2 0 01-.08-.4zM17 18.24a4.5 4.5 0 11-5-7.48 4.5 4.5 0 015 7.48zm-2.15-6.1a.5.5 0 00-.85.36V14h-1.5a.5.5 0 000 1H14v1.5a.5.5 0 001 0V15h1.5a.5.5 0 000-1H15v-1.5a.5.5 0 00-.15-.35z"></path></svg>`,
	4,
)

function WindowBulletListAddIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$t.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$s = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.58 9.11a.97.97 0 00-.08.39c0 .14.03.27.08.4.04.12.12.22.2.31.1.09.21.16.33.21.12.05.26.08.39.08s.27-.02.4-.08c.11-.05.22-.13.31-.22a1 1 0 000-1.41c-.1-.09-.2-.16-.33-.21a.95.95 0 00-.38-.08.86.86 0 00-.4.08c-.11.05-.22.13-.31.22s-.16.2-.21.31zm0 4a.97.97 0 00-.08.39c0 .14.03.27.08.4.04.12.12.22.2.31.1.09.21.16.33.21.12.05.26.08.39.08s.27-.02.4-.08c.11-.05.22-.13.31-.22a1.01 1.01 0 00.29-.7 1 1 0 00-.3-.71c-.1-.09-.2-.16-.32-.21a.94.94 0 00-.38-.08.84.84 0 00-.4.08 1.01 1.01 0 00-.53.53zM9.55 10a.56.56 0 01-.39-.15.46.46 0 010-.7c.1-.1.25-.15.39-.15h4.4a.56.56 0 01.5.31.46.46 0 01-.11.54c-.1.1-.25.15-.4.15h-4.4zm-.39 3.85c.1.1.25.15.39.15h4.4a.56.56 0 00.5-.3.46.46 0 00-.11-.55.56.56 0 00-.4-.15h-4.4a.56.56 0 00-.5.3.46.46 0 00.12.55zM6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zM4 14V7h12v7a2 2 0 01-2 2H6a2 2 0 01-2-2z"></path></svg>`,
	4,
)

function WindowBulletListIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$s.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$r = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.65 9.15c.2-.2.5-.2.7 0l2 2a.5.5 0 010 .7l-2 2a.5.5 0 01-.7-.7l1.64-1.65-1.64-1.65a.5.5 0 010-.7zM14 13H9.5a.5.5 0 000 1H14a.5.5 0 000-1zM3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zM4.5 7v7.25c0 .69.56 1.25 1.25 1.25h8.5c.69 0 1.25-.56 1.25-1.25V7h-11z"></path></svg>`,
	4,
)

function WindowConsoleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$r.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$q = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h3.05a2.46 2.46 0 01-.05-.5V16H6a2 2 0 01-2-2V7h13V6a3 3 0 00-3-3H6zm11 5.42A7.81 7.81 0 0014.5 8C12.01 8 10 9.12 10 10.5s2.01 2.5 4.5 2.5 4.5-1.12 4.5-2.5c0-.87-.8-1.63-2-2.08zM14.5 14c1.38 0 2.68-.3 3.67-.86.29-.16.58-.36.83-.59v3.95c0 1.38-2.01 2.5-4.5 2.5S10 17.88 10 16.5v-3.95c.25.23.54.43.83.6 1 .54 2.29.85 3.67.85z"></path></svg>`,
	4,
)

function WindowDatabaseIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$q.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$p = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.75A2.75 2.75 0 014.75 2h8.5A2.75 2.75 0 0116 4.75v4.48c-.33.14-.63.35-.9.61l-.6.6V6h-11v7.25c0 .69.56 1.25 1.25 1.25h5.7l-.18.17a3.2 3.2 0 00-.8 1.33H4.76A2.75 2.75 0 012 13.25v-8.5zm6.35 3.1a.5.5 0 10-.7-.7l-2.5 2.5a.5.5 0 000 .7l2.5 2.5a.5.5 0 00.7-.7L6.21 10l2.14-2.15zm1.8 5a.5.5 0 010-.7L12.29 10l-2.14-2.15a.5.5 0 01.7-.7l2.5 2.5c.2.2.2.5 0 .7l-2.5 2.5a.5.5 0 01-.7 0zm5.66-2.3l-4.83 4.83a2.2 2.2 0 00-.58 1.02l-.37 1.5a.89.89 0 001.08 1.07l1.5-.37c.38-.1.73-.3 1.01-.58l4.83-4.83a1.87 1.87 0 00-2.64-2.64z"></path></svg>`,
	4,
)

function WindowDevEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$p.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$o = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.75 2A2.75 2.75 0 002 4.75v8.5A2.75 2.75 0 004.75 16h5.88l.12-.24.73-1.26H4.75c-.7 0-1.25-.56-1.25-1.25V6h11v1.15c.46-.25.97-.4 1.5-.44V4.75A2.75 2.75 0 0013.25 2h-8.5zm9.27 10.1a2.78 2.78 0 012.77-4.35l-1.31 2.27a.93.93 0 001.6.92l1.32-2.27a2.78 2.78 0 01-2.37 4.58l-2.4 4.17a1.16 1.16 0 01-2.01-1.16l2.4-4.16zm-1.46-.95c-.12-.69-.06-1.4.22-2.08l-1.93-1.92a.5.5 0 00-.7.7L12.29 10l-2.14 2.15a.5.5 0 00.7.7l1.71-1.7zm-4.2-4c.19.2.19.5 0 .7L6.2 10l2.14 2.15a.5.5 0 01-.7.7l-2.5-2.5a.5.5 0 010-.7l2.5-2.5c.2-.2.5-.2.7 0z"></path></svg>`,
	4,
)

function WindowDevToolsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$o.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$n = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3c-.34.02-.68.1-1 .23V7H4v7c0 1.1.9 2 2 2h3.47l-.04.16-.21.84H6a3 3 0 01-3-3V6zm7.98 9.38l4.83-4.83a1.87 1.87 0 112.64 2.64l-4.83 4.83a2.2 2.2 0 01-1.02.58l-1.5.37a.89.89 0 01-1.07-1.07l.37-1.5c.1-.39.3-.74.58-1.02z"></path></svg>`,
	4,
)

function WindowEditIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$n.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$m = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zM4.5 7v7.5a1 1 0 001 1h9a1 1 0 001-1V7h-11z"></path></svg>`,
	4,
)

function WindowHeaderHorizontalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$m.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$l = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2.85 2.15a.5.5 0 10-.7.7L3.4 4.12C3.15 4.52 3 5 3 5.5v9A2.5 2.5 0 005.5 17h9c.5 0 .98-.15 1.38-.41l1.27 1.26a.5.5 0 00.7-.7l-15-15zm11.9 13.32a1 1 0 01-.25.03h-9a1 1 0 01-1-1V7h1.8l8.46 8.47zM15.5 7v6.38l1.48 1.47.02-.35v-9A2.5 2.5 0 0014.5 3h-9c-.12 0-.24 0-.35.02L9.12 7h6.38z"></path></svg>`,
	4,
)

function WindowHeaderHorizontalOffIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$l.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$k = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5v9a2.5 2.5 0 01-2.5 2.5h-9A2.5 2.5 0 013 14.5v-9zm4 10h7.5a1 1 0 001-1v-9a1 1 0 00-1-1H7v11z"></path></svg>`,
	4,
)

function WindowHeaderVerticalIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$k.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$j = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm1 1v7c0 1.1.9 2 2 2h8a2 2 0 002-2V7H4z"></path></svg>`,
	4,
)

function WindowIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$j.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$i = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.5A2.5 2.5 0 015.5 3h9A2.5 2.5 0 0117 5.5V6H3v1h12a3.5 3.5 0 00-2.45 6 2.5 2.5 0 00-1.86.86c-.4.45-.69 1.08-.69 1.76v.32c0 .37.06.73.16 1.06H5.5A2.5 2.5 0 013 14.5v-9zM15 13a2.5 2.5 0 112-4h-2v1h2.45a2.51 2.51 0 010 1H15v1h2c-.46.6-1.18 1-2 1zm-2.45 1c-.46 0-.86.24-1.12.53-.26.29-.43.69-.43 1.09v.32c0 1.63 1.63 3.06 4 3.06 1.24 0 2.28-.4 2.99-1H15v-1h3.76c.15-.32.23-.65.24-1h-4v-1h3.87a1.78 1.78 0 00-.3-.47 1.5 1.5 0 00-1.12-.53h-4.9z"></path></svg>`,
	4,
)

function WindowInprivateAccountIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$i.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$h = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5.5 3A2.5 2.5 0 003 5.5v9A2.5 2.5 0 005.5 17h9a2.5 2.5 0 002.5-2.5v-9A2.5 2.5 0 0014.5 3h-9zm10 3v.5h-1.3l1.15-1.15c.1.2.15.42.15.65zm-.85-1.35L12.79 6.5H9.97l2-2H14c.23 0 .45.05.65.15zm-4.1-.15l-2 2H5.72l2-2h2.83zm-4.24 0L4.5 6.31V6c0-.83.67-1.5 1.5-1.5h.31zM7.05 8L4.5 10.55V8h2.55zM4.5 11.97L8.47 8h2.82l-6.64 6.65A1.5 1.5 0 014.5 14v-2.03zM12.7 8h2.8v.04L8.04 15.5H6a1.5 1.5 0 01-.65-.15L12.71 8zm2.8 1.45v2.83l-3.22 3.22H9.45l6.05-6.05zm0 4.24V14c0 .83-.67 1.5-1.5 1.5h-.3l1.8-1.8z"></path></svg>`,
	4,
)

function WindowInprivateIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$h.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$g = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v4.76c-.3-.2-.64-.38-1-.5V7H4v7c0 1.1.9 2 2 2h4.26c.12.36.3.7.5 1H6a3 3 0 01-3-3V6zm12.06 9.33a1 1 0 11-1.12-1.66 1 1 0 011.12 1.66zM17.95 14h.55a.5.5 0 010 1h-.55A3.49 3.49 0 0115 17.95v.55a.5.5 0 01-1 0v-.55A3.49 3.49 0 0111.05 15h-.55a.5.5 0 010-1h.55A3.49 3.49 0 0114 11.05v-.55a.5.5 0 011 0v.55A3.49 3.49 0 0117.95 14zm-3.2 2.99a2.5 2.5 0 10-.5-4.98 2.5 2.5 0 00.5 4.98z"></path></svg>`,
	4,
)

function WindowLocationTargetIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$g.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$f = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2A2.5 2.5 0 002 4.5v8A2.5 2.5 0 004.5 15h8a2.5 2.5 0 002.5-2.5v-8A2.5 2.5 0 0012.5 2h-8zM3 12.5V6h11v6.5c0 .83-.67 1.5-1.5 1.5h-8A1.5 1.5 0 013 12.5zM7.5 18a2.5 2.5 0 01-2.45-2h1.04c.2.58.76 1 1.41 1H14a3 3 0 003-3V7.5c0-.65-.42-1.2-1-1.41V5.05a2.5 2.5 0 012 2.45V14a4 4 0 01-4 4H7.5z"></path></svg>`,
	4,
)

function WindowMultipleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$f.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$e = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M2 4.5A2.5 2.5 0 014.5 2h8A2.5 2.5 0 0115 4.5v8a2.5 2.5 0 01-2.5 2.5h-1.59a1.5 1.5 0 000-1h1.59c.83 0 1.5-.67 1.5-1.5V6H3v5.09c-.2.07-.4.19-.56.35l-.44.44V4.5zM14 18H7.5c.38 0 .77-.15 1.06-.44l.56-.56H14a3 3 0 003-3V7.5c0-.65-.42-1.2-1-1.41V5.05a2.5 2.5 0 012 2.45V14a4 4 0 01-4 4zm-4.15-3.15l-2 2a.5.5 0 01-.7-.7L8.29 15H2.71l1.14 1.15a.5.5 0 01-.7.7l-2-2a.5.5 0 010-.7l2-2a.5.5 0 01.7.7L2.71 14H8.3l-1.15-1.15a.5.5 0 01.7-.7l2 2c.2.2.2.5 0 .7zM3.25 14h1.32"></path></svg>`,
	4,
)

function WindowMultipleSwapIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$e.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$d = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M12.77 17a2.5 2.5 0 002.45-2.01A2 2 0 0017 13V5a2 2 0 00-2-2H7a2 2 0 00-2 1.81 2.5 2.5 0 00-2 2.46v6.23A3.5 3.5 0 006.5 17h6.27zM4 7.27c0-.66.42-1.21 1-1.42V13c0 1.1.9 2 2 2h7.18c-.2.58-.76 1-1.41 1H6.5A2.5 2.5 0 014 13.5V7.27zM9.52 6h3.98c.28 0 .5.22.5.5v3.98a.5.5 0 01-1 0V7.71l-4.15 4.14a.5.5 0 01-.7-.7L12.29 7H9.52a.5.5 0 010-1z"></path></svg>`,
	4,
)

function WindowNewIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$d.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$c = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 5.5A2.5 2.5 0 0014.5 3h-9A2.5 2.5 0 003 5.5V6h14v-.5zm0 4.1V7H3v7.5A2.5 2.5 0 005.5 17h4.1A5.5 5.5 0 0117 9.6zm2 4.9a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm-2.29-.44l-2.97-1.65a.5.5 0 00-.74.44v3.3c0 .38.41.62.74.44l2.97-1.65a.5.5 0 000-.88z"></path></svg>`,
	4,
)

function WindowPlayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$c.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$b = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 6a3 3 0 013-3h8a3 3 0 013 3v3.6c-.32-.16-.65-.3-1-.4V7H4v7c0 1.1.9 2 2 2h3.2c.1.35.24.68.4 1H6a3 3 0 01-3-3V6zm9.06 5.44a2 2 0 01-1.43 2.48l-.46.12a4.73 4.73 0 00.01 1.01l.35.09A2 2 0 0112 17.66l-.13.42c.26.2.54.38.84.52l.32-.35a2 2 0 012.91 0l.34.36c.3-.13.57-.3.82-.5l-.16-.55a2 2 0 011.44-2.48l.46-.12a4.7 4.7 0 00-.01-1.01l-.35-.09A2 2 0 0117 11.34l.13-.42c-.26-.2-.54-.38-.84-.52l-.32.35a2 2 0 01-2.91 0l-.34-.36c-.3.13-.57.3-.82.5l.15.55zm2.44 4.06a1 1 0 110-2 1 1 0 010 2z"></path></svg>`,
	4,
)

function WindowSettingsIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$b.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$a = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3 5.75A2.75 2.75 0 015.75 3h8.5A2.75 2.75 0 0117 5.75v2.86a3.39 3.39 0 01-1.5-.72V7h-11v7.25c0 .7.56 1.25 1.25 1.25h3.82a5.8 5.8 0 00.97 1.5H5.75A2.75 2.75 0 013 14.25v-8.5zM15.5 9.1a4.13 4.13 0 002.1.57c.2 0 .35.14.4.33v2.58c0 2.69-1.31 4.51-3.87 5.4a.38.38 0 01-.26 0A6.67 6.67 0 0112 17a4.87 4.87 0 01-1.31-1.5 5.75 5.75 0 01-.69-2.65v-2.77a.4.4 0 01.4-.41 4.5 4.5 0 003.32-1.55.39.39 0 01.56 0c.4.4.8.73 1.22.98z"></path></svg>`,
	4,
)

function WindowShieldIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$a.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$9 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M5 9.5c0-.28.22-.5.5-.5h9a.5.5 0 010 1h-9a.5.5 0 01-.5-.5zm0 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm7 0c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm-3 2c0-.28.22-.5.5-.5h5a.5.5 0 010 1h-5a.5.5 0 01-.5-.5zm-4 0c0-.28.22-.5.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zM6 3a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V6a3 3 0 00-3-3H6zM4 14V7h12v7a2 2 0 01-2 2H6a2 2 0 01-2-2z"></path></svg>`,
	4,
)

function WindowTextIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$9.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$8 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M6 3a3 3 0 00-3 3v8a3 3 0 003 3h2.05c.07-.35.22-.7.44-1H6a2 2 0 01-2-2V7h12v1.03c.44.05.79.28 1 .6V6a3 3 0 00-3-3H6zm6.17 10.7A3.52 3.52 0 0116 9.05c.14.05.22.17.24.31v.15a.49.49 0 01-.14.26l-.97.97a1.5 1.5 0 102.13 2.13l.97-.97c.27-.26.7-.16.75.2a3.51 3.51 0 01-4.68 3.73l-2.73 2.73a1.5 1.5 0 11-2.13-2.13l2.73-2.73z"></path></svg>`,
	4,
)

function WindowWrenchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$8.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$7 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M13.5 2a4.5 4.5 0 00-4.42 5.36l-6.42 6.66a2.36 2.36 0 003.37 3.3l6.37-6.46a4.51 4.51 0 005.49-5.37.5.5 0 00-.84-.24L14.5 7.79 12.2 5.5l2.55-2.55a.5.5 0 00-.24-.84A4.51 4.51 0 0013.5 2z"></path></svg>`,
	4,
)

function WrenchIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$7.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$6 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M17 12v-1.5c0-.11-.03-.2-.07-.27a.37.37 0 00-.17-.15.87.87 0 00-.24-.06 2.08 2.08 0 00-.25-.02H16V5.12l.13-.24.17-.32.14-.32c.04-.1.06-.18.06-.24s-.03-.17-.07-.32a7.43 7.43 0 00-.34-1c-.05-.15-.1-.26-.11-.34a.57.57 0 00-.2-.25.47.47 0 00-.28-.09h-2c-.1 0-.2.04-.3.1a.46.46 0 00-.18.24 13.58 13.58 0 01-.3.86 43.7 43.7 0 00-.22.8c0 .07.02.16.06.25a7.72 7.72 0 00.44.87V10h-.27c-.09 0-.18 0-.26.02a.72.72 0 00-.24.07.44.44 0 00-.17.14.48.48 0 00-.06.27V12h5zm0 1h-5v2.55c0 .34.07.66.2.96a2.58 2.58 0 001.35 1.3 2.47 2.47 0 001.9 0c.3-.14.57-.31.8-.53.23-.22.41-.48.55-.77.13-.3.2-.62.2-.96V13zM5.78 2.13c.14.09.22.24.22.41V6a1 1 0 002 0V2.54a.5.5 0 01.69-.46 4.5 4.5 0 01.31 8.2V16a2 2 0 11-4 0v-5.72a4.5 4.5 0 01.31-8.2.5.5 0 01.47.05z"></path></svg>`,
	4,
)

function WrenchScrewdriverIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$6.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$5 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M4.5 2a.5.5 0 00-.5.5v15c0 .28.22.5.5.5H7V9.5a.5.5 0 011 0V18h7.5a.5.5 0 00.5-.5v-15a.5.5 0 00-.5-.5h-11zm3 4.5a.75.75 0 110-1.5.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function XboxConsoleIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$5.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$4 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M8.33 4.71a2.12 2.12 0 00-1.35-.17l-.9.17c-.7.14-1.32.6-1.66 1.25-1.1 2.16-1.94 3.93-2.27 5.43a4.51 4.51 0 00.82 4.06c.66.82 1.8.65 2.4-.02L6.9 13.7A2 2 0 018.4 13h3.2a2 2 0 011.51.7l1.51 1.73c.6.67 1.75.84 2.4.02a4.51 4.51 0 00.82-4.06c-.32-1.5-1.16-3.27-2.27-5.43a2.37 2.37 0 00-1.66-1.25l-.9-.17a2.12 2.12 0 00-1.35.17l-.06.03c-.32.17-.67.26-1.01.26H9.4c-.35 0-.7-.1-1.02-.26l-.06-.03zM10 8.5A.75.75 0 1110 7a.75.75 0 010 1.5z"></path></svg>`,
	4,
)

function XboxControllerIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$4.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$3 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M11 13.5a.5.5 0 111 0 .5.5 0 01-1 0zM7.5 13a.5.5 0 100 1 .5.5 0 000-1zM3 4.5A2.5 2.5 0 015.5 2h8A2.5 2.5 0 0116 4.5v11a2.5 2.5 0 01-2.5 2.5h-8A2.5 2.5 0 013 15.5v-11zm7 1a.5.5 0 00-1 0V6H7.5a.5.5 0 000 1H9v1H6.5a.5.5 0 000 1H9v1H6.5a.5.5 0 000 1H9v1H7.5a1.5 1.5 0 101.41 1h1.18a1.5 1.5 0 101.41-1H10v-1h2.5a.5.5 0 000-1H10V9h2.5a.5.5 0 000-1H10V7h1.5a.5.5 0 000-1H10v-.5z"></path></svg>`,
	4,
)

function XrayIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$3.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$2 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M3.86 7.85a.5.5 0 10-.72-.7L1.4 8.95a1.5 1.5 0 000 2.09l1.74 1.8a.5.5 0 10.72-.69l-1.74-1.8a.5.5 0 010-.7l1.74-1.8zm3.3-4.71a.5.5 0 10.69.72l1.8-1.74a.5.5 0 01.7 0l1.8 1.74a.5.5 0 00.7-.72l-1.8-1.74a1.5 1.5 0 00-2.1 0l-1.8 1.74zm9.7 4.01a.5.5 0 00-.72.7l1.75 1.8c.18.2.18.5 0 .7l-1.75 1.8a.5.5 0 10.72.7l1.74-1.8a1.5 1.5 0 000-2.09l-1.74-1.8zm-9.01 8.99a.5.5 0 00-.7.72l1.81 1.75c.59.56 1.5.55 2.09 0l1.8-1.75a.5.5 0 00-.7-.72l-1.8 1.74a.5.5 0 01-.7 0l-1.8-1.74zM6 8c0-1.1.9-2 2-2h4a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2V8z"></path></svg>`,
	4,
)

function ZoomFitIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$2.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$$1 = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 8.5c0 1.25-.42 2.4-1.12 3.32l4.15 4.15a.75.75 0 01-.98 1.13l-.08-.07-4.15-4.15A5.5 5.5 0 1114 8.5zM8.5 5.25a.75.75 0 00-.75.75v1.75H6a.75.75 0 000 1.5h1.75V11a.75.75 0 001.5 0V9.25H11a.75.75 0 000-1.5H9.25V6a.75.75 0 00-.75-.75z"></path></svg>`,
	4,
)

function ZoomInIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$$1.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

const _tmpl$ = /*#__PURE__*/ template(
	`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" shape-rendering="geometricPrecision" fill="currentColor" aria-hidden="true" preserveAspectRatio="xMidYMid meet"><path d="M14 8.5a5.5 5.5 0 10-2.18 4.38l4.15 4.15.08.07a.75.75 0 00.98-1.13l-4.15-4.15A5.48 5.48 0 0014 8.5zm-3-.75a.75.75 0 010 1.5H6a.75.75 0 010-1.5h5z"></path></svg>`,
	4,
)

function ZoomOutIcon(props) {
	const [local, others] = splitProps(props, ["style", "hidden", "ref", "children"])
	return (() => {
		const _el$ = _tmpl$.cloneNode(true)

		const _ref$ = props.ref
		typeof _ref$ === "function" ? _ref$(_el$) : (props.ref = _el$)

		spread(_el$, others, true, true)

		effect(_$p =>
			style(
				_el$,
				typeof props?.style === "string"
					? `display:${props?.hidden ? "none" : "block"}` + ";" + props.style
					: {
							display: props?.hidden ? "none" : "block",
							...props?.style,
					  },
				_$p,
			),
		)

		return _el$
	})()
}

export {
	AccessTimeIcon,
	AccessibilityCheckmarkIcon,
	AccessibilityIcon,
	AddCircleIcon,
	AddIcon,
	AddSquareIcon,
	AddSquareMultipleIcon,
	AddSubtractCircleIcon,
	AirplaneIcon,
	AirplaneTakeOffIcon,
	AlbumAddIcon,
	AlbumIcon,
	AlertBadgeIcon,
	AlertIcon,
	AlertOffIcon,
	AlertOnIcon,
	AlertSnoozeIcon,
	AlertUrgentIcon,
	AlignBottomIcon,
	AlignCenterHorizontalIcon,
	AlignCenterVerticalIcon,
	AlignEndHorizontalIcon,
	AlignEndVerticalIcon,
	AlignLeftIcon,
	AlignRightIcon,
	AlignSpaceAroundHorizontalIcon,
	AlignSpaceAroundVerticalIcon,
	AlignSpaceBetweenHorizontalIcon,
	AlignSpaceBetweenVerticalIcon,
	AlignSpaceEvenlyHorizontalIcon,
	AlignSpaceEvenlyVerticalIcon,
	AlignSpaceFitVerticalIcon,
	AlignStartHorizontalIcon,
	AlignStartVerticalIcon,
	AlignStretchHorizontalIcon,
	AlignStretchVerticalIcon,
	AlignTopIcon,
	AnimalCatIcon,
	AnimalDogIcon,
	AnimalRabbitIcon,
	AnimalRabbitOffIcon,
	AnimalTurtleIcon,
	AppFolderIcon,
	AppGenericIcon,
	AppRecentIcon,
	AppStoreIcon,
	AppTitleIcon,
	ApprovalsAppIcon,
	AppsAddInIcon,
	AppsIcon,
	AppsListDetailIcon,
	AppsListIcon,
	ArchiveArrowBackIcon,
	ArchiveIcon,
	ArchiveMultipleIcon,
	ArchiveSettingsIcon,
	ArrowAutofitContentIcon,
	ArrowAutofitDownIcon,
	ArrowAutofitHeightDottedIcon,
	ArrowAutofitHeightIcon,
	ArrowAutofitUpIcon,
	ArrowAutofitWidthDottedIcon,
	ArrowAutofitWidthIcon,
	ArrowBetweenDownIcon,
	ArrowBetweenUpIcon,
	ArrowBidirectionalUpDownIcon,
	ArrowBounceIcon,
	ArrowCircleDownDoubleIcon,
	ArrowCircleDownIcon,
	ArrowCircleDownRightIcon,
	ArrowCircleDownSplitIcon,
	ArrowCircleDownUpIcon,
	ArrowCircleLeftIcon,
	ArrowCircleRightIcon,
	ArrowCircleUpIcon,
	ArrowCircleUpLeftIcon,
	ArrowClockwiseDashesIcon,
	ArrowClockwiseIcon,
	ArrowCollapseAllIcon,
	ArrowCounterclockwiseDashesIcon,
	ArrowCounterclockwiseIcon,
	ArrowCurveDownLeftIcon,
	ArrowCurveDownRightIcon,
	ArrowCurveUpLeftIcon,
	ArrowCurveUpRightIcon,
	ArrowDownIcon,
	ArrowDownLeftIcon,
	ArrowDownloadIcon,
	ArrowEjectIcon,
	ArrowEnterIcon,
	ArrowEnterLeftIcon,
	ArrowEnterUpIcon,
	ArrowExitIcon,
	ArrowExpandIcon,
	ArrowExportLtrIcon,
	ArrowExportRtlIcon,
	ArrowExportUpIcon,
	ArrowFitIcon,
	ArrowFitInIcon,
	ArrowForwardDownLightningIcon,
	ArrowForwardDownPersonIcon,
	ArrowForwardIcon,
	ArrowHookDownLeftIcon,
	ArrowHookDownRightIcon,
	ArrowHookUpLeftIcon,
	ArrowHookUpRightIcon,
	ArrowImportIcon,
	ArrowJoinIcon,
	ArrowLeftIcon,
	ArrowMaximizeIcon,
	ArrowMaximizeVerticalIcon,
	ArrowMinimizeIcon,
	ArrowMinimizeVerticalIcon,
	ArrowMoveIcon,
	ArrowMoveInwardIcon,
	ArrowNextIcon,
	ArrowOutlineUpRightIcon,
	ArrowParagraphIcon,
	ArrowPreviousIcon,
	ArrowRedoIcon,
	ArrowRepeatAllIcon,
	ArrowRepeatAllOffIcon,
	ArrowReplyAllIcon,
	ArrowReplyDownIcon,
	ArrowReplyIcon,
	ArrowResetIcon,
	ArrowRightIcon,
	ArrowRotateClockwiseIcon,
	ArrowRotateCounterclockwiseIcon,
	ArrowRoutingIcon,
	ArrowRoutingRectangleMultipleIcon,
	ArrowSortDownIcon,
	ArrowSortDownLinesIcon,
	ArrowSortIcon,
	ArrowSortUpIcon,
	ArrowSplitIcon,
	ArrowSquareDownIcon,
	ArrowStepBackIcon,
	ArrowStepInIcon,
	ArrowStepInLeftIcon,
	ArrowStepInRightIcon,
	ArrowStepOutIcon,
	ArrowStepOverIcon,
	ArrowSwapIcon,
	ArrowSyncCheckmarkIcon,
	ArrowSyncCircleIcon,
	ArrowSyncDismissIcon,
	ArrowSyncIcon,
	ArrowSyncOffIcon,
	ArrowTrendingCheckmarkIcon,
	ArrowTrendingDownIcon,
	ArrowTrendingIcon,
	ArrowTrendingLinesIcon,
	ArrowTrendingSettingsIcon,
	ArrowTrendingTextIcon,
	ArrowTrendingWrenchIcon,
	ArrowTurnBidirectionalDownRightIcon,
	ArrowTurnRightIcon,
	ArrowUndoIcon,
	ArrowUpIcon,
	ArrowUpLeftIcon,
	ArrowUpRightIcon,
	ArrowUploadIcon,
	ArrowWrapIcon,
	ArrowWrapOffIcon,
	ArrowsBidirectionalIcon,
	AttachArrowRightIcon,
	AttachIcon,
	AttachTextIcon,
	AutoFitHeightIcon,
	AutoFitWidthIcon,
	AutocorrectIcon,
	AutosumIcon,
	BackpackAddIcon,
	BackpackIcon,
	BackspaceIcon,
	BadgeIcon,
	BalloonIcon,
	BarcodeScannerIcon,
	Battery0Icon,
	Battery10Icon,
	Battery1Icon,
	Battery2Icon,
	Battery3Icon,
	Battery4Icon,
	Battery5Icon,
	Battery6Icon,
	Battery7Icon,
	Battery8Icon,
	Battery9Icon,
	BatteryChargeIcon,
	BatteryCheckmarkIcon,
	BatterySaverIcon,
	BatteryWarningIcon,
	BeachIcon,
	BeakerEditIcon,
	BeakerIcon,
	BeakerOffIcon,
	BedIcon,
	BezierCurveSquareIcon,
	BinFullIcon,
	BluetoothConnectedIcon,
	BluetoothDisabledIcon,
	BluetoothIcon,
	BluetoothSearchingIcon,
	BlurIcon,
	BoardGamesIcon,
	BoardHeartIcon,
	BoardIcon,
	BoardSplitIcon,
	BookAddIcon,
	BookArrowClockwiseIcon,
	BookClockIcon,
	BookCoinsIcon,
	BookCompassIcon,
	BookContactsIcon,
	BookDatabaseIcon,
	BookExclamationMarkIcon,
	BookGlobeIcon,
	BookIcon,
	BookInformationIcon,
	BookLetterIcon,
	BookNumberIcon,
	BookOpenGlobeIcon,
	BookOpenIcon,
	BookOpenMicrophoneIcon,
	BookPulseIcon,
	BookQuestionMarkIcon,
	BookQuestionMarkRtlIcon,
	BookSearchIcon,
	BookStarIcon,
	BookTemplateIcon,
	BookThetaIcon,
	BookToolboxIcon,
	BookmarkAddIcon,
	BookmarkIcon,
	BookmarkMultipleIcon,
	BookmarkOffIcon,
	BookmarkSearchIcon,
	BorderAllIcon,
	BorderBottomDoubleIcon,
	BorderBottomIcon,
	BorderBottomThickIcon,
	BorderLeftIcon,
	BorderLeftRightIcon,
	BorderNoneIcon,
	BorderOutsideIcon,
	BorderOutsideThickIcon,
	BorderRightIcon,
	BorderTopBottomDoubleIcon,
	BorderTopBottomIcon,
	BorderTopBottomThickIcon,
	BorderTopIcon,
	BotAddIcon,
	BotIcon,
	BowlChopsticksIcon,
	BowlSaladIcon,
	BoxArrowLeftIcon,
	BoxArrowUpIcon,
	BoxCheckmarkIcon,
	BoxDismissIcon,
	BoxEditIcon,
	BoxIcon,
	BoxMultipleArrowLeftIcon,
	BoxMultipleArrowRightIcon,
	BoxMultipleCheckmarkIcon,
	BoxMultipleIcon,
	BoxMultipleSearchIcon,
	BoxSearchIcon,
	BoxToolboxIcon,
	BracesIcon,
	BracesVariableIcon,
	BrainCircuitIcon,
	BranchCompareIcon,
	BranchForkHintIcon,
	BranchForkIcon,
	BranchForkLinkIcon,
	BranchIcon,
	BranchRequestIcon,
	BreakoutRoomIcon,
	BriefcaseIcon,
	BriefcaseMedicalIcon,
	BriefcaseOffIcon,
	BrightnessHighIcon,
	BrightnessLowIcon,
	BroadActivityFeedIcon,
	BroomIcon,
	BugArrowCounterclockwiseIcon,
	BugIcon,
	BugProhibitedIcon,
	BuildingBankIcon,
	BuildingBankLinkIcon,
	BuildingBankToolboxIcon,
	BuildingFactoryIcon,
	BuildingGovernmentIcon,
	BuildingHomeIcon,
	BuildingIcon,
	BuildingLighthouseIcon,
	BuildingMultipleIcon,
	BuildingRetailIcon,
	BuildingRetailMoneyIcon,
	BuildingRetailMoreIcon,
	BuildingRetailShieldIcon,
	BuildingRetailToolboxIcon,
	BuildingShopIcon,
	BuildingSkyscraperIcon,
	CalculatorArrowClockwiseIcon,
	CalculatorIcon,
	CalculatorMultipleIcon,
	Calendar3DayIcon,
	CalendarAddIcon,
	CalendarAgendaIcon,
	CalendarArrowDownIcon,
	CalendarArrowRightIcon,
	CalendarAssistantIcon,
	CalendarCancelIcon,
	CalendarChatIcon,
	CalendarCheckmarkIcon,
	CalendarClockIcon,
	CalendarDataBarIcon,
	CalendarDayIcon,
	CalendarEditIcon,
	CalendarEmptyIcon,
	CalendarErrorIcon,
	CalendarInfoIcon,
	CalendarLtrIcon,
	CalendarMailIcon,
	CalendarMentionIcon,
	CalendarMonthIcon,
	CalendarMultipleIcon,
	CalendarPatternIcon,
	CalendarPersonIcon,
	CalendarPhoneIcon,
	CalendarQuestionMarkIcon,
	CalendarReplyIcon,
	CalendarRtlIcon,
	CalendarSearchIcon,
	CalendarSettingsIcon,
	CalendarStarIcon,
	CalendarSyncIcon,
	CalendarTodayIcon,
	CalendarToolboxIcon,
	CalendarWeekNumbersIcon,
	CalendarWeekStartIcon,
	CalendarWorkWeekIcon,
	CallAddIcon,
	CallCheckmarkIcon,
	CallConnectingIcon,
	CallDismissIcon,
	CallEndIcon,
	CallExclamationIcon,
	CallForwardIcon,
	CallIcon,
	CallInboundIcon,
	CallMissedIcon,
	CallOutboundIcon,
	CallParkIcon,
	CallPauseIcon,
	CallProhibitedIcon,
	CallTransferIcon,
	CallWarningIcon,
	CalligraphyPenCheckmarkIcon,
	CalligraphyPenErrorIcon,
	CalligraphyPenIcon,
	CalligraphyPenQuestionMarkIcon,
	CameraAddIcon,
	CameraDomeIcon,
	CameraEditIcon,
	CameraIcon,
	CameraOffIcon,
	CameraSwitchIcon,
	CaretDownIcon,
	CaretDownRightIcon,
	CaretLeftIcon,
	CaretRightIcon,
	CaretUpIcon,
	CartIcon,
	CastIcon,
	CatchUpIcon,
	Cellular3gIcon,
	Cellular4gIcon,
	Cellular5gIcon,
	CellularData1Icon,
	CellularData2Icon,
	CellularData3Icon,
	CellularData4Icon,
	CellularData5Icon,
	CellularOffIcon,
	CellularWarningIcon,
	CenterHorizontalIcon,
	CenterVerticalIcon,
	CertificateIcon,
	ChannelAddIcon,
	ChannelAlertIcon,
	ChannelArrowLeftIcon,
	ChannelDismissIcon,
	ChannelIcon,
	ChannelShareIcon,
	ChannelSubtractIcon,
	ChartMultipleIcon,
	ChartPersonIcon,
	ChatArrowBackIcon,
	ChatArrowDoubleBackIcon,
	ChatBubblesQuestionIcon,
	ChatDismissIcon,
	ChatHelpIcon,
	ChatIcon,
	ChatMailIcon,
	ChatMultipleIcon,
	ChatOffIcon,
	ChatSettingsIcon,
	ChatVideoIcon,
	ChatWarningIcon,
	CheckIcon,
	Checkbox1Icon,
	Checkbox2Icon,
	CheckboxArrowRightIcon,
	CheckboxCheckedIcon,
	CheckboxCheckedSyncIcon,
	CheckboxIndeterminateIcon,
	CheckboxPersonIcon,
	CheckboxUncheckedIcon,
	CheckboxWarningIcon,
	CheckmarkCircleIcon,
	CheckmarkIcon,
	CheckmarkLockIcon,
	CheckmarkNoteIcon,
	CheckmarkSquareIcon,
	CheckmarkStarburstIcon,
	CheckmarkUnderlineCircleIcon,
	ChessIcon,
	ChevronCircleDownIcon,
	ChevronCircleLeftIcon,
	ChevronCircleRightIcon,
	ChevronCircleUpIcon,
	ChevronDoubleDownIcon,
	ChevronDoubleLeftIcon,
	ChevronDoubleRightIcon,
	ChevronDoubleUpIcon,
	ChevronDownIcon,
	ChevronLeftIcon,
	ChevronRightIcon,
	ChevronUpDownIcon,
	ChevronUpIcon,
	CircleEditIcon,
	CircleEraserIcon,
	CircleHalfFillIcon,
	CircleIcon,
	CircleImageIcon,
	CircleLineIcon,
	CircleMultipleSubtractCheckmarkIcon,
	CircleOffIcon,
	CircleSmallIcon,
	CityIcon,
	ClassIcon,
	ClassificationIcon,
	ClearFormattingIcon,
	Clipboard3DayIcon,
	ClipboardArrowRightIcon,
	ClipboardBulletListLtrIcon,
	ClipboardBulletListRtlIcon,
	ClipboardCheckmarkIcon,
	ClipboardClockIcon,
	ClipboardCodeIcon,
	ClipboardDataBarIcon,
	ClipboardDayIcon,
	ClipboardEditIcon,
	ClipboardErrorIcon,
	ClipboardHeartIcon,
	ClipboardIcon,
	ClipboardImageIcon,
	ClipboardLetterIcon,
	ClipboardLinkIcon,
	ClipboardMonthIcon,
	ClipboardMoreIcon,
	ClipboardNoteIcon,
	ClipboardPasteIcon,
	ClipboardPulseIcon,
	ClipboardSearchIcon,
	ClipboardSettingsIcon,
	ClipboardTaskAddIcon,
	ClipboardTaskIcon,
	ClipboardTaskListLtrIcon,
	ClipboardTaskListRtlIcon,
	ClipboardTextEditIcon,
	ClipboardTextIcon,
	ClipboardTextLtrIcon,
	ClipboardTextRtlIcon,
	ClockAlarmIcon,
	ClockArrowDownloadIcon,
	ClockDismissIcon,
	ClockIcon,
	ClockPauseIcon,
	ClockToolboxIcon,
	ClosedCaptionIcon,
	ClosedCaptionOffIcon,
	CloudAddIcon,
	CloudArchiveIcon,
	CloudArrowDownIcon,
	CloudArrowUpIcon,
	CloudCheckmarkIcon,
	CloudDismissIcon,
	CloudEditIcon,
	CloudFlowIcon,
	CloudIcon,
	CloudLinkIcon,
	CloudOffIcon,
	CloudSwapIcon,
	CloudSyncIcon,
	CloudWordsIcon,
	CodeCircleIcon,
	CodeIcon,
	CodeTextEditIcon,
	CodeTextIcon,
	CollectionsAddIcon,
	CollectionsIcon,
	ColorBackgroundIcon,
	ColorFillIcon,
	ColorIcon,
	ColorLineIcon,
	ColumnArrowRightIcon,
	ColumnDoubleCompareIcon,
	ColumnEditIcon,
	ColumnIcon,
	ColumnTripleEditIcon,
	ColumnTripleIcon,
	CommaIcon,
	CommentAddIcon,
	CommentArrowLeftIcon,
	CommentArrowRightIcon,
	CommentCheckmarkIcon,
	CommentDismissIcon,
	CommentEditIcon,
	CommentErrorIcon,
	CommentIcon,
	CommentLightningIcon,
	CommentMentionIcon,
	CommentMultipleCheckmarkIcon,
	CommentMultipleIcon,
	CommentMultipleLinkIcon,
	CommentNoteIcon,
	CommentOffIcon,
	CommunicationIcon,
	CommunicationPersonIcon,
	CompassNorthwestIcon,
	Component2DoubleTapSwipeDownIcon,
	Component2DoubleTapSwipeUpIcon,
	ComposeIcon,
	ConferenceRoomIcon,
	ConnectedIcon,
	ConnectorIcon,
	ContactCardGroupIcon,
	ContactCardIcon,
	ContactCardLinkIcon,
	ContactCardRibbonIcon,
	ContentSettingsIcon,
	ContentViewGalleryIcon,
	ContentViewIcon,
	ContractDownLeftIcon,
	ControlButtonIcon,
	ConvertRangeIcon,
	CookiesIcon,
	CopyAddIcon,
	CopyArrowRightIcon,
	CopyIcon,
	CopySelectIcon,
	CouchIcon,
	CreditCardClockIcon,
	CreditCardPersonIcon,
	CreditCardToolboxIcon,
	CropIcon,
	CropInterimIcon,
	CropInterimOffIcon,
	CubeAddIcon,
	CubeArrowCurveDownIcon,
	CubeIcon,
	CubeLinkIcon,
	CubeMultipleIcon,
	CubeQuickIcon,
	CubeRotateIcon,
	CubeSyncIcon,
	CubeTreeIcon,
	CurrencyDollarEuroIcon,
	CurrencyDollarRupeeIcon,
	CursorClickIcon,
	CursorHoverIcon,
	CursorHoverOffIcon,
	CursorIcon,
	CutIcon,
	DarkThemeIcon,
	DataAreaIcon,
	DataBarHorizontalIcon,
	DataBarVerticalAddIcon,
	DataBarVerticalIcon,
	DataFunnelIcon,
	DataHistogramIcon,
	DataLineIcon,
	DataPieIcon,
	DataScatterIcon,
	DataSunburstIcon,
	DataTreemapIcon,
	DataTrendingIcon,
	DataUsageEditIcon,
	DataUsageIcon,
	DataUsageSettingsIcon,
	DataUsageToolboxIcon,
	DataWaterfallIcon,
	DataWhiskerIcon,
	DatabaseArrowDownIcon,
	DatabaseArrowRightIcon,
	DatabaseArrowUpIcon,
	DatabaseIcon,
	DatabaseLightningIcon,
	DatabaseLinkIcon,
	DatabaseMultipleIcon,
	DatabasePersonIcon,
	DatabasePlugConnectedIcon,
	DatabaseSearchIcon,
	DatabaseSwitchIcon,
	DatabaseWarningIcon,
	DatabaseWindowIcon,
	DecimalArrowLeftIcon,
	DecimalArrowRightIcon,
	DeleteArrowBackIcon,
	DeleteDismissIcon,
	DeleteIcon,
	DeleteLinesIcon,
	DeleteOffIcon,
	DentistIcon,
	DesignIdeasIcon,
	DesktopArrowRightIcon,
	DesktopCursorIcon,
	DesktopEditIcon,
	DesktopFlowIcon,
	DesktopIcon,
	DesktopKeyboardIcon,
	DesktopMacIcon,
	DesktopPulseIcon,
	DesktopSignalIcon,
	DesktopSpeakerIcon,
	DesktopSpeakerOffIcon,
	DesktopSyncIcon,
	DesktopToolboxIcon,
	DeveloperBoardIcon,
	DeveloperBoardLightningIcon,
	DeveloperBoardLightningToolboxIcon,
	DeveloperBoardSearchIcon,
	DeviceEqIcon,
	DeviceMeetingRoomIcon,
	DeviceMeetingRoomRemoteIcon,
	DiagramIcon,
	DialpadIcon,
	DialpadOffIcon,
	DiamondIcon,
	DirectionsIcon,
	DismissCircleIcon,
	DismissIcon,
	DismissSquareIcon,
	DismissSquareMultipleIcon,
	DiversityIcon,
	DividerShortIcon,
	DividerTallIcon,
	DockIcon,
	DockRowIcon,
	DoctorIcon,
	DocumentAddIcon,
	DocumentArrowDownIcon,
	DocumentArrowLeftIcon,
	DocumentArrowRightIcon,
	DocumentArrowUpIcon,
	DocumentBriefcaseIcon,
	DocumentBulletListClockIcon,
	DocumentBulletListIcon,
	DocumentBulletListMultipleIcon,
	DocumentBulletListOffIcon,
	DocumentCatchUpIcon,
	DocumentCheckmarkIcon,
	DocumentChevronDoubleIcon,
	DocumentCopyIcon,
	DocumentCssIcon,
	DocumentDataIcon,
	DocumentDismissIcon,
	DocumentEditIcon,
	DocumentEndnoteIcon,
	DocumentErrorIcon,
	DocumentFlowchartIcon,
	DocumentFooterDismissIcon,
	DocumentFooterIcon,
	DocumentHeaderArrowDownIcon,
	DocumentHeaderDismissIcon,
	DocumentHeaderFooterIcon,
	DocumentHeaderIcon,
	DocumentHeartIcon,
	DocumentHeartPulseIcon,
	DocumentIcon,
	DocumentJavascriptIcon,
	DocumentLandscapeDataIcon,
	DocumentLandscapeIcon,
	DocumentLandscapeSplitHintIcon,
	DocumentLandscapeSplitIcon,
	DocumentLinkIcon,
	DocumentLockIcon,
	DocumentMarginsIcon,
	DocumentMentionIcon,
	DocumentMultipleIcon,
	DocumentMultiplePercentIcon,
	DocumentMultipleProhibitedIcon,
	DocumentMultipleSyncIcon,
	DocumentOnePageIcon,
	DocumentPageBottomCenterIcon,
	DocumentPageBottomLeftIcon,
	DocumentPageBottomRightIcon,
	DocumentPageBreakIcon,
	DocumentPageNumberIcon,
	DocumentPageTopCenterIcon,
	DocumentPageTopLeftIcon,
	DocumentPageTopRightIcon,
	DocumentPdfIcon,
	DocumentPercentIcon,
	DocumentPersonIcon,
	DocumentPillIcon,
	DocumentProhibitedIcon,
	DocumentQuestionMarkIcon,
	DocumentQueueAddIcon,
	DocumentQueueIcon,
	DocumentQueueMultipleIcon,
	DocumentRibbonIcon,
	DocumentSaveIcon,
	DocumentSearchIcon,
	DocumentSettingsIcon,
	DocumentSplitHintIcon,
	DocumentSplitHintOffIcon,
	DocumentSyncIcon,
	DocumentTableArrowRightIcon,
	DocumentTableCheckmarkIcon,
	DocumentTableCubeIcon,
	DocumentTableIcon,
	DocumentTableSearchIcon,
	DocumentTableTruckIcon,
	DocumentTextClockIcon,
	DocumentTextExtractIcon,
	DocumentTextIcon,
	DocumentTextLinkIcon,
	DocumentTextToolboxIcon,
	DocumentToolboxIcon,
	DocumentWidthIcon,
	DoorArrowLeftIcon,
	DoorArrowRightIcon,
	DoorIcon,
	DoorTagIcon,
	DoubleSwipeDownIcon,
	DoubleSwipeUpIcon,
	DoubleTapSwipeDownIcon,
	DoubleTapSwipeUpIcon,
	DraftsIcon,
	DragIcon,
	DrawImageIcon,
	DrawShapeIcon,
	DrawTextIcon,
	DrawerAddIcon,
	DrawerArrowDownloadIcon,
	DrawerDismissIcon,
	DrawerPlayIcon,
	DrawerSubtractIcon,
	DrinkBeerIcon,
	DrinkBottleIcon,
	DrinkBottleOffIcon,
	DrinkCoffeeIcon,
	DrinkMargaritaIcon,
	DrinkToGoIcon,
	DrinkWineIcon,
	DriveTrainIcon,
	DropIcon,
	DualScreenAddIcon,
	DualScreenArrowRightIcon,
	DualScreenArrowUpIcon,
	DualScreenClockIcon,
	DualScreenClosedAlertIcon,
	DualScreenDesktopIcon,
	DualScreenDismissIcon,
	DualScreenGroupIcon,
	DualScreenHeaderIcon,
	DualScreenIcon,
	DualScreenLockIcon,
	DualScreenMirrorIcon,
	DualScreenPaginationIcon,
	DualScreenSettingsIcon,
	DualScreenSpanIcon,
	DualScreenSpeakerIcon,
	DualScreenStatusBarIcon,
	DualScreenTabletIcon,
	DualScreenUpdateIcon,
	DualScreenVerticalScrollIcon,
	DualScreenVibrateIcon,
	DumbbellIcon,
	EarthIcon,
	EarthLeafIcon,
	EditArrowBackIcon,
	EditIcon,
	EditOffIcon,
	EditProhibitedIcon,
	EditSettingsIcon,
	EmojiAddIcon,
	EmojiAngryIcon,
	EmojiEditIcon,
	EmojiHandIcon,
	EmojiIcon,
	EmojiLaughIcon,
	EmojiMehIcon,
	EmojiMultipleIcon,
	EmojiSadIcon,
	EmojiSadSlightIcon,
	EmojiSmileSlightIcon,
	EmojiSparkleIcon,
	EmojiSurpriseIcon,
	EngineIcon,
	EqualCircleIcon,
	EqualOffIcon,
	EraserIcon,
	EraserMediumIcon,
	EraserSegmentIcon,
	EraserSmallIcon,
	EraserToolIcon,
	ErrorCircleIcon,
	ErrorCircleSettingsIcon,
	ExpandUpLeftIcon,
	ExpandUpRightIcon,
	ExtendedDockIcon,
	EyeIcon,
	EyeOffIcon,
	EyeTrackingIcon,
	EyeTrackingOffIcon,
	EyedropperIcon,
	EyedropperOffIcon,
	FStopIcon,
	FastAccelerationIcon,
	FastForwardIcon,
	FaxIcon,
	FeedIcon,
	FilmstripIcon,
	FilterAddIcon,
	FilterDismissIcon,
	FilterIcon,
	FilterSyncIcon,
	FingerprintIcon,
	FixedWidthIcon,
	FlagIcon,
	FlagOffIcon,
	FlagPrideIcon,
	FlashAddIcon,
	FlashAutoIcon,
	FlashCheckmarkIcon,
	FlashFlowIcon,
	FlashIcon,
	FlashOffIcon,
	FlashPlayIcon,
	FlashSettingsIcon,
	FlashlightIcon,
	FlashlightOffIcon,
	FlipHorizontalIcon,
	FlipVerticalIcon,
	FlowIcon,
	FlowchartCircleIcon,
	FlowchartIcon,
	FluentIcon,
	FluidIcon,
	FolderAddIcon,
	FolderArrowLeftIcon,
	FolderArrowRightIcon,
	FolderArrowUpIcon,
	FolderBriefcaseIcon,
	FolderGlobeIcon,
	FolderIcon,
	FolderLinkIcon,
	FolderMailIcon,
	FolderOpenIcon,
	FolderOpenVerticalIcon,
	FolderPeopleIcon,
	FolderPersonIcon,
	FolderProhibitedIcon,
	FolderSwapIcon,
	FolderSyncIcon,
	FolderZipIcon,
	FontDecreaseIcon,
	FontIncreaseIcon,
	FontSpaceTrackingInIcon,
	FontSpaceTrackingOutIcon,
	FoodAppleIcon,
	FoodCakeIcon,
	FoodCarrotIcon,
	FoodChickenLegIcon,
	FoodEggIcon,
	FoodFishIcon,
	FoodGrainsIcon,
	FoodIcon,
	FoodPizzaIcon,
	FoodToastIcon,
	FormIcon,
	FormMultipleIcon,
	FormNewIcon,
	Fps120Icon,
	Fps240Icon,
	Fps30Icon,
	Fps60Icon,
	Fps960Icon,
	FullScreenMaximizeIcon,
	FullScreenMinimizeIcon,
	GamesIcon,
	GanttChartIcon,
	GasIcon,
	GasPumpIcon,
	GatherIcon,
	GaugeAddIcon,
	GaugeIcon,
	GavelIcon,
	GestureIcon,
	GifIcon,
	GiftCardAddIcon,
	GiftCardArrowRightIcon,
	GiftCardIcon,
	GiftCardMoneyIcon,
	GiftCardMultipleIcon,
	GiftIcon,
	GlanceDefaultIcon,
	GlanceHorizontalIcon,
	GlanceIcon,
	GlassesIcon,
	GlassesOffIcon,
	GlobeAddIcon,
	GlobeClockIcon,
	GlobeDesktopIcon,
	GlobeIcon,
	GlobeLocationIcon,
	GlobePersonIcon,
	GlobeProhibitedIcon,
	GlobeSearchIcon,
	GlobeShieldIcon,
	GlobeStarIcon,
	GlobeSurfaceIcon,
	GlobeVideoIcon,
	GridDotsIcon,
	GridIcon,
	GridKanbanIcon,
	GroupDismissIcon,
	GroupIcon,
	GroupListIcon,
	GroupReturnIcon,
	GuardianIcon,
	GuestAddIcon,
	GuestIcon,
	GuitarIcon,
	HandDrawIcon,
	HandLeftChatIcon,
	HandLeftIcon,
	HandOpenHeartIcon,
	HandRightIcon,
	HandRightOffIcon,
	HandWaveIcon,
	HandshakeIcon,
	HardDriveIcon,
	HatGraduationIcon,
	HdIcon,
	HdrIcon,
	HdrOffIcon,
	HeadphonesIcon,
	HeadphonesSoundWaveIcon,
	HeadsetAddIcon,
	HeadsetIcon,
	HeadsetVrIcon,
	HeartBrokenIcon,
	HeartCircleIcon,
	HeartIcon,
	HeartPulseIcon,
	HighlightAccentIcon,
	HighlightIcon,
	HighlightLinkIcon,
	HistoryDismissIcon,
	HistoryIcon,
	HomeAddIcon,
	HomeCheckmarkIcon,
	HomeDatabaseIcon,
	HomeIcon,
	HomeMoreIcon,
	HomePersonIcon,
	IconsIcon,
	ImageAddIcon,
	ImageAltTextIcon,
	ImageArrowBackIcon,
	ImageArrowCounterclockwiseIcon,
	ImageArrowForwardIcon,
	ImageCopyIcon,
	ImageEditIcon,
	ImageGlobeIcon,
	ImageIcon,
	ImageMultipleIcon,
	ImageMultipleOffIcon,
	ImageOffIcon,
	ImageProhibitedIcon,
	ImageReflectionIcon,
	ImageSearchIcon,
	ImageShadowIcon,
	ImmersiveReaderIcon,
	ImportantIcon,
	IncognitoIcon,
	InfoIcon,
	InfoShieldIcon,
	InkStrokeIcon,
	InkingToolAccentIcon,
	InkingToolIcon,
	InprivateAccountIcon,
	InsertIcon,
	IosArrowLtrIcon,
	IosArrowRtlIcon,
	IosChevronRightIcon,
	IotIcon,
	JavascriptIcon,
	JoystickIcon,
	KeyCommandIcon,
	KeyIcon,
	KeyMultipleIcon,
	KeyResetIcon,
	Keyboard123Icon,
	KeyboardDockIcon,
	KeyboardIcon,
	KeyboardLayoutFloatIcon,
	KeyboardLayoutOneHandedLeftIcon,
	KeyboardLayoutResizeIcon,
	KeyboardLayoutSplitIcon,
	KeyboardShiftIcon,
	KeyboardShiftUppercaseIcon,
	KeyboardTabIcon,
	LaptopDismissIcon,
	LaptopIcon,
	LaserToolIcon,
	LassoIcon,
	LauncherSettingsIcon,
	LayerIcon,
	LeafOneIcon,
	LeafThreeIcon,
	LeafTwoIcon,
	LearningAppIcon,
	LibraryIcon,
	LightbulbCircleIcon,
	LightbulbFilamentIcon,
	LightbulbIcon,
	LikertIcon,
	LineDashesIcon,
	LineHorizontal1Icon,
	LineHorizontal3Icon,
	LineHorizontal5ErrorIcon,
	LineHorizontal5Icon,
	LineIcon,
	LineStyleIcon,
	LinkDismissIcon,
	LinkEditIcon,
	LinkIcon,
	LinkSquareIcon,
	LinkToolboxIcon,
	ListIcon,
	LiveIcon,
	LiveOffIcon,
	LocalLanguageIcon,
	LocationAddIcon,
	LocationAddLeftIcon,
	LocationAddRightIcon,
	LocationAddUpIcon,
	LocationArrowLeftIcon,
	LocationArrowRightIcon,
	LocationArrowUpIcon,
	LocationDismissIcon,
	LocationIcon,
	LocationLiveIcon,
	LocationOffIcon,
	LockClosedIcon,
	LockMultipleIcon,
	LockOpenIcon,
	LockShieldIcon,
	LotteryIcon,
	LuggageIcon,
	MailAddIcon,
	MailAlertIcon,
	MailAllReadIcon,
	MailAllUnreadIcon,
	MailArrowDoubleBackIcon,
	MailArrowDownIcon,
	MailArrowForwardIcon,
	MailArrowUpIcon,
	MailAttachIcon,
	MailCheckmarkIcon,
	MailClockIcon,
	MailCopyIcon,
	MailDismissIcon,
	MailEditIcon,
	MailErrorIcon,
	MailIcon,
	MailInboxAddIcon,
	MailInboxAllIcon,
	MailInboxArrowDownIcon,
	MailInboxArrowRightIcon,
	MailInboxArrowUpIcon,
	MailInboxCheckmarkIcon,
	MailInboxDismissIcon,
	MailInboxIcon,
	MailLinkIcon,
	MailListIcon,
	MailMultipleIcon,
	MailOffIcon,
	MailOpenPersonIcon,
	MailPauseIcon,
	MailProhibitedIcon,
	MailReadIcon,
	MailReadMultipleIcon,
	MailSettingsIcon,
	MailShieldIcon,
	MailTemplateIcon,
	MailUnreadIcon,
	MailWarningIcon,
	MapDriveIcon,
	MapIcon,
	MarkdownIcon,
	MatchAppLayoutIcon,
	MathFormatLinearIcon,
	MathFormatProfessionalIcon,
	MathFormulaIcon,
	MathSymbolsIcon,
	MaximizeIcon,
	MeetNowIcon,
	MegaphoneIcon,
	MegaphoneLoudIcon,
	MegaphoneOffIcon,
	MentionArrowDownIcon,
	MentionBracketsIcon,
	MentionIcon,
	MergeIcon,
	MicIcon,
	MicOffIcon,
	MicProhibitedIcon,
	MicPulseIcon,
	MicPulseOffIcon,
	MicSettingsIcon,
	MicSparkleIcon,
	MicSyncIcon,
	MicroscopeIcon,
	MidiIcon,
	MobileOptimizedIcon,
	MoleculeIcon,
	MoneyCalculatorIcon,
	MoneyDismissIcon,
	MoneyHandIcon,
	MoneyIcon,
	MoneyOffIcon,
	MoneySettingsIcon,
	MoreCircleIcon,
	MoreHorizontalIcon,
	MoreVerticalIcon,
	MoviesAndTvIcon,
	Multiplier12xIcon,
	Multiplier15xIcon,
	Multiplier18xIcon,
	Multiplier1xIcon,
	Multiplier2xIcon,
	Multiplier5xIcon,
	MultiselectLtrIcon,
	MultiselectRtlIcon,
	MusicNote1Icon,
	MusicNote2Icon,
	MusicNote2PlayIcon,
	MusicNoteOff1Icon,
	MusicNoteOff2Icon,
	MyLocationIcon,
	NavigationIcon,
	NavigationLocationTargetIcon,
	NavigationPlayIcon,
	NavigationUnreadIcon,
	NetworkCheckIcon,
	NewIcon,
	NewsIcon,
	NextIcon,
	NoteAddIcon,
	NoteEditIcon,
	NoteIcon,
	NotePinIcon,
	NotebookAddIcon,
	NotebookArrowCurveDownIcon,
	NotebookErrorIcon,
	NotebookEyeIcon,
	NotebookIcon,
	NotebookLightningIcon,
	NotebookQuestionMarkIcon,
	NotebookSectionArrowRightIcon,
	NotebookSectionIcon,
	NotebookSubsectionIcon,
	NotebookSyncIcon,
	NotepadEditIcon,
	NotepadIcon,
	NotepadPersonIcon,
	NumberCircle1Icon,
	NumberRowIcon,
	NumberSymbolDismissIcon,
	NumberSymbolIcon,
	NumberSymbolSquareIcon,
	OpenFolderIcon,
	OpenIcon,
	OpenOffIcon,
	OptionsIcon,
	OrganizationHorizontalIcon,
	OrganizationIcon,
	OrientationIcon,
	OvalIcon,
	PaddingDownIcon,
	PaddingLeftIcon,
	PaddingRightIcon,
	PaddingTopIcon,
	PageFitIcon,
	PaintBrushArrowDownIcon,
	PaintBrushArrowUpIcon,
	PaintBrushIcon,
	PaintBucketIcon,
	PairIcon,
	PanelBottomContractIcon,
	PanelBottomExpandIcon,
	PanelBottomIcon,
	PanelLeftContractIcon,
	PanelLeftExpandIcon,
	PanelLeftFocusRightIcon,
	PanelLeftIcon,
	PanelRightAddIcon,
	PanelRightContractIcon,
	PanelRightExpandIcon,
	PanelRightIcon,
	PanelSeparateWindowIcon,
	PanelTopContractIcon,
	PanelTopExpandIcon,
	PasswordIcon,
	PatchIcon,
	PatientIcon,
	PauseCircleIcon,
	PauseIcon,
	PauseOffIcon,
	PauseSettingsIcon,
	PaymentIcon,
	PenIcon,
	PenOffIcon,
	PenProhibitedIcon,
	PentagonIcon,
	PeopleAddIcon,
	PeopleAudienceIcon,
	PeopleCallIcon,
	PeopleCheckmarkIcon,
	PeopleCommunityAddIcon,
	PeopleCommunityIcon,
	PeopleEditIcon,
	PeopleErrorIcon,
	PeopleIcon,
	PeopleListIcon,
	PeopleLockIcon,
	PeopleMoneyIcon,
	PeopleProhibitedIcon,
	PeopleQueueIcon,
	PeopleSearchIcon,
	PeopleSettingsIcon,
	PeopleSwapIcon,
	PeopleSyncIcon,
	PeopleTeamAddIcon,
	PeopleTeamDeleteIcon,
	PeopleTeamIcon,
	PeopleTeamToolboxIcon,
	PeopleToolboxIcon,
	Person5Icon,
	Person6Icon,
	PersonAccountsIcon,
	PersonAddIcon,
	PersonArrowLeftIcon,
	PersonArrowRightIcon,
	PersonAvailableIcon,
	PersonBoardIcon,
	PersonCallIcon,
	PersonChatIcon,
	PersonCircleIcon,
	PersonClockIcon,
	PersonDeleteIcon,
	PersonEditIcon,
	PersonFeedbackIcon,
	PersonHeartIcon,
	PersonIcon,
	PersonInfoIcon,
	PersonKeyIcon,
	PersonLightbulbIcon,
	PersonLockIcon,
	PersonMailIcon,
	PersonMoneyIcon,
	PersonNoteIcon,
	PersonPillIcon,
	PersonProhibitedIcon,
	PersonQuestionMarkIcon,
	PersonRunningIcon,
	PersonSettingsIcon,
	PersonStarIcon,
	PersonSubtractIcon,
	PersonSupportIcon,
	PersonSwapIcon,
	PersonSyncIcon,
	PersonTagIcon,
	PersonVoiceIcon,
	PhoneAddIcon,
	PhoneArrowRightIcon,
	PhoneCheckmarkIcon,
	PhoneDesktopAddIcon,
	PhoneDesktopIcon,
	PhoneDismissIcon,
	PhoneEraserIcon,
	PhoneIcon,
	PhoneKeyIcon,
	PhoneLaptopIcon,
	PhoneLinkSetupIcon,
	PhoneLockIcon,
	PhonePageHeaderIcon,
	PhonePaginationIcon,
	PhoneScreenTimeIcon,
	PhoneShakeIcon,
	PhoneSpanInIcon,
	PhoneSpanOutIcon,
	PhoneSpeakerIcon,
	PhoneStatusBarIcon,
	PhoneTabletIcon,
	PhoneUpdateCheckmarkIcon,
	PhoneUpdateIcon,
	PhoneVerticalScrollIcon,
	PhoneVibrateIcon,
	PhotoFilterIcon,
	PiIcon,
	PictureInPictureEnterIcon,
	PictureInPictureExitIcon,
	PictureInPictureIcon,
	PillIcon,
	PinIcon,
	PinOffIcon,
	PipelineAddIcon,
	PipelineArrowCurveDownIcon,
	PipelineIcon,
	PipelinePlayIcon,
	PivotIcon,
	PlayCircleIcon,
	PlayIcon,
	PlaySettingsIcon,
	PlayingCardsIcon,
	PlugConnectedAddIcon,
	PlugConnectedCheckmarkIcon,
	PlugConnectedIcon,
	PlugDisconnectedIcon,
	PointScanIcon,
	PollIcon,
	PortHdmiIcon,
	PortMicroUsbIcon,
	PortUsbAIcon,
	PortUsbCIcon,
	PositionBackwardIcon,
	PositionForwardIcon,
	PositionToBackIcon,
	PositionToFrontIcon,
	PowerIcon,
	PredictionsIcon,
	PremiumIcon,
	PremiumPersonIcon,
	PresenceAvailableIcon,
	PresenceAwayIcon,
	PresenceBusyIcon,
	PresenceDndIcon,
	PresenterIcon,
	PresenterOffIcon,
	PreviewLinkIcon,
	PreviousIcon,
	PrintAddIcon,
	PrintIcon,
	ProductionCheckmarkIcon,
	ProductionIcon,
	ProhibitedIcon,
	ProhibitedMultipleIcon,
	ProhibitedNoteIcon,
	ProjectionScreenDismissIcon,
	ProjectionScreenIcon,
	ProtocolHandlerIcon,
	PulseIcon,
	PulseSquareIcon,
	PuzzleCubeIcon,
	PuzzleCubePieceIcon,
	PuzzlePieceIcon,
	PuzzlePieceShieldIcon,
	QrCodeIcon,
	QuestionCircleIcon,
	QuestionIcon,
	QuizNewIcon,
	RadarCheckmarkIcon,
	RadarIcon,
	RadarRectangleMultipleIcon,
	RadioButtonIcon,
	RamIcon,
	RatingMatureIcon,
	RatioOneToOneIcon,
	ReOrderDotsHorizontalIcon,
	ReOrderDotsVerticalIcon,
	ReadAloudIcon,
	ReadingListAddIcon,
	ReadingListIcon,
	ReadingModeMobileIcon,
	RealEstateIcon,
	ReceiptAddIcon,
	ReceiptBagIcon,
	ReceiptCubeIcon,
	ReceiptIcon,
	ReceiptMoneyIcon,
	ReceiptPlayIcon,
	ReceiptSearchIcon,
	RecordIcon,
	RecordStopIcon,
	RectangleLandscapeIcon,
	RectanglePortraitLocationTargetIcon,
	RecycleIcon,
	RemoteIcon,
	RenameIcon,
	ReOrderIcon as ReorderIcon,
	ReplayIcon,
	ResizeIcon,
	ResizeImageIcon,
	ResizeLargeIcon,
	ResizeSmallIcon,
	ResizeTableIcon,
	ResizeVideoIcon,
	RewardIcon,
	RewindIcon,
	RhombusIcon,
	RibbonAddIcon,
	RibbonIcon,
	RibbonOffIcon,
	RibbonStarIcon,
	RoadConeIcon,
	RocketIcon,
	RotateLeftIcon,
	RotateRightIcon,
	RouterIcon,
	RowTripleIcon,
	RssIcon,
	RulerIcon,
	RunIcon,
	SanitizeIcon,
	SaveArrowRightIcon,
	SaveCopyIcon,
	SaveEditIcon,
	SaveIcon,
	SaveImageIcon,
	SaveMultipleIcon,
	SaveSearchIcon,
	SaveSyncIcon,
	SavingsIcon,
	ScaleFillIcon,
	ScaleFitIcon,
	ScalesIcon,
	ScanCameraIcon,
	ScanDashIcon,
	ScanIcon,
	ScanObjectIcon,
	ScanTableIcon,
	ScanTextIcon,
	ScanThumbUpIcon,
	ScanThumbUpOffIcon,
	ScanTypeCheckmarkIcon,
	ScanTypeIcon,
	ScanTypeOffIcon,
	ScratchpadIcon,
	ScreenCutIcon,
	ScreenPersonIcon,
	ScreenSearchIcon,
	ScreenshotIcon,
	SearchIcon,
	SearchInfoIcon,
	SearchSettingsIcon,
	SearchShieldIcon,
	SearchSquareIcon,
	SearchVisualIcon,
	SelectAllOffIcon,
	SelectAllOnIcon,
	SelectObjectIcon,
	SelectObjectSkewDismissIcon,
	SelectObjectSkewEditIcon,
	SelectObjectSkewIcon,
	SendClockIcon,
	SendCopyIcon,
	SendIcon,
	SerialPortIcon,
	ServerIcon,
	ServerMultipleIcon,
	ServerPlayIcon,
	ServiceBellIcon,
	SettingsChatIcon,
	SettingsIcon,
	ShapeExcludeIcon,
	ShapeIntersectIcon,
	ShapeSubtractIcon,
	ShapeUnionIcon,
	ShapesIcon,
	ShareAndroidIcon,
	ShareCloseTrayIcon,
	ShareIcon,
	ShareIosIcon,
	ShareScreenPersonIcon,
	ShareScreenPersonOverlayIcon,
	ShareScreenPersonOverlayInsideIcon,
	ShareScreenPersonPIcon,
	ShareScreenStartIcon,
	ShareScreenStopIcon,
	ShieldBadgeIcon,
	ShieldCheckmarkIcon,
	ShieldDismissIcon,
	ShieldDismissShieldIcon,
	ShieldErrorIcon,
	ShieldGlobeIcon,
	ShieldIcon,
	ShieldKeyholeIcon,
	ShieldLockIcon,
	ShieldPersonAddIcon,
	ShieldPersonIcon,
	ShieldProhibitedIcon,
	ShieldQuestionIcon,
	ShieldTaskIcon,
	Shifts30MinutesIcon,
	ShiftsActivityIcon,
	ShiftsAddIcon,
	ShiftsAvailabilityIcon,
	ShiftsCheckmarkIcon,
	ShiftsDayIcon,
	ShiftsIcon,
	ShiftsOpenIcon,
	ShiftsProhibitedIcon,
	ShiftsQuestionMarkIcon,
	ShiftsTeamIcon,
	ShoppingBagArrowLeftIcon,
	ShoppingBagDismissIcon,
	ShoppingBagIcon,
	ShoppingBagPauseIcon,
	ShoppingBagPercentIcon,
	ShoppingBagPlayIcon,
	ShoppingBagTagIcon,
	ShortpickIcon,
	SidebarSearchLtrIcon,
	SidebarSearchRtlIcon,
	SignOutIcon,
	SignatureIcon,
	SimIcon,
	SkipBack10Icon,
	SkipForward10Icon,
	SkipForward30Icon,
	SkipForwardTabIcon,
	SleepIcon,
	SlideAddIcon,
	SlideArrowRightIcon,
	SlideEraserIcon,
	SlideGridIcon,
	SlideHideIcon,
	SlideLayoutIcon,
	SlideLinkIcon,
	SlideMicrophoneIcon,
	SlideMultipleArrowRightIcon,
	SlideMultipleIcon,
	SlideMultipleSearchIcon,
	SlideSearchIcon,
	SlideSettingsIcon,
	SlideSizeIcon,
	SlideTextIcon,
	SlideTransitionIcon,
	SmartwatchDotIcon,
	SmartwatchIcon,
	SnoozeIcon,
	SoundSourceIcon,
	SoundWaveCircleIcon,
	SpacebarIcon,
	SparkleIcon,
	Speaker0Icon,
	Speaker1Icon,
	Speaker2Icon,
	SpeakerBluetoothIcon,
	SpeakerEditIcon,
	SpeakerMuteIcon,
	SpeakerOffIcon,
	SpeakerSettingsIcon,
	SpeakerUsbIcon,
	SpinnerIosIcon,
	SplitHintIcon,
	SplitHorizontalIcon,
	SplitVerticalIcon,
	SportAmericanFootballIcon,
	SportBaseballIcon,
	SportBasketballIcon,
	SportHockeyIcon,
	SportIcon,
	SportSoccerIcon,
	SquareAddIcon,
	SquareArrowForwardIcon,
	SquareDismissIcon,
	SquareEraserIcon,
	SquareHintAppsIcon,
	SquareHintArrowBackIcon,
	SquareHintIcon,
	SquareHintSparklesIcon,
	SquareIcon,
	SquareMultipleIcon,
	SquareShadowIcon,
	SquaresNestedIcon,
	StackArrowForwardIcon,
	StackIcon,
	StackStarIcon,
	StarAddIcon,
	StarArrowRightEndIcon,
	StarArrowRightStartIcon,
	StarDismissIcon,
	StarEditIcon,
	StarEmphasisIcon,
	StarHalfIcon,
	StarIcon,
	StarLineHorizontal3Icon,
	StarOffIcon,
	StarOneQuarterIcon,
	StarProhibitedIcon,
	StarSettingsIcon,
	StarThreeQuarterIcon,
	StatusIcon,
	StepsIcon,
	StethoscopeIcon,
	StickerAddIcon,
	StickerIcon,
	StopIcon,
	StorageIcon,
	StoreMicrosoftIcon,
	StreamIcon,
	StreamInputIcon,
	StreamInputOutputIcon,
	StreamOutputIcon,
	StyleGuideIcon,
	SubGridIcon,
	SubtitlesIcon,
	SubtractCircleArrowBackIcon,
	SubtractCircleArrowForwardIcon,
	SubtractCircleIcon,
	SubtractIcon,
	SubtractSquareIcon,
	SubtractSquareMultipleIcon,
	SurfaceEarbudsIcon,
	SurfaceHubIcon,
	SwipeDownIcon,
	SwipeRightIcon,
	SwipeUpIcon,
	SymbolsIcon,
	SyncOffIcon,
	SyringeIcon,
	SystemIcon,
	TabAddIcon,
	TabArrowLeftIcon,
	TabDesktopArrowClockwiseIcon,
	TabDesktopArrowLeftIcon,
	TabDesktopBottomIcon,
	TabDesktopClockIcon,
	TabDesktopCopyIcon,
	TabDesktopIcon,
	TabDesktopImageIcon,
	TabDesktopMultipleBottomIcon,
	TabDesktopMultipleIcon,
	TabDesktopNewPageIcon,
	TabIcon,
	TabInPrivateIcon,
	TabInprivateAccountIcon,
	TabProhibitedIcon,
	TabShieldDismissIcon,
	TableAddIcon,
	TableBottomRowIcon,
	TableCalculatorIcon,
	TableCellEditIcon,
	TableCellsMergeIcon,
	TableCellsSplitIcon,
	TableCheckerIcon,
	TableCopyIcon,
	TableDeleteColumnIcon,
	TableDeleteRowIcon,
	TableDismissIcon,
	TableEditIcon,
	TableFreezeColumnAndRowIcon,
	TableFreezeColumnIcon,
	TableFreezeRowIcon,
	TableIcon,
	TableImageIcon,
	TableInsertColumnIcon,
	TableInsertRowIcon,
	TableLightningIcon,
	TableLinkIcon,
	TableMoveAboveIcon,
	TableMoveBelowIcon,
	TableMoveLeftIcon,
	TableMoveRightIcon,
	TableMultipleIcon,
	TableResizeColumnIcon,
	TableResizeRowIcon,
	TableSearchIcon,
	TableSettingsIcon,
	TableSimpleIcon,
	TableSplitIcon,
	TableStackAboveIcon,
	TableStackBelowIcon,
	TableStackLeftIcon,
	TableStackRightIcon,
	TableSwitchIcon,
	TabletIcon,
	TabletSpeakerIcon,
	TabsIcon,
	TagCircleIcon,
	TagDismissIcon,
	TagErrorIcon,
	TagIcon,
	TagLockAccentIcon,
	TagLockIcon,
	TagMultipleIcon,
	TagOffIcon,
	TagQuestionMarkIcon,
	TagResetIcon,
	TagSearchIcon,
	TapDoubleIcon,
	TapSingleIcon,
	TargetArrowIcon,
	TargetEditIcon,
	TargetIcon,
	TaskListAddIcon,
	TaskListLtrIcon,
	TaskListRtlIcon,
	TaskListSquareAddIcon,
	TaskListSquareDatabaseIcon,
	TaskListSquareLtrIcon,
	TaskListSquarePersonIcon,
	TaskListSquareRtlIcon,
	TaskListSquareSettingsIcon,
	TasksAppIcon,
	TeddyIcon,
	TemperatureIcon,
	TentIcon,
	TetrisAppIcon,
	TextAddIcon,
	TextAddSpaceAfterIcon,
	TextAddSpaceBeforeIcon,
	TextAddTIcon,
	TextAlignCenterIcon,
	TextAlignCenterRotate270Icon,
	TextAlignCenterRotate90Icon,
	TextAlignDistributedEvenlyIcon,
	TextAlignDistributedIcon,
	TextAlignDistributedVerticalIcon,
	TextAlignJustifyIcon,
	TextAlignJustifyLowIcon,
	TextAlignJustifyLowRotate270Icon,
	TextAlignJustifyLowRotate90Icon,
	TextAlignJustifyRotate270Icon,
	TextAlignJustifyRotate90Icon,
	TextAlignLeftIcon,
	TextAlignLeftRotate270Icon,
	TextAlignLeftRotate90Icon,
	TextAlignRightIcon,
	TextAlignRightRotate270Icon,
	TextAlignRightRotate90Icon,
	TextAsteriskIcon,
	TextBaselineIcon,
	TextBoldIcon,
	TextBoxSettingsIcon,
	TextBulletListAddIcon,
	TextBulletListCheckmarkIcon,
	TextBulletListDismissIcon,
	TextBulletListLtrIcon,
	TextBulletListRotate270Icon,
	TextBulletListRotate90Icon,
	TextBulletListRtlIcon,
	TextBulletListSquareClockIcon,
	TextBulletListSquareEditIcon,
	TextBulletListSquareIcon,
	TextBulletListSquarePersonIcon,
	TextBulletListSquareSearchIcon,
	TextBulletListSquareSettingsIcon,
	TextBulletListSquareShieldIcon,
	TextBulletListSquareToolboxIcon,
	TextBulletListSquareWarningIcon,
	TextBulletListTreeIcon,
	TextCaseLowercaseIcon,
	TextCaseTitleIcon,
	TextCaseUppercaseIcon,
	TextChangeCaseIcon,
	TextClearFormattingIcon,
	TextCollapseIcon,
	TextColorAccentIcon,
	TextColorIcon,
	TextColumnOneIcon,
	TextColumnOneNarrowIcon,
	TextColumnOneWideIcon,
	TextColumnOneWideLightningIcon,
	TextColumnThreeIcon,
	TextColumnTwoIcon,
	TextColumnTwoLeftIcon,
	TextColumnTwoRightIcon,
	TextContinuousIcon,
	TextDensityIcon,
	TextDescriptionIcon,
	TextDirectionHorizontalLeftIcon,
	TextDirectionHorizontalRightIcon,
	TextDirectionRotate270RightIcon,
	TextDirectionRotate90LeftIcon,
	TextDirectionRotate90RightIcon,
	TextDirectionVerticalIcon,
	TextEditStyleIcon,
	TextEffectsIcon,
	TextExpandIcon,
	TextFieldIcon,
	TextFirstLineIcon,
	TextFontIcon,
	TextFontInfoIcon,
	TextFontSizeIcon,
	TextFootnoteIcon,
	TextGrammarArrowLeftIcon,
	TextGrammarArrowRightIcon,
	TextGrammarCheckmarkIcon,
	TextGrammarDismissIcon,
	TextGrammarErrorIcon,
	TextGrammarSettingsIcon,
	TextGrammarWandIcon,
	TextHangingIcon,
	TextHeader1Icon,
	TextHeader2Icon,
	TextHeader3Icon,
	TextIcon,
	TextIndentDecreaseLtrIcon,
	TextIndentDecreaseRotate270Icon,
	TextIndentDecreaseRotate90Icon,
	TextIndentDecreaseRtlIcon,
	TextIndentIncreaseLtrIcon,
	TextIndentIncreaseRotate270Icon,
	TextIndentIncreaseRotate90Icon,
	TextIndentIncreaseRtlIcon,
	TextItalicIcon,
	TextLineSpacingIcon,
	TextMoreIcon,
	TextNumberFormatIcon,
	TextNumberListLtrIcon,
	TextNumberListRotate270Icon,
	TextNumberListRotate90Icon,
	TextNumberListRtlIcon,
	TextParagraphDirectionIcon,
	TextParagraphDirectionLeftIcon,
	TextParagraphDirectionRightIcon,
	TextParagraphIcon,
	TextPeriodAsteriskIcon,
	TextPositionBehindIcon,
	TextPositionFrontIcon,
	TextPositionLineIcon,
	TextPositionSquareIcon,
	TextPositionThroughIcon,
	TextPositionTightIcon,
	TextPositionTopBottomIcon,
	TextProofingToolsIcon,
	TextQuoteIcon,
	TextSortAscendingIcon,
	TextSortDescendingIcon,
	TextStrikethroughIcon,
	TextSubscriptIcon,
	TextSuperscriptIcon,
	TextTIcon,
	TextUnderlineIcon,
	TextWholeWordIcon,
	TextWordCountIcon,
	TextWrapIcon,
	TextboxAlignBottomIcon,
	TextboxAlignBottomRotate90Icon,
	TextboxAlignCenterIcon,
	TextboxAlignMiddleIcon,
	TextboxAlignMiddleRotate90Icon,
	TextboxAlignTopIcon,
	TextboxAlignTopRotate90Icon,
	TextboxIcon,
	TextboxMoreIcon,
	TextboxRotate90Icon,
	ThinkingIcon,
	ThumbDislikeIcon,
	ThumbLikeIcon,
	TicketDiagonalIcon,
	TicketHorizontalIcon,
	TimeAndWeatherIcon,
	TimePickerIcon,
	TimelineIcon,
	Timer10Icon,
	Timer2Icon,
	Timer3Icon,
	TimerIcon,
	TimerOffIcon,
	ToggleLeftIcon,
	ToggleMultipleIcon,
	ToggleRightIcon,
	ToolboxIcon,
	TooltipQuoteIcon,
	TopSpeedIcon,
	TranslateIcon,
	TransmissionIcon,
	TrayItemAddIcon,
	TrayItemRemoveIcon,
	TreeDeciduousIcon,
	TreeEvergreenIcon,
	TriangleDownIcon,
	TriangleIcon,
	TriangleLeftIcon,
	TriangleRightIcon,
	TrophyIcon,
	TrophyOffIcon,
	TvArrowRightIcon,
	TvIcon,
	TvUsbIcon,
	UmbrellaIcon,
	UninstallAppIcon,
	UsbPlugIcon,
	UsbStickIcon,
	VaultIcon,
	VehicleBicycleIcon,
	VehicleBusIcon,
	VehicleCabIcon,
	VehicleCarCollisionIcon,
	VehicleCarIcon,
	VehicleCarProfileLtrIcon,
	VehicleCarProfileRtlIcon,
	VehicleShipIcon,
	VehicleSubwayIcon,
	VehicleTruckBagIcon,
	VehicleTruckCubeIcon,
	VehicleTruckIcon,
	VehicleTruckProfileIcon,
	Video360Icon,
	Video360OffIcon,
	VideoAddIcon,
	VideoBackgroundEffectIcon,
	VideoChatIcon,
	VideoClipIcon,
	VideoClipMultipleIcon,
	VideoClipOffIcon,
	VideoIcon,
	VideoOffIcon,
	VideoPersonCallIcon,
	VideoPersonIcon,
	VideoPersonOffIcon,
	VideoPersonSparkleIcon,
	VideoPersonStarIcon,
	VideoPersonStarOffIcon,
	VideoPlayPauseIcon,
	VideoProhibitedIcon,
	VideoRecordingIcon,
	VideoSecurityIcon,
	VideoSwitchIcon,
	VideoSyncIcon,
	ViewDesktopIcon,
	ViewDesktopMobileIcon,
	VirtualNetworkIcon,
	VirtualNetworkToolboxIcon,
	VoicemailArrowBackIcon,
	VoicemailArrowForwardIcon,
	VoicemailArrowSubtractIcon,
	VoicemailIcon,
	VoicemailSubtractIcon,
	VoteIcon,
	WalkieTalkieIcon,
	WalletCreditCardIcon,
	WalletIcon,
	WallpaperIcon,
	WandIcon,
	WarningIcon,
	WarningShieldIcon,
	WeatherBlowingSnowIcon,
	WeatherCloudyIcon,
	WeatherDrizzleIcon,
	WeatherDuststormIcon,
	WeatherFogIcon,
	WeatherHailDayIcon,
	WeatherHailNightIcon,
	WeatherHazeIcon,
	WeatherMoonIcon,
	WeatherMoonOffIcon,
	WeatherPartlyCloudyDayIcon,
	WeatherPartlyCloudyNightIcon,
	WeatherRainIcon,
	WeatherRainShowersDayIcon,
	WeatherRainShowersNightIcon,
	WeatherRainSnowIcon,
	WeatherSnowIcon,
	WeatherSnowShowerDayIcon,
	WeatherSnowShowerNightIcon,
	WeatherSnowflakeIcon,
	WeatherSquallsIcon,
	WeatherSunnyHighIcon,
	WeatherSunnyIcon,
	WeatherSunnyLowIcon,
	WeatherThunderstormIcon,
	WebAssetIcon,
	WhiteboardIcon,
	Wifi1Icon,
	Wifi2Icon,
	Wifi3Icon,
	Wifi4Icon,
	WifiLockIcon,
	WifiOffIcon,
	WifiSettingsIcon,
	WifiWarningIcon,
	WindowAdIcon,
	WindowAdOffIcon,
	WindowAdPersonIcon,
	WindowAppsIcon,
	WindowArrowUpIcon,
	WindowBulletListAddIcon,
	WindowBulletListIcon,
	WindowConsoleIcon,
	WindowDatabaseIcon,
	WindowDevEditIcon,
	WindowDevToolsIcon,
	WindowEditIcon,
	WindowHeaderHorizontalIcon,
	WindowHeaderHorizontalOffIcon,
	WindowHeaderVerticalIcon,
	WindowIcon,
	WindowInprivateAccountIcon,
	WindowInprivateIcon,
	WindowLocationTargetIcon,
	WindowMultipleIcon,
	WindowMultipleSwapIcon,
	WindowNewIcon,
	WindowPlayIcon,
	WindowSettingsIcon,
	WindowShieldIcon,
	WindowTextIcon,
	WindowWrenchIcon,
	WrenchIcon,
	WrenchScrewdriverIcon,
	XboxConsoleIcon,
	XboxControllerIcon,
	XrayIcon,
	ZoomFitIcon,
	ZoomInIcon,
	ZoomOutIcon,
}
//# sourceMappingURL=index.js.map
